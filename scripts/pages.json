[{"name":"constructor(json: JsonBuilder.() -> Unit, defaultContentType: ContentType = APPLICATION_JSON)","description":"org.http4k.format.ConfigurableKotlinxSerialization.ConfigurableKotlinxSerialization","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/-configurable-kotlinx-serialization.html","searchKeys":["ConfigurableKotlinxSerialization","constructor(json: JsonBuilder.() -> Unit, defaultContentType: ContentType = APPLICATION_JSON)","org.http4k.format.ConfigurableKotlinxSerialization.ConfigurableKotlinxSerialization"]},{"name":"fun JsonBuilder.asConfigurable(): AutoMappingConfiguration<JsonBuilder>","description":"org.http4k.format.asConfigurable","location":"http4k-format-kotlinx-serialization/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun JsonBuilder.asConfigurable(): AutoMappingConfiguration<JsonBuilder>","org.http4k.format.asConfigurable"]},{"name":"inline fun <T : Any, R : HttpMessage> R.json(t: T): R","description":"org.http4k.format.ConfigurableKotlinxSerialization.json","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/json.html","searchKeys":["json","inline fun <T : Any, R : HttpMessage> R.json(t: T): R","org.http4k.format.ConfigurableKotlinxSerialization.json"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableKotlinxSerialization.auto","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableKotlinxSerialization.auto"]},{"name":"inline fun <T : Any> HttpMessage.json(): T","description":"org.http4k.format.ConfigurableKotlinxSerialization.json","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/json.html","searchKeys":["json","inline fun <T : Any> HttpMessage.json(): T","org.http4k.format.ConfigurableKotlinxSerialization.json"]},{"name":"inline fun <T : Any> JsonElement.asA(): T","description":"org.http4k.format.ConfigurableKotlinxSerialization.asA","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-a.html","searchKeys":["asA","inline fun <T : Any> JsonElement.asA(): T","org.http4k.format.ConfigurableKotlinxSerialization.asA"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableKotlinxSerialization.auto","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableKotlinxSerialization.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableKotlinxSerialization.autoBody","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableKotlinxSerialization.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableKotlinxSerialization.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-kotlinx-serialization/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableKotlinxSerialization.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableKotlinxSerialization.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-kotlinx-serialization/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableKotlinxSerialization.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object KotlinxSerialization : ConfigurableKotlinxSerialization","description":"org.http4k.format.KotlinxSerialization","location":"http4k-format-kotlinx-serialization/org.http4k.format/-kotlinx-serialization/index.html","searchKeys":["KotlinxSerialization","object KotlinxSerialization : ConfigurableKotlinxSerialization","org.http4k.format.KotlinxSerialization"]},{"name":"open class ConfigurableKotlinxSerialization(json: JsonBuilder.() -> Unit, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonElement> ","description":"org.http4k.format.ConfigurableKotlinxSerialization","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/index.html","searchKeys":["ConfigurableKotlinxSerialization","open class ConfigurableKotlinxSerialization(json: JsonBuilder.() -> Unit, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonElement> ","org.http4k.format.ConfigurableKotlinxSerialization"]},{"name":"open override fun <LIST : Iterable<Pair<String, JsonElement>>> LIST.asJsonObject(): JsonObject","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, JsonElement>>> LIST.asJsonObject(): JsonObject","org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableKotlinxSerialization.asA","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableKotlinxSerialization.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableKotlinxSerialization.asA","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableKotlinxSerialization.asA"]},{"name":"open override fun <T : Any> asA(j: JsonElement, target: KClass<T>): T","description":"org.http4k.format.ConfigurableKotlinxSerialization.asA","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(j: JsonElement, target: KClass<T>): T","org.http4k.format.ConfigurableKotlinxSerialization.asA"]},{"name":"open override fun <T : Iterable<JsonElement>> T.asJsonArray(): JsonArray","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonArray","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<JsonElement>> T.asJsonArray(): JsonArray","org.http4k.format.ConfigurableKotlinxSerialization.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun JsonElement.asCompactJsonString(): String","description":"org.http4k.format.ConfigurableKotlinxSerialization.asCompactJsonString","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun JsonElement.asCompactJsonString(): String","org.http4k.format.ConfigurableKotlinxSerialization.asCompactJsonString"]},{"name":"open override fun JsonElement.asPrettyJsonString(): String","description":"org.http4k.format.ConfigurableKotlinxSerialization.asPrettyJsonString","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun JsonElement.asPrettyJsonString(): String","org.http4k.format.ConfigurableKotlinxSerialization.asPrettyJsonString"]},{"name":"open override fun Long?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun String.asJsonObject(): JsonObject","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): JsonObject","org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): JsonPrimitive","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): JsonPrimitive","org.http4k.format.ConfigurableKotlinxSerialization.asJsonValue"]},{"name":"open override fun asJsonObject(input: Any): JsonElement","description":"org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/as-json-object.html","searchKeys":["asJsonObject","open override fun asJsonObject(input: Any): JsonElement","org.http4k.format.ConfigurableKotlinxSerialization.asJsonObject"]},{"name":"open override fun bool(value: JsonElement): Boolean","description":"org.http4k.format.ConfigurableKotlinxSerialization.bool","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/bool.html","searchKeys":["bool","open override fun bool(value: JsonElement): Boolean","org.http4k.format.ConfigurableKotlinxSerialization.bool"]},{"name":"open override fun decimal(value: JsonElement): BigDecimal","description":"org.http4k.format.ConfigurableKotlinxSerialization.decimal","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/decimal.html","searchKeys":["decimal","open override fun decimal(value: JsonElement): BigDecimal","org.http4k.format.ConfigurableKotlinxSerialization.decimal"]},{"name":"open override fun elements(value: JsonElement): Collection<JsonElement>","description":"org.http4k.format.ConfigurableKotlinxSerialization.elements","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/elements.html","searchKeys":["elements","open override fun elements(value: JsonElement): Collection<JsonElement>","org.http4k.format.ConfigurableKotlinxSerialization.elements"]},{"name":"open override fun fields(node: JsonElement): List<Pair<String, JsonElement>>","description":"org.http4k.format.ConfigurableKotlinxSerialization.fields","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/fields.html","searchKeys":["fields","open override fun fields(node: JsonElement): List<Pair<String, JsonElement>>","org.http4k.format.ConfigurableKotlinxSerialization.fields"]},{"name":"open override fun integer(value: JsonElement): Long","description":"org.http4k.format.ConfigurableKotlinxSerialization.integer","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/integer.html","searchKeys":["integer","open override fun integer(value: JsonElement): Long","org.http4k.format.ConfigurableKotlinxSerialization.integer"]},{"name":"open override fun text(value: JsonElement): String","description":"org.http4k.format.ConfigurableKotlinxSerialization.text","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/text.html","searchKeys":["text","open override fun text(value: JsonElement): String","org.http4k.format.ConfigurableKotlinxSerialization.text"]},{"name":"open override fun textValueOf(node: JsonElement, name: String): String?","description":"org.http4k.format.ConfigurableKotlinxSerialization.textValueOf","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: JsonElement, name: String): String?","org.http4k.format.ConfigurableKotlinxSerialization.textValueOf"]},{"name":"open override fun typeOf(value: JsonElement): JsonType","description":"org.http4k.format.ConfigurableKotlinxSerialization.typeOf","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: JsonElement): JsonType","org.http4k.format.ConfigurableKotlinxSerialization.typeOf"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableKotlinxSerialization.defaultContentType","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableKotlinxSerialization.defaultContentType"]},{"name":"val json: Json","description":"org.http4k.format.ConfigurableKotlinxSerialization.json","location":"http4k-format-kotlinx-serialization/org.http4k.format/-configurable-kotlinx-serialization/json.html","searchKeys":["json","val json: Json","org.http4k.format.ConfigurableKotlinxSerialization.json"]},{"name":"object Apache4AsyncClient","description":"org.http4k.client.Apache4AsyncClient","location":"http4k-client-apache4-async/org.http4k.client/-apache4-async-client/index.html","searchKeys":["Apache4AsyncClient","object Apache4AsyncClient","org.http4k.client.Apache4AsyncClient"]},{"name":"operator fun invoke(client: CloseableHttpAsyncClient = defaultApacheAsyncHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): AsyncHttpHandler","description":"org.http4k.client.Apache4AsyncClient.invoke","location":"http4k-client-apache4-async/org.http4k.client/-apache4-async-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: CloseableHttpAsyncClient = defaultApacheAsyncHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): AsyncHttpHandler","org.http4k.client.Apache4AsyncClient.invoke"]},{"name":"fun <NODE> Json<NODE>.haveBody(expected: Matcher<NODE>): Matcher<HttpMessage>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <NODE> Json<NODE>.haveBody(expected: Matcher<NODE>): Matcher<HttpMessage>","org.http4k.kotest.haveBody"]},{"name":"fun <NODE> Json<NODE>.haveBody(expected: NODE): Matcher<HttpMessage>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <NODE> Json<NODE>.haveBody(expected: NODE): Matcher<HttpMessage>","org.http4k.kotest.haveBody"]},{"name":"fun <NODE> Json<NODE>.haveBody(expected: String): Matcher<HttpMessage>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <NODE> Json<NODE>.haveBody(expected: String): Matcher<HttpMessage>","org.http4k.kotest.haveBody"]},{"name":"fun <R> LensMatcher(matcher: Matcher<R>): Matcher<R>","description":"org.http4k.kotest.LensMatcher","location":"http4k-testing-kotest/org.http4k.kotest/-lens-matcher.html","searchKeys":["LensMatcher","fun <R> LensMatcher(matcher: Matcher<R>): Matcher<R>","org.http4k.kotest.LensMatcher"]},{"name":"fun <T : HttpMessage, B> haveBody(lens: BodyLens<B>, matcher: Matcher<B>): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage, B> haveBody(lens: BodyLens<B>, matcher: Matcher<B>): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T : HttpMessage, R> httpMessageHas(name: String, extractValue: (T) -> R, match: Matcher<R>): Matcher<T>","description":"org.http4k.kotest.httpMessageHas","location":"http4k-testing-kotest/org.http4k.kotest/http-message-has.html","searchKeys":["httpMessageHas","fun <T : HttpMessage, R> httpMessageHas(name: String, extractValue: (T) -> R, match: Matcher<R>): Matcher<T>","org.http4k.kotest.httpMessageHas"]},{"name":"fun <T : HttpMessage> haveBody(expected: Matcher<Body>): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage> haveBody(expected: Matcher<Body>): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T : HttpMessage> haveBody(expected: Matcher<String>): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage> haveBody(expected: Matcher<String>): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T : HttpMessage> haveBody(expected: Matcher<String?>): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage> haveBody(expected: Matcher<String?>): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T : HttpMessage> haveBody(expected: Regex): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage> haveBody(expected: Regex): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T : HttpMessage> haveBody(expected: String): Matcher<T>","description":"org.http4k.kotest.haveBody","location":"http4k-testing-kotest/org.http4k.kotest/have-body.html","searchKeys":["haveBody","fun <T : HttpMessage> haveBody(expected: String): Matcher<T>","org.http4k.kotest.haveBody"]},{"name":"fun <T> HttpMessage.shouldHaveBody(lens: BodyLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","fun <T> HttpMessage.shouldHaveBody(lens: BodyLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldHaveBody"]},{"name":"fun <T> HttpMessage.shouldHaveHeader(lens: HeaderLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","fun <T> HttpMessage.shouldHaveHeader(lens: HeaderLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldHaveHeader"]},{"name":"fun <T> HttpMessage.shouldNotHaveBody(lens: BodyLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","fun <T> HttpMessage.shouldNotHaveBody(lens: BodyLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"fun <T> HttpMessage.shouldNotHaveHeader(lens: HeaderLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","fun <T> HttpMessage.shouldNotHaveHeader(lens: HeaderLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"fun <T> Request.shouldHaveQuery(lens: QueryLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun <T> Request.shouldHaveQuery(lens: QueryLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun <T> Request.shouldNotHaveQuery(lens: QueryLens<T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun <T> Request.shouldNotHaveQuery(lens: QueryLens<T>, matcher: Matcher<T>)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun <T> WebForm.shouldHaveFormField(field: Lens<WebForm, T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldHaveFormField","location":"http4k-testing-kotest/org.http4k.kotest/should-have-form-field.html","searchKeys":["shouldHaveFormField","fun <T> WebForm.shouldHaveFormField(field: Lens<WebForm, T>, matcher: Matcher<T>)","org.http4k.kotest.shouldHaveFormField"]},{"name":"fun <T> WebForm.shouldNotHaveFormField(field: Lens<WebForm, T>, matcher: Matcher<T>)","description":"org.http4k.kotest.shouldNotHaveFormField","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-form-field.html","searchKeys":["shouldNotHaveFormField","fun <T> WebForm.shouldNotHaveFormField(field: Lens<WebForm, T>, matcher: Matcher<T>)","org.http4k.kotest.shouldNotHaveFormField"]},{"name":"fun <T> haveFormField(lens: Lens<WebForm, T>, matcher: Matcher<T>): Matcher<WebForm>","description":"org.http4k.kotest.haveFormField","location":"http4k-testing-kotest/org.http4k.kotest/have-form-field.html","searchKeys":["haveFormField","fun <T> haveFormField(lens: Lens<WebForm, T>, matcher: Matcher<T>): Matcher<WebForm>","org.http4k.kotest.haveFormField"]},{"name":"fun <T> haveHeader(lens: HeaderLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun <T> haveHeader(lens: HeaderLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun <T> haveQuery(lens: QueryLens<T>, matcher: Matcher<T>): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun <T> haveQuery(lens: QueryLens<T>, matcher: Matcher<T>): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun Cookie.shouldBeHttpOnly()","description":"org.http4k.kotest.shouldBeHttpOnly","location":"http4k-testing-kotest/org.http4k.kotest/should-be-http-only.html","searchKeys":["shouldBeHttpOnly","fun Cookie.shouldBeHttpOnly()","org.http4k.kotest.shouldBeHttpOnly"]},{"name":"fun Cookie.shouldBeSecure()","description":"org.http4k.kotest.shouldBeSecure","location":"http4k-testing-kotest/org.http4k.kotest/should-be-secure.html","searchKeys":["shouldBeSecure","fun Cookie.shouldBeSecure()","org.http4k.kotest.shouldBeSecure"]},{"name":"fun Cookie.shouldNeverExpire()","description":"org.http4k.kotest.shouldNeverExpire","location":"http4k-testing-kotest/org.http4k.kotest/should-never-expire.html","searchKeys":["shouldNeverExpire","fun Cookie.shouldNeverExpire()","org.http4k.kotest.shouldNeverExpire"]},{"name":"fun Cookie.shouldNotBeHttpOnly()","description":"org.http4k.kotest.shouldNotBeHttpOnly","location":"http4k-testing-kotest/org.http4k.kotest/should-not-be-http-only.html","searchKeys":["shouldNotBeHttpOnly","fun Cookie.shouldNotBeHttpOnly()","org.http4k.kotest.shouldNotBeHttpOnly"]},{"name":"fun Cookie.shouldNotBeSecure()","description":"org.http4k.kotest.shouldNotBeSecure","location":"http4k-testing-kotest/org.http4k.kotest/should-not-be-secure.html","searchKeys":["shouldNotBeSecure","fun Cookie.shouldNotBeSecure()","org.http4k.kotest.shouldNotBeSecure"]},{"name":"fun HttpMessage.shouldHaveHeader(name: String, expected: List<String?>)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","fun HttpMessage.shouldHaveHeader(name: String, expected: List<String?>)","org.http4k.kotest.shouldHaveHeader"]},{"name":"fun HttpMessage.shouldHaveHeader(name: String, expected: Regex)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","fun HttpMessage.shouldHaveHeader(name: String, expected: Regex)","org.http4k.kotest.shouldHaveHeader"]},{"name":"fun HttpMessage.shouldHaveHeader(name: String, expected: String)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","fun HttpMessage.shouldHaveHeader(name: String, expected: String)","org.http4k.kotest.shouldHaveHeader"]},{"name":"fun HttpMessage.shouldHaveHeader(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","fun HttpMessage.shouldHaveHeader(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldHaveHeader"]},{"name":"fun HttpMessage.shouldNotHaveHeader(name: String, expected: List<String?>)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","fun HttpMessage.shouldNotHaveHeader(name: String, expected: List<String?>)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"fun HttpMessage.shouldNotHaveHeader(name: String, expected: Regex)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","fun HttpMessage.shouldNotHaveHeader(name: String, expected: Regex)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"fun HttpMessage.shouldNotHaveHeader(name: String, expected: String)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","fun HttpMessage.shouldNotHaveHeader(name: String, expected: String)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"fun HttpMessage.shouldNotHaveHeader(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","fun HttpMessage.shouldNotHaveHeader(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"fun Request.shouldHaveCookie(name: String, expected: Regex)","description":"org.http4k.kotest.shouldHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-cookie.html","searchKeys":["shouldHaveCookie","fun Request.shouldHaveCookie(name: String, expected: Regex)","org.http4k.kotest.shouldHaveCookie"]},{"name":"fun Request.shouldHaveCookie(name: String, expected: String)","description":"org.http4k.kotest.shouldHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-cookie.html","searchKeys":["shouldHaveCookie","fun Request.shouldHaveCookie(name: String, expected: String)","org.http4k.kotest.shouldHaveCookie"]},{"name":"fun Request.shouldHaveCookie(name: String, match: Matcher<Cookie?>)","description":"org.http4k.kotest.shouldHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-cookie.html","searchKeys":["shouldHaveCookie","fun Request.shouldHaveCookie(name: String, match: Matcher<Cookie?>)","org.http4k.kotest.shouldHaveCookie"]},{"name":"fun Request.shouldHaveForm(name: String, expected: CharSequence)","description":"org.http4k.kotest.shouldHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-have-form.html","searchKeys":["shouldHaveForm","fun Request.shouldHaveForm(name: String, expected: CharSequence)","org.http4k.kotest.shouldHaveForm"]},{"name":"fun Request.shouldHaveForm(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-have-form.html","searchKeys":["shouldHaveForm","fun Request.shouldHaveForm(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldHaveForm"]},{"name":"fun Request.shouldHaveForm(name: String, matcher: Matcher<String?>)","description":"org.http4k.kotest.shouldHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-have-form.html","searchKeys":["shouldHaveForm","fun Request.shouldHaveForm(name: String, matcher: Matcher<String?>)","org.http4k.kotest.shouldHaveForm"]},{"name":"fun Request.shouldHaveForm(name: String, matcher: Regex)","description":"org.http4k.kotest.shouldHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-have-form.html","searchKeys":["shouldHaveForm","fun Request.shouldHaveForm(name: String, matcher: Regex)","org.http4k.kotest.shouldHaveForm"]},{"name":"fun Request.shouldHaveQuery(name: String, expected: CharSequence)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun Request.shouldHaveQuery(name: String, expected: CharSequence)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun Request.shouldHaveQuery(name: String, expected: List<String?>)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun Request.shouldHaveQuery(name: String, expected: List<String?>)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun Request.shouldHaveQuery(name: String, expected: Regex)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun Request.shouldHaveQuery(name: String, expected: Regex)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun Request.shouldHaveQuery(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun Request.shouldHaveQuery(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun Request.shouldHaveQuery(name: String, matcher: Matcher<String?>)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","fun Request.shouldHaveQuery(name: String, matcher: Matcher<String?>)","org.http4k.kotest.shouldHaveQuery"]},{"name":"fun Request.shouldNotHaveCookie(name: String, expected: Regex)","description":"org.http4k.kotest.shouldNotHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-cookie.html","searchKeys":["shouldNotHaveCookie","fun Request.shouldNotHaveCookie(name: String, expected: Regex)","org.http4k.kotest.shouldNotHaveCookie"]},{"name":"fun Request.shouldNotHaveCookie(name: String, expected: String)","description":"org.http4k.kotest.shouldNotHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-cookie.html","searchKeys":["shouldNotHaveCookie","fun Request.shouldNotHaveCookie(name: String, expected: String)","org.http4k.kotest.shouldNotHaveCookie"]},{"name":"fun Request.shouldNotHaveCookie(name: String, match: Matcher<Cookie?>)","description":"org.http4k.kotest.shouldNotHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-cookie.html","searchKeys":["shouldNotHaveCookie","fun Request.shouldNotHaveCookie(name: String, match: Matcher<Cookie?>)","org.http4k.kotest.shouldNotHaveCookie"]},{"name":"fun Request.shouldNotHaveForm(name: String, expected: CharSequence)","description":"org.http4k.kotest.shouldNotHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-form.html","searchKeys":["shouldNotHaveForm","fun Request.shouldNotHaveForm(name: String, expected: CharSequence)","org.http4k.kotest.shouldNotHaveForm"]},{"name":"fun Request.shouldNotHaveForm(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldNotHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-form.html","searchKeys":["shouldNotHaveForm","fun Request.shouldNotHaveForm(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldNotHaveForm"]},{"name":"fun Request.shouldNotHaveForm(name: String, matcher: Matcher<String?>)","description":"org.http4k.kotest.shouldNotHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-form.html","searchKeys":["shouldNotHaveForm","fun Request.shouldNotHaveForm(name: String, matcher: Matcher<String?>)","org.http4k.kotest.shouldNotHaveForm"]},{"name":"fun Request.shouldNotHaveForm(name: String, matcher: Regex)","description":"org.http4k.kotest.shouldNotHaveForm","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-form.html","searchKeys":["shouldNotHaveForm","fun Request.shouldNotHaveForm(name: String, matcher: Regex)","org.http4k.kotest.shouldNotHaveForm"]},{"name":"fun Request.shouldNotHaveQuery(name: String, expected: CharSequence)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun Request.shouldNotHaveQuery(name: String, expected: CharSequence)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun Request.shouldNotHaveQuery(name: String, expected: List<String?>)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun Request.shouldNotHaveQuery(name: String, expected: List<String?>)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun Request.shouldNotHaveQuery(name: String, expected: Regex)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun Request.shouldNotHaveQuery(name: String, expected: Regex)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun Request.shouldNotHaveQuery(name: String, matcher: Matcher<String>)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun Request.shouldNotHaveQuery(name: String, matcher: Matcher<String>)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun Request.shouldNotHaveQuery(name: String, matcher: Matcher<String?>)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","fun Request.shouldNotHaveQuery(name: String, matcher: Matcher<String?>)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"fun RequestFilters.Assert(match: Matcher<HttpMessage>): Filter","description":"org.http4k.filter.Assert","location":"http4k-testing-kotest/org.http4k.filter/-assert.html","searchKeys":["Assert","fun RequestFilters.Assert(match: Matcher<HttpMessage>): Filter","org.http4k.filter.Assert"]},{"name":"fun RequestFilters.AssertNot(match: Matcher<HttpMessage>): Filter","description":"org.http4k.filter.AssertNot","location":"http4k-testing-kotest/org.http4k.filter/-assert-not.html","searchKeys":["AssertNot","fun RequestFilters.AssertNot(match: Matcher<HttpMessage>): Filter","org.http4k.filter.AssertNot"]},{"name":"fun Response.shouldHaveSetCookie(name: String, match: Matcher<Cookie?>)","description":"org.http4k.kotest.shouldHaveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-set-cookie.html","searchKeys":["shouldHaveSetCookie","fun Response.shouldHaveSetCookie(name: String, match: Matcher<Cookie?>)","org.http4k.kotest.shouldHaveSetCookie"]},{"name":"fun Response.shouldNotHaveSetCookie(name: String, match: Matcher<Cookie?>)","description":"org.http4k.kotest.shouldNotHaveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-set-cookie.html","searchKeys":["shouldNotHaveSetCookie","fun Response.shouldNotHaveSetCookie(name: String, match: Matcher<Cookie?>)","org.http4k.kotest.shouldNotHaveSetCookie"]},{"name":"fun ResponseFilters.Assert(match: Matcher<HttpMessage>): Filter","description":"org.http4k.filter.Assert","location":"http4k-testing-kotest/org.http4k.filter/-assert.html","searchKeys":["Assert","fun ResponseFilters.Assert(match: Matcher<HttpMessage>): Filter","org.http4k.filter.Assert"]},{"name":"fun ResponseFilters.AssertNot(match: Matcher<HttpMessage>): Filter","description":"org.http4k.filter.AssertNot","location":"http4k-testing-kotest/org.http4k.filter/-assert-not.html","searchKeys":["AssertNot","fun ResponseFilters.AssertNot(match: Matcher<HttpMessage>): Filter","org.http4k.filter.AssertNot"]},{"name":"fun beHttpOnly(): Matcher<Cookie>","description":"org.http4k.kotest.beHttpOnly","location":"http4k-testing-kotest/org.http4k.kotest/be-http-only.html","searchKeys":["beHttpOnly","fun beHttpOnly(): Matcher<Cookie>","org.http4k.kotest.beHttpOnly"]},{"name":"fun beSecure(): Matcher<Cookie>","description":"org.http4k.kotest.beSecure","location":"http4k-testing-kotest/org.http4k.kotest/be-secure.html","searchKeys":["beSecure","fun beSecure(): Matcher<Cookie>","org.http4k.kotest.beSecure"]},{"name":"fun expireOn(expected: Instant): Matcher<Cookie>","description":"org.http4k.kotest.expireOn","location":"http4k-testing-kotest/org.http4k.kotest/expire-on.html","searchKeys":["expireOn","fun expireOn(expected: Instant): Matcher<Cookie>","org.http4k.kotest.expireOn"]},{"name":"fun expireOn(matcher: Matcher<Instant?>): Matcher<Cookie>","description":"org.http4k.kotest.expireOn","location":"http4k-testing-kotest/org.http4k.kotest/expire-on.html","searchKeys":["expireOn","fun expireOn(matcher: Matcher<Instant?>): Matcher<Cookie>","org.http4k.kotest.expireOn"]},{"name":"fun haveAuthority(expected: String): Matcher<Uri>","description":"org.http4k.kotest.haveAuthority","location":"http4k-testing-kotest/org.http4k.kotest/have-authority.html","searchKeys":["haveAuthority","fun haveAuthority(expected: String): Matcher<Uri>","org.http4k.kotest.haveAuthority"]},{"name":"fun haveContentType(expected: ContentType): Matcher<HttpMessage>","description":"org.http4k.kotest.haveContentType","location":"http4k-testing-kotest/org.http4k.kotest/have-content-type.html","searchKeys":["haveContentType","fun haveContentType(expected: ContentType): Matcher<HttpMessage>","org.http4k.kotest.haveContentType"]},{"name":"fun haveCookie(expected: Cookie): Matcher<Request>","description":"org.http4k.kotest.haveCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-cookie.html","searchKeys":["haveCookie","fun haveCookie(expected: Cookie): Matcher<Request>","org.http4k.kotest.haveCookie"]},{"name":"fun haveCookie(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.kotest.haveCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-cookie.html","searchKeys":["haveCookie","fun haveCookie(name: String, expected: Regex): Matcher<Request>","org.http4k.kotest.haveCookie"]},{"name":"fun haveCookie(name: String, expected: String): Matcher<Request>","description":"org.http4k.kotest.haveCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-cookie.html","searchKeys":["haveCookie","fun haveCookie(name: String, expected: String): Matcher<Request>","org.http4k.kotest.haveCookie"]},{"name":"fun haveCookie(name: String, match: Matcher<Cookie?>): Matcher<Request>","description":"org.http4k.kotest.haveCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-cookie.html","searchKeys":["haveCookie","fun haveCookie(name: String, match: Matcher<Cookie?>): Matcher<Request>","org.http4k.kotest.haveCookie"]},{"name":"fun haveCookiePath(expected: String): Matcher<Cookie>","description":"org.http4k.kotest.haveCookiePath","location":"http4k-testing-kotest/org.http4k.kotest/have-cookie-path.html","searchKeys":["haveCookiePath","fun haveCookiePath(expected: String): Matcher<Cookie>","org.http4k.kotest.haveCookiePath"]},{"name":"fun haveDomain(expected: String): Matcher<Cookie>","description":"org.http4k.kotest.haveDomain","location":"http4k-testing-kotest/org.http4k.kotest/have-domain.html","searchKeys":["haveDomain","fun haveDomain(expected: String): Matcher<Cookie>","org.http4k.kotest.haveDomain"]},{"name":"fun haveForm(name: String, expected: CharSequence): Matcher<Request>","description":"org.http4k.kotest.haveForm","location":"http4k-testing-kotest/org.http4k.kotest/have-form.html","searchKeys":["haveForm","fun haveForm(name: String, expected: CharSequence): Matcher<Request>","org.http4k.kotest.haveForm"]},{"name":"fun haveForm(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.kotest.haveForm","location":"http4k-testing-kotest/org.http4k.kotest/have-form.html","searchKeys":["haveForm","fun haveForm(name: String, expected: Regex): Matcher<Request>","org.http4k.kotest.haveForm"]},{"name":"fun haveForm(name: String, matcher: Matcher<String>): Matcher<Request>","description":"org.http4k.kotest.haveForm","location":"http4k-testing-kotest/org.http4k.kotest/have-form.html","searchKeys":["haveForm","fun haveForm(name: String, matcher: Matcher<String>): Matcher<Request>","org.http4k.kotest.haveForm"]},{"name":"fun haveForm(name: String, matcher: Matcher<String?>): Matcher<Request>","description":"org.http4k.kotest.haveForm","location":"http4k-testing-kotest/org.http4k.kotest/have-form.html","searchKeys":["haveForm","fun haveForm(name: String, matcher: Matcher<String?>): Matcher<Request>","org.http4k.kotest.haveForm"]},{"name":"fun haveHeader(name: String): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHeader(name: String, expected: List<String?>): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String, expected: List<String?>): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHeader(name: String, expected: Regex): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String, expected: Regex): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHeader(name: String, expected: String): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String, expected: String): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHeader(name: String, matcher: Matcher<String>): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String, matcher: Matcher<String>): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHeader(name: String, matcher: Matcher<String?>): Matcher<HttpMessage>","description":"org.http4k.kotest.haveHeader","location":"http4k-testing-kotest/org.http4k.kotest/have-header.html","searchKeys":["haveHeader","fun haveHeader(name: String, matcher: Matcher<String?>): Matcher<HttpMessage>","org.http4k.kotest.haveHeader"]},{"name":"fun haveHost(expected: String): Matcher<Uri>","description":"org.http4k.kotest.haveHost","location":"http4k-testing-kotest/org.http4k.kotest/have-host.html","searchKeys":["haveHost","fun haveHost(expected: String): Matcher<Uri>","org.http4k.kotest.haveHost"]},{"name":"fun haveMethod(expected: Method): Matcher<Request>","description":"org.http4k.kotest.haveMethod","location":"http4k-testing-kotest/org.http4k.kotest/have-method.html","searchKeys":["haveMethod","fun haveMethod(expected: Method): Matcher<Request>","org.http4k.kotest.haveMethod"]},{"name":"fun haveName(expected: String): Matcher<Cookie>","description":"org.http4k.kotest.haveName","location":"http4k-testing-kotest/org.http4k.kotest/have-name.html","searchKeys":["haveName","fun haveName(expected: String): Matcher<Cookie>","org.http4k.kotest.haveName"]},{"name":"fun havePath(expected: Regex): Matcher<Uri>","description":"org.http4k.kotest.havePath","location":"http4k-testing-kotest/org.http4k.kotest/have-path.html","searchKeys":["havePath","fun havePath(expected: Regex): Matcher<Uri>","org.http4k.kotest.havePath"]},{"name":"fun havePath(expected: String?): Matcher<Uri>","description":"org.http4k.kotest.havePath","location":"http4k-testing-kotest/org.http4k.kotest/have-path.html","searchKeys":["havePath","fun havePath(expected: String?): Matcher<Uri>","org.http4k.kotest.havePath"]},{"name":"fun havePath(matcher: Matcher<String?>): Matcher<Uri>","description":"org.http4k.kotest.havePath","location":"http4k-testing-kotest/org.http4k.kotest/have-path.html","searchKeys":["havePath","fun havePath(matcher: Matcher<String?>): Matcher<Uri>","org.http4k.kotest.havePath"]},{"name":"fun havePort(expected: Int): Matcher<Uri>","description":"org.http4k.kotest.havePort","location":"http4k-testing-kotest/org.http4k.kotest/have-port.html","searchKeys":["havePort","fun havePort(expected: Int): Matcher<Uri>","org.http4k.kotest.havePort"]},{"name":"fun haveQuery(expected: String): Matcher<Uri>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(expected: String): Matcher<Uri>","org.http4k.kotest.haveQuery"]},{"name":"fun haveQuery(name: String, expected: CharSequence): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(name: String, expected: CharSequence): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun haveQuery(name: String, expected: List<String?>): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(name: String, expected: List<String?>): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun haveQuery(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(name: String, expected: Regex): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun haveQuery(name: String, matcher: Matcher<String>): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(name: String, matcher: Matcher<String>): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun haveQuery(name: String, matcher: Matcher<String?>): Matcher<Request>","description":"org.http4k.kotest.haveQuery","location":"http4k-testing-kotest/org.http4k.kotest/have-query.html","searchKeys":["haveQuery","fun haveQuery(name: String, matcher: Matcher<String?>): Matcher<Request>","org.http4k.kotest.haveQuery"]},{"name":"fun haveRequest(match: Matcher<Request>): Matcher<HttpTransaction>","description":"org.http4k.kotest.haveRequest","location":"http4k-testing-kotest/org.http4k.kotest/have-request.html","searchKeys":["haveRequest","fun haveRequest(match: Matcher<Request>): Matcher<HttpTransaction>","org.http4k.kotest.haveRequest"]},{"name":"fun haveResponse(match: Matcher<Response>): Matcher<HttpTransaction>","description":"org.http4k.kotest.haveResponse","location":"http4k-testing-kotest/org.http4k.kotest/have-response.html","searchKeys":["haveResponse","fun haveResponse(match: Matcher<Response>): Matcher<HttpTransaction>","org.http4k.kotest.haveResponse"]},{"name":"fun haveSameSite(expected: SameSite): Matcher<Cookie>","description":"org.http4k.kotest.haveSameSite","location":"http4k-testing-kotest/org.http4k.kotest/have-same-site.html","searchKeys":["haveSameSite","fun haveSameSite(expected: SameSite): Matcher<Cookie>","org.http4k.kotest.haveSameSite"]},{"name":"fun haveSetCookie(expected: Cookie): Matcher<Response>","description":"org.http4k.kotest.haveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-set-cookie.html","searchKeys":["haveSetCookie","fun haveSetCookie(expected: Cookie): Matcher<Response>","org.http4k.kotest.haveSetCookie"]},{"name":"fun haveSetCookie(name: String, expected: Matcher<Cookie?>): Matcher<Response>","description":"org.http4k.kotest.haveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/have-set-cookie.html","searchKeys":["haveSetCookie","fun haveSetCookie(name: String, expected: Matcher<Cookie?>): Matcher<Response>","org.http4k.kotest.haveSetCookie"]},{"name":"fun haveStatus(expected: Status): Matcher<Response>","description":"org.http4k.kotest.haveStatus","location":"http4k-testing-kotest/org.http4k.kotest/have-status.html","searchKeys":["haveStatus","fun haveStatus(expected: Status): Matcher<Response>","org.http4k.kotest.haveStatus"]},{"name":"fun haveUri(expected: Matcher<Uri>): Matcher<Request>","description":"org.http4k.kotest.haveUri","location":"http4k-testing-kotest/org.http4k.kotest/have-uri.html","searchKeys":["haveUri","fun haveUri(expected: Matcher<Uri>): Matcher<Request>","org.http4k.kotest.haveUri"]},{"name":"fun haveUri(expected: Regex): Matcher<Request>","description":"org.http4k.kotest.haveUri","location":"http4k-testing-kotest/org.http4k.kotest/have-uri.html","searchKeys":["haveUri","fun haveUri(expected: Regex): Matcher<Request>","org.http4k.kotest.haveUri"]},{"name":"fun haveUri(expected: String): Matcher<Request>","description":"org.http4k.kotest.haveUri","location":"http4k-testing-kotest/org.http4k.kotest/have-uri.html","searchKeys":["haveUri","fun haveUri(expected: String): Matcher<Request>","org.http4k.kotest.haveUri"]},{"name":"fun haveUri(expected: Uri): Matcher<Request>","description":"org.http4k.kotest.haveUri","location":"http4k-testing-kotest/org.http4k.kotest/have-uri.html","searchKeys":["haveUri","fun haveUri(expected: Uri): Matcher<Request>","org.http4k.kotest.haveUri"]},{"name":"fun haveValue(expected: String): Matcher<Cookie?>","description":"org.http4k.kotest.haveValue","location":"http4k-testing-kotest/org.http4k.kotest/have-value.html","searchKeys":["haveValue","fun haveValue(expected: String): Matcher<Cookie?>","org.http4k.kotest.haveValue"]},{"name":"fun haveValue(matcher: Matcher<String>): Matcher<Cookie?>","description":"org.http4k.kotest.haveValue","location":"http4k-testing-kotest/org.http4k.kotest/have-value.html","searchKeys":["haveValue","fun haveValue(matcher: Matcher<String>): Matcher<Cookie?>","org.http4k.kotest.haveValue"]},{"name":"fun haveValue(matcher: Matcher<String?>): Matcher<Cookie?>","description":"org.http4k.kotest.haveValue","location":"http4k-testing-kotest/org.http4k.kotest/have-value.html","searchKeys":["haveValue","fun haveValue(matcher: Matcher<String?>): Matcher<Cookie?>","org.http4k.kotest.haveValue"]},{"name":"fun neverExpire(): Matcher<Cookie>","description":"org.http4k.kotest.neverExpire","location":"http4k-testing-kotest/org.http4k.kotest/never-expire.html","searchKeys":["neverExpire","fun neverExpire(): Matcher<Cookie>","org.http4k.kotest.neverExpire"]},{"name":"infix fun Cookie.shouldHaveDomain(expected: String)","description":"org.http4k.kotest.shouldHaveDomain","location":"http4k-testing-kotest/org.http4k.kotest/should-have-domain.html","searchKeys":["shouldHaveDomain","infix fun Cookie.shouldHaveDomain(expected: String)","org.http4k.kotest.shouldHaveDomain"]},{"name":"infix fun Cookie.shouldHaveExpiry(expected: Instant)","description":"org.http4k.kotest.shouldHaveExpiry","location":"http4k-testing-kotest/org.http4k.kotest/should-have-expiry.html","searchKeys":["shouldHaveExpiry","infix fun Cookie.shouldHaveExpiry(expected: Instant)","org.http4k.kotest.shouldHaveExpiry"]},{"name":"infix fun Cookie.shouldHaveName(expected: String)","description":"org.http4k.kotest.shouldHaveName","location":"http4k-testing-kotest/org.http4k.kotest/should-have-name.html","searchKeys":["shouldHaveName","infix fun Cookie.shouldHaveName(expected: String)","org.http4k.kotest.shouldHaveName"]},{"name":"infix fun Cookie.shouldHavePath(expected: String)","description":"org.http4k.kotest.shouldHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-have-path.html","searchKeys":["shouldHavePath","infix fun Cookie.shouldHavePath(expected: String)","org.http4k.kotest.shouldHavePath"]},{"name":"infix fun Cookie.shouldHaveSameSite(expected: SameSite)","description":"org.http4k.kotest.shouldHaveSameSite","location":"http4k-testing-kotest/org.http4k.kotest/should-have-same-site.html","searchKeys":["shouldHaveSameSite","infix fun Cookie.shouldHaveSameSite(expected: SameSite)","org.http4k.kotest.shouldHaveSameSite"]},{"name":"infix fun Cookie.shouldHaveValue(expected: String)","description":"org.http4k.kotest.shouldHaveValue","location":"http4k-testing-kotest/org.http4k.kotest/should-have-value.html","searchKeys":["shouldHaveValue","infix fun Cookie.shouldHaveValue(expected: String)","org.http4k.kotest.shouldHaveValue"]},{"name":"infix fun Cookie.shouldNotHaveDomain(expected: String)","description":"org.http4k.kotest.shouldNotHaveDomain","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-domain.html","searchKeys":["shouldNotHaveDomain","infix fun Cookie.shouldNotHaveDomain(expected: String)","org.http4k.kotest.shouldNotHaveDomain"]},{"name":"infix fun Cookie.shouldNotHaveExpiry(expected: Instant)","description":"org.http4k.kotest.shouldNotHaveExpiry","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-expiry.html","searchKeys":["shouldNotHaveExpiry","infix fun Cookie.shouldNotHaveExpiry(expected: Instant)","org.http4k.kotest.shouldNotHaveExpiry"]},{"name":"infix fun Cookie.shouldNotHaveName(expected: String)","description":"org.http4k.kotest.shouldNotHaveName","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-name.html","searchKeys":["shouldNotHaveName","infix fun Cookie.shouldNotHaveName(expected: String)","org.http4k.kotest.shouldNotHaveName"]},{"name":"infix fun Cookie.shouldNotHavePath(expected: String)","description":"org.http4k.kotest.shouldNotHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-path.html","searchKeys":["shouldNotHavePath","infix fun Cookie.shouldNotHavePath(expected: String)","org.http4k.kotest.shouldNotHavePath"]},{"name":"infix fun Cookie.shouldNotHaveSameSite(expected: SameSite)","description":"org.http4k.kotest.shouldNotHaveSameSite","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-same-site.html","searchKeys":["shouldNotHaveSameSite","infix fun Cookie.shouldNotHaveSameSite(expected: SameSite)","org.http4k.kotest.shouldNotHaveSameSite"]},{"name":"infix fun Cookie.shouldNotHaveValue(expected: String)","description":"org.http4k.kotest.shouldNotHaveValue","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-value.html","searchKeys":["shouldNotHaveValue","infix fun Cookie.shouldNotHaveValue(expected: String)","org.http4k.kotest.shouldNotHaveValue"]},{"name":"infix fun HttpMessage.shouldHaveBody(expected: Matcher<Body>)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","infix fun HttpMessage.shouldHaveBody(expected: Matcher<Body>)","org.http4k.kotest.shouldHaveBody"]},{"name":"infix fun HttpMessage.shouldHaveBody(expected: Matcher<String>)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","infix fun HttpMessage.shouldHaveBody(expected: Matcher<String>)","org.http4k.kotest.shouldHaveBody"]},{"name":"infix fun HttpMessage.shouldHaveBody(expected: Matcher<String?>)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","infix fun HttpMessage.shouldHaveBody(expected: Matcher<String?>)","org.http4k.kotest.shouldHaveBody"]},{"name":"infix fun HttpMessage.shouldHaveBody(expected: Regex)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","infix fun HttpMessage.shouldHaveBody(expected: Regex)","org.http4k.kotest.shouldHaveBody"]},{"name":"infix fun HttpMessage.shouldHaveBody(expected: String)","description":"org.http4k.kotest.shouldHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-have-body.html","searchKeys":["shouldHaveBody","infix fun HttpMessage.shouldHaveBody(expected: String)","org.http4k.kotest.shouldHaveBody"]},{"name":"infix fun HttpMessage.shouldHaveContentType(expected: ContentType)","description":"org.http4k.kotest.shouldHaveContentType","location":"http4k-testing-kotest/org.http4k.kotest/should-have-content-type.html","searchKeys":["shouldHaveContentType","infix fun HttpMessage.shouldHaveContentType(expected: ContentType)","org.http4k.kotest.shouldHaveContentType"]},{"name":"infix fun HttpMessage.shouldHaveHeader(name: String)","description":"org.http4k.kotest.shouldHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-have-header.html","searchKeys":["shouldHaveHeader","infix fun HttpMessage.shouldHaveHeader(name: String)","org.http4k.kotest.shouldHaveHeader"]},{"name":"infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<Body>)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<Body>)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<String>)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<String>)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<String?>)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","infix fun HttpMessage.shouldNotHaveBody(expected: Matcher<String?>)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"infix fun HttpMessage.shouldNotHaveBody(expected: Regex)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","infix fun HttpMessage.shouldNotHaveBody(expected: Regex)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"infix fun HttpMessage.shouldNotHaveBody(expected: String)","description":"org.http4k.kotest.shouldNotHaveBody","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-body.html","searchKeys":["shouldNotHaveBody","infix fun HttpMessage.shouldNotHaveBody(expected: String)","org.http4k.kotest.shouldNotHaveBody"]},{"name":"infix fun HttpMessage.shouldNotHaveContentType(expected: ContentType)","description":"org.http4k.kotest.shouldNotHaveContentType","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-content-type.html","searchKeys":["shouldNotHaveContentType","infix fun HttpMessage.shouldNotHaveContentType(expected: ContentType)","org.http4k.kotest.shouldNotHaveContentType"]},{"name":"infix fun HttpMessage.shouldNotHaveHeader(name: String)","description":"org.http4k.kotest.shouldNotHaveHeader","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-header.html","searchKeys":["shouldNotHaveHeader","infix fun HttpMessage.shouldNotHaveHeader(name: String)","org.http4k.kotest.shouldNotHaveHeader"]},{"name":"infix fun HttpTransaction.shouldHaveRequest(match: Matcher<Request>)","description":"org.http4k.kotest.shouldHaveRequest","location":"http4k-testing-kotest/org.http4k.kotest/should-have-request.html","searchKeys":["shouldHaveRequest","infix fun HttpTransaction.shouldHaveRequest(match: Matcher<Request>)","org.http4k.kotest.shouldHaveRequest"]},{"name":"infix fun HttpTransaction.shouldHaveResponse(match: Matcher<Response>)","description":"org.http4k.kotest.shouldHaveResponse","location":"http4k-testing-kotest/org.http4k.kotest/should-have-response.html","searchKeys":["shouldHaveResponse","infix fun HttpTransaction.shouldHaveResponse(match: Matcher<Response>)","org.http4k.kotest.shouldHaveResponse"]},{"name":"infix fun HttpTransaction.shouldNotHaveRequest(match: Matcher<Request>)","description":"org.http4k.kotest.shouldNotHaveRequest","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-request.html","searchKeys":["shouldNotHaveRequest","infix fun HttpTransaction.shouldNotHaveRequest(match: Matcher<Request>)","org.http4k.kotest.shouldNotHaveRequest"]},{"name":"infix fun HttpTransaction.shouldNotHaveResponse(match: Matcher<Response>)","description":"org.http4k.kotest.shouldNotHaveResponse","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-response.html","searchKeys":["shouldNotHaveResponse","infix fun HttpTransaction.shouldNotHaveResponse(match: Matcher<Response>)","org.http4k.kotest.shouldNotHaveResponse"]},{"name":"infix fun Request.shouldHaveCookie(expected: Cookie)","description":"org.http4k.kotest.shouldHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-cookie.html","searchKeys":["shouldHaveCookie","infix fun Request.shouldHaveCookie(expected: Cookie)","org.http4k.kotest.shouldHaveCookie"]},{"name":"infix fun Request.shouldHaveMethod(expected: Method)","description":"org.http4k.kotest.shouldHaveMethod","location":"http4k-testing-kotest/org.http4k.kotest/should-have-method.html","searchKeys":["shouldHaveMethod","infix fun Request.shouldHaveMethod(expected: Method)","org.http4k.kotest.shouldHaveMethod"]},{"name":"infix fun Request.shouldHaveUri(expected: Regex)","description":"org.http4k.kotest.shouldHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-have-uri.html","searchKeys":["shouldHaveUri","infix fun Request.shouldHaveUri(expected: Regex)","org.http4k.kotest.shouldHaveUri"]},{"name":"infix fun Request.shouldHaveUri(expected: String)","description":"org.http4k.kotest.shouldHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-have-uri.html","searchKeys":["shouldHaveUri","infix fun Request.shouldHaveUri(expected: String)","org.http4k.kotest.shouldHaveUri"]},{"name":"infix fun Request.shouldHaveUri(expected: Uri)","description":"org.http4k.kotest.shouldHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-have-uri.html","searchKeys":["shouldHaveUri","infix fun Request.shouldHaveUri(expected: Uri)","org.http4k.kotest.shouldHaveUri"]},{"name":"infix fun Request.shouldHaveUri(match: Matcher<Uri>)","description":"org.http4k.kotest.shouldHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-have-uri.html","searchKeys":["shouldHaveUri","infix fun Request.shouldHaveUri(match: Matcher<Uri>)","org.http4k.kotest.shouldHaveUri"]},{"name":"infix fun Request.shouldNotHaveCookie(expected: Cookie)","description":"org.http4k.kotest.shouldNotHaveCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-cookie.html","searchKeys":["shouldNotHaveCookie","infix fun Request.shouldNotHaveCookie(expected: Cookie)","org.http4k.kotest.shouldNotHaveCookie"]},{"name":"infix fun Request.shouldNotHaveMethod(expected: Method)","description":"org.http4k.kotest.shouldNotHaveMethod","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-method.html","searchKeys":["shouldNotHaveMethod","infix fun Request.shouldNotHaveMethod(expected: Method)","org.http4k.kotest.shouldNotHaveMethod"]},{"name":"infix fun Request.shouldNotHaveUri(expected: Regex)","description":"org.http4k.kotest.shouldNotHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-uri.html","searchKeys":["shouldNotHaveUri","infix fun Request.shouldNotHaveUri(expected: Regex)","org.http4k.kotest.shouldNotHaveUri"]},{"name":"infix fun Request.shouldNotHaveUri(expected: String)","description":"org.http4k.kotest.shouldNotHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-uri.html","searchKeys":["shouldNotHaveUri","infix fun Request.shouldNotHaveUri(expected: String)","org.http4k.kotest.shouldNotHaveUri"]},{"name":"infix fun Request.shouldNotHaveUri(expected: Uri)","description":"org.http4k.kotest.shouldNotHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-uri.html","searchKeys":["shouldNotHaveUri","infix fun Request.shouldNotHaveUri(expected: Uri)","org.http4k.kotest.shouldNotHaveUri"]},{"name":"infix fun Request.shouldNotHaveUri(match: Matcher<Uri>)","description":"org.http4k.kotest.shouldNotHaveUri","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-uri.html","searchKeys":["shouldNotHaveUri","infix fun Request.shouldNotHaveUri(match: Matcher<Uri>)","org.http4k.kotest.shouldNotHaveUri"]},{"name":"infix fun Response.shouldHaveSetCookie(expected: Cookie)","description":"org.http4k.kotest.shouldHaveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-have-set-cookie.html","searchKeys":["shouldHaveSetCookie","infix fun Response.shouldHaveSetCookie(expected: Cookie)","org.http4k.kotest.shouldHaveSetCookie"]},{"name":"infix fun Response.shouldHaveStatus(expected: Status)","description":"org.http4k.kotest.shouldHaveStatus","location":"http4k-testing-kotest/org.http4k.kotest/should-have-status.html","searchKeys":["shouldHaveStatus","infix fun Response.shouldHaveStatus(expected: Status)","org.http4k.kotest.shouldHaveStatus"]},{"name":"infix fun Response.shouldNotHaveSetCookie(expected: Cookie)","description":"org.http4k.kotest.shouldNotHaveSetCookie","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-set-cookie.html","searchKeys":["shouldNotHaveSetCookie","infix fun Response.shouldNotHaveSetCookie(expected: Cookie)","org.http4k.kotest.shouldNotHaveSetCookie"]},{"name":"infix fun Response.shouldNotHaveStatus(expected: Status)","description":"org.http4k.kotest.shouldNotHaveStatus","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-status.html","searchKeys":["shouldNotHaveStatus","infix fun Response.shouldNotHaveStatus(expected: Status)","org.http4k.kotest.shouldNotHaveStatus"]},{"name":"infix fun Uri.shouldHaveAuthority(expected: String)","description":"org.http4k.kotest.shouldHaveAuthority","location":"http4k-testing-kotest/org.http4k.kotest/should-have-authority.html","searchKeys":["shouldHaveAuthority","infix fun Uri.shouldHaveAuthority(expected: String)","org.http4k.kotest.shouldHaveAuthority"]},{"name":"infix fun Uri.shouldHaveHost(expected: String)","description":"org.http4k.kotest.shouldHaveHost","location":"http4k-testing-kotest/org.http4k.kotest/should-have-host.html","searchKeys":["shouldHaveHost","infix fun Uri.shouldHaveHost(expected: String)","org.http4k.kotest.shouldHaveHost"]},{"name":"infix fun Uri.shouldHavePath(expected: Regex)","description":"org.http4k.kotest.shouldHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-have-path.html","searchKeys":["shouldHavePath","infix fun Uri.shouldHavePath(expected: Regex)","org.http4k.kotest.shouldHavePath"]},{"name":"infix fun Uri.shouldHavePath(expected: String?)","description":"org.http4k.kotest.shouldHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-have-path.html","searchKeys":["shouldHavePath","infix fun Uri.shouldHavePath(expected: String?)","org.http4k.kotest.shouldHavePath"]},{"name":"infix fun Uri.shouldHavePath(match: Matcher<String?>)","description":"org.http4k.kotest.shouldHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-have-path.html","searchKeys":["shouldHavePath","infix fun Uri.shouldHavePath(match: Matcher<String?>)","org.http4k.kotest.shouldHavePath"]},{"name":"infix fun Uri.shouldHavePort(expected: Int)","description":"org.http4k.kotest.shouldHavePort","location":"http4k-testing-kotest/org.http4k.kotest/should-have-port.html","searchKeys":["shouldHavePort","infix fun Uri.shouldHavePort(expected: Int)","org.http4k.kotest.shouldHavePort"]},{"name":"infix fun Uri.shouldHaveQuery(expected: String)","description":"org.http4k.kotest.shouldHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-have-query.html","searchKeys":["shouldHaveQuery","infix fun Uri.shouldHaveQuery(expected: String)","org.http4k.kotest.shouldHaveQuery"]},{"name":"infix fun Uri.shouldNotHaveAuthority(expected: String)","description":"org.http4k.kotest.shouldNotHaveAuthority","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-authority.html","searchKeys":["shouldNotHaveAuthority","infix fun Uri.shouldNotHaveAuthority(expected: String)","org.http4k.kotest.shouldNotHaveAuthority"]},{"name":"infix fun Uri.shouldNotHaveHost(expected: String)","description":"org.http4k.kotest.shouldNotHaveHost","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-host.html","searchKeys":["shouldNotHaveHost","infix fun Uri.shouldNotHaveHost(expected: String)","org.http4k.kotest.shouldNotHaveHost"]},{"name":"infix fun Uri.shouldNotHavePath(expected: Regex)","description":"org.http4k.kotest.shouldNotHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-path.html","searchKeys":["shouldNotHavePath","infix fun Uri.shouldNotHavePath(expected: Regex)","org.http4k.kotest.shouldNotHavePath"]},{"name":"infix fun Uri.shouldNotHavePath(expected: String?)","description":"org.http4k.kotest.shouldNotHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-path.html","searchKeys":["shouldNotHavePath","infix fun Uri.shouldNotHavePath(expected: String?)","org.http4k.kotest.shouldNotHavePath"]},{"name":"infix fun Uri.shouldNotHavePath(match: Matcher<String?>)","description":"org.http4k.kotest.shouldNotHavePath","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-path.html","searchKeys":["shouldNotHavePath","infix fun Uri.shouldNotHavePath(match: Matcher<String?>)","org.http4k.kotest.shouldNotHavePath"]},{"name":"infix fun Uri.shouldNotHavePort(expected: Int)","description":"org.http4k.kotest.shouldNotHavePort","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-port.html","searchKeys":["shouldNotHavePort","infix fun Uri.shouldNotHavePort(expected: Int)","org.http4k.kotest.shouldNotHavePort"]},{"name":"infix fun Uri.shouldNotHaveQuery(expected: String)","description":"org.http4k.kotest.shouldNotHaveQuery","location":"http4k-testing-kotest/org.http4k.kotest/should-not-have-query.html","searchKeys":["shouldNotHaveQuery","infix fun Uri.shouldNotHaveQuery(expected: String)","org.http4k.kotest.shouldNotHaveQuery"]},{"name":"class Http4kSetHeadersHandler(sse: SseHandler) : HttpHandler","description":"org.http4k.server.Http4kSetHeadersHandler","location":"http4k-server-undertow/org.http4k.server/-http4k-set-headers-handler/index.html","searchKeys":["Http4kSetHeadersHandler","class Http4kSetHeadersHandler(sse: SseHandler) : HttpHandler","org.http4k.server.Http4kSetHeadersHandler"]},{"name":"class Http4kUndertowHttpHandler(handler: HttpHandler) : HttpHandler","description":"org.http4k.server.Http4kUndertowHttpHandler","location":"http4k-server-undertow/org.http4k.server/-http4k-undertow-http-handler/index.html","searchKeys":["Http4kUndertowHttpHandler","class Http4kUndertowHttpHandler(handler: HttpHandler) : HttpHandler","org.http4k.server.Http4kUndertowHttpHandler"]},{"name":"class Http4kWebSocketCallback(ws: WsHandler) : WebSocketConnectionCallback","description":"org.http4k.server.Http4kWebSocketCallback","location":"http4k-server-undertow/org.http4k.server/-http4k-web-socket-callback/index.html","searchKeys":["Http4kWebSocketCallback","class Http4kWebSocketCallback(ws: WsHandler) : WebSocketConnectionCallback","org.http4k.server.Http4kWebSocketCallback"]},{"name":"class Undertow(val port: Int = 8000, val enableHttp2: Boolean, val stopMode: ServerConfig.StopMode = StopMode.Immediate) : PolyServerConfig","description":"org.http4k.server.Undertow","location":"http4k-server-undertow/org.http4k.server/-undertow/index.html","searchKeys":["Undertow","class Undertow(val port: Int = 8000, val enableHttp2: Boolean, val stopMode: ServerConfig.StopMode = StopMode.Immediate) : PolyServerConfig","org.http4k.server.Undertow"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.Http4kUndertowHttpHandler.Http4kUndertowHttpHandler","location":"http4k-server-undertow/org.http4k.server/-http4k-undertow-http-handler/-http4k-undertow-http-handler.html","searchKeys":["Http4kUndertowHttpHandler","constructor(handler: HttpHandler)","org.http4k.server.Http4kUndertowHttpHandler.Http4kUndertowHttpHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Undertow.Undertow","location":"http4k-server-undertow/org.http4k.server/-undertow/-undertow.html","searchKeys":["Undertow","constructor(port: Int = 8000)","org.http4k.server.Undertow.Undertow"]},{"name":"constructor(port: Int = 8000, enableHttp2: Boolean)","description":"org.http4k.server.Undertow.Undertow","location":"http4k-server-undertow/org.http4k.server/-undertow/-undertow.html","searchKeys":["Undertow","constructor(port: Int = 8000, enableHttp2: Boolean)","org.http4k.server.Undertow.Undertow"]},{"name":"constructor(port: Int = 8000, enableHttp2: Boolean, stopMode: ServerConfig.StopMode = StopMode.Immediate)","description":"org.http4k.server.Undertow.Undertow","location":"http4k-server-undertow/org.http4k.server/-undertow/-undertow.html","searchKeys":["Undertow","constructor(port: Int = 8000, enableHttp2: Boolean, stopMode: ServerConfig.StopMode = StopMode.Immediate)","org.http4k.server.Undertow.Undertow"]},{"name":"constructor(sse: SseHandler)","description":"org.http4k.server.Http4kSetHeadersHandler.Http4kSetHeadersHandler","location":"http4k-server-undertow/org.http4k.server/-http4k-set-headers-handler/-http4k-set-headers-handler.html","searchKeys":["Http4kSetHeadersHandler","constructor(sse: SseHandler)","org.http4k.server.Http4kSetHeadersHandler.Http4kSetHeadersHandler"]},{"name":"constructor(ws: WsHandler)","description":"org.http4k.server.Http4kWebSocketCallback.Http4kWebSocketCallback","location":"http4k-server-undertow/org.http4k.server/-http4k-web-socket-callback/-http4k-web-socket-callback.html","searchKeys":["Http4kWebSocketCallback","constructor(ws: WsHandler)","org.http4k.server.Http4kWebSocketCallback.Http4kWebSocketCallback"]},{"name":"fun hasEventStreamContentType(): (HttpServerExchange) -> Boolean","description":"org.http4k.server.hasEventStreamContentType","location":"http4k-server-undertow/org.http4k.server/has-event-stream-content-type.html","searchKeys":["hasEventStreamContentType","fun hasEventStreamContentType(): (HttpServerExchange) -> Boolean","org.http4k.server.hasEventStreamContentType"]},{"name":"fun requiresWebSocketUpgrade(): (HttpServerExchange) -> Boolean","description":"org.http4k.server.requiresWebSocketUpgrade","location":"http4k-server-undertow/org.http4k.server/requires-web-socket-upgrade.html","searchKeys":["requiresWebSocketUpgrade","fun requiresWebSocketUpgrade(): (HttpServerExchange) -> Boolean","org.http4k.server.requiresWebSocketUpgrade"]},{"name":"open override fun handleRequest(exchange: HttpServerExchange)","description":"org.http4k.server.Http4kSetHeadersHandler.handleRequest","location":"http4k-server-undertow/org.http4k.server/-http4k-set-headers-handler/handle-request.html","searchKeys":["handleRequest","open override fun handleRequest(exchange: HttpServerExchange)","org.http4k.server.Http4kSetHeadersHandler.handleRequest"]},{"name":"open override fun handleRequest(exchange: HttpServerExchange)","description":"org.http4k.server.Http4kUndertowHttpHandler.handleRequest","location":"http4k-server-undertow/org.http4k.server/-http4k-undertow-http-handler/handle-request.html","searchKeys":["handleRequest","open override fun handleRequest(exchange: HttpServerExchange)","org.http4k.server.Http4kUndertowHttpHandler.handleRequest"]},{"name":"open override fun onConnect(exchange: WebSocketHttpExchange, channel: WebSocketChannel)","description":"org.http4k.server.Http4kWebSocketCallback.onConnect","location":"http4k-server-undertow/org.http4k.server/-http4k-web-socket-callback/on-connect.html","searchKeys":["onConnect","open override fun onConnect(exchange: WebSocketHttpExchange, channel: WebSocketChannel)","org.http4k.server.Http4kWebSocketCallback.onConnect"]},{"name":"open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","description":"org.http4k.server.Undertow.toServer","location":"http4k-server-undertow/org.http4k.server/-undertow/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","org.http4k.server.Undertow.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.Undertow.stopMode","location":"http4k-server-undertow/org.http4k.server/-undertow/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.Undertow.stopMode"]},{"name":"val enableHttp2: Boolean","description":"org.http4k.server.Undertow.enableHttp2","location":"http4k-server-undertow/org.http4k.server/-undertow/enable-http2.html","searchKeys":["enableHttp2","val enableHttp2: Boolean","org.http4k.server.Undertow.enableHttp2"]},{"name":"val port: Int = 8000","description":"org.http4k.server.Undertow.port","location":"http4k-server-undertow/org.http4k.server/-undertow/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.Undertow.port"]},{"name":"class Ratpack(port: Int = 8000, stopMode: ServerConfig.StopMode) : ServerConfig","description":"org.http4k.server.Ratpack","location":"http4k-server-ratpack/org.http4k.server/-ratpack/index.html","searchKeys":["Ratpack","class Ratpack(port: Int = 8000, stopMode: ServerConfig.StopMode) : ServerConfig","org.http4k.server.Ratpack"]},{"name":"class RatpackHttp4kHandler(httpHandler: HttpHandler) : Handler","description":"org.http4k.server.RatpackHttp4kHandler","location":"http4k-server-ratpack/org.http4k.server/-ratpack-http4k-handler/index.html","searchKeys":["RatpackHttp4kHandler","class RatpackHttp4kHandler(httpHandler: HttpHandler) : Handler","org.http4k.server.RatpackHttp4kHandler"]},{"name":"constructor(httpHandler: HttpHandler)","description":"org.http4k.server.RatpackHttp4kHandler.RatpackHttp4kHandler","location":"http4k-server-ratpack/org.http4k.server/-ratpack-http4k-handler/-ratpack-http4k-handler.html","searchKeys":["RatpackHttp4kHandler","constructor(httpHandler: HttpHandler)","org.http4k.server.RatpackHttp4kHandler.RatpackHttp4kHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Ratpack.Ratpack","location":"http4k-server-ratpack/org.http4k.server/-ratpack/-ratpack.html","searchKeys":["Ratpack","constructor(port: Int = 8000)","org.http4k.server.Ratpack.Ratpack"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.Ratpack.Ratpack","location":"http4k-server-ratpack/org.http4k.server/-ratpack/-ratpack.html","searchKeys":["Ratpack","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.Ratpack.Ratpack"]},{"name":"open override fun handle(context: Context)","description":"org.http4k.server.RatpackHttp4kHandler.handle","location":"http4k-server-ratpack/org.http4k.server/-ratpack-http4k-handler/handle.html","searchKeys":["handle","open override fun handle(context: Context)","org.http4k.server.RatpackHttp4kHandler.handle"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.Ratpack.toServer","location":"http4k-server-ratpack/org.http4k.server/-ratpack/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.Ratpack.toServer"]},{"name":"constructor(builder: Moshi.Builder, defaultContentType: ContentType = APPLICATION_YAML, yamlDumperOptions: DumperOptions = defaultDumperOptions, resolver: Resolver = MinimalResolver, strictness: StrictnessMode = Lenient)","description":"org.http4k.format.ConfigurableMoshiYaml.ConfigurableMoshiYaml","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/-configurable-moshi-yaml.html","searchKeys":["ConfigurableMoshiYaml","constructor(builder: Moshi.Builder, defaultContentType: ContentType = APPLICATION_YAML, yamlDumperOptions: DumperOptions = defaultDumperOptions, resolver: Resolver = MinimalResolver, strictness: StrictnessMode = Lenient)","org.http4k.format.ConfigurableMoshiYaml.ConfigurableMoshiYaml"]},{"name":"fun custom(configureFn: AutoMappingConfiguration<Moshi.Builder>.() -> AutoMappingConfiguration<Moshi.Builder>): ConfigurableMoshiYaml","description":"org.http4k.format.MoshiYaml.custom","location":"http4k-format-moshi-yaml/org.http4k.format/-moshi-yaml/custom.html","searchKeys":["custom","fun custom(configureFn: AutoMappingConfiguration<Moshi.Builder>.() -> AutoMappingConfiguration<Moshi.Builder>): ConfigurableMoshiYaml","org.http4k.format.MoshiYaml.custom"]},{"name":"inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","description":"org.http4k.format.ConfigurableMoshiYaml.yaml","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/yaml.html","searchKeys":["yaml","inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","org.http4k.format.ConfigurableMoshiYaml.yaml"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableMoshiYaml.auto","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableMoshiYaml.auto"]},{"name":"inline fun <T : Any> HttpMessage.yaml(): T","description":"org.http4k.format.ConfigurableMoshiYaml.yaml","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/yaml.html","searchKeys":["yaml","inline fun <T : Any> HttpMessage.yaml(): T","org.http4k.format.ConfigurableMoshiYaml.yaml"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<Unit>","description":"org.http4k.format.ConfigurableMoshiYaml.auto","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<Unit>","org.http4k.format.ConfigurableMoshiYaml.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableMoshiYaml.autoBody","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableMoshiYaml.autoBody"]},{"name":"object MinimalResolver : Resolver","description":"org.http4k.format.MinimalResolver","location":"http4k-format-moshi-yaml/org.http4k.format/-minimal-resolver/index.html","searchKeys":["MinimalResolver","object MinimalResolver : Resolver","org.http4k.format.MinimalResolver"]},{"name":"object MoshiYaml : ConfigurableMoshiYaml","description":"org.http4k.format.MoshiYaml","location":"http4k-format-moshi-yaml/org.http4k.format/-moshi-yaml/index.html","searchKeys":["MoshiYaml","object MoshiYaml : ConfigurableMoshiYaml","org.http4k.format.MoshiYaml"]},{"name":"object NullSafeMapAdapter : JsonAdapter.Factory","description":"org.http4k.format.NullSafeMapAdapter","location":"http4k-format-moshi-yaml/org.http4k.format/-null-safe-map-adapter/index.html","searchKeys":["NullSafeMapAdapter","object NullSafeMapAdapter : JsonAdapter.Factory","org.http4k.format.NullSafeMapAdapter"]},{"name":"open class ConfigurableMoshiYaml(builder: Moshi.Builder, val defaultContentType: ContentType = APPLICATION_YAML, yamlDumperOptions: DumperOptions = defaultDumperOptions, resolver: Resolver = MinimalResolver, strictness: StrictnessMode = Lenient) : AutoMarshalling","description":"org.http4k.format.ConfigurableMoshiYaml","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/index.html","searchKeys":["ConfigurableMoshiYaml","open class ConfigurableMoshiYaml(builder: Moshi.Builder, val defaultContentType: ContentType = APPLICATION_YAML, yamlDumperOptions: DumperOptions = defaultDumperOptions, resolver: Resolver = MinimalResolver, strictness: StrictnessMode = Lenient) : AutoMarshalling","org.http4k.format.ConfigurableMoshiYaml"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableMoshiYaml.asA","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableMoshiYaml.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableMoshiYaml.asA","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableMoshiYaml.asA"]},{"name":"open override fun addImplicitResolver(tag: Tag, regexp: Pattern, first: String?, limit: Int)","description":"org.http4k.format.MinimalResolver.addImplicitResolver","location":"http4k-format-moshi-yaml/org.http4k.format/-minimal-resolver/add-implicit-resolver.html","searchKeys":["addImplicitResolver","open override fun addImplicitResolver(tag: Tag, regexp: Pattern, first: String?, limit: Int)","org.http4k.format.MinimalResolver.addImplicitResolver"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.ConfigurableMoshiYaml.asFormatString","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.ConfigurableMoshiYaml.asFormatString"]},{"name":"open override fun create(type: Type, annotations: MutableSet<out Annotation>, moshi: Moshi): JsonAdapter<Map<*, *>>?","description":"org.http4k.format.NullSafeMapAdapter.create","location":"http4k-format-moshi-yaml/org.http4k.format/-null-safe-map-adapter/create.html","searchKeys":["create","open override fun create(type: Type, annotations: MutableSet<out Annotation>, moshi: Moshi): JsonAdapter<Map<*, *>>?","org.http4k.format.NullSafeMapAdapter.create"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableMoshiYaml.defaultContentType","location":"http4k-format-moshi-yaml/org.http4k.format/-configurable-moshi-yaml/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableMoshiYaml.defaultContentType"]},{"name":"val defaultDumperOptions: DumperOptions","description":"org.http4k.format.defaultDumperOptions","location":"http4k-format-moshi-yaml/org.http4k.format/default-dumper-options.html","searchKeys":["defaultDumperOptions","val defaultDumperOptions: DumperOptions","org.http4k.format.defaultDumperOptions"]},{"name":"constructor(data: Any?, errors: List<Map<String, Any>>?)","description":"org.http4k.graphql.GraphQLResponse.GraphQLResponse","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/-graph-q-l-response.html","searchKeys":["GraphQLResponse","constructor(data: Any?, errors: List<Map<String, Any>>?)","org.http4k.graphql.GraphQLResponse.GraphQLResponse"]},{"name":"constructor(query: String = \"\", operationName: String? = null, variables: Map<String, Any>? = emptyMap())","description":"org.http4k.graphql.GraphQLRequest.GraphQLRequest","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/-graph-q-l-request.html","searchKeys":["GraphQLRequest","constructor(query: String = \"\", operationName: String? = null, variables: Map<String, Any>? = emptyMap())","org.http4k.graphql.GraphQLRequest.GraphQLRequest"]},{"name":"data class GraphQLRequest(val query: String = \"\", val operationName: String? = null, val variables: Map<String, Any>? = emptyMap())","description":"org.http4k.graphql.GraphQLRequest","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/index.html","searchKeys":["GraphQLRequest","data class GraphQLRequest(val query: String = \"\", val operationName: String? = null, val variables: Map<String, Any>? = emptyMap())","org.http4k.graphql.GraphQLRequest"]},{"name":"data class GraphQLResponse(val data: Any?, val errors: List<Map<String, Any>>?)","description":"org.http4k.graphql.GraphQLResponse","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/index.html","searchKeys":["GraphQLResponse","data class GraphQLResponse(val data: Any?, val errors: List<Map<String, Any>>?)","org.http4k.graphql.GraphQLResponse"]},{"name":"fun <T> graphQL(handler: GraphQLWithContextHandler<T>, getContext: (Request) -> T, badRequestFn: (LensFailure) -> Response = { Response(BAD_REQUEST) }): RoutingHttpHandler","description":"org.http4k.routing.graphQL","location":"http4k-graphql/org.http4k.routing/graph-q-l.html","searchKeys":["graphQL","fun <T> graphQL(handler: GraphQLWithContextHandler<T>, getContext: (Request) -> T, badRequestFn: (LensFailure) -> Response = { Response(BAD_REQUEST) }): RoutingHttpHandler","org.http4k.routing.graphQL"]},{"name":"fun HttpHandler.asGraphQLHandler(endpoint: String): (GraphQLRequest) -> GraphQLResponse","description":"org.http4k.client.asGraphQLHandler","location":"http4k-graphql/org.http4k.client/as-graph-q-l-handler.html","searchKeys":["asGraphQLHandler","fun HttpHandler.asGraphQLHandler(endpoint: String): (GraphQLRequest) -> GraphQLResponse","org.http4k.client.asGraphQLHandler"]},{"name":"fun HttpHandler.asGraphQLHandler(endpoint: Uri): (GraphQLRequest) -> GraphQLResponse","description":"org.http4k.client.asGraphQLHandler","location":"http4k-graphql/org.http4k.client/as-graph-q-l-handler.html","searchKeys":["asGraphQLHandler","fun HttpHandler.asGraphQLHandler(endpoint: Uri): (GraphQLRequest) -> GraphQLResponse","org.http4k.client.asGraphQLHandler"]},{"name":"fun from(executionResult: ExecutionResult): GraphQLResponse","description":"org.http4k.graphql.GraphQLResponse.Companion.from","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/-companion/from.html","searchKeys":["from","fun from(executionResult: ExecutionResult): GraphQLResponse","org.http4k.graphql.GraphQLResponse.Companion.from"]},{"name":"fun graphQL(handler: GraphQLHandler, badRequestFn: (LensFailure) -> Response = { Response(BAD_REQUEST) }): RoutingHttpHandler","description":"org.http4k.routing.graphQL","location":"http4k-graphql/org.http4k.routing/graph-q-l.html","searchKeys":["graphQL","fun graphQL(handler: GraphQLHandler, badRequestFn: (LensFailure) -> Response = { Response(BAD_REQUEST) }): RoutingHttpHandler","org.http4k.routing.graphQL"]},{"name":"fun graphQLPlayground(graphQLRoute: Uri, title: String = \"GraphQL Playground\"): RoutingHttpHandler","description":"org.http4k.routing.graphQLPlayground","location":"http4k-graphql/org.http4k.routing/graph-q-l-playground.html","searchKeys":["graphQLPlayground","fun graphQLPlayground(graphQLRoute: Uri, title: String = \"GraphQL Playground\"): RoutingHttpHandler","org.http4k.routing.graphQLPlayground"]},{"name":"object Companion","description":"org.http4k.graphql.GraphQLRequest.Companion","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.graphql.GraphQLRequest.Companion"]},{"name":"object Companion","description":"org.http4k.graphql.GraphQLResponse.Companion","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.graphql.GraphQLResponse.Companion"]},{"name":"typealias GraphQLHandler = (GraphQLRequest) -> GraphQLResponse","description":"org.http4k.graphql.GraphQLHandler","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-handler/index.html","searchKeys":["GraphQLHandler","typealias GraphQLHandler = (GraphQLRequest) -> GraphQLResponse","org.http4k.graphql.GraphQLHandler"]},{"name":"typealias GraphQLWithContextHandler<T> = (GraphQLRequest, T) -> GraphQLResponse","description":"org.http4k.graphql.GraphQLWithContextHandler","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-with-context-handler/index.html","searchKeys":["GraphQLWithContextHandler","typealias GraphQLWithContextHandler<T> = (GraphQLRequest, T) -> GraphQLResponse","org.http4k.graphql.GraphQLWithContextHandler"]},{"name":"val data: Any?","description":"org.http4k.graphql.GraphQLResponse.data","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/data.html","searchKeys":["data","val data: Any?","org.http4k.graphql.GraphQLResponse.data"]},{"name":"val errors: List<Map<String, Any>>?","description":"org.http4k.graphql.GraphQLResponse.errors","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/errors.html","searchKeys":["errors","val errors: List<Map<String, Any>>?","org.http4k.graphql.GraphQLResponse.errors"]},{"name":"val operationName: String? = null","description":"org.http4k.graphql.GraphQLRequest.operationName","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/operation-name.html","searchKeys":["operationName","val operationName: String? = null","org.http4k.graphql.GraphQLRequest.operationName"]},{"name":"val query: String","description":"org.http4k.graphql.GraphQLRequest.query","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/query.html","searchKeys":["query","val query: String","org.http4k.graphql.GraphQLRequest.query"]},{"name":"val requestLens: BiDiBodyLens<GraphQLRequest>","description":"org.http4k.graphql.GraphQLRequest.Companion.requestLens","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/-companion/request-lens.html","searchKeys":["requestLens","val requestLens: BiDiBodyLens<GraphQLRequest>","org.http4k.graphql.GraphQLRequest.Companion.requestLens"]},{"name":"val responseLens: BiDiBodyLens<GraphQLResponse>","description":"org.http4k.graphql.GraphQLResponse.Companion.responseLens","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-response/-companion/response-lens.html","searchKeys":["responseLens","val responseLens: BiDiBodyLens<GraphQLResponse>","org.http4k.graphql.GraphQLResponse.Companion.responseLens"]},{"name":"val variables: Map<String, Any>?","description":"org.http4k.graphql.GraphQLRequest.variables","location":"http4k-graphql/org.http4k.graphql/-graph-q-l-request/variables.html","searchKeys":["variables","val variables: Map<String, Any>?","org.http4k.graphql.GraphQLRequest.variables"]},{"name":"constructor(value: String)","description":"org.http4k.security.Nonce.Nonce","location":"http4k-security-core/org.http4k.security/-nonce/-nonce.html","searchKeys":["Nonce","constructor(value: String)","org.http4k.security.Nonce.Nonce"]},{"name":"data class Nonce(val value: String)","description":"org.http4k.security.Nonce","location":"http4k-security-core/org.http4k.security/-nonce/index.html","searchKeys":["Nonce","data class Nonce(val value: String)","org.http4k.security.Nonce"]},{"name":"object Companion","description":"org.http4k.security.Nonce.Companion","location":"http4k-security-core/org.http4k.security/-nonce/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.Nonce.Companion"]},{"name":"open override fun toString(): String","description":"org.http4k.security.Nonce.toString","location":"http4k-security-core/org.http4k.security/-nonce/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.security.Nonce.toString"]},{"name":"typealias NonceGenerator = () -> Nonce","description":"org.http4k.security.NonceGenerator","location":"http4k-security-core/org.http4k.security/-nonce-generator/index.html","searchKeys":["NonceGenerator","typealias NonceGenerator = () -> Nonce","org.http4k.security.NonceGenerator"]},{"name":"typealias NonceVerifier = (Nonce) -> Boolean","description":"org.http4k.security.NonceVerifier","location":"http4k-security-core/org.http4k.security/-nonce-verifier/index.html","searchKeys":["NonceVerifier","typealias NonceVerifier = (Nonce) -> Boolean","org.http4k.security.NonceVerifier"]},{"name":"val SECURE_NONCE: () -> Nonce","description":"org.http4k.security.Nonce.Companion.SECURE_NONCE","location":"http4k-security-core/org.http4k.security/-nonce/-companion/-s-e-c-u-r-e_-n-o-n-c-e.html","searchKeys":["SECURE_NONCE","val SECURE_NONCE: () -> Nonce","org.http4k.security.Nonce.Companion.SECURE_NONCE"]},{"name":"val value: String","description":"org.http4k.security.Nonce.value","location":"http4k-security-core/org.http4k.security/-nonce/value.html","searchKeys":["value","val value: String","org.http4k.security.Nonce.value"]},{"name":"constructor(klaxon: Klaxon, defaultContentType: ContentType = APPLICATION_JSON)","description":"org.http4k.format.ConfigurableKlaxon.ConfigurableKlaxon","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/-configurable-klaxon.html","searchKeys":["ConfigurableKlaxon","constructor(klaxon: Klaxon, defaultContentType: ContentType = APPLICATION_JSON)","org.http4k.format.ConfigurableKlaxon.ConfigurableKlaxon"]},{"name":"fun Klaxon.asConfigurable(): AutoMappingConfiguration<Klaxon>","description":"org.http4k.format.asConfigurable","location":"http4k-format-klaxon/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun Klaxon.asConfigurable(): AutoMappingConfiguration<Klaxon>","org.http4k.format.asConfigurable"]},{"name":"fun Klaxon.asConfigurable(klaxon: Klaxon): AutoMappingConfiguration<Klaxon>","description":"org.http4k.format.asConfigurable","location":"http4k-format-klaxon/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun Klaxon.asConfigurable(klaxon: Klaxon): AutoMappingConfiguration<Klaxon>","org.http4k.format.asConfigurable"]},{"name":"inline fun <T : Any, R : HttpMessage> R.json(t: T): R","description":"org.http4k.format.ConfigurableKlaxon.json","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/json.html","searchKeys":["json","inline fun <T : Any, R : HttpMessage> R.json(t: T): R","org.http4k.format.ConfigurableKlaxon.json"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableKlaxon.auto","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableKlaxon.auto"]},{"name":"inline fun <T : Any> HttpMessage.json(): T","description":"org.http4k.format.ConfigurableKlaxon.json","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/json.html","searchKeys":["json","inline fun <T : Any> HttpMessage.json(): T","org.http4k.format.ConfigurableKlaxon.json"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableKlaxon.auto","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableKlaxon.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableKlaxon.autoBody","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableKlaxon.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableKlaxon.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-klaxon/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableKlaxon.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableKlaxon.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-klaxon/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableKlaxon.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object Klaxon : ConfigurableKlaxon","description":"org.http4k.format.Klaxon","location":"http4k-format-klaxon/org.http4k.format/-klaxon/index.html","searchKeys":["Klaxon","object Klaxon : ConfigurableKlaxon","org.http4k.format.Klaxon"]},{"name":"open class ConfigurableKlaxon(klaxon: Klaxon, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshalling","description":"org.http4k.format.ConfigurableKlaxon","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/index.html","searchKeys":["ConfigurableKlaxon","open class ConfigurableKlaxon(klaxon: Klaxon, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshalling","org.http4k.format.ConfigurableKlaxon"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableKlaxon.asA","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableKlaxon.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableKlaxon.asA","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableKlaxon.asA"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.ConfigurableKlaxon.asFormatString","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.ConfigurableKlaxon.asFormatString"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableKlaxon.defaultContentType","location":"http4k-format-klaxon/org.http4k.format/-configurable-klaxon/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableKlaxon.defaultContentType"]},{"name":"object ApacheAsyncClient","description":"org.http4k.client.ApacheAsyncClient","location":"http4k-client-apache-async/org.http4k.client/-apache-async-client/index.html","searchKeys":["ApacheAsyncClient","object ApacheAsyncClient","org.http4k.client.ApacheAsyncClient"]},{"name":"operator fun invoke(client: CloseableHttpAsyncClient = defaultApacheAsyncHttpClient()): AsyncHttpHandler","description":"org.http4k.client.ApacheAsyncClient.invoke","location":"http4k-client-apache-async/org.http4k.client/-apache-async-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: CloseableHttpAsyncClient = defaultApacheAsyncHttpClient()): AsyncHttpHandler","org.http4k.client.ApacheAsyncClient.invoke"]},{"name":"abstract fun toSchema(obj: IN, overrideDefinitionId: String? = null, refModelNamePrefix: String? = null): JsonSchema<OUT>","description":"org.http4k.contract.jsonschema.JsonSchemaCreator.toSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema-creator/to-schema.html","searchKeys":["toSchema","abstract fun toSchema(obj: IN, overrideDefinitionId: String? = null, refModelNamePrefix: String? = null): JsonSchema<OUT>","org.http4k.contract.jsonschema.JsonSchemaCreator.toSchema"]},{"name":"class AutoJsonToJsonSchema<NODE : Any>(json: AutoMarshallingJson<NODE>, fieldRetrieval: FieldRetrieval = FieldRetrieval.compose(\n        SimpleLookup(\n            metadataRetrievalStrategy = PrimitivesFieldMetadataRetrievalStrategy\n        )\n    ), modelNamer: SchemaModelNamer = Simple, refLocationPrefix: String = \"components/schemas\", metadataRetrieval: MetadataRetrieval = MetadataRetrieval.compose(SimpleMetadataLookup(emptyMap()))) : JsonSchemaCreator<Any, NODE> ","description":"org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-auto-json-to-json-schema/index.html","searchKeys":["AutoJsonToJsonSchema","class AutoJsonToJsonSchema<NODE : Any>(json: AutoMarshallingJson<NODE>, fieldRetrieval: FieldRetrieval = FieldRetrieval.compose(\n        SimpleLookup(\n            metadataRetrievalStrategy = PrimitivesFieldMetadataRetrievalStrategy\n        )\n    ), modelNamer: SchemaModelNamer = Simple, refLocationPrefix: String = \"components/schemas\", metadataRetrieval: MetadataRetrieval = MetadataRetrieval.compose(SimpleMetadataLookup(emptyMap()))) : JsonSchemaCreator<Any, NODE> ","org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema"]},{"name":"class Datum<T>(val name: String, val value: T) : Metadatum","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/-datum/index.html","searchKeys":["Datum","class Datum<T>(val name: String, val value: T) : Metadatum","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum"]},{"name":"class IllegalSchemaException(message: String) : RuntimeException","description":"org.http4k.contract.jsonschema.IllegalSchemaException","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-illegal-schema-exception/index.html","searchKeys":["IllegalSchemaException","class IllegalSchemaException(message: String) : RuntimeException","org.http4k.contract.jsonschema.IllegalSchemaException"]},{"name":"class JacksonJsonNamingAnnotated(json: ConfigurableJackson = Jackson) : FieldRetrieval","description":"org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-json-naming-annotated/index.html","searchKeys":["JacksonJsonNamingAnnotated","class JacksonJsonNamingAnnotated(json: ConfigurableJackson = Jackson) : FieldRetrieval","org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated"]},{"name":"class JsonToJsonSchema<NODE>(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\") : JsonSchemaCreator<NODE, NODE> ","description":"org.http4k.contract.jsonschema.v3.JsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-json-to-json-schema/index.html","searchKeys":["JsonToJsonSchema","class JsonToJsonSchema<NODE>(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\") : JsonSchemaCreator<NODE, NODE> ","org.http4k.contract.jsonschema.v3.JsonToJsonSchema"]},{"name":"class JsonToJsonSchema<NODE>(json: Json<NODE>, refLocationPrefix: String = \"definitions\") : JsonSchemaCreator<NODE, NODE> ","description":"org.http4k.contract.jsonschema.v2.JsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v2/-json-to-json-schema/index.html","searchKeys":["JsonToJsonSchema","class JsonToJsonSchema<NODE>(json: Json<NODE>, refLocationPrefix: String = \"definitions\") : JsonSchemaCreator<NODE, NODE> ","org.http4k.contract.jsonschema.v2.JsonToJsonSchema"]},{"name":"class KondorJsonSchemaCreator(json: KondorJson, refLocationPrefix: String = \"components/schema\") : JsonSchemaCreator<Any, JsonNode> ","description":"org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-kondor-json-schema-creator/index.html","searchKeys":["KondorJsonSchemaCreator","class KondorJsonSchemaCreator(json: KondorJson, refLocationPrefix: String = \"components/schema\") : JsonSchemaCreator<Any, JsonNode> ","org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator"]},{"name":"class NoFieldFound(name: String, target: Any, cause: Throwable? = null) : RuntimeException","description":"org.http4k.contract.jsonschema.v3.NoFieldFound","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-no-field-found/index.html","searchKeys":["NoFieldFound","class NoFieldFound(name: String, target: Any, cause: Throwable? = null) : RuntimeException","org.http4k.contract.jsonschema.v3.NoFieldFound"]},{"name":"class NoOpFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-no-op-field-metadata-retrieval-strategy/index.html","searchKeys":["NoOpFieldMetadataRetrievalStrategy","class NoOpFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy"]},{"name":"class SimpleLookup(renamingStrategy: (String) -> String = { it }, metadataRetrievalStrategy: FieldMetadataRetrievalStrategy = NoOpFieldMetadataRetrievalStrategy()) : FieldRetrieval","description":"org.http4k.contract.jsonschema.v3.SimpleLookup","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-lookup/index.html","searchKeys":["SimpleLookup","class SimpleLookup(renamingStrategy: (String) -> String = { it }, metadataRetrievalStrategy: FieldMetadataRetrievalStrategy = NoOpFieldMetadataRetrievalStrategy()) : FieldRetrieval","org.http4k.contract.jsonschema.v3.SimpleLookup"]},{"name":"class SimpleMetadataLookup(typeToMetadata: Map<KType, FieldMetadata>) : MetadataRetrieval","description":"org.http4k.contract.jsonschema.v3.SimpleMetadataLookup","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-metadata-lookup/index.html","searchKeys":["SimpleMetadataLookup","class SimpleMetadataLookup(typeToMetadata: Map<KType, FieldMetadata>) : MetadataRetrieval","org.http4k.contract.jsonschema.v3.SimpleMetadataLookup"]},{"name":"constructor()","description":"org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy.NoOpFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-no-op-field-metadata-retrieval-strategy/-no-op-field-metadata-retrieval-strategy.html","searchKeys":["NoOpFieldMetadataRetrievalStrategy","constructor()","org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy.NoOpFieldMetadataRetrievalStrategy"]},{"name":"constructor(extra: Map<String, Any?> = emptyMap())","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.FieldMetadata","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/-field-metadata.html","searchKeys":["FieldMetadata","constructor(extra: Map<String, Any?> = emptyMap())","org.http4k.contract.jsonschema.v3.FieldMetadata.FieldMetadata"]},{"name":"constructor(json: AutoMarshallingJson<NODE>, fieldRetrieval: FieldRetrieval = FieldRetrieval.compose(\n        SimpleLookup(\n            metadataRetrievalStrategy = PrimitivesFieldMetadataRetrievalStrategy\n        )\n    ), modelNamer: SchemaModelNamer = Simple, refLocationPrefix: String = \"components/schemas\", metadataRetrieval: MetadataRetrieval = MetadataRetrieval.compose(SimpleMetadataLookup(emptyMap())))","description":"org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema.AutoJsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-auto-json-to-json-schema/-auto-json-to-json-schema.html","searchKeys":["AutoJsonToJsonSchema","constructor(json: AutoMarshallingJson<NODE>, fieldRetrieval: FieldRetrieval = FieldRetrieval.compose(\n        SimpleLookup(\n            metadataRetrievalStrategy = PrimitivesFieldMetadataRetrievalStrategy\n        )\n    ), modelNamer: SchemaModelNamer = Simple, refLocationPrefix: String = \"components/schemas\", metadataRetrieval: MetadataRetrieval = MetadataRetrieval.compose(SimpleMetadataLookup(emptyMap())))","org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema.AutoJsonToJsonSchema"]},{"name":"constructor(json: ConfigurableJackson = Jackson)","description":"org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated.JacksonJsonNamingAnnotated","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-json-naming-annotated/-jackson-json-naming-annotated.html","searchKeys":["JacksonJsonNamingAnnotated","constructor(json: ConfigurableJackson = Jackson)","org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated.JacksonJsonNamingAnnotated"]},{"name":"constructor(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\")","description":"org.http4k.contract.jsonschema.v3.JsonToJsonSchema.JsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-json-to-json-schema/-json-to-json-schema.html","searchKeys":["JsonToJsonSchema","constructor(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\")","org.http4k.contract.jsonschema.v3.JsonToJsonSchema.JsonToJsonSchema"]},{"name":"constructor(json: Json<NODE>, refLocationPrefix: String = \"definitions\")","description":"org.http4k.contract.jsonschema.v2.JsonToJsonSchema.JsonToJsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v2/-json-to-json-schema/-json-to-json-schema.html","searchKeys":["JsonToJsonSchema","constructor(json: Json<NODE>, refLocationPrefix: String = \"definitions\")","org.http4k.contract.jsonschema.v2.JsonToJsonSchema.JsonToJsonSchema"]},{"name":"constructor(json: KondorJson, refLocationPrefix: String = \"components/schema\")","description":"org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator.KondorJsonSchemaCreator","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-kondor-json-schema-creator/-kondor-json-schema-creator.html","searchKeys":["KondorJsonSchemaCreator","constructor(json: KondorJson, refLocationPrefix: String = \"components/schema\")","org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator.KondorJsonSchemaCreator"]},{"name":"constructor(keyAsString: Any)","description":"org.http4k.contract.jsonschema.v3.MapKey.MapKey","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-map-key/-map-key.html","searchKeys":["MapKey","constructor(keyAsString: Any)","org.http4k.contract.jsonschema.v3.MapKey.MapKey"]},{"name":"constructor(message: String)","description":"org.http4k.contract.jsonschema.IllegalSchemaException.IllegalSchemaException","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-illegal-schema-exception/-illegal-schema-exception.html","searchKeys":["IllegalSchemaException","constructor(message: String)","org.http4k.contract.jsonschema.IllegalSchemaException.IllegalSchemaException"]},{"name":"constructor(name: String, target: Any, cause: Throwable? = null)","description":"org.http4k.contract.jsonschema.v3.NoFieldFound.NoFieldFound","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-no-field-found/-no-field-found.html","searchKeys":["NoFieldFound","constructor(name: String, target: Any, cause: Throwable? = null)","org.http4k.contract.jsonschema.v3.NoFieldFound.NoFieldFound"]},{"name":"constructor(name: String, value: T)","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.Datum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/-datum/-datum.html","searchKeys":["Datum","constructor(name: String, value: T)","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.Datum"]},{"name":"constructor(node: NODE, definitions: Set<Pair<String, NODE>> = emptySet())","description":"org.http4k.contract.jsonschema.JsonSchema.JsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema/-json-schema.html","searchKeys":["JsonSchema","constructor(node: NODE, definitions: Set<Pair<String, NODE>> = emptySet())","org.http4k.contract.jsonschema.JsonSchema.JsonSchema"]},{"name":"constructor(renamingStrategy: (String) -> String = { it }, metadataRetrievalStrategy: FieldMetadataRetrievalStrategy = NoOpFieldMetadataRetrievalStrategy())","description":"org.http4k.contract.jsonschema.v3.SimpleLookup.SimpleLookup","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-lookup/-simple-lookup.html","searchKeys":["SimpleLookup","constructor(renamingStrategy: (String) -> String = { it }, metadataRetrievalStrategy: FieldMetadataRetrievalStrategy = NoOpFieldMetadataRetrievalStrategy())","org.http4k.contract.jsonschema.v3.SimpleLookup.SimpleLookup"]},{"name":"constructor(typeToMetadata: Map<KType, FieldMetadata>)","description":"org.http4k.contract.jsonschema.v3.SimpleMetadataLookup.SimpleMetadataLookup","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-metadata-lookup/-simple-metadata-lookup.html","searchKeys":["SimpleMetadataLookup","constructor(typeToMetadata: Map<KType, FieldMetadata>)","org.http4k.contract.jsonschema.v3.SimpleMetadataLookup.SimpleMetadataLookup"]},{"name":"constructor(value: Any)","description":"org.http4k.contract.jsonschema.v3.FieldHolder.FieldHolder","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-holder/-field-holder.html","searchKeys":["FieldHolder","constructor(value: Any)","org.http4k.contract.jsonschema.v3.FieldHolder.FieldHolder"]},{"name":"constructor(value: Any, isNullable: Boolean, metadata: FieldMetadata)","description":"org.http4k.contract.jsonschema.v3.Field.Field","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field/-field.html","searchKeys":["Field","constructor(value: Any, isNullable: Boolean, metadata: FieldMetadata)","org.http4k.contract.jsonschema.v3.Field.Field"]},{"name":"constructor(vararg pairs: Pair<String, Any?>)","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.FieldMetadata","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/-field-metadata.html","searchKeys":["FieldMetadata","constructor(vararg pairs: Pair<String, Any?>)","org.http4k.contract.jsonschema.v3.FieldMetadata.FieldMetadata"]},{"name":"data class Field(val value: Any, val isNullable: Boolean, val metadata: FieldMetadata)","description":"org.http4k.contract.jsonschema.v3.Field","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field/index.html","searchKeys":["Field","data class Field(val value: Any, val isNullable: Boolean, val metadata: FieldMetadata)","org.http4k.contract.jsonschema.v3.Field"]},{"name":"data class FieldHolder(val value: Any)","description":"org.http4k.contract.jsonschema.v3.FieldHolder","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-holder/index.html","searchKeys":["FieldHolder","data class FieldHolder(val value: Any)","org.http4k.contract.jsonschema.v3.FieldHolder"]},{"name":"data class FieldMetadata(val extra: Map<String, Any?> = emptyMap())","description":"org.http4k.contract.jsonschema.v3.FieldMetadata","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/index.html","searchKeys":["FieldMetadata","data class FieldMetadata(val extra: Map<String, Any?> = emptyMap())","org.http4k.contract.jsonschema.v3.FieldMetadata"]},{"name":"data class JsonSchema<out NODE>(val node: NODE, val definitions: Set<Pair<String, NODE>> = emptySet())","description":"org.http4k.contract.jsonschema.JsonSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema/index.html","searchKeys":["JsonSchema","data class JsonSchema<out NODE>(val node: NODE, val definitions: Set<Pair<String, NODE>> = emptySet())","org.http4k.contract.jsonschema.JsonSchema"]},{"name":"data class MapKey(val keyAsString: Any)","description":"org.http4k.contract.jsonschema.v3.MapKey","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-map-key/index.html","searchKeys":["MapKey","data class MapKey(val keyAsString: Any)","org.http4k.contract.jsonschema.v3.MapKey"]},{"name":"data object default : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.default","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/default/index.html","searchKeys":["default","data object default : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.default"]},{"name":"data object description : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.description","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/description/index.html","searchKeys":["description","data object description : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.description"]},{"name":"data object example : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.example","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/example/index.html","searchKeys":["example","data object example : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.example"]},{"name":"data object exclusiveMaximum : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.exclusiveMaximum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/exclusive-maximum/index.html","searchKeys":["exclusiveMaximum","data object exclusiveMaximum : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.exclusiveMaximum"]},{"name":"data object exclusiveMinimum : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.exclusiveMinimum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/exclusive-minimum/index.html","searchKeys":["exclusiveMinimum","data object exclusiveMinimum : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.exclusiveMinimum"]},{"name":"data object format : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.format","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/format/index.html","searchKeys":["format","data object format : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.format"]},{"name":"data object maxItems : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxItems","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/max-items/index.html","searchKeys":["maxItems","data object maxItems : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxItems"]},{"name":"data object maxLength : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxLength","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/max-length/index.html","searchKeys":["maxLength","data object maxLength : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxLength"]},{"name":"data object maxProperties : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxProperties","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/max-properties/index.html","searchKeys":["maxProperties","data object maxProperties : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maxProperties"]},{"name":"data object maximum : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maximum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/maximum/index.html","searchKeys":["maximum","data object maximum : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.maximum"]},{"name":"data object minItems : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minItems","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/min-items/index.html","searchKeys":["minItems","data object minItems : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minItems"]},{"name":"data object minLength : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minLength","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/min-length/index.html","searchKeys":["minLength","data object minLength : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minLength"]},{"name":"data object minProperties : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minProperties","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/min-properties/index.html","searchKeys":["minProperties","data object minProperties : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minProperties"]},{"name":"data object minimum : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minimum","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/minimum/index.html","searchKeys":["minimum","data object minimum : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.minimum"]},{"name":"data object multipleOf : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.multipleOf","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/multiple-of/index.html","searchKeys":["multipleOf","data object multipleOf : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.multipleOf"]},{"name":"data object pattern : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.pattern","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/pattern/index.html","searchKeys":["pattern","data object pattern : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.pattern"]},{"name":"data object title : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.title","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/title/index.html","searchKeys":["title","data object title : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.title"]},{"name":"data object uniqueItems : Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.uniqueItems","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/unique-items/index.html","searchKeys":["uniqueItems","data object uniqueItems : Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.uniqueItems"]},{"name":"fun FieldMetadataRetrievalStrategy.then(that: FieldMetadataRetrievalStrategy): FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.then","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/then.html","searchKeys":["then","fun FieldMetadataRetrievalStrategy.then(that: FieldMetadataRetrievalStrategy): FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.then"]},{"name":"fun compose(vararg retrieval: FieldRetrieval): FieldRetrieval","description":"org.http4k.contract.jsonschema.v3.FieldRetrieval.Companion.compose","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-retrieval/-companion/compose.html","searchKeys":["compose","fun compose(vararg retrieval: FieldRetrieval): FieldRetrieval","org.http4k.contract.jsonschema.v3.FieldRetrieval.Companion.compose"]},{"name":"fun compose(vararg retrieval: MetadataRetrieval): MetadataRetrieval","description":"org.http4k.contract.jsonschema.v3.MetadataRetrieval.Companion.compose","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-metadata-retrieval/-companion/compose.html","searchKeys":["compose","fun compose(vararg retrieval: MetadataRetrieval): MetadataRetrieval","org.http4k.contract.jsonschema.v3.MetadataRetrieval.Companion.compose"]},{"name":"fun interface FieldMetadataRetrievalStrategy : Function2<Any, String, FieldMetadata> ","description":"org.http4k.contract.jsonschema.v3.FieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata-retrieval-strategy/index.html","searchKeys":["FieldMetadataRetrievalStrategy","fun interface FieldMetadataRetrievalStrategy : Function2<Any, String, FieldMetadata> ","org.http4k.contract.jsonschema.v3.FieldMetadataRetrievalStrategy"]},{"name":"fun interface FieldRetrieval : Function2<Any, String, Field> ","description":"org.http4k.contract.jsonschema.v3.FieldRetrieval","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-retrieval/index.html","searchKeys":["FieldRetrieval","fun interface FieldRetrieval : Function2<Any, String, Field> ","org.http4k.contract.jsonschema.v3.FieldRetrieval"]},{"name":"fun interface MetadataRetrieval : Function1<Any, FieldMetadata> ","description":"org.http4k.contract.jsonschema.v3.MetadataRetrieval","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-metadata-retrieval/index.html","searchKeys":["MetadataRetrieval","fun interface MetadataRetrieval : Function1<Any, FieldMetadata> ","org.http4k.contract.jsonschema.v3.MetadataRetrieval"]},{"name":"fun interface SchemaModelNamer : Function1<Any, String> ","description":"org.http4k.contract.jsonschema.v3.SchemaModelNamer","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-schema-model-namer/index.html","searchKeys":["SchemaModelNamer","fun interface SchemaModelNamer : Function1<Any, String> ","org.http4k.contract.jsonschema.v3.SchemaModelNamer"]},{"name":"interface JsonSchemaCreator<IN, OUT>","description":"org.http4k.contract.jsonschema.JsonSchemaCreator","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema-creator/index.html","searchKeys":["JsonSchemaCreator","interface JsonSchemaCreator<IN, OUT>","org.http4k.contract.jsonschema.JsonSchemaCreator"]},{"name":"object Companion","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.Companion","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.jsonschema.v3.FieldMetadata.Companion"]},{"name":"object Companion","description":"org.http4k.contract.jsonschema.v3.FieldRetrieval.Companion","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-retrieval/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.jsonschema.v3.FieldRetrieval.Companion"]},{"name":"object Companion","description":"org.http4k.contract.jsonschema.v3.MetadataRetrieval.Companion","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-metadata-retrieval/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.jsonschema.v3.MetadataRetrieval.Companion"]},{"name":"object Companion","description":"org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-schema-model-namer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion"]},{"name":"object Data4kFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.Data4kFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-field-metadata-retrieval-strategy/index.html","searchKeys":["Data4kFieldMetadataRetrievalStrategy","object Data4kFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.Data4kFieldMetadataRetrievalStrategy"]},{"name":"object JacksonFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-field-metadata-retrieval-strategy/index.html","searchKeys":["JacksonFieldMetadataRetrievalStrategy","object JacksonFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy"]},{"name":"object JacksonJsonPropertyAnnotated : FieldRetrieval","description":"org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-json-property-annotated/index.html","searchKeys":["JacksonJsonPropertyAnnotated","object JacksonJsonPropertyAnnotated : FieldRetrieval","org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated"]},{"name":"object PrimitivesFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-primitives-field-metadata-retrieval-strategy/index.html","searchKeys":["PrimitivesFieldMetadataRetrievalStrategy","object PrimitivesFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy"]},{"name":"object Values4kFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","description":"org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-values4k-field-metadata-retrieval-strategy/index.html","searchKeys":["Values4kFieldMetadataRetrievalStrategy","object Values4kFieldMetadataRetrievalStrategy : FieldMetadataRetrievalStrategy","org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy"]},{"name":"open infix fun of(t: Any): Data4kJsonSchemaMeta.Datum<Any>","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.of","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/of.html","searchKeys":["of","open infix fun of(t: Any): Data4kJsonSchemaMeta.Datum<Any>","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.of"]},{"name":"open operator override fun invoke(target: Any): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.SimpleMetadataLookup.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-metadata-lookup/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any): FieldMetadata","org.http4k.contract.jsonschema.v3.SimpleMetadataLookup.invoke"]},{"name":"open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.Data4kFieldMetadataRetrievalStrategy.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-field-metadata-retrieval-strategy/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","org.http4k.contract.jsonschema.v3.Data4kFieldMetadataRetrievalStrategy.invoke"]},{"name":"open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-field-metadata-retrieval-strategy/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy.invoke"]},{"name":"open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-no-op-field-metadata-retrieval-strategy/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy.invoke"]},{"name":"open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-primitives-field-metadata-retrieval-strategy/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy.invoke"]},{"name":"open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-values4k-field-metadata-retrieval-strategy/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, fieldName: String): FieldMetadata","org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy.invoke"]},{"name":"open operator override fun invoke(target: Any, name: String): Field","description":"org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-json-naming-annotated/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, name: String): Field","org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated.invoke"]},{"name":"open operator override fun invoke(target: Any, name: String): Field","description":"org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-jackson-json-property-annotated/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, name: String): Field","org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated.invoke"]},{"name":"open operator override fun invoke(target: Any, name: String): Field","description":"org.http4k.contract.jsonschema.v3.SimpleLookup.invoke","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-simple-lookup/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Any, name: String): Field","org.http4k.contract.jsonschema.v3.SimpleLookup.invoke"]},{"name":"open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<JsonNode>","description":"org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator.toSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-kondor-json-schema-creator/to-schema.html","searchKeys":["toSchema","open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<JsonNode>","org.http4k.contract.jsonschema.v3.KondorJsonSchemaCreator.toSchema"]},{"name":"open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","description":"org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema.toSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-auto-json-to-json-schema/to-schema.html","searchKeys":["toSchema","open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema.toSchema"]},{"name":"open override fun toSchema(obj: NODE, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","description":"org.http4k.contract.jsonschema.v2.JsonToJsonSchema.toSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v2/-json-to-json-schema/to-schema.html","searchKeys":["toSchema","open override fun toSchema(obj: NODE, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","org.http4k.contract.jsonschema.v2.JsonToJsonSchema.toSchema"]},{"name":"open override fun toSchema(obj: NODE, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","description":"org.http4k.contract.jsonschema.v3.JsonToJsonSchema.toSchema","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-json-to-json-schema/to-schema.html","searchKeys":["toSchema","open override fun toSchema(obj: NODE, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","org.http4k.contract.jsonschema.v3.JsonToJsonSchema.toSchema"]},{"name":"operator fun plus(that: FieldMetadata): FieldMetadata","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.plus","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/plus.html","searchKeys":["plus","operator fun plus(that: FieldMetadata): FieldMetadata","org.http4k.contract.jsonschema.v3.FieldMetadata.plus"]},{"name":"sealed interface Data4kJsonSchemaMeta","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/index.html","searchKeys":["Data4kJsonSchemaMeta","sealed interface Data4kJsonSchemaMeta","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta"]},{"name":"val Canonical: SchemaModelNamer","description":"org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Canonical","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-schema-model-namer/-companion/-canonical.html","searchKeys":["Canonical","val Canonical: SchemaModelNamer","org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Canonical"]},{"name":"val Full: SchemaModelNamer","description":"org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Full","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-schema-model-namer/-companion/-full.html","searchKeys":["Full","val Full: SchemaModelNamer","org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Full"]},{"name":"val ParamMeta.value: String","description":"org.http4k.contract.jsonschema.v2.value","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v2/value.html","searchKeys":["value","val ParamMeta.value: String","org.http4k.contract.jsonschema.v2.value"]},{"name":"val ParamMeta.value: String","description":"org.http4k.contract.jsonschema.v3.value","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/value.html","searchKeys":["value","val ParamMeta.value: String","org.http4k.contract.jsonschema.v3.value"]},{"name":"val Simple: SchemaModelNamer","description":"org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Simple","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-schema-model-namer/-companion/-simple.html","searchKeys":["Simple","val Simple: SchemaModelNamer","org.http4k.contract.jsonschema.v3.SchemaModelNamer.Companion.Simple"]},{"name":"val definitions: Set<Pair<String, NODE>>","description":"org.http4k.contract.jsonschema.JsonSchema.definitions","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema/definitions.html","searchKeys":["definitions","val definitions: Set<Pair<String, NODE>>","org.http4k.contract.jsonschema.JsonSchema.definitions"]},{"name":"val empty: FieldMetadata","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.Companion.empty","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/-companion/empty.html","searchKeys":["empty","val empty: FieldMetadata","org.http4k.contract.jsonschema.v3.FieldMetadata.Companion.empty"]},{"name":"val extra: Map<String, Any?>","description":"org.http4k.contract.jsonschema.v3.FieldMetadata.extra","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-metadata/extra.html","searchKeys":["extra","val extra: Map<String, Any?>","org.http4k.contract.jsonschema.v3.FieldMetadata.extra"]},{"name":"val isNullable: Boolean","description":"org.http4k.contract.jsonschema.v3.Field.isNullable","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field/is-nullable.html","searchKeys":["isNullable","val isNullable: Boolean","org.http4k.contract.jsonschema.v3.Field.isNullable"]},{"name":"val keyAsString: Any","description":"org.http4k.contract.jsonschema.v3.MapKey.keyAsString","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-map-key/key-as-string.html","searchKeys":["keyAsString","val keyAsString: Any","org.http4k.contract.jsonschema.v3.MapKey.keyAsString"]},{"name":"val metadata: FieldMetadata","description":"org.http4k.contract.jsonschema.v3.Field.metadata","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field/metadata.html","searchKeys":["metadata","val metadata: FieldMetadata","org.http4k.contract.jsonschema.v3.Field.metadata"]},{"name":"val name: String","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.name","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/-datum/name.html","searchKeys":["name","val name: String","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.name"]},{"name":"val node: NODE","description":"org.http4k.contract.jsonschema.JsonSchema.node","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema/-json-schema/node.html","searchKeys":["node","val node: NODE","org.http4k.contract.jsonschema.JsonSchema.node"]},{"name":"val value: Any","description":"org.http4k.contract.jsonschema.v3.Field.value","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field/value.html","searchKeys":["value","val value: Any","org.http4k.contract.jsonschema.v3.Field.value"]},{"name":"val value: Any","description":"org.http4k.contract.jsonschema.v3.FieldHolder.value","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-field-holder/value.html","searchKeys":["value","val value: Any","org.http4k.contract.jsonschema.v3.FieldHolder.value"]},{"name":"val value: T","description":"org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.value","location":"http4k-contract-jsonschema/org.http4k.contract.jsonschema.v3/-data4k-json-schema-meta/-datum/value.html","searchKeys":["value","val value: T","org.http4k.contract.jsonschema.v3.Data4kJsonSchemaMeta.Datum.value"]},{"name":"AfterBegin","description":"org.http4k.webdriver.HtmxSwap.AfterBegin","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-after-begin/index.html","searchKeys":["AfterBegin","AfterBegin","org.http4k.webdriver.HtmxSwap.AfterBegin"]},{"name":"AfterEnd","description":"org.http4k.webdriver.HtmxSwap.AfterEnd","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-after-end/index.html","searchKeys":["AfterEnd","AfterEnd","org.http4k.webdriver.HtmxSwap.AfterEnd"]},{"name":"BeforeBegin","description":"org.http4k.webdriver.HtmxSwap.BeforeBegin","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-before-begin/index.html","searchKeys":["BeforeBegin","BeforeBegin","org.http4k.webdriver.HtmxSwap.BeforeBegin"]},{"name":"BeforeEnd","description":"org.http4k.webdriver.HtmxSwap.BeforeEnd","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-before-end/index.html","searchKeys":["BeforeEnd","BeforeEnd","org.http4k.webdriver.HtmxSwap.BeforeEnd"]},{"name":"Delete","description":"org.http4k.webdriver.HtmxSwap.Delete","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-delete/index.html","searchKeys":["Delete","Delete","org.http4k.webdriver.HtmxSwap.Delete"]},{"name":"InnerHtml","description":"org.http4k.webdriver.HtmxSwap.InnerHtml","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-inner-html/index.html","searchKeys":["InnerHtml","InnerHtml","org.http4k.webdriver.HtmxSwap.InnerHtml"]},{"name":"None","description":"org.http4k.webdriver.HtmxSwap.None","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-none/index.html","searchKeys":["None","None","org.http4k.webdriver.HtmxSwap.None"]},{"name":"OuterHtml","description":"org.http4k.webdriver.HtmxSwap.OuterHtml","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-outer-html/index.html","searchKeys":["OuterHtml","OuterHtml","org.http4k.webdriver.HtmxSwap.OuterHtml"]},{"name":"abstract class HasLens<T : Any>(autoMarshalling: AutoMarshalling, clazz: KClass<T>, metadata: Map<String, Any> = emptyMap())","description":"org.http4k.lens.HasLens","location":"http4k-incubator/org.http4k.lens/-has-lens/index.html","searchKeys":["HasLens","abstract class HasLens<T : Any>(autoMarshalling: AutoMarshalling, clazz: KClass<T>, metadata: Map<String, Any> = emptyMap())","org.http4k.lens.HasLens"]},{"name":"abstract class TypedHttpMessage","description":"org.http4k.lens.TypedHttpMessage","location":"http4k-incubator/org.http4k.lens/-typed-http-message/index.html","searchKeys":["TypedHttpMessage","abstract class TypedHttpMessage","org.http4k.lens.TypedHttpMessage"]},{"name":"abstract class TypedRequest(request: Request) : TypedHttpMessage, RequestWithRoute","description":"org.http4k.lens.TypedRequest","location":"http4k-incubator/org.http4k.lens/-typed-request/index.html","searchKeys":["TypedRequest","abstract class TypedRequest(request: Request) : TypedHttpMessage, RequestWithRoute","org.http4k.lens.TypedRequest"]},{"name":"abstract class TypedResponse(response: Response) : TypedHttpMessage, Response","description":"org.http4k.lens.TypedResponse","location":"http4k-incubator/org.http4k.lens/-typed-response/index.html","searchKeys":["TypedResponse","abstract class TypedResponse(response: Response) : TypedHttpMessage, Response","org.http4k.lens.TypedResponse"]},{"name":"abstract fun match(path: String): HttpHandler?","description":"org.http4k.routing.experimental.ResourceLoading.match","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loading/match.html","searchKeys":["match","abstract fun match(path: String): HttpHandler?","org.http4k.routing.experimental.ResourceLoading.match"]},{"name":"abstract fun openStream(): InputStream","description":"org.http4k.routing.experimental.Resource.openStream","location":"http4k-incubator/org.http4k.routing.experimental/-resource/open-stream.html","searchKeys":["openStream","abstract fun openStream(): InputStream","org.http4k.routing.experimental.Resource.openStream"]},{"name":"abstract fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwapAction.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap-action/perform-swap.html","searchKeys":["performSwap","abstract fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwapAction.performSwap"]},{"name":"class Body<IN : HttpMessage, OUT : Any>(spec: BiDiBodyLensSpec<OUT>, val example: OUT?) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","description":"org.http4k.lens.TypedField.Body","location":"http4k-incubator/org.http4k.lens/-typed-field/-body/index.html","searchKeys":["Body","class Body<IN : HttpMessage, OUT : Any>(spec: BiDiBodyLensSpec<OUT>, val example: OUT?) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","org.http4k.lens.TypedField.Body"]},{"name":"class Defaulted<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>, default: (IN) -> OUT) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","description":"org.http4k.lens.TypedField.Defaulted","location":"http4k-incubator/org.http4k.lens/-typed-field/-defaulted/index.html","searchKeys":["Defaulted","class Defaulted<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>, default: (IN) -> OUT) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","org.http4k.lens.TypedField.Defaulted"]},{"name":"class HtmxHttp4kWebDriver(driver: Http4kWebDriver) : WebDriver","description":"org.http4k.webdriver.HtmxHttp4kWebDriver","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/index.html","searchKeys":["HtmxHttp4kWebDriver","class HtmxHttp4kWebDriver(driver: Http4kWebDriver) : WebDriver","org.http4k.webdriver.HtmxHttp4kWebDriver"]},{"name":"class InMemoryResource(content: ByteArray, val contentType: ContentType, val lastModified: Instant? = null, val etag: ETag? = null) : Resource","description":"org.http4k.routing.experimental.InMemoryResource","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/index.html","searchKeys":["InMemoryResource","class InMemoryResource(content: ByteArray, val contentType: ContentType, val lastModified: Instant? = null, val etag: ETag? = null) : Resource","org.http4k.routing.experimental.InMemoryResource"]},{"name":"class Optional<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>) : ReadWriteProperty<IN, OUT?> , TypedField<IN, OUT> ","description":"org.http4k.lens.TypedField.Optional","location":"http4k-incubator/org.http4k.lens/-typed-field/-optional/index.html","searchKeys":["Optional","class Optional<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>) : ReadWriteProperty<IN, OUT?> , TypedField<IN, OUT> ","org.http4k.lens.TypedField.Optional"]},{"name":"class Path<OUT : Any>(spec: PathLensSpec<OUT>) : ReadOnlyProperty<Request, OUT> , TypedField<Request, OUT> ","description":"org.http4k.lens.TypedField.Path","location":"http4k-incubator/org.http4k.lens/-typed-field/-path/index.html","searchKeys":["Path","class Path<OUT : Any>(spec: PathLensSpec<OUT>) : ReadOnlyProperty<Request, OUT> , TypedField<Request, OUT> ","org.http4k.lens.TypedField.Path"]},{"name":"class Required<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","description":"org.http4k.lens.TypedField.Required","location":"http4k-incubator/org.http4k.lens/-typed-field/-required/index.html","searchKeys":["Required","class Required<IN : HttpMessage, OUT : Any>(spec: BiDiLensBuilder<IN, OUT>) : ReadWriteProperty<IN, OUT> , TypedField<IN, OUT> ","org.http4k.lens.TypedField.Required"]},{"name":"class ResourceListingHandler(dir: ResourceSummary, contents: Iterable<ResourceSummary>, renderer: DirectoryRenderer) : Function1<request: Request, Response> ","description":"org.http4k.routing.experimental.ResourceListingHandler","location":"http4k-incubator/org.http4k.routing.experimental/-resource-listing-handler/index.html","searchKeys":["ResourceListingHandler","class ResourceListingHandler(dir: ResourceSummary, contents: Iterable<ResourceSummary>, renderer: DirectoryRenderer) : Function1<request: Request, Response> ","org.http4k.routing.experimental.ResourceListingHandler"]},{"name":"constructor()","description":"org.http4k.lens.TypedHttpMessage.TypedHttpMessage","location":"http4k-incubator/org.http4k.lens/-typed-http-message/-typed-http-message.html","searchKeys":["TypedHttpMessage","constructor()","org.http4k.lens.TypedHttpMessage.TypedHttpMessage"]},{"name":"constructor(autoMarshalling: AutoMarshalling, clazz: KClass<T>, metadata: Map<String, Any> = emptyMap())","description":"org.http4k.lens.HasLens.HasLens","location":"http4k-incubator/org.http4k.lens/-has-lens/-has-lens.html","searchKeys":["HasLens","constructor(autoMarshalling: AutoMarshalling, clazz: KClass<T>, metadata: Map<String, Any> = emptyMap())","org.http4k.lens.HasLens.HasLens"]},{"name":"constructor(content: ByteArray, contentType: ContentType, lastModified: Instant? = null, etag: ETag? = null)","description":"org.http4k.routing.experimental.InMemoryResource.InMemoryResource","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/-in-memory-resource.html","searchKeys":["InMemoryResource","constructor(content: ByteArray, contentType: ContentType, lastModified: Instant? = null, etag: ETag? = null)","org.http4k.routing.experimental.InMemoryResource.InMemoryResource"]},{"name":"constructor(content: String, contentType: ContentType, lastModified: Instant? = null, etag: ETag? = null)","description":"org.http4k.routing.experimental.InMemoryResource.InMemoryResource","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/-in-memory-resource.html","searchKeys":["InMemoryResource","constructor(content: String, contentType: ContentType, lastModified: Instant? = null, etag: ETag? = null)","org.http4k.routing.experimental.InMemoryResource.InMemoryResource"]},{"name":"constructor(delegate: JSoupWebElement, handler: HttpHandler)","description":"org.http4k.webdriver.HtmxJsoupWebElement.HtmxJsoupWebElement","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/-htmx-jsoup-web-element.html","searchKeys":["HtmxJsoupWebElement","constructor(delegate: JSoupWebElement, handler: HttpHandler)","org.http4k.webdriver.HtmxJsoupWebElement.HtmxJsoupWebElement"]},{"name":"constructor(dir: ResourceSummary, contents: Iterable<ResourceSummary>, renderer: DirectoryRenderer)","description":"org.http4k.routing.experimental.ResourceListingHandler.ResourceListingHandler","location":"http4k-incubator/org.http4k.routing.experimental/-resource-listing-handler/-resource-listing-handler.html","searchKeys":["ResourceListingHandler","constructor(dir: ResourceSummary, contents: Iterable<ResourceSummary>, renderer: DirectoryRenderer)","org.http4k.routing.experimental.ResourceListingHandler.ResourceListingHandler"]},{"name":"constructor(driver: Http4kWebDriver)","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.HtmxHttp4kWebDriver","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/-htmx-http4k-web-driver.html","searchKeys":["HtmxHttp4kWebDriver","constructor(driver: Http4kWebDriver)","org.http4k.webdriver.HtmxHttp4kWebDriver.HtmxHttp4kWebDriver"]},{"name":"constructor(meta: Meta)","description":"org.http4k.lens.RouteParam.NonBody.NonBody","location":"http4k-incubator/org.http4k.lens/-route-param/-non-body/-non-body.html","searchKeys":["NonBody","constructor(meta: Meta)","org.http4k.lens.RouteParam.NonBody.NonBody"]},{"name":"constructor(meta: Meta, example: OUT?)","description":"org.http4k.lens.RouteParam.Body.Body","location":"http4k-incubator/org.http4k.lens/-route-param/-body/-body.html","searchKeys":["Body","constructor(meta: Meta, example: OUT?)","org.http4k.lens.RouteParam.Body.Body"]},{"name":"constructor(method: Method, uri: String, target: Element, swap: HtmxSwap)","description":"org.http4k.webdriver.HtmxCommand.HtmxCommand","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/-htmx-command.html","searchKeys":["HtmxCommand","constructor(method: Method, uri: String, target: Element, swap: HtmxSwap)","org.http4k.webdriver.HtmxCommand.HtmxCommand"]},{"name":"constructor(name: String, lastModified: Instant? = null)","description":"org.http4k.routing.experimental.ResourceSummary.ResourceSummary","location":"http4k-incubator/org.http4k.routing.experimental/-resource-summary/-resource-summary.html","searchKeys":["ResourceSummary","constructor(name: String, lastModified: Instant? = null)","org.http4k.routing.experimental.ResourceSummary.ResourceSummary"]},{"name":"constructor(request: Request)","description":"org.http4k.lens.TypedRequest.TypedRequest","location":"http4k-incubator/org.http4k.lens/-typed-request/-typed-request.html","searchKeys":["TypedRequest","constructor(request: Request)","org.http4k.lens.TypedRequest.TypedRequest"]},{"name":"constructor(response: Response)","description":"org.http4k.lens.TypedResponse.TypedResponse","location":"http4k-incubator/org.http4k.lens/-typed-response/-typed-response.html","searchKeys":["TypedResponse","constructor(response: Response)","org.http4k.lens.TypedResponse.TypedResponse"]},{"name":"constructor(spec: BiDiBodyLensSpec<OUT>, example: OUT?)","description":"org.http4k.lens.TypedField.Body.Body","location":"http4k-incubator/org.http4k.lens/-typed-field/-body/-body.html","searchKeys":["Body","constructor(spec: BiDiBodyLensSpec<OUT>, example: OUT?)","org.http4k.lens.TypedField.Body.Body"]},{"name":"constructor(spec: BiDiLensBuilder<IN, OUT>)","description":"org.http4k.lens.TypedField.Optional.Optional","location":"http4k-incubator/org.http4k.lens/-typed-field/-optional/-optional.html","searchKeys":["Optional","constructor(spec: BiDiLensBuilder<IN, OUT>)","org.http4k.lens.TypedField.Optional.Optional"]},{"name":"constructor(spec: BiDiLensBuilder<IN, OUT>)","description":"org.http4k.lens.TypedField.Required.Required","location":"http4k-incubator/org.http4k.lens/-typed-field/-required/-required.html","searchKeys":["Required","constructor(spec: BiDiLensBuilder<IN, OUT>)","org.http4k.lens.TypedField.Required.Required"]},{"name":"constructor(spec: BiDiLensBuilder<IN, OUT>, default: (IN) -> OUT)","description":"org.http4k.lens.TypedField.Defaulted.Defaulted","location":"http4k-incubator/org.http4k.lens/-typed-field/-defaulted/-defaulted.html","searchKeys":["Defaulted","constructor(spec: BiDiLensBuilder<IN, OUT>, default: (IN) -> OUT)","org.http4k.lens.TypedField.Defaulted.Defaulted"]},{"name":"constructor(spec: PathLensSpec<OUT>)","description":"org.http4k.lens.TypedField.Path.Path","location":"http4k-incubator/org.http4k.lens/-typed-field/-path/-path.html","searchKeys":["Path","constructor(spec: PathLensSpec<OUT>)","org.http4k.lens.TypedField.Path.Path"]},{"name":"constructor(url: URL, contentType: ContentType, lastModified: Instant? = null)","description":"org.http4k.routing.experimental.URLResource.URLResource","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/-u-r-l-resource.html","searchKeys":["URLResource","constructor(url: URL, contentType: ContentType, lastModified: Instant? = null)","org.http4k.routing.experimental.URLResource.URLResource"]},{"name":"data class Body<OUT>(val meta: Meta, val example: OUT?)","description":"org.http4k.lens.RouteParam.Body","location":"http4k-incubator/org.http4k.lens/-route-param/-body/index.html","searchKeys":["Body","data class Body<OUT>(val meta: Meta, val example: OUT?)","org.http4k.lens.RouteParam.Body"]},{"name":"data class HtmxCommand(val method: Method, val uri: String, val target: Element, val swap: HtmxSwap)","description":"org.http4k.webdriver.HtmxCommand","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/index.html","searchKeys":["HtmxCommand","data class HtmxCommand(val method: Method, val uri: String, val target: Element, val swap: HtmxSwap)","org.http4k.webdriver.HtmxCommand"]},{"name":"data class HtmxJsoupWebElement(val delegate: JSoupWebElement, val handler: HttpHandler) : WebElement","description":"org.http4k.webdriver.HtmxJsoupWebElement","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/index.html","searchKeys":["HtmxJsoupWebElement","data class HtmxJsoupWebElement(val delegate: JSoupWebElement, val handler: HttpHandler) : WebElement","org.http4k.webdriver.HtmxJsoupWebElement"]},{"name":"data class NonBody(val meta: Meta)","description":"org.http4k.lens.RouteParam.NonBody","location":"http4k-incubator/org.http4k.lens/-route-param/-non-body/index.html","searchKeys":["NonBody","data class NonBody(val meta: Meta)","org.http4k.lens.RouteParam.NonBody"]},{"name":"data class ResourceSummary(val name: String, val lastModified: Instant? = null)","description":"org.http4k.routing.experimental.ResourceSummary","location":"http4k-incubator/org.http4k.routing.experimental/-resource-summary/index.html","searchKeys":["ResourceSummary","data class ResourceSummary(val name: String, val lastModified: Instant? = null)","org.http4k.routing.experimental.ResourceSummary"]},{"name":"data class URLResource(val url: URL, val contentType: ContentType, val lastModified: Instant? = null) : Resource","description":"org.http4k.routing.experimental.URLResource","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/index.html","searchKeys":["URLResource","data class URLResource(val url: URL, val contentType: ContentType, val lastModified: Instant? = null) : Resource","org.http4k.routing.experimental.URLResource"]},{"name":"enum HtmxSwap : Enum<HtmxSwap> , HtmxSwapAction","description":"org.http4k.webdriver.HtmxSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/index.html","searchKeys":["HtmxSwap","enum HtmxSwap : Enum<HtmxSwap> , HtmxSwapAction","org.http4k.webdriver.HtmxSwap"]},{"name":"fun <IN : TypedHttpMessage> KClass<IN>.routeParams(): List<Any>","description":"org.http4k.lens.routeParams","location":"http4k-incubator/org.http4k.lens/route-params.html","searchKeys":["routeParams","fun <IN : TypedHttpMessage> KClass<IN>.routeParams(): List<Any>","org.http4k.lens.routeParams"]},{"name":"fun Directory(baseDir: String, mimeTypes: MimeTypes = MimeTypes()): Router","description":"org.http4k.routing.experimental.ResourceLoaders.Directory","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loaders/-directory.html","searchKeys":["Directory","fun Directory(baseDir: String, mimeTypes: MimeTypes = MimeTypes()): Router","org.http4k.routing.experimental.ResourceLoaders.Directory"]},{"name":"fun Http4kWebDriver.withHtmx(): HtmxHttp4kWebDriver","description":"org.http4k.webdriver.withHtmx","location":"http4k-incubator/org.http4k.webdriver/with-htmx.html","searchKeys":["withHtmx","fun Http4kWebDriver.withHtmx(): HtmxHttp4kWebDriver","org.http4k.webdriver.withHtmx"]},{"name":"fun ListingDirectory(baseDir: String, mimeTypes: MimeTypes = MimeTypes(), directoryRenderer: DirectoryRenderer = ::simpleDirectoryRenderer): Router","description":"org.http4k.routing.experimental.ResourceLoaders.ListingDirectory","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loaders/-listing-directory.html","searchKeys":["ListingDirectory","fun ListingDirectory(baseDir: String, mimeTypes: MimeTypes = MimeTypes(), directoryRenderer: DirectoryRenderer = ::simpleDirectoryRenderer): Router","org.http4k.routing.experimental.ResourceLoaders.ListingDirectory"]},{"name":"fun from(element: HtmxJsoupWebElement): HtmxCommand?","description":"org.http4k.webdriver.HtmxCommand.Companion.from","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/-companion/from.html","searchKeys":["from","fun from(element: HtmxJsoupWebElement): HtmxCommand?","org.http4k.webdriver.HtmxCommand.Companion.from"]},{"name":"fun performOn(element: HtmxJsoupWebElement)","description":"org.http4k.webdriver.HtmxCommand.performOn","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/perform-on.html","searchKeys":["performOn","fun performOn(element: HtmxJsoupWebElement)","org.http4k.webdriver.HtmxCommand.performOn"]},{"name":"fun simpleDirectoryRenderer(uri: Uri, dir: ResourceSummary, resources: Iterable<ResourceSummary>): String","description":"org.http4k.routing.experimental.simpleDirectoryRenderer","location":"http4k-incubator/org.http4k.routing.experimental/simple-directory-renderer.html","searchKeys":["simpleDirectoryRenderer","fun simpleDirectoryRenderer(uri: Uri, dir: ResourceSummary, resources: Iterable<ResourceSummary>): String","org.http4k.routing.experimental.simpleDirectoryRenderer"]},{"name":"fun static(resourceLoader: Router): RoutingHttpHandler","description":"org.http4k.routing.experimental.static","location":"http4k-incubator/org.http4k.routing.experimental/static.html","searchKeys":["static","fun static(resourceLoader: Router): RoutingHttpHandler","org.http4k.routing.experimental.static"]},{"name":"fun valueOf(value: String): HtmxSwap","description":"org.http4k.webdriver.HtmxSwap.valueOf","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HtmxSwap","org.http4k.webdriver.HtmxSwap.valueOf"]},{"name":"fun values(): Array<HtmxSwap>","description":"org.http4k.webdriver.HtmxSwap.values","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/values.html","searchKeys":["values","fun values(): Array<HtmxSwap>","org.http4k.webdriver.HtmxSwap.values"]},{"name":"interface HtmxSwapAction","description":"org.http4k.webdriver.HtmxSwapAction","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap-action/index.html","searchKeys":["HtmxSwapAction","interface HtmxSwapAction","org.http4k.webdriver.HtmxSwapAction"]},{"name":"interface Resource : Function1<request: Request, Response> ","description":"org.http4k.routing.experimental.Resource","location":"http4k-incubator/org.http4k.routing.experimental/-resource/index.html","searchKeys":["Resource","interface Resource : Function1<request: Request, Response> ","org.http4k.routing.experimental.Resource"]},{"name":"interface ResourceLoading : Router","description":"org.http4k.routing.experimental.ResourceLoading","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loading/index.html","searchKeys":["ResourceLoading","interface ResourceLoading : Router","org.http4k.routing.experimental.ResourceLoading"]},{"name":"object Classpath","description":"org.http4k.routing.experimental.ResourceLoaders.Classpath","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loaders/-classpath/index.html","searchKeys":["Classpath","object Classpath","org.http4k.routing.experimental.ResourceLoaders.Classpath"]},{"name":"object Companion","description":"org.http4k.lens.HasLens.Companion","location":"http4k-incubator/org.http4k.lens/-has-lens/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.lens.HasLens.Companion"]},{"name":"object Companion","description":"org.http4k.webdriver.HtmxCommand.Companion","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.webdriver.HtmxCommand.Companion"]},{"name":"object ResourceLoaders","description":"org.http4k.routing.experimental.ResourceLoaders","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loaders/index.html","searchKeys":["ResourceLoaders","object ResourceLoaders","org.http4k.routing.experimental.ResourceLoaders"]},{"name":"open fun isModifiedSince(instant: Instant): Boolean","description":"org.http4k.routing.experimental.Resource.isModifiedSince","location":"http4k-incubator/org.http4k.routing.experimental/-resource/is-modified-since.html","searchKeys":["isModifiedSince","open fun isModifiedSince(instant: Instant): Boolean","org.http4k.routing.experimental.Resource.isModifiedSince"]},{"name":"open operator override fun get(url: String)","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.get","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get.html","searchKeys":["get","open operator override fun get(url: String)","org.http4k.webdriver.HtmxHttp4kWebDriver.get"]},{"name":"open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","description":"org.http4k.lens.TypedField.Body.getValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-body/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","org.http4k.lens.TypedField.Body.getValue"]},{"name":"open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","description":"org.http4k.lens.TypedField.Defaulted.getValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-defaulted/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","org.http4k.lens.TypedField.Defaulted.getValue"]},{"name":"open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","description":"org.http4k.lens.TypedField.Required.getValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-required/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT","org.http4k.lens.TypedField.Required.getValue"]},{"name":"open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT?","description":"org.http4k.lens.TypedField.Optional.getValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-optional/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: IN, property: KProperty<*>): OUT?","org.http4k.lens.TypedField.Optional.getValue"]},{"name":"open operator override fun getValue(thisRef: Request, property: KProperty<*>): OUT","description":"org.http4k.lens.TypedField.Path.getValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-path/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Request, property: KProperty<*>): OUT","org.http4k.lens.TypedField.Path.getValue"]},{"name":"open operator override fun invoke(request: Request): MemoryResponse","description":"org.http4k.routing.experimental.Resource.invoke","location":"http4k-incubator/org.http4k.routing.experimental/-resource/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): MemoryResponse","org.http4k.routing.experimental.Resource.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.routing.experimental.ResourceListingHandler.invoke","location":"http4k-incubator/org.http4k.routing.experimental/-resource-listing-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.routing.experimental.ResourceListingHandler.invoke"]},{"name":"open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","description":"org.http4k.lens.TypedField.Body.setValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-body/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","org.http4k.lens.TypedField.Body.setValue"]},{"name":"open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","description":"org.http4k.lens.TypedField.Defaulted.setValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-defaulted/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","org.http4k.lens.TypedField.Defaulted.setValue"]},{"name":"open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","description":"org.http4k.lens.TypedField.Required.setValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-required/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT)","org.http4k.lens.TypedField.Required.setValue"]},{"name":"open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT?)","description":"org.http4k.lens.TypedField.Optional.setValue","location":"http4k-incubator/org.http4k.lens/-typed-field/-optional/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: IN, property: KProperty<*>, value: OUT?)","org.http4k.lens.TypedField.Optional.setValue"]},{"name":"open override fun <X> getScreenshotAs(target: OutputType<X>?): X","description":"org.http4k.webdriver.HtmxJsoupWebElement.getScreenshotAs","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-screenshot-as.html","searchKeys":["getScreenshotAs","open override fun <X> getScreenshotAs(target: OutputType<X>?): X","org.http4k.webdriver.HtmxJsoupWebElement.getScreenshotAs"]},{"name":"open override fun clear()","description":"org.http4k.webdriver.HtmxJsoupWebElement.clear","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/clear.html","searchKeys":["clear","open override fun clear()","org.http4k.webdriver.HtmxJsoupWebElement.clear"]},{"name":"open override fun click()","description":"org.http4k.webdriver.HtmxJsoupWebElement.click","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/click.html","searchKeys":["click","open override fun click()","org.http4k.webdriver.HtmxJsoupWebElement.click"]},{"name":"open override fun close()","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.close","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/close.html","searchKeys":["close","open override fun close()","org.http4k.webdriver.HtmxHttp4kWebDriver.close"]},{"name":"open override fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.findElement","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/find-element.html","searchKeys":["findElement","open override fun findElement(by: By): WebElement?","org.http4k.webdriver.HtmxHttp4kWebDriver.findElement"]},{"name":"open override fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.HtmxJsoupWebElement.findElement","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/find-element.html","searchKeys":["findElement","open override fun findElement(by: By): WebElement?","org.http4k.webdriver.HtmxJsoupWebElement.findElement"]},{"name":"open override fun findElements(by: By): List<WebElement>","description":"org.http4k.webdriver.HtmxJsoupWebElement.findElements","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/find-elements.html","searchKeys":["findElements","open override fun findElements(by: By): List<WebElement>","org.http4k.webdriver.HtmxJsoupWebElement.findElements"]},{"name":"open override fun findElements(by: By): List<WebElement>?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.findElements","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/find-elements.html","searchKeys":["findElements","open override fun findElements(by: By): List<WebElement>?","org.http4k.webdriver.HtmxHttp4kWebDriver.findElements"]},{"name":"open override fun getAttribute(name: String): String?","description":"org.http4k.webdriver.HtmxJsoupWebElement.getAttribute","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-attribute.html","searchKeys":["getAttribute","open override fun getAttribute(name: String): String?","org.http4k.webdriver.HtmxJsoupWebElement.getAttribute"]},{"name":"open override fun getCssValue(propertyName: String): String","description":"org.http4k.webdriver.HtmxJsoupWebElement.getCssValue","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-css-value.html","searchKeys":["getCssValue","open override fun getCssValue(propertyName: String): String","org.http4k.webdriver.HtmxJsoupWebElement.getCssValue"]},{"name":"open override fun getCurrentUrl(): String?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.getCurrentUrl","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get-current-url.html","searchKeys":["getCurrentUrl","open override fun getCurrentUrl(): String?","org.http4k.webdriver.HtmxHttp4kWebDriver.getCurrentUrl"]},{"name":"open override fun getLocation(): Point","description":"org.http4k.webdriver.HtmxJsoupWebElement.getLocation","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-location.html","searchKeys":["getLocation","open override fun getLocation(): Point","org.http4k.webdriver.HtmxJsoupWebElement.getLocation"]},{"name":"open override fun getPageSource(): String?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.getPageSource","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get-page-source.html","searchKeys":["getPageSource","open override fun getPageSource(): String?","org.http4k.webdriver.HtmxHttp4kWebDriver.getPageSource"]},{"name":"open override fun getRect(): Rectangle","description":"org.http4k.webdriver.HtmxJsoupWebElement.getRect","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-rect.html","searchKeys":["getRect","open override fun getRect(): Rectangle","org.http4k.webdriver.HtmxJsoupWebElement.getRect"]},{"name":"open override fun getSize(): Dimension","description":"org.http4k.webdriver.HtmxJsoupWebElement.getSize","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-size.html","searchKeys":["getSize","open override fun getSize(): Dimension","org.http4k.webdriver.HtmxJsoupWebElement.getSize"]},{"name":"open override fun getTagName(): String","description":"org.http4k.webdriver.HtmxJsoupWebElement.getTagName","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-tag-name.html","searchKeys":["getTagName","open override fun getTagName(): String","org.http4k.webdriver.HtmxJsoupWebElement.getTagName"]},{"name":"open override fun getText(): String","description":"org.http4k.webdriver.HtmxJsoupWebElement.getText","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/get-text.html","searchKeys":["getText","open override fun getText(): String","org.http4k.webdriver.HtmxJsoupWebElement.getText"]},{"name":"open override fun getTitle(): String?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.getTitle","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get-title.html","searchKeys":["getTitle","open override fun getTitle(): String?","org.http4k.webdriver.HtmxHttp4kWebDriver.getTitle"]},{"name":"open override fun getWindowHandle(): String?","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.getWindowHandle","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get-window-handle.html","searchKeys":["getWindowHandle","open override fun getWindowHandle(): String?","org.http4k.webdriver.HtmxHttp4kWebDriver.getWindowHandle"]},{"name":"open override fun getWindowHandles(): Set<String>","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.getWindowHandles","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/get-window-handles.html","searchKeys":["getWindowHandles","open override fun getWindowHandles(): Set<String>","org.http4k.webdriver.HtmxHttp4kWebDriver.getWindowHandles"]},{"name":"open override fun isDisplayed(): Boolean","description":"org.http4k.webdriver.HtmxJsoupWebElement.isDisplayed","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/is-displayed.html","searchKeys":["isDisplayed","open override fun isDisplayed(): Boolean","org.http4k.webdriver.HtmxJsoupWebElement.isDisplayed"]},{"name":"open override fun isEnabled(): Boolean","description":"org.http4k.webdriver.HtmxJsoupWebElement.isEnabled","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","org.http4k.webdriver.HtmxJsoupWebElement.isEnabled"]},{"name":"open override fun isSelected(): Boolean","description":"org.http4k.webdriver.HtmxJsoupWebElement.isSelected","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/is-selected.html","searchKeys":["isSelected","open override fun isSelected(): Boolean","org.http4k.webdriver.HtmxJsoupWebElement.isSelected"]},{"name":"open override fun manage(): WebDriver.Options","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.manage","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/manage.html","searchKeys":["manage","open override fun manage(): WebDriver.Options","org.http4k.webdriver.HtmxHttp4kWebDriver.manage"]},{"name":"open override fun match(request: Request): RouterMatch","description":"org.http4k.routing.experimental.ResourceLoading.match","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loading/match.html","searchKeys":["match","open override fun match(request: Request): RouterMatch","org.http4k.routing.experimental.ResourceLoading.match"]},{"name":"open override fun navigate(): WebDriver.Navigation","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.navigate","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/navigate.html","searchKeys":["navigate","open override fun navigate(): WebDriver.Navigation","org.http4k.webdriver.HtmxHttp4kWebDriver.navigate"]},{"name":"open override fun openStream(): ByteArrayInputStream","description":"org.http4k.routing.experimental.InMemoryResource.openStream","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): ByteArrayInputStream","org.http4k.routing.experimental.InMemoryResource.openStream"]},{"name":"open override fun openStream(): InputStream","description":"org.http4k.routing.experimental.URLResource.openStream","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/open-stream.html","searchKeys":["openStream","open override fun openStream(): InputStream","org.http4k.routing.experimental.URLResource.openStream"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.AfterBegin.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-after-begin/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.AfterBegin.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.AfterEnd.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-after-end/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.AfterEnd.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.BeforeBegin.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-before-begin/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.BeforeBegin.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.BeforeEnd.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-before-end/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.BeforeEnd.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.Delete.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-delete/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.Delete.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.InnerHtml.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-inner-html/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.InnerHtml.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.None.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-none/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.None.performSwap"]},{"name":"open override fun performSwap(element: Element, newElements: List<Node>)","description":"org.http4k.webdriver.HtmxSwap.OuterHtml.performSwap","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/-outer-html/perform-swap.html","searchKeys":["performSwap","open override fun performSwap(element: Element, newElements: List<Node>)","org.http4k.webdriver.HtmxSwap.OuterHtml.performSwap"]},{"name":"open override fun quit()","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.quit","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/quit.html","searchKeys":["quit","open override fun quit()","org.http4k.webdriver.HtmxHttp4kWebDriver.quit"]},{"name":"open override fun sendKeys(vararg keysToSend: CharSequence)","description":"org.http4k.webdriver.HtmxJsoupWebElement.sendKeys","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/send-keys.html","searchKeys":["sendKeys","open override fun sendKeys(vararg keysToSend: CharSequence)","org.http4k.webdriver.HtmxJsoupWebElement.sendKeys"]},{"name":"open override fun submit()","description":"org.http4k.webdriver.HtmxJsoupWebElement.submit","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/submit.html","searchKeys":["submit","open override fun submit()","org.http4k.webdriver.HtmxJsoupWebElement.submit"]},{"name":"open override fun switchTo(): WebDriver.TargetLocator","description":"org.http4k.webdriver.HtmxHttp4kWebDriver.switchTo","location":"http4k-incubator/org.http4k.webdriver/-htmx-http4k-web-driver/switch-to.html","searchKeys":["switchTo","open override fun switchTo(): WebDriver.TargetLocator","org.http4k.webdriver.HtmxHttp4kWebDriver.switchTo"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.TypedRequest.toString","location":"http4k-incubator/org.http4k.lens/-typed-request/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.TypedRequest.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.TypedResponse.toString","location":"http4k-incubator/org.http4k.lens/-typed-response/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.TypedResponse.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.webdriver.HtmxJsoupWebElement.toString","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.webdriver.HtmxJsoupWebElement.toString"]},{"name":"open override val contentType: ContentType","description":"org.http4k.routing.experimental.InMemoryResource.contentType","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/content-type.html","searchKeys":["contentType","open override val contentType: ContentType","org.http4k.routing.experimental.InMemoryResource.contentType"]},{"name":"open override val contentType: ContentType","description":"org.http4k.routing.experimental.URLResource.contentType","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/content-type.html","searchKeys":["contentType","open override val contentType: ContentType","org.http4k.routing.experimental.URLResource.contentType"]},{"name":"open override val etag: ETag? = null","description":"org.http4k.routing.experimental.InMemoryResource.etag","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/etag.html","searchKeys":["etag","open override val etag: ETag? = null","org.http4k.routing.experimental.InMemoryResource.etag"]},{"name":"open override val lastModified: Instant? = null","description":"org.http4k.routing.experimental.InMemoryResource.lastModified","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/last-modified.html","searchKeys":["lastModified","open override val lastModified: Instant? = null","org.http4k.routing.experimental.InMemoryResource.lastModified"]},{"name":"open override val lastModified: Instant? = null","description":"org.http4k.routing.experimental.URLResource.lastModified","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/last-modified.html","searchKeys":["lastModified","open override val lastModified: Instant? = null","org.http4k.routing.experimental.URLResource.lastModified"]},{"name":"open override val length: Long?","description":"org.http4k.routing.experimental.InMemoryResource.length","location":"http4k-incubator/org.http4k.routing.experimental/-in-memory-resource/length.html","searchKeys":["length","open override val length: Long?","org.http4k.routing.experimental.InMemoryResource.length"]},{"name":"open val contentType: ContentType","description":"org.http4k.routing.experimental.Resource.contentType","location":"http4k-incubator/org.http4k.routing.experimental/-resource/content-type.html","searchKeys":["contentType","open val contentType: ContentType","org.http4k.routing.experimental.Resource.contentType"]},{"name":"open val etag: ETag?","description":"org.http4k.routing.experimental.Resource.etag","location":"http4k-incubator/org.http4k.routing.experimental/-resource/etag.html","searchKeys":["etag","open val etag: ETag?","org.http4k.routing.experimental.Resource.etag"]},{"name":"open val headers: Headers","description":"org.http4k.routing.experimental.Resource.headers","location":"http4k-incubator/org.http4k.routing.experimental/-resource/headers.html","searchKeys":["headers","open val headers: Headers","org.http4k.routing.experimental.Resource.headers"]},{"name":"open val lastModified: Instant?","description":"org.http4k.routing.experimental.Resource.lastModified","location":"http4k-incubator/org.http4k.routing.experimental/-resource/last-modified.html","searchKeys":["lastModified","open val lastModified: Instant?","org.http4k.routing.experimental.Resource.lastModified"]},{"name":"open val length: Long?","description":"org.http4k.routing.experimental.Resource.length","location":"http4k-incubator/org.http4k.routing.experimental/-resource/length.html","searchKeys":["length","open val length: Long?","org.http4k.routing.experimental.Resource.length"]},{"name":"operator fun invoke(basePackagePath: String = \"/\", mimeTypes: MimeTypes = MimeTypes(), constantLastModified: Instant? = Instant.now().truncatedTo(SECONDS), lastModifiedFinder: (path: String) -> Instant? = { constantLastModified }): Router","description":"org.http4k.routing.experimental.ResourceLoaders.Classpath.invoke","location":"http4k-incubator/org.http4k.routing.experimental/-resource-loaders/-classpath/invoke.html","searchKeys":["invoke","operator fun invoke(basePackagePath: String = \"/\", mimeTypes: MimeTypes = MimeTypes(), constantLastModified: Instant? = Instant.now().truncatedTo(SECONDS), lastModifiedFinder: (path: String) -> Instant? = { constantLastModified }): Router","org.http4k.routing.experimental.ResourceLoaders.Classpath.invoke"]},{"name":"sealed interface RouteParam","description":"org.http4k.lens.RouteParam","location":"http4k-incubator/org.http4k.lens/-route-param/index.html","searchKeys":["RouteParam","sealed interface RouteParam","org.http4k.lens.RouteParam"]},{"name":"sealed interface TypedField<IN : HttpMessage, OUT : Any>","description":"org.http4k.lens.TypedField","location":"http4k-incubator/org.http4k.lens/-typed-field/index.html","searchKeys":["TypedField","sealed interface TypedField<IN : HttpMessage, OUT : Any>","org.http4k.lens.TypedField"]},{"name":"typealias DirectoryRenderer = (uri: Uri, dir: ResourceSummary, resources: Iterable<ResourceSummary>) -> String","description":"org.http4k.routing.experimental.DirectoryRenderer","location":"http4k-incubator/org.http4k.routing.experimental/-directory-renderer/index.html","searchKeys":["DirectoryRenderer","typealias DirectoryRenderer = (uri: Uri, dir: ResourceSummary, resources: Iterable<ResourceSummary>) -> String","org.http4k.routing.experimental.DirectoryRenderer"]},{"name":"val delegate: JSoupWebElement","description":"org.http4k.webdriver.HtmxJsoupWebElement.delegate","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/delegate.html","searchKeys":["delegate","val delegate: JSoupWebElement","org.http4k.webdriver.HtmxJsoupWebElement.delegate"]},{"name":"val entries: EnumEntries<HtmxSwap>","description":"org.http4k.webdriver.HtmxSwap.entries","location":"http4k-incubator/org.http4k.webdriver/-htmx-swap/entries.html","searchKeys":["entries","val entries: EnumEntries<HtmxSwap>","org.http4k.webdriver.HtmxSwap.entries"]},{"name":"val example: OUT?","description":"org.http4k.lens.RouteParam.Body.example","location":"http4k-incubator/org.http4k.lens/-route-param/-body/example.html","searchKeys":["example","val example: OUT?","org.http4k.lens.RouteParam.Body.example"]},{"name":"val example: OUT?","description":"org.http4k.lens.TypedField.Body.example","location":"http4k-incubator/org.http4k.lens/-typed-field/-body/example.html","searchKeys":["example","val example: OUT?","org.http4k.lens.TypedField.Body.example"]},{"name":"val handler: HttpHandler","description":"org.http4k.webdriver.HtmxJsoupWebElement.handler","location":"http4k-incubator/org.http4k.webdriver/-htmx-jsoup-web-element/handler.html","searchKeys":["handler","val handler: HttpHandler","org.http4k.webdriver.HtmxJsoupWebElement.handler"]},{"name":"val lastModified: Instant? = null","description":"org.http4k.routing.experimental.ResourceSummary.lastModified","location":"http4k-incubator/org.http4k.routing.experimental/-resource-summary/last-modified.html","searchKeys":["lastModified","val lastModified: Instant? = null","org.http4k.routing.experimental.ResourceSummary.lastModified"]},{"name":"val lens: BiDiBodyLens<T>","description":"org.http4k.lens.HasLens.lens","location":"http4k-incubator/org.http4k.lens/-has-lens/lens.html","searchKeys":["lens","val lens: BiDiBodyLens<T>","org.http4k.lens.HasLens.lens"]},{"name":"val meta: Meta","description":"org.http4k.lens.RouteParam.Body.meta","location":"http4k-incubator/org.http4k.lens/-route-param/-body/meta.html","searchKeys":["meta","val meta: Meta","org.http4k.lens.RouteParam.Body.meta"]},{"name":"val meta: Meta","description":"org.http4k.lens.RouteParam.NonBody.meta","location":"http4k-incubator/org.http4k.lens/-route-param/-non-body/meta.html","searchKeys":["meta","val meta: Meta","org.http4k.lens.RouteParam.NonBody.meta"]},{"name":"val method: Method","description":"org.http4k.webdriver.HtmxCommand.method","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/method.html","searchKeys":["method","val method: Method","org.http4k.webdriver.HtmxCommand.method"]},{"name":"val name: String","description":"org.http4k.routing.experimental.ResourceSummary.name","location":"http4k-incubator/org.http4k.routing.experimental/-resource-summary/name.html","searchKeys":["name","val name: String","org.http4k.routing.experimental.ResourceSummary.name"]},{"name":"val swap: HtmxSwap","description":"org.http4k.webdriver.HtmxCommand.swap","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/swap.html","searchKeys":["swap","val swap: HtmxSwap","org.http4k.webdriver.HtmxCommand.swap"]},{"name":"val target: Element","description":"org.http4k.webdriver.HtmxCommand.target","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/target.html","searchKeys":["target","val target: Element","org.http4k.webdriver.HtmxCommand.target"]},{"name":"val uri: String","description":"org.http4k.webdriver.HtmxCommand.uri","location":"http4k-incubator/org.http4k.webdriver/-htmx-command/uri.html","searchKeys":["uri","val uri: String","org.http4k.webdriver.HtmxCommand.uri"]},{"name":"val url: URL","description":"org.http4k.routing.experimental.URLResource.url","location":"http4k-incubator/org.http4k.routing.experimental/-u-r-l-resource/url.html","searchKeys":["url","val url: URL","org.http4k.routing.experimental.URLResource.url"]},{"name":"abstract class PushAdaptingSse(val connectRequest: Request) : Sse","description":"org.http4k.sse.PushAdaptingSse","location":"http4k-realtime-core/org.http4k.sse/-push-adapting-sse/index.html","searchKeys":["PushAdaptingSse","abstract class PushAdaptingSse(val connectRequest: Request) : Sse","org.http4k.sse.PushAdaptingSse"]},{"name":"abstract class PushPullAdaptingWebSocket : Websocket","description":"org.http4k.websocket.PushPullAdaptingWebSocket","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/index.html","searchKeys":["PushPullAdaptingWebSocket","abstract class PushPullAdaptingWebSocket : Websocket","org.http4k.websocket.PushPullAdaptingWebSocket"]},{"name":"abstract fun close()","description":"org.http4k.sse.Sse.close","location":"http4k-realtime-core/org.http4k.sse/-sse/close.html","searchKeys":["close","abstract fun close()","org.http4k.sse.Sse.close"]},{"name":"abstract fun close()","description":"org.http4k.sse.SseClient.close","location":"http4k-realtime-core/org.http4k.sse/-sse-client/close.html","searchKeys":["close","abstract fun close()","org.http4k.sse.SseClient.close"]},{"name":"abstract fun close(status: WsStatus = NORMAL)","description":"org.http4k.websocket.Websocket.close","location":"http4k-realtime-core/org.http4k.websocket/-websocket/close.html","searchKeys":["close","abstract fun close(status: WsStatus = NORMAL)","org.http4k.websocket.Websocket.close"]},{"name":"abstract fun close(status: WsStatus = NORMAL)","description":"org.http4k.websocket.WsClient.close","location":"http4k-realtime-core/org.http4k.websocket/-ws-client/close.html","searchKeys":["close","abstract fun close(status: WsStatus = NORMAL)","org.http4k.websocket.WsClient.close"]},{"name":"abstract fun match(request: Request): SseRouterMatch","description":"org.http4k.routing.SseRouter.match","location":"http4k-realtime-core/org.http4k.routing/-sse-router/match.html","searchKeys":["match","abstract fun match(request: Request): SseRouterMatch","org.http4k.routing.SseRouter.match"]},{"name":"abstract fun match(request: Request): WsRouterMatch","description":"org.http4k.routing.WsRouter.match","location":"http4k-realtime-core/org.http4k.routing/-ws-router/match.html","searchKeys":["match","abstract fun match(request: Request): WsRouterMatch","org.http4k.routing.WsRouter.match"]},{"name":"abstract fun onClose(fn: () -> Unit)","description":"org.http4k.sse.Sse.onClose","location":"http4k-realtime-core/org.http4k.sse/-sse/on-close.html","searchKeys":["onClose","abstract fun onClose(fn: () -> Unit)","org.http4k.sse.Sse.onClose"]},{"name":"abstract fun onClose(fn: (WsStatus) -> Unit)","description":"org.http4k.websocket.Websocket.onClose","location":"http4k-realtime-core/org.http4k.websocket/-websocket/on-close.html","searchKeys":["onClose","abstract fun onClose(fn: (WsStatus) -> Unit)","org.http4k.websocket.Websocket.onClose"]},{"name":"abstract fun onError(fn: (Throwable) -> Unit)","description":"org.http4k.websocket.Websocket.onError","location":"http4k-realtime-core/org.http4k.websocket/-websocket/on-error.html","searchKeys":["onError","abstract fun onError(fn: (Throwable) -> Unit)","org.http4k.websocket.Websocket.onError"]},{"name":"abstract fun onMessage(fn: (WsMessage) -> Unit)","description":"org.http4k.websocket.Websocket.onMessage","location":"http4k-realtime-core/org.http4k.websocket/-websocket/on-message.html","searchKeys":["onMessage","abstract fun onMessage(fn: (WsMessage) -> Unit)","org.http4k.websocket.Websocket.onMessage"]},{"name":"abstract fun received(): Sequence<SseMessage>","description":"org.http4k.sse.SseClient.received","location":"http4k-realtime-core/org.http4k.sse/-sse-client/received.html","searchKeys":["received","abstract fun received(): Sequence<SseMessage>","org.http4k.sse.SseClient.received"]},{"name":"abstract fun received(): Sequence<WsMessage>","description":"org.http4k.websocket.WsClient.received","location":"http4k-realtime-core/org.http4k.websocket/-ws-client/received.html","searchKeys":["received","abstract fun received(): Sequence<WsMessage>","org.http4k.websocket.WsClient.received"]},{"name":"abstract fun send(message: SseMessage)","description":"org.http4k.sse.Sse.send","location":"http4k-realtime-core/org.http4k.sse/-sse/send.html","searchKeys":["send","abstract fun send(message: SseMessage)","org.http4k.sse.Sse.send"]},{"name":"abstract fun send(message: WsMessage)","description":"org.http4k.websocket.Websocket.send","location":"http4k-realtime-core/org.http4k.websocket/-websocket/send.html","searchKeys":["send","abstract fun send(message: WsMessage)","org.http4k.websocket.Websocket.send"]},{"name":"abstract fun send(message: WsMessage)","description":"org.http4k.websocket.WsClient.send","location":"http4k-realtime-core/org.http4k.websocket/-ws-client/send.html","searchKeys":["send","abstract fun send(message: WsMessage)","org.http4k.websocket.WsClient.send"]},{"name":"abstract fun toServer(http: HttpHandler? = null, ws: WsHandler? = null, sse: SseHandler? = null): Http4kServer","description":"org.http4k.server.PolyServerConfig.toServer","location":"http4k-realtime-core/org.http4k.server/-poly-server-config/to-server.html","searchKeys":["toServer","abstract fun toServer(http: HttpHandler? = null, ws: WsHandler? = null, sse: SseHandler? = null): Http4kServer","org.http4k.server.PolyServerConfig.toServer"]},{"name":"abstract fun withBasePath(new: String): SseRouter","description":"org.http4k.routing.SseRouter.withBasePath","location":"http4k-realtime-core/org.http4k.routing/-sse-router/with-base-path.html","searchKeys":["withBasePath","abstract fun withBasePath(new: String): SseRouter","org.http4k.routing.SseRouter.withBasePath"]},{"name":"abstract fun withBasePath(new: String): WsRouter","description":"org.http4k.routing.WsRouter.withBasePath","location":"http4k-realtime-core/org.http4k.routing/-ws-router/with-base-path.html","searchKeys":["withBasePath","abstract fun withBasePath(new: String): WsRouter","org.http4k.routing.WsRouter.withBasePath"]},{"name":"abstract fun withFilter(new: SseFilter): SseRouter","description":"org.http4k.routing.SseRouter.withFilter","location":"http4k-realtime-core/org.http4k.routing/-sse-router/with-filter.html","searchKeys":["withFilter","abstract fun withFilter(new: SseFilter): SseRouter","org.http4k.routing.SseRouter.withFilter"]},{"name":"abstract fun withFilter(new: WsFilter): WsRouter","description":"org.http4k.routing.WsRouter.withFilter","location":"http4k-realtime-core/org.http4k.routing/-ws-router/with-filter.html","searchKeys":["withFilter","abstract fun withFilter(new: WsFilter): WsRouter","org.http4k.routing.WsRouter.withFilter"]},{"name":"abstract override fun withBasePath(new: String): RoutingSseHandler","description":"org.http4k.routing.RoutingSseHandler.withBasePath","location":"http4k-realtime-core/org.http4k.routing/-routing-sse-handler/with-base-path.html","searchKeys":["withBasePath","abstract override fun withBasePath(new: String): RoutingSseHandler","org.http4k.routing.RoutingSseHandler.withBasePath"]},{"name":"abstract override fun withBasePath(new: String): RoutingWsHandler","description":"org.http4k.routing.RoutingWsHandler.withBasePath","location":"http4k-realtime-core/org.http4k.routing/-routing-ws-handler/with-base-path.html","searchKeys":["withBasePath","abstract override fun withBasePath(new: String): RoutingWsHandler","org.http4k.routing.RoutingWsHandler.withBasePath"]},{"name":"abstract override fun withFilter(new: SseFilter): RoutingSseHandler","description":"org.http4k.routing.RoutingSseHandler.withFilter","location":"http4k-realtime-core/org.http4k.routing/-routing-sse-handler/with-filter.html","searchKeys":["withFilter","abstract override fun withFilter(new: SseFilter): RoutingSseHandler","org.http4k.routing.RoutingSseHandler.withFilter"]},{"name":"abstract override fun withFilter(new: WsFilter): RoutingWsHandler","description":"org.http4k.routing.RoutingWsHandler.withFilter","location":"http4k-realtime-core/org.http4k.routing/-routing-ws-handler/with-filter.html","searchKeys":["withFilter","abstract override fun withFilter(new: WsFilter): RoutingWsHandler","org.http4k.routing.RoutingWsHandler.withFilter"]},{"name":"abstract val connectRequest: Request","description":"org.http4k.sse.Sse.connectRequest","location":"http4k-realtime-core/org.http4k.sse/-sse/connect-request.html","searchKeys":["connectRequest","abstract val connectRequest: Request","org.http4k.sse.Sse.connectRequest"]},{"name":"class BiDiWsMessageLens<FINAL>(get: (WsMessage) -> FINAL, setLens: (FINAL, WsMessage) -> WsMessage) : WsMessageLens<FINAL> ","description":"org.http4k.lens.BiDiWsMessageLens","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens/index.html","searchKeys":["BiDiWsMessageLens","class BiDiWsMessageLens<FINAL>(get: (WsMessage) -> FINAL, setLens: (FINAL, WsMessage) -> WsMessage) : WsMessageLens<FINAL> ","org.http4k.lens.BiDiWsMessageLens"]},{"name":"class PolyHandler constructor(val http: HttpHandler? = null, val ws: WsHandler? = null, val sse: SseHandler? = null)","description":"org.http4k.server.PolyHandler","location":"http4k-realtime-core/org.http4k.server/-poly-handler/index.html","searchKeys":["PolyHandler","class PolyHandler constructor(val http: HttpHandler? = null, val ws: WsHandler? = null, val sse: SseHandler? = null)","org.http4k.server.PolyHandler"]},{"name":"class TestSseClient : SseClient","description":"org.http4k.testing.TestSseClient","location":"http4k-realtime-core/org.http4k.testing/-test-sse-client/index.html","searchKeys":["TestSseClient","class TestSseClient : SseClient","org.http4k.testing.TestSseClient"]},{"name":"class TestWebsocket(response: WsResponse) : PushPullAdaptingWebSocket","description":"org.http4k.testing.TestWebsocket","location":"http4k-realtime-core/org.http4k.testing/-test-websocket/index.html","searchKeys":["TestWebsocket","class TestWebsocket(response: WsResponse) : PushPullAdaptingWebSocket","org.http4k.testing.TestWebsocket"]},{"name":"class TestWsClient : WsClient","description":"org.http4k.testing.TestWsClient","location":"http4k-realtime-core/org.http4k.testing/-test-ws-client/index.html","searchKeys":["TestWsClient","class TestWsClient : WsClient","org.http4k.testing.TestWsClient"]},{"name":"constructor()","description":"org.http4k.websocket.PushPullAdaptingWebSocket.PushPullAdaptingWebSocket","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/-push-pull-adapting-web-socket.html","searchKeys":["PushPullAdaptingWebSocket","constructor()","org.http4k.websocket.PushPullAdaptingWebSocket.PushPullAdaptingWebSocket"]},{"name":"constructor(backoff: Duration)","description":"org.http4k.sse.SseMessage.Retry.Retry","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-retry/-retry.html","searchKeys":["Retry","constructor(backoff: Duration)","org.http4k.sse.SseMessage.Retry.Retry"]},{"name":"constructor(body: Body)","description":"org.http4k.websocket.WsMessage.WsMessage","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/-ws-message.html","searchKeys":["WsMessage","constructor(body: Body)","org.http4k.websocket.WsMessage.WsMessage"]},{"name":"constructor(code: Int, description: String)","description":"org.http4k.websocket.WsStatus.WsStatus","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-ws-status.html","searchKeys":["WsStatus","constructor(code: Int, description: String)","org.http4k.websocket.WsStatus.WsStatus"]},{"name":"constructor(connectRequest: Request)","description":"org.http4k.sse.PushAdaptingSse.PushAdaptingSse","location":"http4k-realtime-core/org.http4k.sse/-push-adapting-sse/-push-adapting-sse.html","searchKeys":["PushAdaptingSse","constructor(connectRequest: Request)","org.http4k.sse.PushAdaptingSse.PushAdaptingSse"]},{"name":"constructor(consumer: SseConsumer)","description":"org.http4k.sse.SseResponse.SseResponse","location":"http4k-realtime-core/org.http4k.sse/-sse-response/-sse-response.html","searchKeys":["SseResponse","constructor(consumer: SseConsumer)","org.http4k.sse.SseResponse.SseResponse"]},{"name":"constructor(consumer: WsConsumer)","description":"org.http4k.websocket.WsResponse.WsResponse","location":"http4k-realtime-core/org.http4k.websocket/-ws-response/-ws-response.html","searchKeys":["WsResponse","constructor(consumer: WsConsumer)","org.http4k.websocket.WsResponse.WsResponse"]},{"name":"constructor(data: ByteArray)","description":"org.http4k.sse.SseMessage.Data.Data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-data/-data.html","searchKeys":["Data","constructor(data: ByteArray)","org.http4k.sse.SseMessage.Data.Data"]},{"name":"constructor(data: InputStream)","description":"org.http4k.sse.SseMessage.Data.Data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-data/-data.html","searchKeys":["Data","constructor(data: InputStream)","org.http4k.sse.SseMessage.Data.Data"]},{"name":"constructor(data: String)","description":"org.http4k.sse.SseMessage.Data.Data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-data/-data.html","searchKeys":["Data","constructor(data: String)","org.http4k.sse.SseMessage.Data.Data"]},{"name":"constructor(event: String, data: ByteArray, id: String? = null)","description":"org.http4k.sse.SseMessage.Event.Event","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/-event.html","searchKeys":["Event","constructor(event: String, data: ByteArray, id: String? = null)","org.http4k.sse.SseMessage.Event.Event"]},{"name":"constructor(event: String, data: InputStream, id: String? = null)","description":"org.http4k.sse.SseMessage.Event.Event","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/-event.html","searchKeys":["Event","constructor(event: String, data: InputStream, id: String? = null)","org.http4k.sse.SseMessage.Event.Event"]},{"name":"constructor(event: String, data: String, id: String? = null)","description":"org.http4k.sse.SseMessage.Event.Event","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/-event.html","searchKeys":["Event","constructor(event: String, data: String, id: String? = null)","org.http4k.sse.SseMessage.Event.Event"]},{"name":"constructor(get: (WsMessage) -> FINAL, setLens: (FINAL, WsMessage) -> WsMessage)","description":"org.http4k.lens.BiDiWsMessageLens.BiDiWsMessageLens","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens/-bi-di-ws-message-lens.html","searchKeys":["BiDiWsMessageLens","constructor(get: (WsMessage) -> FINAL, setLens: (FINAL, WsMessage) -> WsMessage)","org.http4k.lens.BiDiWsMessageLens.BiDiWsMessageLens"]},{"name":"constructor(get: LensGet<WsMessage, OUT>)","description":"org.http4k.lens.WsMessageLensSpec.WsMessageLensSpec","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens-spec/-ws-message-lens-spec.html","searchKeys":["WsMessageLensSpec","constructor(get: LensGet<WsMessage, OUT>)","org.http4k.lens.WsMessageLensSpec.WsMessageLensSpec"]},{"name":"constructor(get: LensGet<WsMessage, OUT>, set: LensSet<WsMessage, OUT>)","description":"org.http4k.lens.BiDiWsMessageLensSpec.BiDiWsMessageLensSpec","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens-spec/-bi-di-ws-message-lens-spec.html","searchKeys":["BiDiWsMessageLensSpec","constructor(get: LensGet<WsMessage, OUT>, set: LensSet<WsMessage, OUT>)","org.http4k.lens.BiDiWsMessageLensSpec.BiDiWsMessageLensSpec"]},{"name":"constructor(getLens: (WsMessage) -> FINAL)","description":"org.http4k.lens.WsMessageLens.WsMessageLens","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens/-ws-message-lens.html","searchKeys":["WsMessageLens","constructor(getLens: (WsMessage) -> FINAL)","org.http4k.lens.WsMessageLens.WsMessageLens"]},{"name":"constructor(handler: SseHandler)","description":"org.http4k.routing.SseRouterMatch.MatchingHandler.MatchingHandler","location":"http4k-realtime-core/org.http4k.routing/-sse-router-match/-matching-handler/-matching-handler.html","searchKeys":["MatchingHandler","constructor(handler: SseHandler)","org.http4k.routing.SseRouterMatch.MatchingHandler.MatchingHandler"]},{"name":"constructor(handler: WsHandler)","description":"org.http4k.routing.WsRouterMatch.MatchingHandler.MatchingHandler","location":"http4k-realtime-core/org.http4k.routing/-ws-router-match/-matching-handler/-matching-handler.html","searchKeys":["MatchingHandler","constructor(handler: WsHandler)","org.http4k.routing.WsRouterMatch.MatchingHandler.MatchingHandler"]},{"name":"constructor(http: HttpHandler? = null, ws: WsHandler? = null, sse: SseHandler? = null)","description":"org.http4k.server.PolyHandler.PolyHandler","location":"http4k-realtime-core/org.http4k.server/-poly-handler/-poly-handler.html","searchKeys":["PolyHandler","constructor(http: HttpHandler? = null, ws: WsHandler? = null, sse: SseHandler? = null)","org.http4k.server.PolyHandler.PolyHandler"]},{"name":"constructor(response: WsResponse)","description":"org.http4k.testing.TestWebsocket.TestWebsocket","location":"http4k-realtime-core/org.http4k.testing/-test-websocket/-test-websocket.html","searchKeys":["TestWebsocket","constructor(response: WsResponse)","org.http4k.testing.TestWebsocket.TestWebsocket"]},{"name":"constructor(status: Status = OK, headers: Headers = emptyList(), consumer: SseConsumer)","description":"org.http4k.sse.SseResponse.SseResponse","location":"http4k-realtime-core/org.http4k.sse/-sse-response/-sse-response.html","searchKeys":["SseResponse","constructor(status: Status = OK, headers: Headers = emptyList(), consumer: SseConsumer)","org.http4k.sse.SseResponse.SseResponse"]},{"name":"constructor(status: WsStatus = NORMAL)","description":"org.http4k.testing.ClosedWebsocket.ClosedWebsocket","location":"http4k-realtime-core/org.http4k.testing/-closed-websocket/-closed-websocket.html","searchKeys":["ClosedWebsocket","constructor(status: WsStatus = NORMAL)","org.http4k.testing.ClosedWebsocket.ClosedWebsocket"]},{"name":"constructor(subprotocol: String? = null, consumer: WsConsumer)","description":"org.http4k.websocket.WsResponse.WsResponse","location":"http4k-realtime-core/org.http4k.websocket/-ws-response/-ws-response.html","searchKeys":["WsResponse","constructor(subprotocol: String? = null, consumer: WsConsumer)","org.http4k.websocket.WsResponse.WsResponse"]},{"name":"constructor(value: InputStream)","description":"org.http4k.websocket.WsMessage.WsMessage","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/-ws-message.html","searchKeys":["WsMessage","constructor(value: InputStream)","org.http4k.websocket.WsMessage.WsMessage"]},{"name":"constructor(value: String)","description":"org.http4k.websocket.WsMessage.WsMessage","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/-ws-message.html","searchKeys":["WsMessage","constructor(value: String)","org.http4k.websocket.WsMessage.WsMessage"]},{"name":"data class ClosedWebsocket(val status: WsStatus = NORMAL) : RuntimeException","description":"org.http4k.testing.ClosedWebsocket","location":"http4k-realtime-core/org.http4k.testing/-closed-websocket/index.html","searchKeys":["ClosedWebsocket","data class ClosedWebsocket(val status: WsStatus = NORMAL) : RuntimeException","org.http4k.testing.ClosedWebsocket"]},{"name":"data class Data(val data: String) : SseMessage","description":"org.http4k.sse.SseMessage.Data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-data/index.html","searchKeys":["Data","data class Data(val data: String) : SseMessage","org.http4k.sse.SseMessage.Data"]},{"name":"data class Event(val event: String, val data: String, val id: String? = null) : SseMessage","description":"org.http4k.sse.SseMessage.Event","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/index.html","searchKeys":["Event","data class Event(val event: String, val data: String, val id: String? = null) : SseMessage","org.http4k.sse.SseMessage.Event"]},{"name":"data class MatchingHandler(handler: SseHandler) : SseRouterMatch, Function1<Request, SseResponse> ","description":"org.http4k.routing.SseRouterMatch.MatchingHandler","location":"http4k-realtime-core/org.http4k.routing/-sse-router-match/-matching-handler/index.html","searchKeys":["MatchingHandler","data class MatchingHandler(handler: SseHandler) : SseRouterMatch, Function1<Request, SseResponse> ","org.http4k.routing.SseRouterMatch.MatchingHandler"]},{"name":"data class MatchingHandler(handler: WsHandler) : WsRouterMatch, Function1<Request, WsResponse> ","description":"org.http4k.routing.WsRouterMatch.MatchingHandler","location":"http4k-realtime-core/org.http4k.routing/-ws-router-match/-matching-handler/index.html","searchKeys":["MatchingHandler","data class MatchingHandler(handler: WsHandler) : WsRouterMatch, Function1<Request, WsResponse> ","org.http4k.routing.WsRouterMatch.MatchingHandler"]},{"name":"data class Retry(val backoff: Duration) : SseMessage","description":"org.http4k.sse.SseMessage.Retry","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-retry/index.html","searchKeys":["Retry","data class Retry(val backoff: Duration) : SseMessage","org.http4k.sse.SseMessage.Retry"]},{"name":"data class SseResponse(val status: Status = OK, val headers: Headers = emptyList(), val consumer: SseConsumer)","description":"org.http4k.sse.SseResponse","location":"http4k-realtime-core/org.http4k.sse/-sse-response/index.html","searchKeys":["SseResponse","data class SseResponse(val status: Status = OK, val headers: Headers = emptyList(), val consumer: SseConsumer)","org.http4k.sse.SseResponse"]},{"name":"data class WsMessage(val body: Body)","description":"org.http4k.websocket.WsMessage","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/index.html","searchKeys":["WsMessage","data class WsMessage(val body: Body)","org.http4k.websocket.WsMessage"]},{"name":"data class WsResponse(val subprotocol: String? = null, val consumer: WsConsumer) : Function1<Websocket, Unit> ","description":"org.http4k.websocket.WsResponse","location":"http4k-realtime-core/org.http4k.websocket/-ws-response/index.html","searchKeys":["WsResponse","data class WsResponse(val subprotocol: String? = null, val consumer: WsConsumer) : Function1<Websocket, Unit> ","org.http4k.websocket.WsResponse"]},{"name":"data class WsStatus(val code: Int, val description: String)","description":"org.http4k.websocket.WsStatus","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/index.html","searchKeys":["WsStatus","data class WsStatus(val code: Int, val description: String)","org.http4k.websocket.WsStatus"]},{"name":"data object Unmatched : SseRouterMatch","description":"org.http4k.routing.SseRouterMatch.Unmatched","location":"http4k-realtime-core/org.http4k.routing/-sse-router-match/-unmatched/index.html","searchKeys":["Unmatched","data object Unmatched : SseRouterMatch","org.http4k.routing.SseRouterMatch.Unmatched"]},{"name":"data object Unmatched : WsRouterMatch","description":"org.http4k.routing.WsRouterMatch.Unmatched","location":"http4k-realtime-core/org.http4k.routing/-ws-router-match/-unmatched/index.html","searchKeys":["Unmatched","data object Unmatched : WsRouterMatch","org.http4k.routing.WsRouterMatch.Unmatched"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT): WsMessageLensSpec<NEXT>","description":"org.http4k.lens.WsMessageLensSpec.map","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT): WsMessageLensSpec<NEXT>","org.http4k.lens.WsMessageLensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiWsMessageLensSpec<NEXT>","description":"org.http4k.lens.BiDiWsMessageLensSpec.map","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiWsMessageLensSpec<NEXT>","org.http4k.lens.BiDiWsMessageLensSpec.map"]},{"name":"fun PolyHandler.asServer(config: PolyServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-realtime-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun PolyHandler.asServer(config: PolyServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun PolyHandler.testSseClient(request: Request): TestSseClient","description":"org.http4k.testing.testSseClient","location":"http4k-realtime-core/org.http4k.testing/test-sse-client.html","searchKeys":["testSseClient","fun PolyHandler.testSseClient(request: Request): TestSseClient","org.http4k.testing.testSseClient"]},{"name":"fun PolyHandler.testWsClient(request: Request): TestWsClient","description":"org.http4k.testing.testWsClient","location":"http4k-realtime-core/org.http4k.testing/test-ws-client.html","searchKeys":["testWsClient","fun PolyHandler.testWsClient(request: Request): TestWsClient","org.http4k.testing.testWsClient"]},{"name":"fun ServerFilters.InitialiseSseRequestContext(contexts: Store<RequestContext>): SseFilter","description":"org.http4k.filter.InitialiseSseRequestContext","location":"http4k-realtime-core/org.http4k.filter/-initialise-sse-request-context.html","searchKeys":["InitialiseSseRequestContext","fun ServerFilters.InitialiseSseRequestContext(contexts: Store<RequestContext>): SseFilter","org.http4k.filter.InitialiseSseRequestContext"]},{"name":"fun ServerFilters.InitialiseWsRequestContext(contexts: Store<RequestContext>): WsFilter","description":"org.http4k.filter.InitialiseWsRequestContext","location":"http4k-realtime-core/org.http4k.filter/-initialise-ws-request-context.html","searchKeys":["InitialiseWsRequestContext","fun ServerFilters.InitialiseWsRequestContext(contexts: Store<RequestContext>): WsFilter","org.http4k.filter.InitialiseWsRequestContext"]},{"name":"fun ServerFilters.SetWsSubProtocol(subprotocol: String): WsFilter","description":"org.http4k.filter.SetWsSubProtocol","location":"http4k-realtime-core/org.http4k.filter/-set-ws-sub-protocol.html","searchKeys":["SetWsSubProtocol","fun ServerFilters.SetWsSubProtocol(subprotocol: String): WsFilter","org.http4k.filter.SetWsSubProtocol"]},{"name":"fun SseConsumer.asServer(config: PolyServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-realtime-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun SseConsumer.asServer(config: PolyServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun SseFilter.then(next: SseFilter): SseFilter","description":"org.http4k.sse.then","location":"http4k-realtime-core/org.http4k.sse/then.html","searchKeys":["then","fun SseFilter.then(next: SseFilter): SseFilter","org.http4k.sse.then"]},{"name":"fun SseFilter.then(next: SseHandler): SseHandler","description":"org.http4k.sse.then","location":"http4k-realtime-core/org.http4k.sse/then.html","searchKeys":["then","fun SseFilter.then(next: SseHandler): SseHandler","org.http4k.sse.then"]},{"name":"fun SseFilter.then(routingSseHandler: RoutingSseHandler): RoutingSseHandler","description":"org.http4k.sse.then","location":"http4k-realtime-core/org.http4k.sse/then.html","searchKeys":["then","fun SseFilter.then(routingSseHandler: RoutingSseHandler): RoutingSseHandler","org.http4k.sse.then"]},{"name":"fun SseHandler.asServer(config: PolyServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-realtime-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun SseHandler.asServer(config: PolyServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun SseHandler.testSseClient(request: Request): TestSseClient","description":"org.http4k.testing.testSseClient","location":"http4k-realtime-core/org.http4k.testing/test-sse-client.html","searchKeys":["testSseClient","fun SseHandler.testSseClient(request: Request): TestSseClient","org.http4k.testing.testSseClient"]},{"name":"fun WsConsumer.asServer(config: PolyServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-realtime-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun WsConsumer.asServer(config: PolyServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun WsFilter.then(next: WsFilter): WsFilter","description":"org.http4k.websocket.then","location":"http4k-realtime-core/org.http4k.websocket/then.html","searchKeys":["then","fun WsFilter.then(next: WsFilter): WsFilter","org.http4k.websocket.then"]},{"name":"fun WsFilter.then(next: WsHandler): WsHandler","description":"org.http4k.websocket.then","location":"http4k-realtime-core/org.http4k.websocket/then.html","searchKeys":["then","fun WsFilter.then(next: WsHandler): WsHandler","org.http4k.websocket.then"]},{"name":"fun WsFilter.then(routingWsHandler: RoutingWsHandler): RoutingWsHandler","description":"org.http4k.websocket.then","location":"http4k-realtime-core/org.http4k.websocket/then.html","searchKeys":["then","fun WsFilter.then(routingWsHandler: RoutingWsHandler): RoutingWsHandler","org.http4k.websocket.then"]},{"name":"fun WsHandler.asServer(config: PolyServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-realtime-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun WsHandler.asServer(config: PolyServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun WsHandler.testWebsocket(request: Request): Websocket","description":"org.http4k.testing.testWebsocket","location":"http4k-realtime-core/org.http4k.testing/test-websocket.html","searchKeys":["testWebsocket","fun WsHandler.testWebsocket(request: Request): Websocket","org.http4k.testing.testWebsocket"]},{"name":"fun WsHandler.testWsClient(request: Request): TestWsClient","description":"org.http4k.testing.testWsClient","location":"http4k-realtime-core/org.http4k.testing/test-ws-client.html","searchKeys":["testWsClient","fun WsHandler.testWsClient(request: Request): TestWsClient","org.http4k.testing.testWsClient"]},{"name":"fun WsMessage.Companion.binary(): BiDiWsMessageLensSpec<ByteBuffer>","description":"org.http4k.lens.binary","location":"http4k-realtime-core/org.http4k.lens/binary.html","searchKeys":["binary","fun WsMessage.Companion.binary(): BiDiWsMessageLensSpec<ByteBuffer>","org.http4k.lens.binary"]},{"name":"fun WsMessage.Companion.string(): BiDiWsMessageLensSpec<String>","description":"org.http4k.lens.string","location":"http4k-realtime-core/org.http4k.lens/string.html","searchKeys":["string","fun WsMessage.Companion.string(): BiDiWsMessageLensSpec<String>","org.http4k.lens.string"]},{"name":"fun body(new: Body): WsMessage","description":"org.http4k.websocket.WsMessage.body","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/body.html","searchKeys":["body","fun body(new: Body): WsMessage","org.http4k.websocket.WsMessage.body"]},{"name":"fun bodyString(): String","description":"org.http4k.websocket.WsMessage.bodyString","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/body-string.html","searchKeys":["bodyString","fun bodyString(): String","org.http4k.websocket.WsMessage.bodyString"]},{"name":"fun create(value: FINAL): WsMessage","description":"org.http4k.lens.BiDiWsMessageLens.create","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens/create.html","searchKeys":["create","fun create(value: FINAL): WsMessage","org.http4k.lens.BiDiWsMessageLens.create"]},{"name":"fun description(description: String): WsStatus","description":"org.http4k.websocket.WsStatus.description","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/description.html","searchKeys":["description","fun description(description: String): WsStatus","org.http4k.websocket.WsStatus.description"]},{"name":"fun error(throwable: Throwable)","description":"org.http4k.testing.TestWsClient.error","location":"http4k-realtime-core/org.http4k.testing/-test-ws-client/error.html","searchKeys":["error","fun error(throwable: Throwable)","org.http4k.testing.TestWsClient.error"]},{"name":"fun interface SseFilter : Function1<SseHandler, SseHandler> ","description":"org.http4k.sse.SseFilter","location":"http4k-realtime-core/org.http4k.sse/-sse-filter/index.html","searchKeys":["SseFilter","fun interface SseFilter : Function1<SseHandler, SseHandler> ","org.http4k.sse.SseFilter"]},{"name":"fun interface WsFilter : Function1<WsHandler, WsHandler> ","description":"org.http4k.websocket.WsFilter","location":"http4k-realtime-core/org.http4k.websocket/-ws-filter/index.html","searchKeys":["WsFilter","fun interface WsFilter : Function1<WsHandler, WsHandler> ","org.http4k.websocket.WsFilter"]},{"name":"fun sse(sse: SseConsumer): SseHandler","description":"org.http4k.routing.sse","location":"http4k-realtime-core/org.http4k.routing/sse.html","searchKeys":["sse","fun sse(sse: SseConsumer): SseHandler","org.http4k.routing.sse"]},{"name":"fun sse(vararg list: SseRouter): RoutingSseHandler","description":"org.http4k.routing.sse","location":"http4k-realtime-core/org.http4k.routing/sse.html","searchKeys":["sse","fun sse(vararg list: SseRouter): RoutingSseHandler","org.http4k.routing.sse"]},{"name":"fun triggerClose()","description":"org.http4k.sse.PushAdaptingSse.triggerClose","location":"http4k-realtime-core/org.http4k.sse/-push-adapting-sse/trigger-close.html","searchKeys":["triggerClose","fun triggerClose()","org.http4k.sse.PushAdaptingSse.triggerClose"]},{"name":"fun triggerClose(status: WsStatus = NORMAL)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.triggerClose","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/trigger-close.html","searchKeys":["triggerClose","fun triggerClose(status: WsStatus = NORMAL)","org.http4k.websocket.PushPullAdaptingWebSocket.triggerClose"]},{"name":"fun triggerError(throwable: Throwable)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.triggerError","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/trigger-error.html","searchKeys":["triggerError","fun triggerError(throwable: Throwable)","org.http4k.websocket.PushPullAdaptingWebSocket.triggerError"]},{"name":"fun triggerMessage(message: WsMessage)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.triggerMessage","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/trigger-message.html","searchKeys":["triggerMessage","fun triggerMessage(message: WsMessage)","org.http4k.websocket.PushPullAdaptingWebSocket.triggerMessage"]},{"name":"fun websockets(vararg list: WsRouter): RoutingWsHandler","description":"org.http4k.routing.websockets","location":"http4k-realtime-core/org.http4k.routing/websockets.html","searchKeys":["websockets","fun websockets(vararg list: WsRouter): RoutingWsHandler","org.http4k.routing.websockets"]},{"name":"fun websockets(ws: WsConsumer): WsHandler","description":"org.http4k.routing.websockets","location":"http4k-realtime-core/org.http4k.routing/websockets.html","searchKeys":["websockets","fun websockets(ws: WsConsumer): WsHandler","org.http4k.routing.websockets"]},{"name":"infix fun String.bind(handler: SseHandler): RoutingSseHandler","description":"org.http4k.routing.sse.bind","location":"http4k-realtime-core/org.http4k.routing.sse/bind.html","searchKeys":["bind","infix fun String.bind(handler: SseHandler): RoutingSseHandler","org.http4k.routing.sse.bind"]},{"name":"infix fun String.bind(sseHandler: RoutingSseHandler): RoutingSseHandler","description":"org.http4k.routing.sse.bind","location":"http4k-realtime-core/org.http4k.routing.sse/bind.html","searchKeys":["bind","infix fun String.bind(sseHandler: RoutingSseHandler): RoutingSseHandler","org.http4k.routing.sse.bind"]},{"name":"infix fun String.bind(ws: WsHandler): RoutingWsHandler","description":"org.http4k.routing.ws.bind","location":"http4k-realtime-core/org.http4k.routing.ws/bind.html","searchKeys":["bind","infix fun String.bind(ws: WsHandler): RoutingWsHandler","org.http4k.routing.ws.bind"]},{"name":"infix fun String.bind(wsHandler: RoutingWsHandler): RoutingWsHandler","description":"org.http4k.routing.ws.bind","location":"http4k-realtime-core/org.http4k.routing.ws/bind.html","searchKeys":["bind","infix fun String.bind(wsHandler: RoutingWsHandler): RoutingWsHandler","org.http4k.routing.ws.bind"]},{"name":"interface PolyServerConfig : ServerConfig","description":"org.http4k.server.PolyServerConfig","location":"http4k-realtime-core/org.http4k.server/-poly-server-config/index.html","searchKeys":["PolyServerConfig","interface PolyServerConfig : ServerConfig","org.http4k.server.PolyServerConfig"]},{"name":"interface RoutingSseHandler : Function1<Request, SseResponse> , SseRouter","description":"org.http4k.routing.RoutingSseHandler","location":"http4k-realtime-core/org.http4k.routing/-routing-sse-handler/index.html","searchKeys":["RoutingSseHandler","interface RoutingSseHandler : Function1<Request, SseResponse> , SseRouter","org.http4k.routing.RoutingSseHandler"]},{"name":"interface RoutingWsHandler : Function1<Request, WsResponse> , WsRouter","description":"org.http4k.routing.RoutingWsHandler","location":"http4k-realtime-core/org.http4k.routing/-routing-ws-handler/index.html","searchKeys":["RoutingWsHandler","interface RoutingWsHandler : Function1<Request, WsResponse> , WsRouter","org.http4k.routing.RoutingWsHandler"]},{"name":"interface Sse","description":"org.http4k.sse.Sse","location":"http4k-realtime-core/org.http4k.sse/-sse/index.html","searchKeys":["Sse","interface Sse","org.http4k.sse.Sse"]},{"name":"interface SseClient","description":"org.http4k.sse.SseClient","location":"http4k-realtime-core/org.http4k.sse/-sse-client/index.html","searchKeys":["SseClient","interface SseClient","org.http4k.sse.SseClient"]},{"name":"interface SseRouter","description":"org.http4k.routing.SseRouter","location":"http4k-realtime-core/org.http4k.routing/-sse-router/index.html","searchKeys":["SseRouter","interface SseRouter","org.http4k.routing.SseRouter"]},{"name":"interface Websocket","description":"org.http4k.websocket.Websocket","location":"http4k-realtime-core/org.http4k.websocket/-websocket/index.html","searchKeys":["Websocket","interface Websocket","org.http4k.websocket.Websocket"]},{"name":"interface WsClient","description":"org.http4k.websocket.WsClient","location":"http4k-realtime-core/org.http4k.websocket/-ws-client/index.html","searchKeys":["WsClient","interface WsClient","org.http4k.websocket.WsClient"]},{"name":"interface WsRouter","description":"org.http4k.routing.WsRouter","location":"http4k-realtime-core/org.http4k.routing/-ws-router/index.html","searchKeys":["WsRouter","interface WsRouter","org.http4k.routing.WsRouter"]},{"name":"object Companion","description":"org.http4k.sse.SseFilter.Companion","location":"http4k-realtime-core/org.http4k.sse/-sse-filter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.sse.SseFilter.Companion"]},{"name":"object Companion","description":"org.http4k.sse.SseMessage.Companion","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.sse.SseMessage.Companion"]},{"name":"object Companion","description":"org.http4k.websocket.WsFilter.Companion","location":"http4k-realtime-core/org.http4k.websocket/-ws-filter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.websocket.WsFilter.Companion"]},{"name":"object Companion","description":"org.http4k.websocket.WsMessage.Companion","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.websocket.WsMessage.Companion"]},{"name":"object Companion","description":"org.http4k.websocket.WsStatus.Companion","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.websocket.WsStatus.Companion"]},{"name":"open class BiDiWsMessageLensSpec<OUT>(get: LensGet<WsMessage, OUT>, set: LensSet<WsMessage, OUT>) : WsMessageLensSpec<OUT> ","description":"org.http4k.lens.BiDiWsMessageLensSpec","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens-spec/index.html","searchKeys":["BiDiWsMessageLensSpec","open class BiDiWsMessageLensSpec<OUT>(get: LensGet<WsMessage, OUT>, set: LensSet<WsMessage, OUT>) : WsMessageLensSpec<OUT> ","org.http4k.lens.BiDiWsMessageLensSpec"]},{"name":"open class WsMessageLens<out FINAL>(getLens: (WsMessage) -> FINAL) : LensExtractor<WsMessage, FINAL> ","description":"org.http4k.lens.WsMessageLens","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens/index.html","searchKeys":["WsMessageLens","open class WsMessageLens<out FINAL>(getLens: (WsMessage) -> FINAL) : LensExtractor<WsMessage, FINAL> ","org.http4k.lens.WsMessageLens"]},{"name":"open class WsMessageLensSpec<out OUT>(get: LensGet<WsMessage, OUT>)","description":"org.http4k.lens.WsMessageLensSpec","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens-spec/index.html","searchKeys":["WsMessageLensSpec","open class WsMessageLensSpec<out OUT>(get: LensGet<WsMessage, OUT>)","org.http4k.lens.WsMessageLensSpec"]},{"name":"open fun toLens(): WsMessageLens<OUT>","description":"org.http4k.lens.WsMessageLensSpec.toLens","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens-spec/to-lens.html","searchKeys":["toLens","open fun toLens(): WsMessageLens<OUT>","org.http4k.lens.WsMessageLensSpec.toLens"]},{"name":"open fun toSseServer(sse: SseHandler): Http4kServer","description":"org.http4k.server.PolyServerConfig.toSseServer","location":"http4k-realtime-core/org.http4k.server/-poly-server-config/to-sse-server.html","searchKeys":["toSseServer","open fun toSseServer(sse: SseHandler): Http4kServer","org.http4k.server.PolyServerConfig.toSseServer"]},{"name":"open fun toWsServer(ws: WsHandler): Http4kServer","description":"org.http4k.server.PolyServerConfig.toWsServer","location":"http4k-realtime-core/org.http4k.server/-poly-server-config/to-ws-server.html","searchKeys":["toWsServer","open fun toWsServer(ws: WsHandler): Http4kServer","org.http4k.server.PolyServerConfig.toWsServer"]},{"name":"open operator override fun compareTo(other: SseRouterMatch): Int","description":"org.http4k.routing.SseRouterMatch.compareTo","location":"http4k-realtime-core/org.http4k.routing/-sse-router-match/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: SseRouterMatch): Int","org.http4k.routing.SseRouterMatch.compareTo"]},{"name":"open operator override fun compareTo(other: WsRouterMatch): Int","description":"org.http4k.routing.WsRouterMatch.compareTo","location":"http4k-realtime-core/org.http4k.routing/-ws-router-match/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: WsRouterMatch): Int","org.http4k.routing.WsRouterMatch.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.websocket.WsStatus.equals","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.websocket.WsStatus.equals"]},{"name":"open operator override fun invoke(target: WsMessage): FINAL","description":"org.http4k.lens.WsMessageLens.invoke","location":"http4k-realtime-core/org.http4k.lens/-ws-message-lens/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: WsMessage): FINAL","org.http4k.lens.WsMessageLens.invoke"]},{"name":"open override fun close()","description":"org.http4k.testing.TestSseClient.close","location":"http4k-realtime-core/org.http4k.testing/-test-sse-client/close.html","searchKeys":["close","open override fun close()","org.http4k.testing.TestSseClient.close"]},{"name":"open override fun close(status: WsStatus)","description":"org.http4k.testing.TestWebsocket.close","location":"http4k-realtime-core/org.http4k.testing/-test-websocket/close.html","searchKeys":["close","open override fun close(status: WsStatus)","org.http4k.testing.TestWebsocket.close"]},{"name":"open override fun close(status: WsStatus)","description":"org.http4k.testing.TestWsClient.close","location":"http4k-realtime-core/org.http4k.testing/-test-ws-client/close.html","searchKeys":["close","open override fun close(status: WsStatus)","org.http4k.testing.TestWsClient.close"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.websocket.WsStatus.hashCode","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.websocket.WsStatus.hashCode"]},{"name":"open override fun onClose(fn: () -> Unit)","description":"org.http4k.sse.PushAdaptingSse.onClose","location":"http4k-realtime-core/org.http4k.sse/-push-adapting-sse/on-close.html","searchKeys":["onClose","open override fun onClose(fn: () -> Unit)","org.http4k.sse.PushAdaptingSse.onClose"]},{"name":"open override fun onClose(fn: (WsStatus) -> Unit)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.onClose","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/on-close.html","searchKeys":["onClose","open override fun onClose(fn: (WsStatus) -> Unit)","org.http4k.websocket.PushPullAdaptingWebSocket.onClose"]},{"name":"open override fun onError(fn: (Throwable) -> Unit)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.onError","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/on-error.html","searchKeys":["onError","open override fun onError(fn: (Throwable) -> Unit)","org.http4k.websocket.PushPullAdaptingWebSocket.onError"]},{"name":"open override fun onMessage(fn: (WsMessage) -> Unit)","description":"org.http4k.websocket.PushPullAdaptingWebSocket.onMessage","location":"http4k-realtime-core/org.http4k.websocket/-push-pull-adapting-web-socket/on-message.html","searchKeys":["onMessage","open override fun onMessage(fn: (WsMessage) -> Unit)","org.http4k.websocket.PushPullAdaptingWebSocket.onMessage"]},{"name":"open override fun received(): Sequence<SseMessage>","description":"org.http4k.testing.TestSseClient.received","location":"http4k-realtime-core/org.http4k.testing/-test-sse-client/received.html","searchKeys":["received","open override fun received(): Sequence<SseMessage>","org.http4k.testing.TestSseClient.received"]},{"name":"open override fun received(): Sequence<WsMessage>","description":"org.http4k.testing.TestWsClient.received","location":"http4k-realtime-core/org.http4k.testing/-test-ws-client/received.html","searchKeys":["received","open override fun received(): Sequence<WsMessage>","org.http4k.testing.TestWsClient.received"]},{"name":"open override fun send(message: WsMessage)","description":"org.http4k.testing.TestWebsocket.send","location":"http4k-realtime-core/org.http4k.testing/-test-websocket/send.html","searchKeys":["send","open override fun send(message: WsMessage)","org.http4k.testing.TestWebsocket.send"]},{"name":"open override fun send(message: WsMessage)","description":"org.http4k.testing.TestWsClient.send","location":"http4k-realtime-core/org.http4k.testing/-test-ws-client/send.html","searchKeys":["send","open override fun send(message: WsMessage)","org.http4k.testing.TestWsClient.send"]},{"name":"open override fun toLens(): BiDiWsMessageLens<OUT>","description":"org.http4k.lens.BiDiWsMessageLensSpec.toLens","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens-spec/to-lens.html","searchKeys":["toLens","open override fun toLens(): BiDiWsMessageLens<OUT>","org.http4k.lens.BiDiWsMessageLensSpec.toLens"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.PolyServerConfig.toServer","location":"http4k-realtime-core/org.http4k.server/-poly-server-config/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.PolyServerConfig.toServer"]},{"name":"open override fun toString(): String","description":"org.http4k.websocket.WsStatus.toString","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.websocket.WsStatus.toString"]},{"name":"open override val connectRequest: Request","description":"org.http4k.sse.PushAdaptingSse.connectRequest","location":"http4k-realtime-core/org.http4k.sse/-push-adapting-sse/connect-request.html","searchKeys":["connectRequest","open override val connectRequest: Request","org.http4k.sse.PushAdaptingSse.connectRequest"]},{"name":"operator fun invoke(target: FINAL): WsMessage","description":"org.http4k.lens.BiDiWsMessageLens.invoke","location":"http4k-realtime-core/org.http4k.lens/-bi-di-ws-message-lens/invoke.html","searchKeys":["invoke","operator fun invoke(target: FINAL): WsMessage","org.http4k.lens.BiDiWsMessageLens.invoke"]},{"name":"sealed class SseMessage","description":"org.http4k.sse.SseMessage","location":"http4k-realtime-core/org.http4k.sse/-sse-message/index.html","searchKeys":["SseMessage","sealed class SseMessage","org.http4k.sse.SseMessage"]},{"name":"sealed class SseRouterMatch : Comparable<SseRouterMatch> ","description":"org.http4k.routing.SseRouterMatch","location":"http4k-realtime-core/org.http4k.routing/-sse-router-match/index.html","searchKeys":["SseRouterMatch","sealed class SseRouterMatch : Comparable<SseRouterMatch> ","org.http4k.routing.SseRouterMatch"]},{"name":"sealed class WsRouterMatch : Comparable<WsRouterMatch> ","description":"org.http4k.routing.WsRouterMatch","location":"http4k-realtime-core/org.http4k.routing/-ws-router-match/index.html","searchKeys":["WsRouterMatch","sealed class WsRouterMatch : Comparable<WsRouterMatch> ","org.http4k.routing.WsRouterMatch"]},{"name":"typealias SseConsumer = (Sse) -> Unit","description":"org.http4k.sse.SseConsumer","location":"http4k-realtime-core/org.http4k.sse/-sse-consumer/index.html","searchKeys":["SseConsumer","typealias SseConsumer = (Sse) -> Unit","org.http4k.sse.SseConsumer"]},{"name":"typealias SseHandler = (Request) -> SseResponse","description":"org.http4k.sse.SseHandler","location":"http4k-realtime-core/org.http4k.sse/-sse-handler/index.html","searchKeys":["SseHandler","typealias SseHandler = (Request) -> SseResponse","org.http4k.sse.SseHandler"]},{"name":"typealias WsConsumer = (Websocket) -> Unit","description":"org.http4k.websocket.WsConsumer","location":"http4k-realtime-core/org.http4k.websocket/-ws-consumer/index.html","searchKeys":["WsConsumer","typealias WsConsumer = (Websocket) -> Unit","org.http4k.websocket.WsConsumer"]},{"name":"typealias WsHandler = (Request) -> WsResponse","description":"org.http4k.websocket.WsHandler","location":"http4k-realtime-core/org.http4k.websocket/-ws-handler/index.html","searchKeys":["WsHandler","typealias WsHandler = (Request) -> WsResponse","org.http4k.websocket.WsHandler"]},{"name":"val ABNORMAL_CLOSE: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.ABNORMAL_CLOSE","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-a-b-n-o-r-m-a-l_-c-l-o-s-e.html","searchKeys":["ABNORMAL_CLOSE","val ABNORMAL_CLOSE: WsStatus","org.http4k.websocket.WsStatus.Companion.ABNORMAL_CLOSE"]},{"name":"val BUGGYCLOSE: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.BUGGYCLOSE","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-b-u-g-g-y-c-l-o-s-e.html","searchKeys":["BUGGYCLOSE","val BUGGYCLOSE: WsStatus","org.http4k.websocket.WsStatus.Companion.BUGGYCLOSE"]},{"name":"val EXTENSION: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.EXTENSION","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-e-x-t-e-n-s-i-o-n.html","searchKeys":["EXTENSION","val EXTENSION: WsStatus","org.http4k.websocket.WsStatus.Companion.EXTENSION"]},{"name":"val FLASHPOLICY: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.FLASHPOLICY","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-f-l-a-s-h-p-o-l-i-c-y.html","searchKeys":["FLASHPOLICY","val FLASHPOLICY: WsStatus","org.http4k.websocket.WsStatus.Companion.FLASHPOLICY"]},{"name":"val GOING_AWAY: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.GOING_AWAY","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-g-o-i-n-g_-a-w-a-y.html","searchKeys":["GOING_AWAY","val GOING_AWAY: WsStatus","org.http4k.websocket.WsStatus.Companion.GOING_AWAY"]},{"name":"val NEVER_CONNECTED: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.NEVER_CONNECTED","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-n-e-v-e-r_-c-o-n-n-e-c-t-e-d.html","searchKeys":["NEVER_CONNECTED","val NEVER_CONNECTED: WsStatus","org.http4k.websocket.WsStatus.Companion.NEVER_CONNECTED"]},{"name":"val NOCODE: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.NOCODE","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-n-o-c-o-d-e.html","searchKeys":["NOCODE","val NOCODE: WsStatus","org.http4k.websocket.WsStatus.Companion.NOCODE"]},{"name":"val NORMAL: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.NORMAL","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-n-o-r-m-a-l.html","searchKeys":["NORMAL","val NORMAL: WsStatus","org.http4k.websocket.WsStatus.Companion.NORMAL"]},{"name":"val NO_UTF8: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.NO_UTF8","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-n-o_-u-t-f8.html","searchKeys":["NO_UTF8","val NO_UTF8: WsStatus","org.http4k.websocket.WsStatus.Companion.NO_UTF8"]},{"name":"val POLICY_VALIDATION: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.POLICY_VALIDATION","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-p-o-l-i-c-y_-v-a-l-i-d-a-t-i-o-n.html","searchKeys":["POLICY_VALIDATION","val POLICY_VALIDATION: WsStatus","org.http4k.websocket.WsStatus.Companion.POLICY_VALIDATION"]},{"name":"val PROTOCOL_ERROR: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.PROTOCOL_ERROR","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-p-r-o-t-o-c-o-l_-e-r-r-o-r.html","searchKeys":["PROTOCOL_ERROR","val PROTOCOL_ERROR: WsStatus","org.http4k.websocket.WsStatus.Companion.PROTOCOL_ERROR"]},{"name":"val REFUSE: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.REFUSE","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-r-e-f-u-s-e.html","searchKeys":["REFUSE","val REFUSE: WsStatus","org.http4k.websocket.WsStatus.Companion.REFUSE"]},{"name":"val SseFilter.Companion.NoOp: SseFilter","description":"org.http4k.sse.NoOp","location":"http4k-realtime-core/org.http4k.sse/-no-op.html","searchKeys":["NoOp","val SseFilter.Companion.NoOp: SseFilter","org.http4k.sse.NoOp"]},{"name":"val TLS_ERROR: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.TLS_ERROR","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-t-l-s_-e-r-r-o-r.html","searchKeys":["TLS_ERROR","val TLS_ERROR: WsStatus","org.http4k.websocket.WsStatus.Companion.TLS_ERROR"]},{"name":"val TOOBIG: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.TOOBIG","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-t-o-o-b-i-g.html","searchKeys":["TOOBIG","val TOOBIG: WsStatus","org.http4k.websocket.WsStatus.Companion.TOOBIG"]},{"name":"val UNEXPECTED_CONDITION: WsStatus","description":"org.http4k.websocket.WsStatus.Companion.UNEXPECTED_CONDITION","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/-companion/-u-n-e-x-p-e-c-t-e-d_-c-o-n-d-i-t-i-o-n.html","searchKeys":["UNEXPECTED_CONDITION","val UNEXPECTED_CONDITION: WsStatus","org.http4k.websocket.WsStatus.Companion.UNEXPECTED_CONDITION"]},{"name":"val WsFilter.Companion.NoOp: WsFilter","description":"org.http4k.websocket.NoOp","location":"http4k-realtime-core/org.http4k.websocket/-no-op.html","searchKeys":["NoOp","val WsFilter.Companion.NoOp: WsFilter","org.http4k.websocket.NoOp"]},{"name":"val backoff: Duration","description":"org.http4k.sse.SseMessage.Retry.backoff","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-retry/backoff.html","searchKeys":["backoff","val backoff: Duration","org.http4k.sse.SseMessage.Retry.backoff"]},{"name":"val body: Body","description":"org.http4k.websocket.WsMessage.body","location":"http4k-realtime-core/org.http4k.websocket/-ws-message/body.html","searchKeys":["body","val body: Body","org.http4k.websocket.WsMessage.body"]},{"name":"val code: Int","description":"org.http4k.websocket.WsStatus.code","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/code.html","searchKeys":["code","val code: Int","org.http4k.websocket.WsStatus.code"]},{"name":"val consumer: SseConsumer","description":"org.http4k.sse.SseResponse.consumer","location":"http4k-realtime-core/org.http4k.sse/-sse-response/consumer.html","searchKeys":["consumer","val consumer: SseConsumer","org.http4k.sse.SseResponse.consumer"]},{"name":"val consumer: WsConsumer","description":"org.http4k.websocket.WsResponse.consumer","location":"http4k-realtime-core/org.http4k.websocket/-ws-response/consumer.html","searchKeys":["consumer","val consumer: WsConsumer","org.http4k.websocket.WsResponse.consumer"]},{"name":"val data: String","description":"org.http4k.sse.SseMessage.Data.data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-data/data.html","searchKeys":["data","val data: String","org.http4k.sse.SseMessage.Data.data"]},{"name":"val data: String","description":"org.http4k.sse.SseMessage.Event.data","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/data.html","searchKeys":["data","val data: String","org.http4k.sse.SseMessage.Event.data"]},{"name":"val description: String","description":"org.http4k.websocket.WsStatus.description","location":"http4k-realtime-core/org.http4k.websocket/-ws-status/description.html","searchKeys":["description","val description: String","org.http4k.websocket.WsStatus.description"]},{"name":"val event: String","description":"org.http4k.sse.SseMessage.Event.event","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/event.html","searchKeys":["event","val event: String","org.http4k.sse.SseMessage.Event.event"]},{"name":"val headers: Headers","description":"org.http4k.sse.SseResponse.headers","location":"http4k-realtime-core/org.http4k.sse/-sse-response/headers.html","searchKeys":["headers","val headers: Headers","org.http4k.sse.SseResponse.headers"]},{"name":"val headers: List<Parameter>","description":"org.http4k.testing.TestSseClient.headers","location":"http4k-realtime-core/org.http4k.testing/-test-sse-client/headers.html","searchKeys":["headers","val headers: List<Parameter>","org.http4k.testing.TestSseClient.headers"]},{"name":"val http: HttpHandler? = null","description":"org.http4k.server.PolyHandler.http","location":"http4k-realtime-core/org.http4k.server/-poly-handler/http.html","searchKeys":["http","val http: HttpHandler? = null","org.http4k.server.PolyHandler.http"]},{"name":"val id: String? = null","description":"org.http4k.sse.SseMessage.Event.id","location":"http4k-realtime-core/org.http4k.sse/-sse-message/-event/id.html","searchKeys":["id","val id: String? = null","org.http4k.sse.SseMessage.Event.id"]},{"name":"val sse: SseHandler? = null","description":"org.http4k.server.PolyHandler.sse","location":"http4k-realtime-core/org.http4k.server/-poly-handler/sse.html","searchKeys":["sse","val sse: SseHandler? = null","org.http4k.server.PolyHandler.sse"]},{"name":"val status: Status","description":"org.http4k.sse.SseResponse.status","location":"http4k-realtime-core/org.http4k.sse/-sse-response/status.html","searchKeys":["status","val status: Status","org.http4k.sse.SseResponse.status"]},{"name":"val status: Status","description":"org.http4k.testing.TestSseClient.status","location":"http4k-realtime-core/org.http4k.testing/-test-sse-client/status.html","searchKeys":["status","val status: Status","org.http4k.testing.TestSseClient.status"]},{"name":"val status: WsStatus","description":"org.http4k.testing.ClosedWebsocket.status","location":"http4k-realtime-core/org.http4k.testing/-closed-websocket/status.html","searchKeys":["status","val status: WsStatus","org.http4k.testing.ClosedWebsocket.status"]},{"name":"val subprotocol: String? = null","description":"org.http4k.websocket.WsResponse.subprotocol","location":"http4k-realtime-core/org.http4k.websocket/-ws-response/subprotocol.html","searchKeys":["subprotocol","val subprotocol: String? = null","org.http4k.websocket.WsResponse.subprotocol"]},{"name":"val ws: WsHandler? = null","description":"org.http4k.server.PolyHandler.ws","location":"http4k-realtime-core/org.http4k.server/-poly-handler/ws.html","searchKeys":["ws","val ws: WsHandler? = null","org.http4k.server.PolyHandler.ws"]},{"name":"FailOnUnknown","description":"org.http4k.format.StrictnessMode.FailOnUnknown","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/-fail-on-unknown/index.html","searchKeys":["FailOnUnknown","FailOnUnknown","org.http4k.format.StrictnessMode.FailOnUnknown"]},{"name":"Lenient","description":"org.http4k.format.StrictnessMode.Lenient","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/-lenient/index.html","searchKeys":["Lenient","Lenient","org.http4k.format.StrictnessMode.Lenient"]},{"name":"abstract class IsAnInstanceOfAdapter<T : Any>(clazz: KClass<T>, resolveAdapter: Moshi.(KClass<T>) -> JsonAdapter<T> = { adapter(it.java) }) : JsonAdapter.Factory","description":"org.http4k.format.IsAnInstanceOfAdapter","location":"http4k-format-moshi/org.http4k.format/-is-an-instance-of-adapter/index.html","searchKeys":["IsAnInstanceOfAdapter","abstract class IsAnInstanceOfAdapter<T : Any>(clazz: KClass<T>, resolveAdapter: Moshi.(KClass<T>) -> JsonAdapter<T> = { adapter(it.java) }) : JsonAdapter.Factory","org.http4k.format.IsAnInstanceOfAdapter"]},{"name":"class UnmappedValue(type: Type) : Exception","description":"org.http4k.format.UnmappedValue","location":"http4k-format-moshi/org.http4k.format/-unmapped-value/index.html","searchKeys":["UnmappedValue","class UnmappedValue(type: Type) : Exception","org.http4k.format.UnmappedValue"]},{"name":"constructor(attributes: Map<String, MoshiNode>)","description":"org.http4k.format.MoshiObject.MoshiObject","location":"http4k-format-moshi/org.http4k.format/-moshi-object/-moshi-object.html","searchKeys":["MoshiObject","constructor(attributes: Map<String, MoshiNode>)","org.http4k.format.MoshiObject.MoshiObject"]},{"name":"constructor(builder: Moshi.Builder, defaultContentType: ContentType = APPLICATION_JSON, strictness: StrictnessMode = Lenient)","description":"org.http4k.format.ConfigurableMoshi.ConfigurableMoshi","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/-configurable-moshi.html","searchKeys":["ConfigurableMoshi","constructor(builder: Moshi.Builder, defaultContentType: ContentType = APPLICATION_JSON, strictness: StrictnessMode = Lenient)","org.http4k.format.ConfigurableMoshi.ConfigurableMoshi"]},{"name":"constructor(clazz: KClass<T>, resolveAdapter: Moshi.(KClass<T>) -> JsonAdapter<T> = { adapter(it.java) })","description":"org.http4k.format.IsAnInstanceOfAdapter.IsAnInstanceOfAdapter","location":"http4k-format-moshi/org.http4k.format/-is-an-instance-of-adapter/-is-an-instance-of-adapter.html","searchKeys":["IsAnInstanceOfAdapter","constructor(clazz: KClass<T>, resolveAdapter: Moshi.(KClass<T>) -> JsonAdapter<T> = { adapter(it.java) })","org.http4k.format.IsAnInstanceOfAdapter.IsAnInstanceOfAdapter"]},{"name":"constructor(elements: List<MoshiNode>)","description":"org.http4k.format.MoshiArray.MoshiArray","location":"http4k-format-moshi/org.http4k.format/-moshi-array/-moshi-array.html","searchKeys":["MoshiArray","constructor(elements: List<MoshiNode>)","org.http4k.format.MoshiArray.MoshiArray"]},{"name":"constructor(type: Type)","description":"org.http4k.format.UnmappedValue.UnmappedValue","location":"http4k-format-moshi/org.http4k.format/-unmapped-value/-unmapped-value.html","searchKeys":["UnmappedValue","constructor(type: Type)","org.http4k.format.UnmappedValue.UnmappedValue"]},{"name":"constructor(value: Boolean)","description":"org.http4k.format.MoshiBoolean.MoshiBoolean","location":"http4k-format-moshi/org.http4k.format/-moshi-boolean/-moshi-boolean.html","searchKeys":["MoshiBoolean","constructor(value: Boolean)","org.http4k.format.MoshiBoolean.MoshiBoolean"]},{"name":"constructor(value: Double)","description":"org.http4k.format.MoshiDecimal.MoshiDecimal","location":"http4k-format-moshi/org.http4k.format/-moshi-decimal/-moshi-decimal.html","searchKeys":["MoshiDecimal","constructor(value: Double)","org.http4k.format.MoshiDecimal.MoshiDecimal"]},{"name":"constructor(value: Long)","description":"org.http4k.format.MoshiInteger.MoshiInteger","location":"http4k-format-moshi/org.http4k.format/-moshi-integer/-moshi-integer.html","searchKeys":["MoshiInteger","constructor(value: Long)","org.http4k.format.MoshiInteger.MoshiInteger"]},{"name":"constructor(value: String)","description":"org.http4k.format.MoshiString.MoshiString","location":"http4k-format-moshi/org.http4k.format/-moshi-string/-moshi-string.html","searchKeys":["MoshiString","constructor(value: String)","org.http4k.format.MoshiString.MoshiString"]},{"name":"constructor(vararg typesToAdapters: Pair<String, (Moshi) -> JsonAdapter<*>>)","description":"org.http4k.format.SimpleMoshiAdapterFactory.SimpleMoshiAdapterFactory","location":"http4k-format-moshi/org.http4k.format/-simple-moshi-adapter-factory/-simple-moshi-adapter-factory.html","searchKeys":["SimpleMoshiAdapterFactory","constructor(vararg typesToAdapters: Pair<String, (Moshi) -> JsonAdapter<*>>)","org.http4k.format.SimpleMoshiAdapterFactory.SimpleMoshiAdapterFactory"]},{"name":"data class MoshiArray(val elements: List<MoshiNode>) : MoshiNode","description":"org.http4k.format.MoshiArray","location":"http4k-format-moshi/org.http4k.format/-moshi-array/index.html","searchKeys":["MoshiArray","data class MoshiArray(val elements: List<MoshiNode>) : MoshiNode","org.http4k.format.MoshiArray"]},{"name":"data class MoshiBoolean(val value: Boolean) : MoshiNode","description":"org.http4k.format.MoshiBoolean","location":"http4k-format-moshi/org.http4k.format/-moshi-boolean/index.html","searchKeys":["MoshiBoolean","data class MoshiBoolean(val value: Boolean) : MoshiNode","org.http4k.format.MoshiBoolean"]},{"name":"data class MoshiDecimal(val value: Double) : MoshiNode","description":"org.http4k.format.MoshiDecimal","location":"http4k-format-moshi/org.http4k.format/-moshi-decimal/index.html","searchKeys":["MoshiDecimal","data class MoshiDecimal(val value: Double) : MoshiNode","org.http4k.format.MoshiDecimal"]},{"name":"data class MoshiInteger(val value: Long) : MoshiNode","description":"org.http4k.format.MoshiInteger","location":"http4k-format-moshi/org.http4k.format/-moshi-integer/index.html","searchKeys":["MoshiInteger","data class MoshiInteger(val value: Long) : MoshiNode","org.http4k.format.MoshiInteger"]},{"name":"data class MoshiObject(val attributes: Map<String, MoshiNode>) : MoshiNode","description":"org.http4k.format.MoshiObject","location":"http4k-format-moshi/org.http4k.format/-moshi-object/index.html","searchKeys":["MoshiObject","data class MoshiObject(val attributes: Map<String, MoshiNode>) : MoshiNode","org.http4k.format.MoshiObject"]},{"name":"data class MoshiString(val value: String) : MoshiNode","description":"org.http4k.format.MoshiString","location":"http4k-format-moshi/org.http4k.format/-moshi-string/index.html","searchKeys":["MoshiString","data class MoshiString(val value: String) : MoshiNode","org.http4k.format.MoshiString"]},{"name":"data object MoshiNull : MoshiNode","description":"org.http4k.format.MoshiNull","location":"http4k-format-moshi/org.http4k.format/-moshi-null/index.html","searchKeys":["MoshiNull","data object MoshiNull : MoshiNode","org.http4k.format.MoshiNull"]},{"name":"enum StrictnessMode : Enum<StrictnessMode> ","description":"org.http4k.format.StrictnessMode","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/index.html","searchKeys":["StrictnessMode","enum StrictnessMode : Enum<StrictnessMode> ","org.http4k.format.StrictnessMode"]},{"name":"fun <T : Any> asJsonString(t: T, c: KClass<T>): String","description":"org.http4k.format.ConfigurableMoshi.asJsonString","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-string.html","searchKeys":["asJsonString","fun <T : Any> asJsonString(t: T, c: KClass<T>): String","org.http4k.format.ConfigurableMoshi.asJsonString"]},{"name":"fun <T> JsonReader.list(item: () -> T): MutableList<T>?","description":"org.http4k.format.list","location":"http4k-format-moshi/org.http4k.format/list.html","searchKeys":["list","fun <T> JsonReader.list(item: () -> T): MutableList<T>?","org.http4k.format.list"]},{"name":"fun <T> JsonReader.list(mk: () -> T, item: T.(String) -> Unit): MutableList<T?>?","description":"org.http4k.format.list","location":"http4k-format-moshi/org.http4k.format/list.html","searchKeys":["list","fun <T> JsonReader.list(mk: () -> T, item: T.(String) -> Unit): MutableList<T?>?","org.http4k.format.list"]},{"name":"fun <T> JsonReader.map(valueFn: () -> T): MutableMap<String, T>?","description":"org.http4k.format.map","location":"http4k-format-moshi/org.http4k.format/map.html","searchKeys":["map","fun <T> JsonReader.map(valueFn: () -> T): MutableMap<String, T>?","org.http4k.format.map"]},{"name":"fun <T> JsonReader.obj(build: (Map<String, Any>) -> T, item: (String) -> Any): T","description":"org.http4k.format.obj","location":"http4k-format-moshi/org.http4k.format/obj.html","searchKeys":["obj","fun <T> JsonReader.obj(build: (Map<String, Any>) -> T, item: (String) -> Any): T","org.http4k.format.obj"]},{"name":"fun <T> JsonReader.obj(mk: () -> T, fn: T.(String) -> Unit): T","description":"org.http4k.format.obj","location":"http4k-format-moshi/org.http4k.format/obj.html","searchKeys":["obj","fun <T> JsonReader.obj(mk: () -> T, fn: T.(String) -> Unit): T","org.http4k.format.obj"]},{"name":"fun <T> JsonWriter.list(list: List<T>?, fn: T.() -> Unit)","description":"org.http4k.format.list","location":"http4k-format-moshi/org.http4k.format/list.html","searchKeys":["list","fun <T> JsonWriter.list(list: List<T>?, fn: T.() -> Unit)","org.http4k.format.list"]},{"name":"fun <T> JsonWriter.list(name: String, list: List<T>?, fn: T.() -> Unit)","description":"org.http4k.format.list","location":"http4k-format-moshi/org.http4k.format/list.html","searchKeys":["list","fun <T> JsonWriter.list(name: String, list: List<T>?, fn: T.() -> Unit)","org.http4k.format.list"]},{"name":"fun <T> JsonWriter.obj(name: String, obj: T?, fn: T.() -> Unit)","description":"org.http4k.format.obj","location":"http4k-format-moshi/org.http4k.format/obj.html","searchKeys":["obj","fun <T> JsonWriter.obj(name: String, obj: T?, fn: T.() -> Unit)","org.http4k.format.obj"]},{"name":"fun <T> JsonWriter.obj(obj: T?, fn: T.() -> Unit)","description":"org.http4k.format.obj","location":"http4k-format-moshi/org.http4k.format/obj.html","searchKeys":["obj","fun <T> JsonWriter.obj(obj: T?, fn: T.() -> Unit)","org.http4k.format.obj"]},{"name":"fun JsonReader.stringList(): MutableList<String>?","description":"org.http4k.format.stringList","location":"http4k-format-moshi/org.http4k.format/string-list.html","searchKeys":["stringList","fun JsonReader.stringList(): MutableList<String>?","org.http4k.format.stringList"]},{"name":"fun JsonReader.stringMap(): Map<String, String>?","description":"org.http4k.format.stringMap","location":"http4k-format-moshi/org.http4k.format/string-map.html","searchKeys":["stringMap","fun JsonReader.stringMap(): Map<String, String>?","org.http4k.format.stringMap"]},{"name":"fun JsonReader.stringOrNull(): String?","description":"org.http4k.format.stringOrNull","location":"http4k-format-moshi/org.http4k.format/string-or-null.html","searchKeys":["stringOrNull","fun JsonReader.stringOrNull(): String?","org.http4k.format.stringOrNull"]},{"name":"fun JsonWriter.boolean(name: String, theValue: Boolean?)","description":"org.http4k.format.boolean","location":"http4k-format-moshi/org.http4k.format/boolean.html","searchKeys":["boolean","fun JsonWriter.boolean(name: String, theValue: Boolean?)","org.http4k.format.boolean"]},{"name":"fun JsonWriter.list(name: String, theValue: List<String>?)","description":"org.http4k.format.list","location":"http4k-format-moshi/org.http4k.format/list.html","searchKeys":["list","fun JsonWriter.list(name: String, theValue: List<String>?)","org.http4k.format.list"]},{"name":"fun JsonWriter.number(name: String, theValue: Number?)","description":"org.http4k.format.number","location":"http4k-format-moshi/org.http4k.format/number.html","searchKeys":["number","fun JsonWriter.number(name: String, theValue: Number?)","org.http4k.format.number"]},{"name":"fun JsonWriter.obj(name: String, theValue: Map<String, Any?>?)","description":"org.http4k.format.obj","location":"http4k-format-moshi/org.http4k.format/obj.html","searchKeys":["obj","fun JsonWriter.obj(name: String, theValue: Map<String, Any?>?)","org.http4k.format.obj"]},{"name":"fun JsonWriter.string(name: String, theValue: String?)","description":"org.http4k.format.string","location":"http4k-format-moshi/org.http4k.format/string.html","searchKeys":["string","fun JsonWriter.string(name: String, theValue: String?)","org.http4k.format.string"]},{"name":"fun Moshi.Builder.asConfigurable(kotlinFactory: JsonAdapter.Factory = KotlinJsonAdapterFactory()): AutoMappingConfiguration<Moshi.Builder>","description":"org.http4k.format.asConfigurable","location":"http4k-format-moshi/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun Moshi.Builder.asConfigurable(kotlinFactory: JsonAdapter.Factory = KotlinJsonAdapterFactory()): AutoMappingConfiguration<Moshi.Builder>","org.http4k.format.asConfigurable"]},{"name":"fun MoshiNode.Companion.wrap(obj: Any?): MoshiNode","description":"org.http4k.format.wrap","location":"http4k-format-moshi/org.http4k.format/wrap.html","searchKeys":["wrap","fun MoshiNode.Companion.wrap(obj: Any?): MoshiNode","org.http4k.format.wrap"]},{"name":"fun MoshiNode.unwrap(): Any?","description":"org.http4k.format.unwrap","location":"http4k-format-moshi/org.http4k.format/unwrap.html","searchKeys":["unwrap","fun MoshiNode.unwrap(): Any?","org.http4k.format.unwrap"]},{"name":"fun custom(configureFn: AutoMappingConfiguration<Moshi.Builder>.() -> AutoMappingConfiguration<Moshi.Builder>): ConfigurableMoshi","description":"org.http4k.format.Moshi.custom","location":"http4k-format-moshi/org.http4k.format/-moshi/custom.html","searchKeys":["custom","fun custom(configureFn: AutoMappingConfiguration<Moshi.Builder>.() -> AutoMappingConfiguration<Moshi.Builder>): ConfigurableMoshi","org.http4k.format.Moshi.custom"]},{"name":"fun standardConfig(kotlinFactory: JsonAdapter.Factory = KotlinJsonAdapterFactory()): AutoMappingConfiguration<Moshi.Builder>","description":"org.http4k.format.standardConfig","location":"http4k-format-moshi/org.http4k.format/standard-config.html","searchKeys":["standardConfig","fun standardConfig(kotlinFactory: JsonAdapter.Factory = KotlinJsonAdapterFactory()): AutoMappingConfiguration<Moshi.Builder>","org.http4k.format.standardConfig"]},{"name":"fun valueOf(value: String): StrictnessMode","description":"org.http4k.format.StrictnessMode.valueOf","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StrictnessMode","org.http4k.format.StrictnessMode.valueOf"]},{"name":"fun values(): Array<StrictnessMode>","description":"org.http4k.format.StrictnessMode.values","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/values.html","searchKeys":["values","fun values(): Array<StrictnessMode>","org.http4k.format.StrictnessMode.values"]},{"name":"inline fun <K> JsonAdapter<K>.asFactory(): SimpleMoshiAdapterFactory","description":"org.http4k.format.asFactory","location":"http4k-format-moshi/org.http4k.format/as-factory.html","searchKeys":["asFactory","inline fun <K> JsonAdapter<K>.asFactory(): SimpleMoshiAdapterFactory","org.http4k.format.asFactory"]},{"name":"inline fun <T : Any, R : HttpMessage> R.json(t: T): R","description":"org.http4k.format.ConfigurableMoshi.json","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/json.html","searchKeys":["json","inline fun <T : Any, R : HttpMessage> R.json(t: T): R","org.http4k.format.ConfigurableMoshi.json"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableMoshi.auto","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableMoshi.auto"]},{"name":"inline fun <T : Any> HttpMessage.json(): T","description":"org.http4k.format.ConfigurableMoshi.json","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/json.html","searchKeys":["json","inline fun <T : Any> HttpMessage.json(): T","org.http4k.format.ConfigurableMoshi.json"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableMoshi.auto","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableMoshi.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableMoshi.autoBody","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableMoshi.autoBody"]},{"name":"inline fun <T : JsonAdapter<K>, K> Moshi.Builder.addTyped(fn: T): Moshi.Builder","description":"org.http4k.format.addTyped","location":"http4k-format-moshi/org.http4k.format/add-typed.html","searchKeys":["addTyped","inline fun <T : JsonAdapter<K>, K> Moshi.Builder.addTyped(fn: T): Moshi.Builder","org.http4k.format.addTyped"]},{"name":"inline fun <T : JsonAdapter<K>, K> adapter(noinline fn: (Moshi) -> T): Pair<String, (Moshi) -> T>","description":"org.http4k.format.adapter","location":"http4k-format-moshi/org.http4k.format/adapter.html","searchKeys":["adapter","inline fun <T : JsonAdapter<K>, K> adapter(noinline fn: (Moshi) -> T): Pair<String, (Moshi) -> T>","org.http4k.format.adapter"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableMoshi.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-moshi/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableMoshi.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableMoshi.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-moshi/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableMoshi.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object Companion","description":"org.http4k.format.MoshiNode.Companion","location":"http4k-format-moshi/org.http4k.format/-moshi-node/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.format.MoshiNode.Companion"]},{"name":"object EventAdapter : JsonAdapter.Factory","description":"org.http4k.format.EventAdapter","location":"http4k-format-moshi/org.http4k.format/-event-adapter/index.html","searchKeys":["EventAdapter","object EventAdapter : JsonAdapter.Factory","org.http4k.format.EventAdapter"]},{"name":"object ListAdapter : IsAnInstanceOfAdapter<List<*>> ","description":"org.http4k.format.ListAdapter","location":"http4k-format-moshi/org.http4k.format/-list-adapter/index.html","searchKeys":["ListAdapter","object ListAdapter : IsAnInstanceOfAdapter<List<*>> ","org.http4k.format.ListAdapter"]},{"name":"object MapAdapter : IsAnInstanceOfAdapter<Map<*, *>> ","description":"org.http4k.format.MapAdapter","location":"http4k-format-moshi/org.http4k.format/-map-adapter/index.html","searchKeys":["MapAdapter","object MapAdapter : IsAnInstanceOfAdapter<Map<*, *>> ","org.http4k.format.MapAdapter"]},{"name":"object Moshi : ConfigurableMoshi","description":"org.http4k.format.Moshi","location":"http4k-format-moshi/org.http4k.format/-moshi/index.html","searchKeys":["Moshi","object Moshi : ConfigurableMoshi","org.http4k.format.Moshi"]},{"name":"object MoshiNodeAdapter : JsonAdapter.Factory","description":"org.http4k.format.MoshiNodeAdapter","location":"http4k-format-moshi/org.http4k.format/-moshi-node-adapter/index.html","searchKeys":["MoshiNodeAdapter","object MoshiNodeAdapter : JsonAdapter.Factory","org.http4k.format.MoshiNodeAdapter"]},{"name":"object ProhibitUnknownValuesAdapter : JsonAdapter.Factory","description":"org.http4k.format.ProhibitUnknownValuesAdapter","location":"http4k-format-moshi/org.http4k.format/-prohibit-unknown-values-adapter/index.html","searchKeys":["ProhibitUnknownValuesAdapter","object ProhibitUnknownValuesAdapter : JsonAdapter.Factory","org.http4k.format.ProhibitUnknownValuesAdapter"]},{"name":"object SetAdapter : IsAnInstanceOfAdapter<Set<*>> ","description":"org.http4k.format.SetAdapter","location":"http4k-format-moshi/org.http4k.format/-set-adapter/index.html","searchKeys":["SetAdapter","object SetAdapter : IsAnInstanceOfAdapter<Set<*>> ","org.http4k.format.SetAdapter"]},{"name":"object ThrowableAdapter : IsAnInstanceOfAdapter<Throwable> ","description":"org.http4k.format.ThrowableAdapter","location":"http4k-format-moshi/org.http4k.format/-throwable-adapter/index.html","searchKeys":["ThrowableAdapter","object ThrowableAdapter : IsAnInstanceOfAdapter<Throwable> ","org.http4k.format.ThrowableAdapter"]},{"name":"open class ConfigurableMoshi(builder: Moshi.Builder, val defaultContentType: ContentType = APPLICATION_JSON, strictness: StrictnessMode = Lenient) : AutoMarshallingJson<MoshiNode> ","description":"org.http4k.format.ConfigurableMoshi","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/index.html","searchKeys":["ConfigurableMoshi","open class ConfigurableMoshi(builder: Moshi.Builder, val defaultContentType: ContentType = APPLICATION_JSON, strictness: StrictnessMode = Lenient) : AutoMarshallingJson<MoshiNode> ","org.http4k.format.ConfigurableMoshi"]},{"name":"open class SimpleMoshiAdapterFactory(typesToAdapters: Pair<String, (Moshi) -> JsonAdapter<*>>) : JsonAdapter.Factory","description":"org.http4k.format.SimpleMoshiAdapterFactory","location":"http4k-format-moshi/org.http4k.format/-simple-moshi-adapter-factory/index.html","searchKeys":["SimpleMoshiAdapterFactory","open class SimpleMoshiAdapterFactory(typesToAdapters: Pair<String, (Moshi) -> JsonAdapter<*>>) : JsonAdapter.Factory","org.http4k.format.SimpleMoshiAdapterFactory"]},{"name":"open override fun <LIST : Iterable<Pair<String, MoshiNode>>> LIST.asJsonObject(): MoshiObject","description":"org.http4k.format.ConfigurableMoshi.asJsonObject","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, MoshiNode>>> LIST.asJsonObject(): MoshiObject","org.http4k.format.ConfigurableMoshi.asJsonObject"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableMoshi.asA","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableMoshi.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableMoshi.asA","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableMoshi.asA"]},{"name":"open override fun <T : Any> asA(j: MoshiNode, target: KClass<T>): T","description":"org.http4k.format.ConfigurableMoshi.asA","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(j: MoshiNode, target: KClass<T>): T","org.http4k.format.ConfigurableMoshi.asA"]},{"name":"open override fun <T : Iterable<MoshiNode>> T.asJsonArray(): MoshiArray","description":"org.http4k.format.ConfigurableMoshi.asJsonArray","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<MoshiNode>> T.asJsonArray(): MoshiArray","org.http4k.format.ConfigurableMoshi.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun Long?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun MoshiNode.asCompactJsonString(): String","description":"org.http4k.format.ConfigurableMoshi.asCompactJsonString","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun MoshiNode.asCompactJsonString(): String","org.http4k.format.ConfigurableMoshi.asCompactJsonString"]},{"name":"open override fun MoshiNode.asPrettyJsonString(): String","description":"org.http4k.format.ConfigurableMoshi.asPrettyJsonString","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun MoshiNode.asPrettyJsonString(): String","org.http4k.format.ConfigurableMoshi.asPrettyJsonString"]},{"name":"open override fun String.asJsonObject(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonObject","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonValue","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonValue"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.ConfigurableMoshi.asFormatString","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.ConfigurableMoshi.asFormatString"]},{"name":"open override fun asJsonObject(input: Any): MoshiNode","description":"org.http4k.format.ConfigurableMoshi.asJsonObject","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/as-json-object.html","searchKeys":["asJsonObject","open override fun asJsonObject(input: Any): MoshiNode","org.http4k.format.ConfigurableMoshi.asJsonObject"]},{"name":"open override fun bool(value: MoshiNode): Boolean","description":"org.http4k.format.ConfigurableMoshi.bool","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/bool.html","searchKeys":["bool","open override fun bool(value: MoshiNode): Boolean","org.http4k.format.ConfigurableMoshi.bool"]},{"name":"open override fun create(p0: Type, p1: MutableSet<out Annotation>, p2: Moshi): JsonAdapter<Any>?","description":"org.http4k.format.EventAdapter.create","location":"http4k-format-moshi/org.http4k.format/-event-adapter/create.html","searchKeys":["create","open override fun create(p0: Type, p1: MutableSet<out Annotation>, p2: Moshi): JsonAdapter<Any>?","org.http4k.format.EventAdapter.create"]},{"name":"open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<*>?","description":"org.http4k.format.SimpleMoshiAdapterFactory.create","location":"http4k-format-moshi/org.http4k.format/-simple-moshi-adapter-factory/create.html","searchKeys":["create","open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<*>?","org.http4k.format.SimpleMoshiAdapterFactory.create"]},{"name":"open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<MoshiNode>","description":"org.http4k.format.MoshiNodeAdapter.create","location":"http4k-format-moshi/org.http4k.format/-moshi-node-adapter/create.html","searchKeys":["create","open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<MoshiNode>","org.http4k.format.MoshiNodeAdapter.create"]},{"name":"open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<T>?","description":"org.http4k.format.IsAnInstanceOfAdapter.create","location":"http4k-format-moshi/org.http4k.format/-is-an-instance-of-adapter/create.html","searchKeys":["create","open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): JsonAdapter<T>?","org.http4k.format.IsAnInstanceOfAdapter.create"]},{"name":"open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): Nothing?","description":"org.http4k.format.ProhibitUnknownValuesAdapter.create","location":"http4k-format-moshi/org.http4k.format/-prohibit-unknown-values-adapter/create.html","searchKeys":["create","open override fun create(type: Type, annotations: Set<Annotation>, moshi: Moshi): Nothing?","org.http4k.format.ProhibitUnknownValuesAdapter.create"]},{"name":"open override fun decimal(value: MoshiNode): BigDecimal","description":"org.http4k.format.ConfigurableMoshi.decimal","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/decimal.html","searchKeys":["decimal","open override fun decimal(value: MoshiNode): BigDecimal","org.http4k.format.ConfigurableMoshi.decimal"]},{"name":"open override fun elements(value: MoshiNode): List<MoshiNode>","description":"org.http4k.format.ConfigurableMoshi.elements","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/elements.html","searchKeys":["elements","open override fun elements(value: MoshiNode): List<MoshiNode>","org.http4k.format.ConfigurableMoshi.elements"]},{"name":"open override fun fields(node: MoshiNode): List<Pair<String, MoshiNode>>","description":"org.http4k.format.ConfigurableMoshi.fields","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/fields.html","searchKeys":["fields","open override fun fields(node: MoshiNode): List<Pair<String, MoshiNode>>","org.http4k.format.ConfigurableMoshi.fields"]},{"name":"open override fun integer(value: MoshiNode): Long","description":"org.http4k.format.ConfigurableMoshi.integer","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/integer.html","searchKeys":["integer","open override fun integer(value: MoshiNode): Long","org.http4k.format.ConfigurableMoshi.integer"]},{"name":"open override fun text(value: MoshiNode): String","description":"org.http4k.format.ConfigurableMoshi.text","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/text.html","searchKeys":["text","open override fun text(value: MoshiNode): String","org.http4k.format.ConfigurableMoshi.text"]},{"name":"open override fun textValueOf(node: MoshiNode, name: String): String?","description":"org.http4k.format.ConfigurableMoshi.textValueOf","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: MoshiNode, name: String): String?","org.http4k.format.ConfigurableMoshi.textValueOf"]},{"name":"open override fun typeOf(value: MoshiNode): JsonType","description":"org.http4k.format.ConfigurableMoshi.typeOf","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: MoshiNode): JsonType","org.http4k.format.ConfigurableMoshi.typeOf"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableMoshi.defaultContentType","location":"http4k-format-moshi/org.http4k.format/-configurable-moshi/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableMoshi.defaultContentType"]},{"name":"sealed interface MoshiNode","description":"org.http4k.format.MoshiNode","location":"http4k-format-moshi/org.http4k.format/-moshi-node/index.html","searchKeys":["MoshiNode","sealed interface MoshiNode","org.http4k.format.MoshiNode"]},{"name":"val attributes: Map<String, MoshiNode>","description":"org.http4k.format.MoshiObject.attributes","location":"http4k-format-moshi/org.http4k.format/-moshi-object/attributes.html","searchKeys":["attributes","val attributes: Map<String, MoshiNode>","org.http4k.format.MoshiObject.attributes"]},{"name":"val elements: List<MoshiNode>","description":"org.http4k.format.MoshiArray.elements","location":"http4k-format-moshi/org.http4k.format/-moshi-array/elements.html","searchKeys":["elements","val elements: List<MoshiNode>","org.http4k.format.MoshiArray.elements"]},{"name":"val entries: EnumEntries<StrictnessMode>","description":"org.http4k.format.StrictnessMode.entries","location":"http4k-format-moshi/org.http4k.format/-strictness-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<StrictnessMode>","org.http4k.format.StrictnessMode.entries"]},{"name":"val value: Boolean","description":"org.http4k.format.MoshiBoolean.value","location":"http4k-format-moshi/org.http4k.format/-moshi-boolean/value.html","searchKeys":["value","val value: Boolean","org.http4k.format.MoshiBoolean.value"]},{"name":"val value: Double","description":"org.http4k.format.MoshiDecimal.value","location":"http4k-format-moshi/org.http4k.format/-moshi-decimal/value.html","searchKeys":["value","val value: Double","org.http4k.format.MoshiDecimal.value"]},{"name":"val value: Long","description":"org.http4k.format.MoshiInteger.value","location":"http4k-format-moshi/org.http4k.format/-moshi-integer/value.html","searchKeys":["value","val value: Long","org.http4k.format.MoshiInteger.value"]},{"name":"val value: String","description":"org.http4k.format.MoshiString.value","location":"http4k-format-moshi/org.http4k.format/-moshi-string/value.html","searchKeys":["value","val value: String","org.http4k.format.MoshiString.value"]},{"name":"Array","description":"org.http4k.format.JsonType.Array","location":"http4k-format-core/org.http4k.format/-json-type/-array/index.html","searchKeys":["Array","Array","org.http4k.format.JsonType.Array"]},{"name":"Boolean","description":"org.http4k.format.JsonType.Boolean","location":"http4k-format-core/org.http4k.format/-json-type/-boolean/index.html","searchKeys":["Boolean","Boolean","org.http4k.format.JsonType.Boolean"]},{"name":"Integer","description":"org.http4k.format.JsonType.Integer","location":"http4k-format-core/org.http4k.format/-json-type/-integer/index.html","searchKeys":["Integer","Integer","org.http4k.format.JsonType.Integer"]},{"name":"Null","description":"org.http4k.format.JsonType.Null","location":"http4k-format-core/org.http4k.format/-json-type/-null/index.html","searchKeys":["Null","Null","org.http4k.format.JsonType.Null"]},{"name":"Number","description":"org.http4k.format.JsonType.Number","location":"http4k-format-core/org.http4k.format/-json-type/-number/index.html","searchKeys":["Number","Number","org.http4k.format.JsonType.Number"]},{"name":"Object","description":"org.http4k.format.JsonType.Object","location":"http4k-format-core/org.http4k.format/-json-type/-object/index.html","searchKeys":["Object","Object","org.http4k.format.JsonType.Object"]},{"name":"String","description":"org.http4k.format.JsonType.String","location":"http4k-format-core/org.http4k.format/-json-type/-string/index.html","searchKeys":["String","String","org.http4k.format.JsonType.String"]},{"name":"abstract class AutoMarshalling","description":"org.http4k.format.AutoMarshalling","location":"http4k-format-core/org.http4k.format/-auto-marshalling/index.html","searchKeys":["AutoMarshalling","abstract class AutoMarshalling","org.http4k.format.AutoMarshalling"]},{"name":"abstract class AutoMarshallingJson<NODE : Any> : AutoMarshalling, Json<NODE> ","description":"org.http4k.format.AutoMarshallingJson","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/index.html","searchKeys":["AutoMarshallingJson","abstract class AutoMarshallingJson<NODE : Any> : AutoMarshalling, Json<NODE> ","org.http4k.format.AutoMarshallingJson"]},{"name":"abstract class AutoMarshallingXml : AutoMarshalling","description":"org.http4k.format.AutoMarshallingXml","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/index.html","searchKeys":["AutoMarshallingXml","abstract class AutoMarshallingXml : AutoMarshalling","org.http4k.format.AutoMarshallingXml"]},{"name":"abstract fun <LIST : Iterable<Pair<String, NODE>>> LIST.asJsonObject(): NODE","description":"org.http4k.format.Json.asJsonObject","location":"http4k-format-core/org.http4k.format/-json/as-json-object.html","searchKeys":["asJsonObject","abstract fun <LIST : Iterable<Pair<String, NODE>>> LIST.asJsonObject(): NODE","org.http4k.format.Json.asJsonObject"]},{"name":"abstract fun <OUT> bigDecimal(mapping: BiDiMapping<BigDecimal, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.bigDecimal","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/big-decimal.html","searchKeys":["bigDecimal","abstract fun <OUT> bigDecimal(mapping: BiDiMapping<BigDecimal, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.bigDecimal"]},{"name":"abstract fun <OUT> bigInteger(mapping: BiDiMapping<BigInteger, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.bigInteger","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/big-integer.html","searchKeys":["bigInteger","abstract fun <OUT> bigInteger(mapping: BiDiMapping<BigInteger, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.bigInteger"]},{"name":"abstract fun <OUT> boolean(mapping: BiDiMapping<Boolean, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.boolean","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/boolean.html","searchKeys":["boolean","abstract fun <OUT> boolean(mapping: BiDiMapping<Boolean, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.boolean"]},{"name":"abstract fun <OUT> double(mapping: BiDiMapping<Double, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.double","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/double.html","searchKeys":["double","abstract fun <OUT> double(mapping: BiDiMapping<Double, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.double"]},{"name":"abstract fun <OUT> int(mapping: BiDiMapping<Int, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.int","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/int.html","searchKeys":["int","abstract fun <OUT> int(mapping: BiDiMapping<Int, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.int"]},{"name":"abstract fun <OUT> long(mapping: BiDiMapping<Long, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.long","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/long.html","searchKeys":["long","abstract fun <OUT> long(mapping: BiDiMapping<Long, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.long"]},{"name":"abstract fun <OUT> text(mapping: BiDiMapping<String, OUT>): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.text","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/text.html","searchKeys":["text","abstract fun <OUT> text(mapping: BiDiMapping<String, OUT>): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.text"]},{"name":"abstract fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.AutoMarshalling.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-a.html","searchKeys":["asA","abstract fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.AutoMarshalling.asA"]},{"name":"abstract fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.AutoMarshalling.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-a.html","searchKeys":["asA","abstract fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.AutoMarshalling.asA"]},{"name":"abstract fun <T : Any> asA(j: NODE, target: KClass<T>): T","description":"org.http4k.format.AutoMarshallingJson.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/as-a.html","searchKeys":["asA","abstract fun <T : Any> asA(j: NODE, target: KClass<T>): T","org.http4k.format.AutoMarshallingJson.asA"]},{"name":"abstract fun <T : Iterable<NODE>> T.asJsonArray(): NODE","description":"org.http4k.format.Json.asJsonArray","location":"http4k-format-core/org.http4k.format/-json/as-json-array.html","searchKeys":["asJsonArray","abstract fun <T : Iterable<NODE>> T.asJsonArray(): NODE","org.http4k.format.Json.asJsonArray"]},{"name":"abstract fun Any.asXmlString(): String","description":"org.http4k.format.AutoMarshallingXml.asXmlString","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/as-xml-string.html","searchKeys":["asXmlString","abstract fun Any.asXmlString(): String","org.http4k.format.AutoMarshallingXml.asXmlString"]},{"name":"abstract fun BigDecimal?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun BigDecimal?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun BigInteger?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun BigInteger?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun Boolean?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun Boolean?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun Double?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun Double?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun Int?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun Int?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun Long?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun Long?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun NODE.asCompactJsonString(): String","description":"org.http4k.format.Json.asCompactJsonString","location":"http4k-format-core/org.http4k.format/-json/as-compact-json-string.html","searchKeys":["asCompactJsonString","abstract fun NODE.asCompactJsonString(): String","org.http4k.format.Json.asCompactJsonString"]},{"name":"abstract fun NODE.asPrettyJsonString(): String","description":"org.http4k.format.Json.asPrettyJsonString","location":"http4k-format-core/org.http4k.format/-json/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","abstract fun NODE.asPrettyJsonString(): String","org.http4k.format.Json.asPrettyJsonString"]},{"name":"abstract fun String.asJsonObject(): NODE","description":"org.http4k.format.Json.asJsonObject","location":"http4k-format-core/org.http4k.format/-json/as-json-object.html","searchKeys":["asJsonObject","abstract fun String.asJsonObject(): NODE","org.http4k.format.Json.asJsonObject"]},{"name":"abstract fun String?.asJsonValue(): NODE","description":"org.http4k.format.Json.asJsonValue","location":"http4k-format-core/org.http4k.format/-json/as-json-value.html","searchKeys":["asJsonValue","abstract fun String?.asJsonValue(): NODE","org.http4k.format.Json.asJsonValue"]},{"name":"abstract fun asFormatString(input: Any): String","description":"org.http4k.format.AutoMarshalling.asFormatString","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-format-string.html","searchKeys":["asFormatString","abstract fun asFormatString(input: Any): String","org.http4k.format.AutoMarshalling.asFormatString"]},{"name":"abstract fun asJsonObject(input: Any): NODE","description":"org.http4k.format.AutoMarshallingJson.asJsonObject","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/as-json-object.html","searchKeys":["asJsonObject","abstract fun asJsonObject(input: Any): NODE","org.http4k.format.AutoMarshallingJson.asJsonObject"]},{"name":"abstract fun bool(value: NODE): Boolean","description":"org.http4k.format.Json.bool","location":"http4k-format-core/org.http4k.format/-json/bool.html","searchKeys":["bool","abstract fun bool(value: NODE): Boolean","org.http4k.format.Json.bool"]},{"name":"abstract fun decimal(value: NODE): BigDecimal","description":"org.http4k.format.Json.decimal","location":"http4k-format-core/org.http4k.format/-json/decimal.html","searchKeys":["decimal","abstract fun decimal(value: NODE): BigDecimal","org.http4k.format.Json.decimal"]},{"name":"abstract fun done(): BUILDER","description":"org.http4k.format.AutoMappingConfiguration.done","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/done.html","searchKeys":["done","abstract fun done(): BUILDER","org.http4k.format.AutoMappingConfiguration.done"]},{"name":"abstract fun elements(value: NODE): Iterable<NODE>","description":"org.http4k.format.Json.elements","location":"http4k-format-core/org.http4k.format/-json/elements.html","searchKeys":["elements","abstract fun elements(value: NODE): Iterable<NODE>","org.http4k.format.Json.elements"]},{"name":"abstract fun fields(node: NODE): Iterable<Pair<String, NODE>>","description":"org.http4k.format.Json.fields","location":"http4k-format-core/org.http4k.format/-json/fields.html","searchKeys":["fields","abstract fun fields(node: NODE): Iterable<Pair<String, NODE>>","org.http4k.format.Json.fields"]},{"name":"abstract fun integer(value: NODE): Long","description":"org.http4k.format.Json.integer","location":"http4k-format-core/org.http4k.format/-json/integer.html","searchKeys":["integer","abstract fun integer(value: NODE): Long","org.http4k.format.Json.integer"]},{"name":"abstract fun text(value: NODE): String","description":"org.http4k.format.Json.text","location":"http4k-format-core/org.http4k.format/-json/text.html","searchKeys":["text","abstract fun text(value: NODE): String","org.http4k.format.Json.text"]},{"name":"abstract fun textValueOf(node: NODE, name: String): String?","description":"org.http4k.format.Json.textValueOf","location":"http4k-format-core/org.http4k.format/-json/text-value-of.html","searchKeys":["textValueOf","abstract fun textValueOf(node: NODE, name: String): String?","org.http4k.format.Json.textValueOf"]},{"name":"abstract fun typeOf(value: NODE): JsonType","description":"org.http4k.format.Json.typeOf","location":"http4k-format-core/org.http4k.format/-json/type-of.html","searchKeys":["typeOf","abstract fun typeOf(value: NODE): JsonType","org.http4k.format.Json.typeOf"]},{"name":"abstract val defaultContentType: ContentType","description":"org.http4k.format.AutoMarshalling.defaultContentType","location":"http4k-format-core/org.http4k.format/-auto-marshalling/default-content-type.html","searchKeys":["defaultContentType","abstract val defaultContentType: ContentType","org.http4k.format.AutoMarshalling.defaultContentType"]},{"name":"class AutoContentNegotiator<T>(defaultLens: BiDiBodyLens<T>, alternateLenses: List<BiDiBodyLens<T>>) : Iterable<BiDiBodyLens<T>> , LensExtractor<HttpMessage, T> ","description":"org.http4k.format.AutoContentNegotiator","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/index.html","searchKeys":["AutoContentNegotiator","class AutoContentNegotiator<T>(defaultLens: BiDiBodyLens<T>, alternateLenses: List<BiDiBodyLens<T>>) : Iterable<BiDiBodyLens<T>> , LensExtractor<HttpMessage, T> ","org.http4k.format.AutoContentNegotiator"]},{"name":"constructor()","description":"org.http4k.format.AutoMarshalling.AutoMarshalling","location":"http4k-format-core/org.http4k.format/-auto-marshalling/-auto-marshalling.html","searchKeys":["AutoMarshalling","constructor()","org.http4k.format.AutoMarshalling.AutoMarshalling"]},{"name":"constructor()","description":"org.http4k.format.AutoMarshallingJson.AutoMarshallingJson","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/-auto-marshalling-json.html","searchKeys":["AutoMarshallingJson","constructor()","org.http4k.format.AutoMarshallingJson.AutoMarshallingJson"]},{"name":"constructor()","description":"org.http4k.format.AutoMarshallingXml.AutoMarshallingXml","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/-auto-marshalling-xml.html","searchKeys":["AutoMarshallingXml","constructor()","org.http4k.format.AutoMarshallingXml.AutoMarshallingXml"]},{"name":"constructor(defaultLens: BiDiBodyLens<T>, alternateLenses: List<BiDiBodyLens<T>>)","description":"org.http4k.format.AutoContentNegotiator.AutoContentNegotiator","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/-auto-content-negotiator.html","searchKeys":["AutoContentNegotiator","constructor(defaultLens: BiDiBodyLens<T>, alternateLenses: List<BiDiBodyLens<T>>)","org.http4k.format.AutoContentNegotiator.AutoContentNegotiator"]},{"name":"enum JsonType : Enum<JsonType> ","description":"org.http4k.format.JsonType","location":"http4k-format-core/org.http4k.format/-json-type/index.html","searchKeys":["JsonType","enum JsonType : Enum<JsonType> ","org.http4k.format.JsonType"]},{"name":"fun <T : Any> NODE.asA(target: KClass<T>): T","description":"org.http4k.format.AutoMarshallingJson.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/as-a.html","searchKeys":["asA","fun <T : Any> NODE.asA(target: KClass<T>): T","org.http4k.format.AutoMarshallingJson.asA"]},{"name":"fun <T : Any> String.asA(target: KClass<T>): T","description":"org.http4k.format.AutoMarshalling.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-a.html","searchKeys":["asA","fun <T : Any> String.asA(target: KClass<T>): T","org.http4k.format.AutoMarshalling.asA"]},{"name":"fun <T> AutoMappingConfiguration<T>.withStandardMappings(): AutoMappingConfiguration<T>","description":"org.http4k.format.withStandardMappings","location":"http4k-format-core/org.http4k.format/with-standard-mappings.html","searchKeys":["withStandardMappings","fun <T> AutoMappingConfiguration<T>.withStandardMappings(): AutoMappingConfiguration<T>","org.http4k.format.withStandardMappings"]},{"name":"fun <T> ContentNegotiation.Companion.auto(defaultLens: BiDiBodyLens<T>, vararg lenses: BiDiBodyLens<T>): AutoContentNegotiator<T>","description":"org.http4k.format.auto","location":"http4k-format-core/org.http4k.format/auto.html","searchKeys":["auto","fun <T> ContentNegotiation.Companion.auto(defaultLens: BiDiBodyLens<T>, vararg lenses: BiDiBodyLens<T>): AutoContentNegotiator<T>","org.http4k.format.auto"]},{"name":"fun Any.asJsonObject(): NODE","description":"org.http4k.format.AutoMarshallingJson.asJsonObject","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/as-json-object.html","searchKeys":["asJsonObject","fun Any.asJsonObject(): NODE","org.http4k.format.AutoMarshallingJson.asJsonObject"]},{"name":"fun httpBodyLens(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType): BiDiBodyLensSpec<String>","description":"org.http4k.format.httpBodyLens","location":"http4k-format-core/org.http4k.format/http-body-lens.html","searchKeys":["httpBodyLens","fun httpBodyLens(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType): BiDiBodyLensSpec<String>","org.http4k.format.httpBodyLens"]},{"name":"fun outbound(request: Request): BiDiBodyLens<T>","description":"org.http4k.format.AutoContentNegotiator.outbound","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/outbound.html","searchKeys":["outbound","fun outbound(request: Request): BiDiBodyLens<T>","org.http4k.format.AutoContentNegotiator.outbound"]},{"name":"fun toBodyLens(): BodyLens<T>","description":"org.http4k.format.AutoContentNegotiator.toBodyLens","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/to-body-lens.html","searchKeys":["toBodyLens","fun toBodyLens(): BodyLens<T>","org.http4k.format.AutoContentNegotiator.toBodyLens"]},{"name":"fun valueOf(value: String): JsonType","description":"org.http4k.format.JsonType.valueOf","location":"http4k-format-core/org.http4k.format/-json-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): JsonType","org.http4k.format.JsonType.valueOf"]},{"name":"fun values(): Array<JsonType>","description":"org.http4k.format.JsonType.values","location":"http4k-format-core/org.http4k.format/-json-type/values.html","searchKeys":["values","fun values(): Array<JsonType>","org.http4k.format.JsonType.values"]},{"name":"inline fun <BUILD, VALUE : Value<BigDecimal>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, BigDecimal>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<BigDecimal>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, BigDecimal>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<BigInteger>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, BigInteger>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<BigInteger>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, BigInteger>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<Boolean>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Boolean>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<Boolean>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Boolean>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<Double>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Double>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<Double>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Double>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<Int>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Int>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<Int>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Int>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<Long>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Long>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<Long>> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, Long>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILD, VALUE : Value<T>, T : Any> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, T>): AutoMappingConfiguration<BUILD>","description":"org.http4k.format.value","location":"http4k-format-core/org.http4k.format/value.html","searchKeys":["value","inline fun <BUILD, VALUE : Value<T>, T : Any> AutoMappingConfiguration<BUILD>.value(fn: ValueFactory<VALUE, T>): AutoMappingConfiguration<BUILD>","org.http4k.format.value"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.bigDecimal(noinline inFn: (BigDecimal) -> OUT, noinline outFn: (OUT) -> BigDecimal): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.bigDecimal","location":"http4k-format-core/org.http4k.format/big-decimal.html","searchKeys":["bigDecimal","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.bigDecimal(noinline inFn: (BigDecimal) -> OUT, noinline outFn: (OUT) -> BigDecimal): AutoMappingConfiguration<BUILDER>","org.http4k.format.bigDecimal"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.bigInteger(noinline inFn: (BigInteger) -> OUT, noinline outFn: (OUT) -> BigInteger): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.bigInteger","location":"http4k-format-core/org.http4k.format/big-integer.html","searchKeys":["bigInteger","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.bigInteger(noinline inFn: (BigInteger) -> OUT, noinline outFn: (OUT) -> BigInteger): AutoMappingConfiguration<BUILDER>","org.http4k.format.bigInteger"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.boolean(noinline inFn: (Boolean) -> OUT, noinline outFn: (OUT) -> Boolean): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.boolean","location":"http4k-format-core/org.http4k.format/boolean.html","searchKeys":["boolean","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.boolean(noinline inFn: (Boolean) -> OUT, noinline outFn: (OUT) -> Boolean): AutoMappingConfiguration<BUILDER>","org.http4k.format.boolean"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.double(noinline outFn: (OUT) -> Double, noinline inFn: (Double) -> OUT): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.double","location":"http4k-format-core/org.http4k.format/double.html","searchKeys":["double","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.double(noinline outFn: (OUT) -> Double, noinline inFn: (Double) -> OUT): AutoMappingConfiguration<BUILDER>","org.http4k.format.double"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.duration(noinline inFn: (Duration) -> OUT, noinline outFn: (OUT) -> Duration): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.duration","location":"http4k-format-core/org.http4k.format/duration.html","searchKeys":["duration","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.duration(noinline inFn: (Duration) -> OUT, noinline outFn: (OUT) -> Duration): AutoMappingConfiguration<BUILDER>","org.http4k.format.duration"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.instant(noinline inFn: (Instant) -> OUT, noinline outFn: (OUT) -> Instant): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.instant","location":"http4k-format-core/org.http4k.format/instant.html","searchKeys":["instant","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.instant(noinline inFn: (Instant) -> OUT, noinline outFn: (OUT) -> Instant): AutoMappingConfiguration<BUILDER>","org.http4k.format.instant"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.int(noinline inFn: (Int) -> OUT, noinline outFn: (OUT) -> Int): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.int","location":"http4k-format-core/org.http4k.format/int.html","searchKeys":["int","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.int(noinline inFn: (Int) -> OUT, noinline outFn: (OUT) -> Int): AutoMappingConfiguration<BUILDER>","org.http4k.format.int"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localDate(noinline inFn: (LocalDate) -> OUT, noinline outFn: (OUT) -> LocalDate): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.localDate","location":"http4k-format-core/org.http4k.format/local-date.html","searchKeys":["localDate","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localDate(noinline inFn: (LocalDate) -> OUT, noinline outFn: (OUT) -> LocalDate): AutoMappingConfiguration<BUILDER>","org.http4k.format.localDate"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localDateTime(noinline inFn: (LocalDateTime) -> OUT, noinline outFn: (OUT) -> LocalDateTime): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.localDateTime","location":"http4k-format-core/org.http4k.format/local-date-time.html","searchKeys":["localDateTime","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localDateTime(noinline inFn: (LocalDateTime) -> OUT, noinline outFn: (OUT) -> LocalDateTime): AutoMappingConfiguration<BUILDER>","org.http4k.format.localDateTime"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localTime(noinline inFn: (LocalTime) -> OUT, noinline outFn: (OUT) -> LocalTime): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.localTime","location":"http4k-format-core/org.http4k.format/local-time.html","searchKeys":["localTime","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.localTime(noinline inFn: (LocalTime) -> OUT, noinline outFn: (OUT) -> LocalTime): AutoMappingConfiguration<BUILDER>","org.http4k.format.localTime"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.long(noinline inFn: (Long) -> OUT, noinline outFn: (OUT) -> Long): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.long","location":"http4k-format-core/org.http4k.format/long.html","searchKeys":["long","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.long(noinline inFn: (Long) -> OUT, noinline outFn: (OUT) -> Long): AutoMappingConfiguration<BUILDER>","org.http4k.format.long"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.offsetDateTime(noinline inFn: (OffsetDateTime) -> OUT, noinline outFn: (OUT) -> OffsetDateTime): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.offsetDateTime","location":"http4k-format-core/org.http4k.format/offset-date-time.html","searchKeys":["offsetDateTime","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.offsetDateTime(noinline inFn: (OffsetDateTime) -> OUT, noinline outFn: (OUT) -> OffsetDateTime): AutoMappingConfiguration<BUILDER>","org.http4k.format.offsetDateTime"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.offsetTime(noinline inFn: (OffsetTime) -> OUT, noinline outFn: (OUT) -> OffsetTime): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.offsetTime","location":"http4k-format-core/org.http4k.format/offset-time.html","searchKeys":["offsetTime","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.offsetTime(noinline inFn: (OffsetTime) -> OUT, noinline outFn: (OUT) -> OffsetTime): AutoMappingConfiguration<BUILDER>","org.http4k.format.offsetTime"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline inFn: (String) -> OUT, noinline outFn: (OUT) -> String): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.text","location":"http4k-format-core/org.http4k.format/text.html","searchKeys":["text","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline inFn: (String) -> OUT, noinline outFn: (OUT) -> String): AutoMappingConfiguration<BUILDER>","org.http4k.format.text"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline mapping: (OUT) -> String): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.text","location":"http4k-format-core/org.http4k.format/text.html","searchKeys":["text","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline mapping: (OUT) -> String): AutoMappingConfiguration<BUILDER>","org.http4k.format.text"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline mapping: (String) -> OUT): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.text","location":"http4k-format-core/org.http4k.format/text.html","searchKeys":["text","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.text(noinline mapping: (String) -> OUT): AutoMappingConfiguration<BUILDER>","org.http4k.format.text"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.uri(noinline inFn: (Uri) -> OUT, noinline outFn: (OUT) -> Uri): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.uri","location":"http4k-format-core/org.http4k.format/uri.html","searchKeys":["uri","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.uri(noinline inFn: (Uri) -> OUT, noinline outFn: (OUT) -> Uri): AutoMappingConfiguration<BUILDER>","org.http4k.format.uri"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.uuid(noinline inFn: (UUID) -> OUT, noinline outFn: (OUT) -> UUID): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.uuid","location":"http4k-format-core/org.http4k.format/uuid.html","searchKeys":["uuid","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.uuid(noinline inFn: (UUID) -> OUT, noinline outFn: (OUT) -> UUID): AutoMappingConfiguration<BUILDER>","org.http4k.format.uuid"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.yearMonth(noinline inFn: (YearMonth) -> OUT, noinline outFn: (OUT) -> YearMonth): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.yearMonth","location":"http4k-format-core/org.http4k.format/year-month.html","searchKeys":["yearMonth","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.yearMonth(noinline inFn: (YearMonth) -> OUT, noinline outFn: (OUT) -> YearMonth): AutoMappingConfiguration<BUILDER>","org.http4k.format.yearMonth"]},{"name":"inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.zonedDateTime(noinline inFn: (ZonedDateTime) -> OUT, noinline outFn: (OUT) -> ZonedDateTime): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.zonedDateTime","location":"http4k-format-core/org.http4k.format/zoned-date-time.html","searchKeys":["zonedDateTime","inline fun <BUILDER, OUT> AutoMappingConfiguration<BUILDER>.zonedDateTime(noinline inFn: (ZonedDateTime) -> OUT, noinline outFn: (OUT) -> ZonedDateTime): AutoMappingConfiguration<BUILDER>","org.http4k.format.zonedDateTime"]},{"name":"inline fun <IN : Any, OUT : Any> autoLens(lens: BiDiLensSpec<IN, String>): BiDiLensSpec<IN, OUT>","description":"org.http4k.format.AutoMarshalling.autoLens","location":"http4k-format-core/org.http4k.format/-auto-marshalling/auto-lens.html","searchKeys":["autoLens","inline fun <IN : Any, OUT : Any> autoLens(lens: BiDiLensSpec<IN, String>): BiDiLensSpec<IN, OUT>","org.http4k.format.AutoMarshalling.autoLens"]},{"name":"inline fun <IN : Any, OUT : Any> convert(input: IN): OUT","description":"org.http4k.format.AutoMarshalling.convert","location":"http4k-format-core/org.http4k.format/-auto-marshalling/convert.html","searchKeys":["convert","inline fun <IN : Any, OUT : Any> convert(input: IN): OUT","org.http4k.format.AutoMarshalling.convert"]},{"name":"inline fun <OUT : Any> BiDiLensSpec<HttpMessage, String>.auto(): BiDiLensSpec<HttpMessage, OUT>","description":"org.http4k.format.AutoMarshalling.auto","location":"http4k-format-core/org.http4k.format/-auto-marshalling/auto.html","searchKeys":["auto","inline fun <OUT : Any> BiDiLensSpec<HttpMessage, String>.auto(): BiDiLensSpec<HttpMessage, OUT>","org.http4k.format.AutoMarshalling.auto"]},{"name":"inline fun <OUT : Any> BiDiLensSpec<Request, String>.auto(): BiDiLensSpec<Request, OUT>","description":"org.http4k.format.AutoMarshalling.auto","location":"http4k-format-core/org.http4k.format/-auto-marshalling/auto.html","searchKeys":["auto","inline fun <OUT : Any> BiDiLensSpec<Request, String>.auto(): BiDiLensSpec<Request, OUT>","org.http4k.format.AutoMarshalling.auto"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = APPLICATION_XML): BiDiBodyLensSpec<T>","description":"org.http4k.format.AutoMarshallingXml.auto","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = APPLICATION_XML): BiDiBodyLensSpec<T>","org.http4k.format.AutoMarshallingXml.auto"]},{"name":"inline fun <T : Any> String.asA(): T","description":"org.http4k.format.AutoMarshallingXml.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/as-a.html","searchKeys":["asA","inline fun <T : Any> String.asA(): T","org.http4k.format.AutoMarshallingXml.asA"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.AutoMarshallingXml.auto","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.AutoMarshallingXml.auto"]},{"name":"inline fun <T : Any> asA(input: InputStream): T","description":"org.http4k.format.AutoMarshalling.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-a.html","searchKeys":["asA","inline fun <T : Any> asA(input: InputStream): T","org.http4k.format.AutoMarshalling.asA"]},{"name":"inline fun <T : Any> asA(input: String): T","description":"org.http4k.format.AutoMarshalling.asA","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-a.html","searchKeys":["asA","inline fun <T : Any> asA(input: String): T","org.http4k.format.AutoMarshalling.asA"]},{"name":"interface AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/index.html","searchKeys":["AutoMappingConfiguration","interface AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration"]},{"name":"interface Json<NODE>","description":"org.http4k.format.Json","location":"http4k-format-core/org.http4k.format/-json/index.html","searchKeys":["Json","interface Json<NODE>","org.http4k.format.Json"]},{"name":"object AutoMarshallingEvents","description":"org.http4k.events.AutoMarshallingEvents","location":"http4k-format-core/org.http4k.events/-auto-marshalling-events/index.html","searchKeys":["AutoMarshallingEvents","object AutoMarshallingEvents","org.http4k.events.AutoMarshallingEvents"]},{"name":"open fun <IN : Any> BiDiLensSpec<IN, String>.json(): BiDiLensSpec<IN, NODE>","description":"org.http4k.format.Json.json","location":"http4k-format-core/org.http4k.format/-json/json.html","searchKeys":["json","open fun <IN : Any> BiDiLensSpec<IN, String>.json(): BiDiLensSpec<IN, NODE>","org.http4k.format.Json.json"]},{"name":"open fun <IN : Any> jsonLens(spec: BiDiLensSpec<IN, String>): BiDiLensSpec<IN, NODE>","description":"org.http4k.format.Json.jsonLens","location":"http4k-format-core/org.http4k.format/-json/json-lens.html","searchKeys":["jsonLens","open fun <IN : Any> jsonLens(spec: BiDiLensSpec<IN, String>): BiDiLensSpec<IN, NODE>","org.http4k.format.Json.jsonLens"]},{"name":"open fun <T : NODE> array(value: Iterable<T>): NODE","description":"org.http4k.format.Json.array","location":"http4k-format-core/org.http4k.format/-json/array.html","searchKeys":["array","open fun <T : NODE> array(value: Iterable<T>): NODE","org.http4k.format.Json.array"]},{"name":"open fun <T : NODE> array(value: T): NODE","description":"org.http4k.format.Json.array","location":"http4k-format-core/org.http4k.format/-json/array.html","searchKeys":["array","open fun <T : NODE> array(value: T): NODE","org.http4k.format.Json.array"]},{"name":"open fun <T : NODE> obj(value: Iterable<Pair<String, T>>): NODE","description":"org.http4k.format.Json.obj","location":"http4k-format-core/org.http4k.format/-json/obj.html","searchKeys":["obj","open fun <T : NODE> obj(value: Iterable<Pair<String, T>>): NODE","org.http4k.format.Json.obj"]},{"name":"open fun <T : NODE> obj(vararg fields: Pair<String, T>): NODE","description":"org.http4k.format.Json.obj","location":"http4k-format-core/org.http4k.format/-json/obj.html","searchKeys":["obj","open fun <T : NODE> obj(vararg fields: Pair<String, T>): NODE","org.http4k.format.Json.obj"]},{"name":"open fun Body.Companion.json(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<NODE>","description":"org.http4k.format.Json.json","location":"http4k-format-core/org.http4k.format/-json/json.html","searchKeys":["json","open fun Body.Companion.json(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<NODE>","org.http4k.format.Json.json"]},{"name":"open fun WsMessage.Companion.json(): BiDiWsMessageLensSpec<NODE>","description":"org.http4k.format.Json.json","location":"http4k-format-core/org.http4k.format/-json/json.html","searchKeys":["json","open fun WsMessage.Companion.json(): BiDiWsMessageLensSpec<NODE>","org.http4k.format.Json.json"]},{"name":"open fun asInputStream(input: Any): InputStream","description":"org.http4k.format.AutoMarshalling.asInputStream","location":"http4k-format-core/org.http4k.format/-auto-marshalling/as-input-stream.html","searchKeys":["asInputStream","open fun asInputStream(input: Any): InputStream","org.http4k.format.AutoMarshalling.asInputStream"]},{"name":"open fun body(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<NODE>","description":"org.http4k.format.Json.body","location":"http4k-format-core/org.http4k.format/-json/body.html","searchKeys":["body","open fun body(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<NODE>","org.http4k.format.Json.body"]},{"name":"open fun boolean(value: Boolean): NODE","description":"org.http4k.format.Json.boolean","location":"http4k-format-core/org.http4k.format/-json/boolean.html","searchKeys":["boolean","open fun boolean(value: Boolean): NODE","org.http4k.format.Json.boolean"]},{"name":"open fun compact(node: NODE): String","description":"org.http4k.format.Json.compact","location":"http4k-format-core/org.http4k.format/-json/compact.html","searchKeys":["compact","open fun compact(node: NODE): String","org.http4k.format.Json.compact"]},{"name":"open fun compactify(input: String): String","description":"org.http4k.format.Json.compactify","location":"http4k-format-core/org.http4k.format/-json/compactify.html","searchKeys":["compactify","open fun compactify(input: String): String","org.http4k.format.Json.compactify"]},{"name":"open fun nullNode(): NODE","description":"org.http4k.format.Json.nullNode","location":"http4k-format-core/org.http4k.format/-json/null-node.html","searchKeys":["nullNode","open fun nullNode(): NODE","org.http4k.format.Json.nullNode"]},{"name":"open fun number(value: BigDecimal): NODE","description":"org.http4k.format.Json.number","location":"http4k-format-core/org.http4k.format/-json/number.html","searchKeys":["number","open fun number(value: BigDecimal): NODE","org.http4k.format.Json.number"]},{"name":"open fun number(value: BigInteger): NODE","description":"org.http4k.format.Json.number","location":"http4k-format-core/org.http4k.format/-json/number.html","searchKeys":["number","open fun number(value: BigInteger): NODE","org.http4k.format.Json.number"]},{"name":"open fun number(value: Double): NODE","description":"org.http4k.format.Json.number","location":"http4k-format-core/org.http4k.format/-json/number.html","searchKeys":["number","open fun number(value: Double): NODE","org.http4k.format.Json.number"]},{"name":"open fun number(value: Int): NODE","description":"org.http4k.format.Json.number","location":"http4k-format-core/org.http4k.format/-json/number.html","searchKeys":["number","open fun number(value: Int): NODE","org.http4k.format.Json.number"]},{"name":"open fun number(value: Long): NODE","description":"org.http4k.format.Json.number","location":"http4k-format-core/org.http4k.format/-json/number.html","searchKeys":["number","open fun number(value: Long): NODE","org.http4k.format.Json.number"]},{"name":"open fun obj(): NODE","description":"org.http4k.format.Json.obj","location":"http4k-format-core/org.http4k.format/-json/obj.html","searchKeys":["obj","open fun obj(): NODE","org.http4k.format.Json.obj"]},{"name":"open fun parse(input: String): NODE","description":"org.http4k.format.Json.parse","location":"http4k-format-core/org.http4k.format/-json/parse.html","searchKeys":["parse","open fun parse(input: String): NODE","org.http4k.format.Json.parse"]},{"name":"open fun prettify(input: String): String","description":"org.http4k.format.Json.prettify","location":"http4k-format-core/org.http4k.format/-json/prettify.html","searchKeys":["prettify","open fun prettify(input: String): String","org.http4k.format.Json.prettify"]},{"name":"open fun pretty(node: NODE): String","description":"org.http4k.format.Json.pretty","location":"http4k-format-core/org.http4k.format/-json/pretty.html","searchKeys":["pretty","open fun pretty(node: NODE): String","org.http4k.format.Json.pretty"]},{"name":"open fun prohibitStrings(): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.AutoMappingConfiguration.prohibitStrings","location":"http4k-format-core/org.http4k.format/-auto-mapping-configuration/prohibit-strings.html","searchKeys":["prohibitStrings","open fun prohibitStrings(): AutoMappingConfiguration<BUILDER>","org.http4k.format.AutoMappingConfiguration.prohibitStrings"]},{"name":"open fun string(value: String): NODE","description":"org.http4k.format.Json.string","location":"http4k-format-core/org.http4k.format/-json/string.html","searchKeys":["string","open fun string(value: String): NODE","org.http4k.format.Json.string"]},{"name":"open operator fun <T> invoke(fn: Json<NODE>.() -> T): T","description":"org.http4k.format.Json.invoke","location":"http4k-format-core/org.http4k.format/-json/invoke.html","searchKeys":["invoke","open operator fun <T> invoke(fn: Json<NODE>.() -> T): T","org.http4k.format.Json.invoke"]},{"name":"open operator override fun invoke(target: HttpMessage): T","description":"org.http4k.format.AutoContentNegotiator.invoke","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: HttpMessage): T","org.http4k.format.AutoContentNegotiator.invoke"]},{"name":"open operator override fun iterator(): Iterator<BiDiBodyLens<T>>","description":"org.http4k.format.AutoContentNegotiator.iterator","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<BiDiBodyLens<T>>","org.http4k.format.AutoContentNegotiator.iterator"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.AutoMarshallingJson.asFormatString","location":"http4k-format-core/org.http4k.format/-auto-marshalling-json/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.AutoMarshallingJson.asFormatString"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.AutoMarshallingXml.asFormatString","location":"http4k-format-core/org.http4k.format/-auto-marshalling-xml/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.AutoMarshallingXml.asFormatString"]},{"name":"operator fun invoke(accept: Accept?): BiDiBodyLens<T>","description":"org.http4k.format.AutoContentNegotiator.invoke","location":"http4k-format-core/org.http4k.format/-auto-content-negotiator/invoke.html","searchKeys":["invoke","operator fun invoke(accept: Accept?): BiDiBodyLens<T>","org.http4k.format.AutoContentNegotiator.invoke"]},{"name":"operator fun invoke(json: AutoMarshalling, print: (String) -> Unit = ::println): (Event) -> Unit","description":"org.http4k.events.AutoMarshallingEvents.invoke","location":"http4k-format-core/org.http4k.events/-auto-marshalling-events/invoke.html","searchKeys":["invoke","operator fun invoke(json: AutoMarshalling, print: (String) -> Unit = ::println): (Event) -> Unit","org.http4k.events.AutoMarshallingEvents.invoke"]},{"name":"val entries: EnumEntries<JsonType>","description":"org.http4k.format.JsonType.entries","location":"http4k-format-core/org.http4k.format/-json-type/entries.html","searchKeys":["entries","val entries: EnumEntries<JsonType>","org.http4k.format.JsonType.entries"]},{"name":"constructor(mapper: ObjectMapper, defaultContentType: ContentType = TEXT_YAML)","description":"org.http4k.format.ConfigurableJacksonYaml.ConfigurableJacksonYaml","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/-configurable-jackson-yaml.html","searchKeys":["ConfigurableJacksonYaml","constructor(mapper: ObjectMapper, defaultContentType: ContentType = TEXT_YAML)","org.http4k.format.ConfigurableJacksonYaml.ConfigurableJacksonYaml"]},{"name":"fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJacksonYaml","description":"org.http4k.format.JacksonYaml.custom","location":"http4k-format-jackson-yaml/org.http4k.format/-jackson-yaml/custom.html","searchKeys":["custom","fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJacksonYaml","org.http4k.format.JacksonYaml.custom"]},{"name":"inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","description":"org.http4k.format.ConfigurableJacksonYaml.yaml","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/yaml.html","searchKeys":["yaml","inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","org.http4k.format.ConfigurableJacksonYaml.yaml"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJacksonYaml.auto","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJacksonYaml.auto"]},{"name":"inline fun <T : Any> HttpMessage.yaml(): T","description":"org.http4k.format.ConfigurableJacksonYaml.yaml","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/yaml.html","searchKeys":["yaml","inline fun <T : Any> HttpMessage.yaml(): T","org.http4k.format.ConfigurableJacksonYaml.yaml"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableJacksonYaml.auto","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableJacksonYaml.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJacksonYaml.autoBody","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJacksonYaml.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableJacksonYaml.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-jackson-yaml/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableJacksonYaml.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableJacksonYaml.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-jackson-yaml/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableJacksonYaml.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object JacksonYaml : ConfigurableJacksonYaml","description":"org.http4k.format.JacksonYaml","location":"http4k-format-jackson-yaml/org.http4k.format/-jackson-yaml/index.html","searchKeys":["JacksonYaml","object JacksonYaml : ConfigurableJacksonYaml","org.http4k.format.JacksonYaml"]},{"name":"open class ConfigurableJacksonYaml(val mapper: ObjectMapper, val defaultContentType: ContentType = TEXT_YAML) : AutoMarshalling","description":"org.http4k.format.ConfigurableJacksonYaml","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/index.html","searchKeys":["ConfigurableJacksonYaml","open class ConfigurableJacksonYaml(val mapper: ObjectMapper, val defaultContentType: ContentType = TEXT_YAML) : AutoMarshalling","org.http4k.format.ConfigurableJacksonYaml"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJacksonYaml.asA","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableJacksonYaml.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJacksonYaml.asA","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableJacksonYaml.asA"]},{"name":"open override fun asFormatString(input: Any): String","description":"org.http4k.format.ConfigurableJacksonYaml.asFormatString","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/as-format-string.html","searchKeys":["asFormatString","open override fun asFormatString(input: Any): String","org.http4k.format.ConfigurableJacksonYaml.asFormatString"]},{"name":"open override fun asInputStream(input: Any): InputStream","description":"org.http4k.format.ConfigurableJacksonYaml.asInputStream","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/as-input-stream.html","searchKeys":["asInputStream","open override fun asInputStream(input: Any): InputStream","org.http4k.format.ConfigurableJacksonYaml.asInputStream"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableJacksonYaml.defaultContentType","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableJacksonYaml.defaultContentType"]},{"name":"val mapper: ObjectMapper","description":"org.http4k.format.ConfigurableJacksonYaml.mapper","location":"http4k-format-jackson-yaml/org.http4k.format/-configurable-jackson-yaml/mapper.html","searchKeys":["mapper","val mapper: ObjectMapper","org.http4k.format.ConfigurableJacksonYaml.mapper"]},{"name":"abstract fun to(uri: Uri)","description":"org.http4k.webdriver.Http4KNavigation.to","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4-k-navigation/to.html","searchKeys":["to","abstract fun to(uri: Uri)","org.http4k.webdriver.Http4KNavigation.to"]},{"name":"class Http4kWebDriver(initialHandler: HttpHandler, clock: Clock = Clock.systemDefaultZone()) : WebDriver","description":"org.http4k.webdriver.Http4kWebDriver","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/index.html","searchKeys":["Http4kWebDriver","class Http4kWebDriver(initialHandler: HttpHandler, clock: Clock = Clock.systemDefaultZone()) : WebDriver","org.http4k.webdriver.Http4kWebDriver"]},{"name":"class JSoupElementFinder(navigate: Navigate, getURL: GetURL, element: Element) : SearchContext","description":"org.http4k.webdriver.JSoupElementFinder","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-element-finder/index.html","searchKeys":["JSoupElementFinder","class JSoupElementFinder(navigate: Navigate, getURL: GetURL, element: Element) : SearchContext","org.http4k.webdriver.JSoupElementFinder"]},{"name":"constructor(initialHandler: HttpHandler, clock: Clock = Clock.systemDefaultZone())","description":"org.http4k.webdriver.Http4kWebDriver.Http4kWebDriver","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/-http4k-web-driver.html","searchKeys":["Http4kWebDriver","constructor(initialHandler: HttpHandler, clock: Clock = Clock.systemDefaultZone())","org.http4k.webdriver.Http4kWebDriver.Http4kWebDriver"]},{"name":"constructor(navigate: Navigate, getURL: GetURL, element: Element)","description":"org.http4k.webdriver.JSoupElementFinder.JSoupElementFinder","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-element-finder/-j-soup-element-finder.html","searchKeys":["JSoupElementFinder","constructor(navigate: Navigate, getURL: GetURL, element: Element)","org.http4k.webdriver.JSoupElementFinder.JSoupElementFinder"]},{"name":"constructor(navigate: Navigate, getURL: GetURL, element: Element)","description":"org.http4k.webdriver.JSoupWebElement.JSoupWebElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/-j-soup-web-element.html","searchKeys":["JSoupWebElement","constructor(navigate: Navigate, getURL: GetURL, element: Element)","org.http4k.webdriver.JSoupWebElement.JSoupWebElement"]},{"name":"constructor(status: Status, navigate: Navigate, getURL: GetURL, handle: UUID, url: String, contents: String, previous: Page? = null, next: Page? = null)","description":"org.http4k.webdriver.Page.Page","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/-page.html","searchKeys":["Page","constructor(status: Status, navigate: Navigate, getURL: GetURL, handle: UUID, url: String, contents: String, previous: Page? = null, next: Page? = null)","org.http4k.webdriver.Page.Page"]},{"name":"data class JSoupWebElement(navigate: Navigate, getURL: GetURL, val element: Element) : WebElement","description":"org.http4k.webdriver.JSoupWebElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/index.html","searchKeys":["JSoupWebElement","data class JSoupWebElement(navigate: Navigate, getURL: GetURL, val element: Element) : WebElement","org.http4k.webdriver.JSoupWebElement"]},{"name":"data class Page(val status: Status, navigate: Navigate, getURL: GetURL, val handle: UUID, val url: String, val contents: String, val previous: Page? = null, val next: Page? = null)","description":"org.http4k.webdriver.Page","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/index.html","searchKeys":["Page","data class Page(val status: Status, navigate: Navigate, getURL: GetURL, val handle: UUID, val url: String, val contents: String, val previous: Page? = null, val next: Page? = null)","org.http4k.webdriver.Page"]},{"name":"fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.Page.findElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/find-element.html","searchKeys":["findElement","fun findElement(by: By): WebElement?","org.http4k.webdriver.Page.findElement"]},{"name":"fun findElements(by: By): List<WebElement>","description":"org.http4k.webdriver.Page.findElements","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/find-elements.html","searchKeys":["findElements","fun findElements(by: By): List<WebElement>","org.http4k.webdriver.Page.findElements"]},{"name":"fun firstElement(): JSoupWebElement?","description":"org.http4k.webdriver.Page.firstElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/first-element.html","searchKeys":["firstElement","fun firstElement(): JSoupWebElement?","org.http4k.webdriver.Page.firstElement"]},{"name":"fun get(uri: Uri)","description":"org.http4k.webdriver.Http4kWebDriver.get","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get.html","searchKeys":["get","fun get(uri: Uri)","org.http4k.webdriver.Http4kWebDriver.get"]},{"name":"interface Http4KNavigation : WebDriver.Navigation","description":"org.http4k.webdriver.Http4KNavigation","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4-k-navigation/index.html","searchKeys":["Http4KNavigation","interface Http4KNavigation : WebDriver.Navigation","org.http4k.webdriver.Http4KNavigation"]},{"name":"object Companion","description":"org.http4k.webdriver.JSoupWebElement.Companion","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.webdriver.JSoupWebElement.Companion"]},{"name":"object FeatureNotImplementedYet : RuntimeException","description":"org.http4k.webdriver.FeatureNotImplementedYet","location":"http4k-testing-webdriver/org.http4k.webdriver/-feature-not-implemented-yet/index.html","searchKeys":["FeatureNotImplementedYet","object FeatureNotImplementedYet : RuntimeException","org.http4k.webdriver.FeatureNotImplementedYet"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.webdriver.JSoupWebElement.equals","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.webdriver.JSoupWebElement.equals"]},{"name":"open operator override fun get(url: String)","description":"org.http4k.webdriver.Http4kWebDriver.get","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get.html","searchKeys":["get","open operator override fun get(url: String)","org.http4k.webdriver.Http4kWebDriver.get"]},{"name":"open override fun <X> getScreenshotAs(target: OutputType<X>?): X","description":"org.http4k.webdriver.JSoupWebElement.getScreenshotAs","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-screenshot-as.html","searchKeys":["getScreenshotAs","open override fun <X> getScreenshotAs(target: OutputType<X>?): X","org.http4k.webdriver.JSoupWebElement.getScreenshotAs"]},{"name":"open override fun clear()","description":"org.http4k.webdriver.JSoupWebElement.clear","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/clear.html","searchKeys":["clear","open override fun clear()","org.http4k.webdriver.JSoupWebElement.clear"]},{"name":"open override fun click()","description":"org.http4k.webdriver.JSoupWebElement.click","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/click.html","searchKeys":["click","open override fun click()","org.http4k.webdriver.JSoupWebElement.click"]},{"name":"open override fun close()","description":"org.http4k.webdriver.Http4kWebDriver.close","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/close.html","searchKeys":["close","open override fun close()","org.http4k.webdriver.Http4kWebDriver.close"]},{"name":"open override fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.Http4kWebDriver.findElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/find-element.html","searchKeys":["findElement","open override fun findElement(by: By): WebElement?","org.http4k.webdriver.Http4kWebDriver.findElement"]},{"name":"open override fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.JSoupElementFinder.findElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-element-finder/find-element.html","searchKeys":["findElement","open override fun findElement(by: By): WebElement?","org.http4k.webdriver.JSoupElementFinder.findElement"]},{"name":"open override fun findElement(by: By): WebElement?","description":"org.http4k.webdriver.JSoupWebElement.findElement","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/find-element.html","searchKeys":["findElement","open override fun findElement(by: By): WebElement?","org.http4k.webdriver.JSoupWebElement.findElement"]},{"name":"open override fun findElements(by: By): List<WebElement>","description":"org.http4k.webdriver.JSoupElementFinder.findElements","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-element-finder/find-elements.html","searchKeys":["findElements","open override fun findElements(by: By): List<WebElement>","org.http4k.webdriver.JSoupElementFinder.findElements"]},{"name":"open override fun findElements(by: By): List<WebElement>","description":"org.http4k.webdriver.JSoupWebElement.findElements","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/find-elements.html","searchKeys":["findElements","open override fun findElements(by: By): List<WebElement>","org.http4k.webdriver.JSoupWebElement.findElements"]},{"name":"open override fun findElements(by: By): List<WebElement>?","description":"org.http4k.webdriver.Http4kWebDriver.findElements","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/find-elements.html","searchKeys":["findElements","open override fun findElements(by: By): List<WebElement>?","org.http4k.webdriver.Http4kWebDriver.findElements"]},{"name":"open override fun getAttribute(name: String): String?","description":"org.http4k.webdriver.JSoupWebElement.getAttribute","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-attribute.html","searchKeys":["getAttribute","open override fun getAttribute(name: String): String?","org.http4k.webdriver.JSoupWebElement.getAttribute"]},{"name":"open override fun getCssValue(propertyName: String?): String","description":"org.http4k.webdriver.JSoupWebElement.getCssValue","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-css-value.html","searchKeys":["getCssValue","open override fun getCssValue(propertyName: String?): String","org.http4k.webdriver.JSoupWebElement.getCssValue"]},{"name":"open override fun getCurrentUrl(): String?","description":"org.http4k.webdriver.Http4kWebDriver.getCurrentUrl","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get-current-url.html","searchKeys":["getCurrentUrl","open override fun getCurrentUrl(): String?","org.http4k.webdriver.Http4kWebDriver.getCurrentUrl"]},{"name":"open override fun getLocation(): Point","description":"org.http4k.webdriver.JSoupWebElement.getLocation","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-location.html","searchKeys":["getLocation","open override fun getLocation(): Point","org.http4k.webdriver.JSoupWebElement.getLocation"]},{"name":"open override fun getPageSource(): String?","description":"org.http4k.webdriver.Http4kWebDriver.getPageSource","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get-page-source.html","searchKeys":["getPageSource","open override fun getPageSource(): String?","org.http4k.webdriver.Http4kWebDriver.getPageSource"]},{"name":"open override fun getRect(): Rectangle","description":"org.http4k.webdriver.JSoupWebElement.getRect","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-rect.html","searchKeys":["getRect","open override fun getRect(): Rectangle","org.http4k.webdriver.JSoupWebElement.getRect"]},{"name":"open override fun getSize(): Dimension","description":"org.http4k.webdriver.JSoupWebElement.getSize","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-size.html","searchKeys":["getSize","open override fun getSize(): Dimension","org.http4k.webdriver.JSoupWebElement.getSize"]},{"name":"open override fun getTagName(): String","description":"org.http4k.webdriver.JSoupWebElement.getTagName","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-tag-name.html","searchKeys":["getTagName","open override fun getTagName(): String","org.http4k.webdriver.JSoupWebElement.getTagName"]},{"name":"open override fun getText(): String","description":"org.http4k.webdriver.JSoupWebElement.getText","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/get-text.html","searchKeys":["getText","open override fun getText(): String","org.http4k.webdriver.JSoupWebElement.getText"]},{"name":"open override fun getTitle(): String?","description":"org.http4k.webdriver.Http4kWebDriver.getTitle","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get-title.html","searchKeys":["getTitle","open override fun getTitle(): String?","org.http4k.webdriver.Http4kWebDriver.getTitle"]},{"name":"open override fun getWindowHandle(): String?","description":"org.http4k.webdriver.Http4kWebDriver.getWindowHandle","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get-window-handle.html","searchKeys":["getWindowHandle","open override fun getWindowHandle(): String?","org.http4k.webdriver.Http4kWebDriver.getWindowHandle"]},{"name":"open override fun getWindowHandles(): Set<String>","description":"org.http4k.webdriver.Http4kWebDriver.getWindowHandles","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/get-window-handles.html","searchKeys":["getWindowHandles","open override fun getWindowHandles(): Set<String>","org.http4k.webdriver.Http4kWebDriver.getWindowHandles"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.webdriver.JSoupWebElement.hashCode","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.webdriver.JSoupWebElement.hashCode"]},{"name":"open override fun isDisplayed(): Boolean","description":"org.http4k.webdriver.JSoupWebElement.isDisplayed","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/is-displayed.html","searchKeys":["isDisplayed","open override fun isDisplayed(): Boolean","org.http4k.webdriver.JSoupWebElement.isDisplayed"]},{"name":"open override fun isEnabled(): Boolean","description":"org.http4k.webdriver.JSoupWebElement.isEnabled","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(): Boolean","org.http4k.webdriver.JSoupWebElement.isEnabled"]},{"name":"open override fun isSelected(): Boolean","description":"org.http4k.webdriver.JSoupWebElement.isSelected","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/is-selected.html","searchKeys":["isSelected","open override fun isSelected(): Boolean","org.http4k.webdriver.JSoupWebElement.isSelected"]},{"name":"open override fun manage(): WebDriver.Options","description":"org.http4k.webdriver.Http4kWebDriver.manage","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/manage.html","searchKeys":["manage","open override fun manage(): WebDriver.Options","org.http4k.webdriver.Http4kWebDriver.manage"]},{"name":"open override fun navigate(): Http4KNavigation","description":"org.http4k.webdriver.Http4kWebDriver.navigate","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/navigate.html","searchKeys":["navigate","open override fun navigate(): Http4KNavigation","org.http4k.webdriver.Http4kWebDriver.navigate"]},{"name":"open override fun quit()","description":"org.http4k.webdriver.Http4kWebDriver.quit","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/quit.html","searchKeys":["quit","open override fun quit()","org.http4k.webdriver.Http4kWebDriver.quit"]},{"name":"open override fun sendKeys(vararg keysToSend: CharSequence)","description":"org.http4k.webdriver.JSoupWebElement.sendKeys","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/send-keys.html","searchKeys":["sendKeys","open override fun sendKeys(vararg keysToSend: CharSequence)","org.http4k.webdriver.JSoupWebElement.sendKeys"]},{"name":"open override fun submit()","description":"org.http4k.webdriver.JSoupWebElement.submit","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/submit.html","searchKeys":["submit","open override fun submit()","org.http4k.webdriver.JSoupWebElement.submit"]},{"name":"open override fun switchTo(): WebDriver.TargetLocator","description":"org.http4k.webdriver.Http4kWebDriver.switchTo","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/switch-to.html","searchKeys":["switchTo","open override fun switchTo(): WebDriver.TargetLocator","org.http4k.webdriver.Http4kWebDriver.switchTo"]},{"name":"open override fun toString(): String","description":"org.http4k.webdriver.JSoupWebElement.toString","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.webdriver.JSoupWebElement.toString"]},{"name":"operator fun Http4kWebDriver.invoke(fn: Http4kWebDriver.() -> Unit): Http4kWebDriver","description":"org.http4k.webdriver.invoke","location":"http4k-testing-webdriver/org.http4k.webdriver/invoke.html","searchKeys":["invoke","operator fun Http4kWebDriver.invoke(fn: Http4kWebDriver.() -> Unit): Http4kWebDriver","org.http4k.webdriver.invoke"]},{"name":"typealias GetURL = () -> String?","description":"org.http4k.webdriver.GetURL","location":"http4k-testing-webdriver/org.http4k.webdriver/-get-u-r-l/index.html","searchKeys":["GetURL","typealias GetURL = () -> String?","org.http4k.webdriver.GetURL"]},{"name":"typealias Navigate = (Request) -> Unit","description":"org.http4k.webdriver.Navigate","location":"http4k-testing-webdriver/org.http4k.webdriver/-navigate/index.html","searchKeys":["Navigate","typealias Navigate = (Request) -> Unit","org.http4k.webdriver.Navigate"]},{"name":"val contents: String","description":"org.http4k.webdriver.Page.contents","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/contents.html","searchKeys":["contents","val contents: String","org.http4k.webdriver.Page.contents"]},{"name":"val element: Element","description":"org.http4k.webdriver.JSoupWebElement.element","location":"http4k-testing-webdriver/org.http4k.webdriver/-j-soup-web-element/element.html","searchKeys":["element","val element: Element","org.http4k.webdriver.JSoupWebElement.element"]},{"name":"val handle: UUID","description":"org.http4k.webdriver.Page.handle","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/handle.html","searchKeys":["handle","val handle: UUID","org.http4k.webdriver.Page.handle"]},{"name":"val handler: (request: Request) -> Response","description":"org.http4k.webdriver.Http4kWebDriver.handler","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/handler.html","searchKeys":["handler","val handler: (request: Request) -> Response","org.http4k.webdriver.Http4kWebDriver.handler"]},{"name":"val next: Page? = null","description":"org.http4k.webdriver.Page.next","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/next.html","searchKeys":["next","val next: Page? = null","org.http4k.webdriver.Page.next"]},{"name":"val previous: Page? = null","description":"org.http4k.webdriver.Page.previous","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/previous.html","searchKeys":["previous","val previous: Page? = null","org.http4k.webdriver.Page.previous"]},{"name":"val status: Status","description":"org.http4k.webdriver.Page.status","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/status.html","searchKeys":["status","val status: Status","org.http4k.webdriver.Page.status"]},{"name":"val status: Status?","description":"org.http4k.webdriver.Http4kWebDriver.status","location":"http4k-testing-webdriver/org.http4k.webdriver/-http4k-web-driver/status.html","searchKeys":["status","val status: Status?","org.http4k.webdriver.Http4kWebDriver.status"]},{"name":"val title: String","description":"org.http4k.webdriver.Page.title","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/title.html","searchKeys":["title","val title: String","org.http4k.webdriver.Page.title"]},{"name":"val url: String","description":"org.http4k.webdriver.Page.url","location":"http4k-testing-webdriver/org.http4k.webdriver/-page/url.html","searchKeys":["url","val url: String","org.http4k.webdriver.Page.url"]},{"name":"class Apache4Server(val port: Int = 8000, val stopMode: ServerConfig.StopMode, val address: InetAddress?) : ServerConfig","description":"org.http4k.server.Apache4Server","location":"http4k-server-apache4/org.http4k.server/-apache4-server/index.html","searchKeys":["Apache4Server","class Apache4Server(val port: Int = 8000, val stopMode: ServerConfig.StopMode, val address: InetAddress?) : ServerConfig","org.http4k.server.Apache4Server"]},{"name":"class Http4kApache4RequestHandler(handler: HttpHandler) : HttpRequestHandler","description":"org.http4k.server.Http4kApache4RequestHandler","location":"http4k-server-apache4/org.http4k.server/-http4k-apache4-request-handler/index.html","searchKeys":["Http4kApache4RequestHandler","class Http4kApache4RequestHandler(handler: HttpHandler) : HttpRequestHandler","org.http4k.server.Http4kApache4RequestHandler"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.Http4kApache4RequestHandler.Http4kApache4RequestHandler","location":"http4k-server-apache4/org.http4k.server/-http4k-apache4-request-handler/-http4k-apache4-request-handler.html","searchKeys":["Http4kApache4RequestHandler","constructor(handler: HttpHandler)","org.http4k.server.Http4kApache4RequestHandler.Http4kApache4RequestHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Apache4Server.Apache4Server","location":"http4k-server-apache4/org.http4k.server/-apache4-server/-apache4-server.html","searchKeys":["Apache4Server","constructor(port: Int = 8000)","org.http4k.server.Apache4Server.Apache4Server"]},{"name":"constructor(port: Int = 8000, address: InetAddress?)","description":"org.http4k.server.Apache4Server.Apache4Server","location":"http4k-server-apache4/org.http4k.server/-apache4-server/-apache4-server.html","searchKeys":["Apache4Server","constructor(port: Int = 8000, address: InetAddress?)","org.http4k.server.Apache4Server.Apache4Server"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.Apache4Server.Apache4Server","location":"http4k-server-apache4/org.http4k.server/-apache4-server/-apache4-server.html","searchKeys":["Apache4Server","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.Apache4Server.Apache4Server"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode, address: InetAddress?)","description":"org.http4k.server.Apache4Server.Apache4Server","location":"http4k-server-apache4/org.http4k.server/-apache4-server/-apache4-server.html","searchKeys":["Apache4Server","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode, address: InetAddress?)","org.http4k.server.Apache4Server.Apache4Server"]},{"name":"open override fun handle(request: HttpRequest, response: HttpResponse, context: HttpContext)","description":"org.http4k.server.Http4kApache4RequestHandler.handle","location":"http4k-server-apache4/org.http4k.server/-http4k-apache4-request-handler/handle.html","searchKeys":["handle","open override fun handle(request: HttpRequest, response: HttpResponse, context: HttpContext)","org.http4k.server.Http4kApache4RequestHandler.handle"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.Apache4Server.toServer","location":"http4k-server-apache4/org.http4k.server/-apache4-server/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.Apache4Server.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.Apache4Server.stopMode","location":"http4k-server-apache4/org.http4k.server/-apache4-server/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.Apache4Server.stopMode"]},{"name":"val address: InetAddress?","description":"org.http4k.server.Apache4Server.address","location":"http4k-server-apache4/org.http4k.server/-apache4-server/address.html","searchKeys":["address","val address: InetAddress?","org.http4k.server.Apache4Server.address"]},{"name":"val port: Int = 8000","description":"org.http4k.server.Apache4Server.port","location":"http4k-server-apache4/org.http4k.server/-apache4-server/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.Apache4Server.port"]},{"name":"class KondorJson(val defaultContentType: ContentType = APPLICATION_JSON, compactJsonStyle: JsonStyle = JsonStyle.compactWithNulls, prettyJsonStyle: JsonStyle = JsonStyle.prettyWithNulls, init: KondorJson.InitContext.() -> Unit = {}) : AutoMarshallingJson<JsonNode> ","description":"org.http4k.format.KondorJson","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/index.html","searchKeys":["KondorJson","class KondorJson(val defaultContentType: ContentType = APPLICATION_JSON, compactJsonStyle: JsonStyle = JsonStyle.compactWithNulls, prettyJsonStyle: JsonStyle = JsonStyle.prettyWithNulls, init: KondorJson.InitContext.() -> Unit = {}) : AutoMarshallingJson<JsonNode> ","org.http4k.format.KondorJson"]},{"name":"constructor()","description":"org.http4k.format.KondorJson.InitContext.InitContext","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/-init-context/-init-context.html","searchKeys":["InitContext","constructor()","org.http4k.format.KondorJson.InitContext.InitContext"]},{"name":"constructor(defaultContentType: ContentType = APPLICATION_JSON, compactJsonStyle: JsonStyle = JsonStyle.compactWithNulls, prettyJsonStyle: JsonStyle = JsonStyle.prettyWithNulls, init: KondorJson.InitContext.() -> Unit = {})","description":"org.http4k.format.KondorJson.KondorJson","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/-kondor-json.html","searchKeys":["KondorJson","constructor(defaultContentType: ContentType = APPLICATION_JSON, compactJsonStyle: JsonStyle = JsonStyle.compactWithNulls, prettyJsonStyle: JsonStyle = JsonStyle.prettyWithNulls, init: KondorJson.InitContext.() -> Unit = {})","org.http4k.format.KondorJson.KondorJson"]},{"name":"fun <IN : Number, OUT : Any> BiDiMapping<IN, OUT>.asJConverter(valueConverter: JNumRepresentable<IN>): JNumRepresentable<OUT>","description":"org.http4k.format.asJConverter","location":"http4k-format-kondor-json/org.http4k.format/as-j-converter.html","searchKeys":["asJConverter","fun <IN : Number, OUT : Any> BiDiMapping<IN, OUT>.asJConverter(valueConverter: JNumRepresentable<IN>): JNumRepresentable<OUT>","org.http4k.format.asJConverter"]},{"name":"fun <OUT> BiDiMapping<Boolean, OUT>.asJConverter(): JsonConverter<OUT, JsonNodeBoolean>","description":"org.http4k.format.asJConverter","location":"http4k-format-kondor-json/org.http4k.format/as-j-converter.html","searchKeys":["asJConverter","fun <OUT> BiDiMapping<Boolean, OUT>.asJConverter(): JsonConverter<OUT, JsonNodeBoolean>","org.http4k.format.asJConverter"]},{"name":"fun <OUT> BiDiMapping<String, OUT>.asJConverter(): JStringRepresentable<OUT>","description":"org.http4k.format.asJConverter","location":"http4k-format-kondor-json/org.http4k.format/as-j-converter.html","searchKeys":["asJConverter","fun <OUT> BiDiMapping<String, OUT>.asJConverter(): JStringRepresentable<OUT>","org.http4k.format.asJConverter"]},{"name":"fun <T : Any, JN : JsonNode> register(target: KClass<T>, converter: JsonConverter<T, JN>): KondorJson.InitContext","description":"org.http4k.format.KondorJson.InitContext.register","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/-init-context/register.html","searchKeys":["register","fun <T : Any, JN : JsonNode> register(target: KClass<T>, converter: JsonConverter<T, JN>): KondorJson.InitContext","org.http4k.format.KondorJson.InitContext.register"]},{"name":"fun <T : Any> JsonConverter<T, *>.autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = APPLICATION_JSON, renderStyle: JsonStyle = JsonStyle.compactWithNulls): BiDiBodyLensSpec<T>","description":"org.http4k.format.autoBody","location":"http4k-format-kondor-json/org.http4k.format/auto-body.html","searchKeys":["autoBody","fun <T : Any> JsonConverter<T, *>.autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = APPLICATION_JSON, renderStyle: JsonStyle = JsonStyle.compactWithNulls): BiDiBodyLensSpec<T>","org.http4k.format.autoBody"]},{"name":"fun <T : Any> JsonConverter<T, *>.wsAutoBody(renderStyle: JsonStyle = JsonStyle.compactWithNulls): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.wsAutoBody","location":"http4k-format-kondor-json/org.http4k.format/ws-auto-body.html","searchKeys":["wsAutoBody","fun <T : Any> JsonConverter<T, *>.wsAutoBody(renderStyle: JsonStyle = JsonStyle.compactWithNulls): BiDiWsMessageLensSpec<T>","org.http4k.format.wsAutoBody"]},{"name":"fun <T : Any> autoBody(target: KClass<T>, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.KondorJson.autoBody","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/auto-body.html","searchKeys":["autoBody","fun <T : Any> autoBody(target: KClass<T>, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.KondorJson.autoBody"]},{"name":"fun <T : Any> wsAutoBody(target: KClass<T>): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.KondorJson.wsAutoBody","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/ws-auto-body.html","searchKeys":["wsAutoBody","fun <T : Any> wsAutoBody(target: KClass<T>): BiDiWsMessageLensSpec<T>","org.http4k.format.KondorJson.wsAutoBody"]},{"name":"fun converterFor(input: Any): JsonConverter<*, *>","description":"org.http4k.format.KondorJson.converterFor","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/converter-for.html","searchKeys":["converterFor","fun converterFor(input: Any): JsonConverter<*, *>","org.http4k.format.KondorJson.converterFor"]},{"name":"inline fun <T : Any, JN : JsonNode> KondorJson.InitContext.register(converter: JsonConverter<T, JN>): KondorJson.InitContext","description":"org.http4k.format.register","location":"http4k-format-kondor-json/org.http4k.format/register.html","searchKeys":["register","inline fun <T : Any, JN : JsonNode> KondorJson.InitContext.register(converter: JsonConverter<T, JN>): KondorJson.InitContext","org.http4k.format.register"]},{"name":"inline fun <T : Any, R : HttpMessage> R.json(t: T): R","description":"org.http4k.format.KondorJson.json","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/json.html","searchKeys":["json","inline fun <T : Any, R : HttpMessage> R.json(t: T): R","org.http4k.format.KondorJson.json"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.KondorJson.auto","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.KondorJson.auto"]},{"name":"inline fun <T : Any> HttpMessage.json(): T","description":"org.http4k.format.KondorJson.json","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/json.html","searchKeys":["json","inline fun <T : Any> HttpMessage.json(): T","org.http4k.format.KondorJson.json"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.KondorJson.auto","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.KondorJson.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.KondorJson.autoBody","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.KondorJson.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> KondorJson.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-kondor-json/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> KondorJson.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> KondorJson.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-kondor-json/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> KondorJson.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"inner class InitContext","description":"org.http4k.format.KondorJson.InitContext","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/-init-context/index.html","searchKeys":["InitContext","inner class InitContext","org.http4k.format.KondorJson.InitContext"]},{"name":"open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNodeObject","description":"org.http4k.format.KondorJson.asJsonObject","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNodeObject","org.http4k.format.KondorJson.asJsonObject"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.KondorJson.asA","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.KondorJson.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.KondorJson.asA","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.KondorJson.asA"]},{"name":"open override fun <T : Any> asA(j: JsonNode, target: KClass<T>): T","description":"org.http4k.format.KondorJson.asA","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(j: JsonNode, target: KClass<T>): T","org.http4k.format.KondorJson.asA"]},{"name":"open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNodeArray","description":"org.http4k.format.KondorJson.asJsonArray","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNodeArray","org.http4k.format.KondorJson.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun JsonNode.asCompactJsonString(): String","description":"org.http4k.format.KondorJson.asCompactJsonString","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun JsonNode.asCompactJsonString(): String","org.http4k.format.KondorJson.asCompactJsonString"]},{"name":"open override fun JsonNode.asPrettyJsonString(): String","description":"org.http4k.format.KondorJson.asPrettyJsonString","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun JsonNode.asPrettyJsonString(): String","org.http4k.format.KondorJson.asPrettyJsonString"]},{"name":"open override fun Long?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun String.asJsonObject(): JsonNode","description":"org.http4k.format.KondorJson.asJsonObject","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): JsonNode","org.http4k.format.KondorJson.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): JsonNode","description":"org.http4k.format.KondorJson.asJsonValue","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): JsonNode","org.http4k.format.KondorJson.asJsonValue"]},{"name":"open override fun asJsonObject(input: Any): JsonNode","description":"org.http4k.format.KondorJson.asJsonObject","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/as-json-object.html","searchKeys":["asJsonObject","open override fun asJsonObject(input: Any): JsonNode","org.http4k.format.KondorJson.asJsonObject"]},{"name":"open override fun bool(value: JsonNode): Boolean","description":"org.http4k.format.KondorJson.bool","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/bool.html","searchKeys":["bool","open override fun bool(value: JsonNode): Boolean","org.http4k.format.KondorJson.bool"]},{"name":"open override fun decimal(value: JsonNode): BigDecimal","description":"org.http4k.format.KondorJson.decimal","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/decimal.html","searchKeys":["decimal","open override fun decimal(value: JsonNode): BigDecimal","org.http4k.format.KondorJson.decimal"]},{"name":"open override fun elements(value: JsonNode): Iterable<JsonNode>","description":"org.http4k.format.KondorJson.elements","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/elements.html","searchKeys":["elements","open override fun elements(value: JsonNode): Iterable<JsonNode>","org.http4k.format.KondorJson.elements"]},{"name":"open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","description":"org.http4k.format.KondorJson.fields","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/fields.html","searchKeys":["fields","open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","org.http4k.format.KondorJson.fields"]},{"name":"open override fun integer(value: JsonNode): Long","description":"org.http4k.format.KondorJson.integer","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/integer.html","searchKeys":["integer","open override fun integer(value: JsonNode): Long","org.http4k.format.KondorJson.integer"]},{"name":"open override fun text(value: JsonNode): String","description":"org.http4k.format.KondorJson.text","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/text.html","searchKeys":["text","open override fun text(value: JsonNode): String","org.http4k.format.KondorJson.text"]},{"name":"open override fun textValueOf(node: JsonNode, name: String): String?","description":"org.http4k.format.KondorJson.textValueOf","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: JsonNode, name: String): String?","org.http4k.format.KondorJson.textValueOf"]},{"name":"open override fun typeOf(value: JsonNode): JsonType","description":"org.http4k.format.KondorJson.typeOf","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: JsonNode): JsonType","org.http4k.format.KondorJson.typeOf"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.KondorJson.defaultContentType","location":"http4k-format-kondor-json/org.http4k.format/-kondor-json/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.KondorJson.defaultContentType"]},{"name":"class OpenTelemetryMetrics(defaults: MetricsDefaults)","description":"org.http4k.filter.OpenTelemetryMetrics","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics/index.html","searchKeys":["OpenTelemetryMetrics","class OpenTelemetryMetrics(defaults: MetricsDefaults)","org.http4k.filter.OpenTelemetryMetrics"]},{"name":"const val INSTRUMENTATION_NAME: String","description":"org.http4k.metrics.Http4kOpenTelemetry.INSTRUMENTATION_NAME","location":"http4k-opentelemetry/org.http4k.metrics/-http4k-open-telemetry/-i-n-s-t-r-u-m-e-n-t-a-t-i-o-n_-n-a-m-e.html","searchKeys":["INSTRUMENTATION_NAME","const val INSTRUMENTATION_NAME: String","org.http4k.metrics.Http4kOpenTelemetry.INSTRUMENTATION_NAME"]},{"name":"constructor(defaults: MetricsDefaults)","description":"org.http4k.filter.OpenTelemetryMetrics.OpenTelemetryMetrics","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics/-open-telemetry-metrics.html","searchKeys":["OpenTelemetryMetrics","constructor(defaults: MetricsDefaults)","org.http4k.filter.OpenTelemetryMetrics.OpenTelemetryMetrics"]},{"name":"fun ClientFilters.OpenTelemetryTracing(openTelemetry: OpenTelemetry = GlobalOpenTelemetry.get(), spanNamer: (Request) -> String = defaultSpanNamer, error: (Request, Throwable) -> String = { _, t -> t.message ?: \"no message\" }, spanCreationMutator: (SpanBuilder) -> SpanBuilder = { it }, spanCompletionMutator: (Span, Request, Response) -> Unit = { _, _, _ -> }): Filter","description":"org.http4k.filter.OpenTelemetryTracing","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-tracing.html","searchKeys":["OpenTelemetryTracing","fun ClientFilters.OpenTelemetryTracing(openTelemetry: OpenTelemetry = GlobalOpenTelemetry.get(), spanNamer: (Request) -> String = defaultSpanNamer, error: (Request, Throwable) -> String = { _, t -> t.message ?: \"no message\" }, spanCreationMutator: (SpanBuilder) -> SpanBuilder = { it }, spanCompletionMutator: (Span, Request, Response) -> Unit = { _, _, _ -> }): Filter","org.http4k.filter.OpenTelemetryTracing"]},{"name":"fun EventFilters.AddOpenTelemetryTraces(): EventFilter","description":"org.http4k.events.AddOpenTelemetryTraces","location":"http4k-opentelemetry/org.http4k.events/-add-open-telemetry-traces.html","searchKeys":["AddOpenTelemetryTraces","fun EventFilters.AddOpenTelemetryTraces(): EventFilter","org.http4k.events.AddOpenTelemetryTraces"]},{"name":"fun RequestCounter(meter: Meter = Http4kOpenTelemetry.meter, name: String = defaults.counterDescription.first, description: String = defaults.counterDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = systemUTC()): Filter","description":"org.http4k.filter.OpenTelemetryMetrics.RequestCounter","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics/-request-counter.html","searchKeys":["RequestCounter","fun RequestCounter(meter: Meter = Http4kOpenTelemetry.meter, name: String = defaults.counterDescription.first, description: String = defaults.counterDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = systemUTC()): Filter","org.http4k.filter.OpenTelemetryMetrics.RequestCounter"]},{"name":"fun RequestTimer(meter: Meter = Http4kOpenTelemetry.meter, name: String = defaults.timerDescription.first, description: String = defaults.timerDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = systemUTC()): Filter","description":"org.http4k.filter.OpenTelemetryMetrics.RequestTimer","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics/-request-timer.html","searchKeys":["RequestTimer","fun RequestTimer(meter: Meter = Http4kOpenTelemetry.meter, name: String = defaults.timerDescription.first, description: String = defaults.timerDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = systemUTC()): Filter","org.http4k.filter.OpenTelemetryMetrics.RequestTimer"]},{"name":"fun ServerFilters.OpenTelemetryTracing(openTelemetry: OpenTelemetry = GlobalOpenTelemetry.get(), spanNamer: (Request) -> String = defaultSpanNamer, error: (Request, Throwable) -> String = { _, t -> t.message ?: \"no message\" }, spanCreationMutator: (SpanBuilder, Request) -> SpanBuilder = { spanBuilder, _ -> spanBuilder }, spanCompletionMutator: (Span, Request, Response) -> Unit = { _, _, _ -> }): Filter","description":"org.http4k.filter.OpenTelemetryTracing","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-tracing.html","searchKeys":["OpenTelemetryTracing","fun ServerFilters.OpenTelemetryTracing(openTelemetry: OpenTelemetry = GlobalOpenTelemetry.get(), spanNamer: (Request) -> String = defaultSpanNamer, error: (Request, Throwable) -> String = { _, t -> t.message ?: \"no message\" }, spanCreationMutator: (SpanBuilder, Request) -> SpanBuilder = { spanBuilder, _ -> spanBuilder }, spanCompletionMutator: (Span, Request, Response) -> Unit = { _, _, _ -> }): Filter","org.http4k.filter.OpenTelemetryTracing"]},{"name":"object Http4kOpenTelemetry","description":"org.http4k.metrics.Http4kOpenTelemetry","location":"http4k-opentelemetry/org.http4k.metrics/-http4k-open-telemetry/index.html","searchKeys":["Http4kOpenTelemetry","object Http4kOpenTelemetry","org.http4k.metrics.Http4kOpenTelemetry"]},{"name":"val ClientFilters.OpenTelemetryMetrics: OpenTelemetryMetrics","description":"org.http4k.filter.OpenTelemetryMetrics","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics.html","searchKeys":["OpenTelemetryMetrics","val ClientFilters.OpenTelemetryMetrics: OpenTelemetryMetrics","org.http4k.filter.OpenTelemetryMetrics"]},{"name":"val ServerFilters.OpenTelemetryMetrics: OpenTelemetryMetrics","description":"org.http4k.filter.OpenTelemetryMetrics","location":"http4k-opentelemetry/org.http4k.filter/-open-telemetry-metrics.html","searchKeys":["OpenTelemetryMetrics","val ServerFilters.OpenTelemetryMetrics: OpenTelemetryMetrics","org.http4k.filter.OpenTelemetryMetrics"]},{"name":"val defaultSpanNamer: (Request) -> String","description":"org.http4k.filter.defaultSpanNamer","location":"http4k-opentelemetry/org.http4k.filter/default-span-namer.html","searchKeys":["defaultSpanNamer","val defaultSpanNamer: (Request) -> String","org.http4k.filter.defaultSpanNamer"]},{"name":"val meter: Meter","description":"org.http4k.metrics.Http4kOpenTelemetry.meter","location":"http4k-opentelemetry/org.http4k.metrics/-http4k-open-telemetry/meter.html","searchKeys":["meter","val meter: Meter","org.http4k.metrics.Http4kOpenTelemetry.meter"]},{"name":"val tracer: Tracer","description":"org.http4k.metrics.Http4kOpenTelemetry.tracer","location":"http4k-opentelemetry/org.http4k.metrics/-http4k-open-telemetry/tracer.html","searchKeys":["tracer","val tracer: Tracer","org.http4k.metrics.Http4kOpenTelemetry.tracer"]},{"name":"abstract fun keys(): Set<String>","description":"org.http4k.config.Environment.keys","location":"http4k-config/org.http4k.config/-environment/keys.html","searchKeys":["keys","abstract fun keys(): Set<String>","org.http4k.config.Environment.keys"]},{"name":"abstract operator fun <T> get(key: LensExtractor<Environment, T>): T","description":"org.http4k.config.Environment.get","location":"http4k-config/org.http4k.config/-environment/get.html","searchKeys":["get","abstract operator fun <T> get(key: LensExtractor<Environment, T>): T","org.http4k.config.Environment.get"]},{"name":"abstract operator fun get(key: String): String?","description":"org.http4k.config.Environment.get","location":"http4k-config/org.http4k.config/-environment/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","org.http4k.config.Environment.get"]},{"name":"abstract operator fun minus(key: String): Environment","description":"org.http4k.config.Environment.minus","location":"http4k-config/org.http4k.config/-environment/minus.html","searchKeys":["minus","abstract operator fun minus(key: String): Environment","org.http4k.config.Environment.minus"]},{"name":"abstract operator fun set(key: String, value: String): Environment","description":"org.http4k.config.Environment.set","location":"http4k-config/org.http4k.config/-environment/set.html","searchKeys":["set","abstract operator fun set(key: String, value: String): Environment","org.http4k.config.Environment.set"]},{"name":"class MapEnvironment : Environment","description":"org.http4k.config.MapEnvironment","location":"http4k-config/org.http4k.config/-map-environment/index.html","searchKeys":["MapEnvironment","class MapEnvironment : Environment","org.http4k.config.MapEnvironment"]},{"name":"class Secret(input: ByteArray) : Closeable","description":"org.http4k.config.Secret","location":"http4k-config/org.http4k.config/-secret/index.html","searchKeys":["Secret","class Secret(input: ByteArray) : Closeable","org.http4k.config.Secret"]},{"name":"constructor(host: Host, port: Port? = null)","description":"org.http4k.config.Authority.Authority","location":"http4k-config/org.http4k.config/-authority/-authority.html","searchKeys":["Authority","constructor(host: Host, port: Port? = null)","org.http4k.config.Authority.Authority"]},{"name":"constructor(input: ByteArray)","description":"org.http4k.config.Secret.Secret","location":"http4k-config/org.http4k.config/-secret/-secret.html","searchKeys":["Secret","constructor(input: ByteArray)","org.http4k.config.Secret.Secret"]},{"name":"constructor(value: Duration)","description":"org.http4k.config.Timeout.Timeout","location":"http4k-config/org.http4k.config/-timeout/-timeout.html","searchKeys":["Timeout","constructor(value: Duration)","org.http4k.config.Timeout.Timeout"]},{"name":"constructor(value: Int)","description":"org.http4k.config.Port.Port","location":"http4k-config/org.http4k.config/-port/-port.html","searchKeys":["Port","constructor(value: Int)","org.http4k.config.Port.Port"]},{"name":"constructor(value: String)","description":"org.http4k.config.Host.Host","location":"http4k-config/org.http4k.config/-host/-host.html","searchKeys":["Host","constructor(value: String)","org.http4k.config.Host.Host"]},{"name":"constructor(value: String)","description":"org.http4k.config.Secret.Secret","location":"http4k-config/org.http4k.config/-secret/-secret.html","searchKeys":["Secret","constructor(value: String)","org.http4k.config.Secret.Secret"]},{"name":"data class Authority(val host: Host, val port: Port? = null)","description":"org.http4k.config.Authority","location":"http4k-config/org.http4k.config/-authority/index.html","searchKeys":["Authority","data class Authority(val host: Host, val port: Port? = null)","org.http4k.config.Authority"]},{"name":"data class Host(val value: String)","description":"org.http4k.config.Host","location":"http4k-config/org.http4k.config/-host/index.html","searchKeys":["Host","data class Host(val value: String)","org.http4k.config.Host"]},{"name":"data class Port(val value: Int)","description":"org.http4k.config.Port","location":"http4k-config/org.http4k.config/-port/index.html","searchKeys":["Port","data class Port(val value: Int)","org.http4k.config.Port"]},{"name":"data class Timeout(val value: Duration)","description":"org.http4k.config.Timeout","location":"http4k-config/org.http4k.config/-timeout/index.html","searchKeys":["Timeout","data class Timeout(val value: Duration)","org.http4k.config.Timeout"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.authority(): BiDiLensSpec<IN, Authority>","description":"org.http4k.lens.authority","location":"http4k-config/org.http4k.lens/authority.html","searchKeys":["authority","fun <IN : Any> BiDiLensSpec<IN, String>.authority(): BiDiLensSpec<IN, Authority>","org.http4k.lens.authority"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.host(): BiDiLensSpec<IN, Host>","description":"org.http4k.lens.host","location":"http4k-config/org.http4k.lens/host.html","searchKeys":["host","fun <IN : Any> BiDiLensSpec<IN, String>.host(): BiDiLensSpec<IN, Host>","org.http4k.lens.host"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.port(): BiDiLensSpec<IN, Port>","description":"org.http4k.lens.port","location":"http4k-config/org.http4k.lens/port.html","searchKeys":["port","fun <IN : Any> BiDiLensSpec<IN, String>.port(): BiDiLensSpec<IN, Port>","org.http4k.lens.port"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.secret(): BiDiLensSpec<IN, Secret>","description":"org.http4k.lens.secret","location":"http4k-config/org.http4k.lens/secret.html","searchKeys":["secret","fun <IN : Any> BiDiLensSpec<IN, String>.secret(): BiDiLensSpec<IN, Secret>","org.http4k.lens.secret"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.timeout(): BiDiLensSpec<IN, Timeout>","description":"org.http4k.lens.timeout","location":"http4k-config/org.http4k.lens/timeout.html","searchKeys":["timeout","fun <IN : Any> BiDiLensSpec<IN, String>.timeout(): BiDiLensSpec<IN, Timeout>","org.http4k.lens.timeout"]},{"name":"fun <T> use(fn: (String) -> T): T","description":"org.http4k.config.Secret.use","location":"http4k-config/org.http4k.config/-secret/use.html","searchKeys":["use","fun <T> use(fn: (String) -> T): T","org.http4k.config.Secret.use"]},{"name":"fun Environment.Companion.fromConfigFile(file: File): Environment","description":"org.http4k.config.fromConfigFile","location":"http4k-config/org.http4k.config/from-config-file.html","searchKeys":["fromConfigFile","fun Environment.Companion.fromConfigFile(file: File): Environment","org.http4k.config.fromConfigFile"]},{"name":"fun Environment.Companion.fromYaml(file: File): Environment","description":"org.http4k.config.fromYaml","location":"http4k-config/org.http4k.config/from-yaml.html","searchKeys":["fromYaml","fun Environment.Companion.fromYaml(file: File): Environment","org.http4k.config.fromYaml"]},{"name":"fun Environment.Companion.fromYaml(resource: String): Environment","description":"org.http4k.config.fromYaml","location":"http4k-config/org.http4k.config/from-yaml.html","searchKeys":["fromYaml","fun Environment.Companion.fromYaml(resource: String): Environment","org.http4k.config.fromYaml"]},{"name":"fun Environment.with(vararg modifiers: (Environment) -> Environment): Environment","description":"org.http4k.core.with","location":"http4k-config/org.http4k.core/with.html","searchKeys":["with","fun Environment.with(vararg modifiers: (Environment) -> Environment): Environment","org.http4k.core.with"]},{"name":"fun StringBiDiMappings.authority(): BiDiMapping<String, Authority>","description":"org.http4k.lens.authority","location":"http4k-config/org.http4k.lens/authority.html","searchKeys":["authority","fun StringBiDiMappings.authority(): BiDiMapping<String, Authority>","org.http4k.lens.authority"]},{"name":"fun StringBiDiMappings.host(): BiDiMapping<String, Host>","description":"org.http4k.lens.host","location":"http4k-config/org.http4k.lens/host.html","searchKeys":["host","fun StringBiDiMappings.host(): BiDiMapping<String, Host>","org.http4k.lens.host"]},{"name":"fun StringBiDiMappings.port(): BiDiMapping<String, Port>","description":"org.http4k.lens.port","location":"http4k-config/org.http4k.lens/port.html","searchKeys":["port","fun StringBiDiMappings.port(): BiDiMapping<String, Port>","org.http4k.lens.port"]},{"name":"fun StringBiDiMappings.secret(): BiDiMapping<String, Secret>","description":"org.http4k.lens.secret","location":"http4k-config/org.http4k.lens/secret.html","searchKeys":["secret","fun StringBiDiMappings.secret(): BiDiMapping<String, Secret>","org.http4k.lens.secret"]},{"name":"fun Uri.authority(): Authority","description":"org.http4k.core.authority","location":"http4k-config/org.http4k.core/authority.html","searchKeys":["authority","fun Uri.authority(): Authority","org.http4k.core.authority"]},{"name":"fun Uri.authority(authority: Authority): Uri","description":"org.http4k.core.authority","location":"http4k-config/org.http4k.core/authority.html","searchKeys":["authority","fun Uri.authority(authority: Authority): Uri","org.http4k.core.authority"]},{"name":"fun Uri.host(): Host","description":"org.http4k.core.host","location":"http4k-config/org.http4k.core/host.html","searchKeys":["host","fun Uri.host(): Host","org.http4k.core.host"]},{"name":"fun Uri.host(host: Host): Uri","description":"org.http4k.core.host","location":"http4k-config/org.http4k.core/host.html","searchKeys":["host","fun Uri.host(host: Host): Uri","org.http4k.core.host"]},{"name":"fun Uri.port(): Port?","description":"org.http4k.core.port","location":"http4k-config/org.http4k.core/port.html","searchKeys":["port","fun Uri.port(): Port?","org.http4k.core.port"]},{"name":"fun Uri.port(port: Port?): Uri","description":"org.http4k.core.port","location":"http4k-config/org.http4k.core/port.html","searchKeys":["port","fun Uri.port(port: Port?): Uri","org.http4k.core.port"]},{"name":"fun asAuthority(): Authority","description":"org.http4k.config.Host.asAuthority","location":"http4k-config/org.http4k.config/-host/as-authority.html","searchKeys":["asAuthority","fun asAuthority(): Authority","org.http4k.config.Host.asAuthority"]},{"name":"fun defaults(vararg fn: (Environment) -> Environment): Environment","description":"org.http4k.config.Environment.Companion.defaults","location":"http4k-config/org.http4k.config/-environment/-companion/defaults.html","searchKeys":["defaults","fun defaults(vararg fn: (Environment) -> Environment): Environment","org.http4k.config.Environment.Companion.defaults"]},{"name":"fun from(env: Map<String, String>, separator: String = \",\"): Environment","description":"org.http4k.config.Environment.Companion.from","location":"http4k-config/org.http4k.config/-environment/-companion/from.html","searchKeys":["from","fun from(env: Map<String, String>, separator: String = \",\"): Environment","org.http4k.config.Environment.Companion.from"]},{"name":"fun from(file: File): Environment","description":"org.http4k.config.Environment.Companion.from","location":"http4k-config/org.http4k.config/-environment/-companion/from.html","searchKeys":["from","fun from(file: File): Environment","org.http4k.config.Environment.Companion.from"]},{"name":"fun from(properties: Properties, separator: String = \",\"): Environment","description":"org.http4k.config.MapEnvironment.Companion.from","location":"http4k-config/org.http4k.config/-map-environment/-companion/from.html","searchKeys":["from","fun from(properties: Properties, separator: String = \",\"): Environment","org.http4k.config.MapEnvironment.Companion.from"]},{"name":"fun from(reader: Reader, separator: String = \",\"): Environment","description":"org.http4k.config.MapEnvironment.Companion.from","location":"http4k-config/org.http4k.config/-map-environment/-companion/from.html","searchKeys":["from","fun from(reader: Reader, separator: String = \",\"): Environment","org.http4k.config.MapEnvironment.Companion.from"]},{"name":"fun from(vararg pairs: Pair<String, String>, separator: String = \",\"): Environment","description":"org.http4k.config.Environment.Companion.from","location":"http4k-config/org.http4k.config/-environment/-companion/from.html","searchKeys":["from","fun from(vararg pairs: Pair<String, String>, separator: String = \",\"): Environment","org.http4k.config.Environment.Companion.from"]},{"name":"fun fromResource(resource: String): Environment","description":"org.http4k.config.Environment.Companion.fromResource","location":"http4k-config/org.http4k.config/-environment/-companion/from-resource.html","searchKeys":["fromResource","fun fromResource(resource: String): Environment","org.http4k.config.Environment.Companion.fromResource"]},{"name":"fun serviceUriFor(serviceName: String, isHttps: Boolean = false): BiDiLens<Environment, Uri>","description":"org.http4k.config.EnvironmentKey.k8s.serviceUriFor","location":"http4k-config/org.http4k.config/-environment-key/k8s/service-uri-for.html","searchKeys":["serviceUriFor","fun serviceUriFor(serviceName: String, isHttps: Boolean = false): BiDiLens<Environment, Uri>","org.http4k.config.EnvironmentKey.k8s.serviceUriFor"]},{"name":"inline fun <T : Enum<T>> EnvironmentKey.enum(caseSensitive: Boolean = true): BiDiLensSpec<Environment, T>","description":"org.http4k.config.enum","location":"http4k-config/org.http4k.config/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> EnvironmentKey.enum(caseSensitive: Boolean = true): BiDiLensSpec<Environment, T>","org.http4k.config.enum"]},{"name":"interface Environment","description":"org.http4k.config.Environment","location":"http4k-config/org.http4k.config/-environment/index.html","searchKeys":["Environment","interface Environment","org.http4k.config.Environment"]},{"name":"object Companion","description":"org.http4k.config.Authority.Companion","location":"http4k-config/org.http4k.config/-authority/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.config.Authority.Companion"]},{"name":"object Companion","description":"org.http4k.config.Environment.Companion","location":"http4k-config/org.http4k.config/-environment/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.config.Environment.Companion"]},{"name":"object Companion","description":"org.http4k.config.Host.Companion","location":"http4k-config/org.http4k.config/-host/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.config.Host.Companion"]},{"name":"object Companion","description":"org.http4k.config.MapEnvironment.Companion","location":"http4k-config/org.http4k.config/-map-environment/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.config.MapEnvironment.Companion"]},{"name":"object Companion","description":"org.http4k.config.Port.Companion","location":"http4k-config/org.http4k.config/-port/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.config.Port.Companion"]},{"name":"object EnvironmentKey : BiDiLensSpec<Environment, String> ","description":"org.http4k.config.EnvironmentKey","location":"http4k-config/org.http4k.config/-environment-key/index.html","searchKeys":["EnvironmentKey","object EnvironmentKey : BiDiLensSpec<Environment, String> ","org.http4k.config.EnvironmentKey"]},{"name":"object k8s","description":"org.http4k.config.EnvironmentKey.k8s","location":"http4k-config/org.http4k.config/-environment-key/k8s/index.html","searchKeys":["k8s","object k8s","org.http4k.config.EnvironmentKey.k8s"]},{"name":"open infix fun overrides(that: Environment): Environment","description":"org.http4k.config.Environment.overrides","location":"http4k-config/org.http4k.config/-environment/overrides.html","searchKeys":["overrides","open infix fun overrides(that: Environment): Environment","org.http4k.config.Environment.overrides"]},{"name":"open operator override fun <T> get(key: LensExtractor<Environment, T>): T","description":"org.http4k.config.MapEnvironment.get","location":"http4k-config/org.http4k.config/-map-environment/get.html","searchKeys":["get","open operator override fun <T> get(key: LensExtractor<Environment, T>): T","org.http4k.config.MapEnvironment.get"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.config.Secret.equals","location":"http4k-config/org.http4k.config/-secret/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.config.Secret.equals"]},{"name":"open operator override fun get(key: String): String?","description":"org.http4k.config.MapEnvironment.get","location":"http4k-config/org.http4k.config/-map-environment/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.http4k.config.MapEnvironment.get"]},{"name":"open operator override fun minus(key: String): Environment","description":"org.http4k.config.MapEnvironment.minus","location":"http4k-config/org.http4k.config/-map-environment/minus.html","searchKeys":["minus","open operator override fun minus(key: String): Environment","org.http4k.config.MapEnvironment.minus"]},{"name":"open operator override fun set(key: String, value: String): MapEnvironment","description":"org.http4k.config.MapEnvironment.set","location":"http4k-config/org.http4k.config/-map-environment/set.html","searchKeys":["set","open operator override fun set(key: String, value: String): MapEnvironment","org.http4k.config.MapEnvironment.set"]},{"name":"open override fun close()","description":"org.http4k.config.Secret.close","location":"http4k-config/org.http4k.config/-secret/close.html","searchKeys":["close","open override fun close()","org.http4k.config.Secret.close"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.config.Secret.hashCode","location":"http4k-config/org.http4k.config/-secret/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.config.Secret.hashCode"]},{"name":"open override fun keys(): Set<String>","description":"org.http4k.config.MapEnvironment.keys","location":"http4k-config/org.http4k.config/-map-environment/keys.html","searchKeys":["keys","open override fun keys(): Set<String>","org.http4k.config.MapEnvironment.keys"]},{"name":"open override fun toString(): String","description":"org.http4k.config.Authority.toString","location":"http4k-config/org.http4k.config/-authority/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.config.Authority.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.config.Secret.toString","location":"http4k-config/org.http4k.config/-secret/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.config.Secret.toString"]},{"name":"open override val separator: String","description":"org.http4k.config.MapEnvironment.separator","location":"http4k-config/org.http4k.config/-map-environment/separator.html","searchKeys":["separator","open override val separator: String","org.http4k.config.MapEnvironment.separator"]},{"name":"open val separator: String","description":"org.http4k.config.Environment.separator","location":"http4k-config/org.http4k.config/-environment/separator.html","searchKeys":["separator","open val separator: String","org.http4k.config.Environment.separator"]},{"name":"operator fun <T> invoke(fn: EnvironmentKey.k8s.() -> T): T","description":"org.http4k.config.EnvironmentKey.k8s.invoke","location":"http4k-config/org.http4k.config/-environment-key/k8s/invoke.html","searchKeys":["invoke","operator fun <T> invoke(fn: EnvironmentKey.k8s.() -> T): T","org.http4k.config.EnvironmentKey.k8s.invoke"]},{"name":"operator fun invoke(value: String): Authority","description":"org.http4k.config.Authority.Companion.invoke","location":"http4k-config/org.http4k.config/-authority/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(value: String): Authority","org.http4k.config.Authority.Companion.invoke"]},{"name":"typealias Authority = org.http4k.config.Authority","description":"org.http4k.cloudnative.env.Authority","location":"http4k-config/org.http4k.cloudnative.env/-authority/index.html","searchKeys":["Authority","typealias Authority = org.http4k.config.Authority","org.http4k.cloudnative.env.Authority"]},{"name":"typealias Environment = org.http4k.config.Environment","description":"org.http4k.cloudnative.env.Environment","location":"http4k-config/org.http4k.cloudnative.env/-environment/index.html","searchKeys":["Environment","typealias Environment = org.http4k.config.Environment","org.http4k.cloudnative.env.Environment"]},{"name":"typealias EnvironmentKey = org.http4k.config.EnvironmentKey","description":"org.http4k.cloudnative.env.EnvironmentKey","location":"http4k-config/org.http4k.cloudnative.env/-environment-key/index.html","searchKeys":["EnvironmentKey","typealias EnvironmentKey = org.http4k.config.EnvironmentKey","org.http4k.cloudnative.env.EnvironmentKey"]},{"name":"typealias Host = org.http4k.config.Host","description":"org.http4k.cloudnative.env.Host","location":"http4k-config/org.http4k.cloudnative.env/-host/index.html","searchKeys":["Host","typealias Host = org.http4k.config.Host","org.http4k.cloudnative.env.Host"]},{"name":"typealias MapEnvironment = org.http4k.config.MapEnvironment","description":"org.http4k.cloudnative.env.MapEnvironment","location":"http4k-config/org.http4k.cloudnative.env/-map-environment/index.html","searchKeys":["MapEnvironment","typealias MapEnvironment = org.http4k.config.MapEnvironment","org.http4k.cloudnative.env.MapEnvironment"]},{"name":"typealias Port = org.http4k.config.Port","description":"org.http4k.cloudnative.env.Port","location":"http4k-config/org.http4k.cloudnative.env/-port/index.html","searchKeys":["Port","typealias Port = org.http4k.config.Port","org.http4k.cloudnative.env.Port"]},{"name":"typealias Secret = org.http4k.config.Secret","description":"org.http4k.cloudnative.env.Secret","location":"http4k-config/org.http4k.cloudnative.env/-secret/index.html","searchKeys":["Secret","typealias Secret = org.http4k.config.Secret","org.http4k.cloudnative.env.Secret"]},{"name":"typealias Timeout = org.http4k.config.Timeout","description":"org.http4k.cloudnative.env.Timeout","location":"http4k-config/org.http4k.cloudnative.env/-timeout/index.html","searchKeys":["Timeout","typealias Timeout = org.http4k.config.Timeout","org.http4k.cloudnative.env.Timeout"]},{"name":"val EMPTY: Environment","description":"org.http4k.config.Environment.Companion.EMPTY","location":"http4k-config/org.http4k.config/-environment/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Environment","org.http4k.config.Environment.Companion.EMPTY"]},{"name":"val ENV: Environment","description":"org.http4k.config.Environment.Companion.ENV","location":"http4k-config/org.http4k.config/-environment/-companion/-e-n-v.html","searchKeys":["ENV","val ENV: Environment","org.http4k.config.Environment.Companion.ENV"]},{"name":"val HEALTH_PORT: BiDiLens<Environment, Int>","description":"org.http4k.config.EnvironmentKey.k8s.HEALTH_PORT","location":"http4k-config/org.http4k.config/-environment-key/k8s/-h-e-a-l-t-h_-p-o-r-t.html","searchKeys":["HEALTH_PORT","val HEALTH_PORT: BiDiLens<Environment, Int>","org.http4k.config.EnvironmentKey.k8s.HEALTH_PORT"]},{"name":"val Header.HOST: BiDiLens<HttpMessage, Authority?>","description":"org.http4k.lens.HOST","location":"http4k-config/org.http4k.lens/-h-o-s-t.html","searchKeys":["HOST","val Header.HOST: BiDiLens<HttpMessage, Authority?>","org.http4k.lens.HOST"]},{"name":"val JVM_PROPERTIES: Environment","description":"org.http4k.config.Environment.Companion.JVM_PROPERTIES","location":"http4k-config/org.http4k.config/-environment/-companion/-j-v-m_-p-r-o-p-e-r-t-i-e-s.html","searchKeys":["JVM_PROPERTIES","val JVM_PROPERTIES: Environment","org.http4k.config.Environment.Companion.JVM_PROPERTIES"]},{"name":"val RANDOM: Port","description":"org.http4k.config.Port.Companion.RANDOM","location":"http4k-config/org.http4k.config/-port/-companion/-r-a-n-d-o-m.html","searchKeys":["RANDOM","val RANDOM: Port","org.http4k.config.Port.Companion.RANDOM"]},{"name":"val SERVICE_PORT: BiDiLens<Environment, Int>","description":"org.http4k.config.EnvironmentKey.k8s.SERVICE_PORT","location":"http4k-config/org.http4k.config/-environment-key/k8s/-s-e-r-v-i-c-e_-p-o-r-t.html","searchKeys":["SERVICE_PORT","val SERVICE_PORT: BiDiLens<Environment, Int>","org.http4k.config.EnvironmentKey.k8s.SERVICE_PORT"]},{"name":"val host: Host","description":"org.http4k.config.Authority.host","location":"http4k-config/org.http4k.config/-authority/host.html","searchKeys":["host","val host: Host","org.http4k.config.Authority.host"]},{"name":"val localhost: Host","description":"org.http4k.config.Host.Companion.localhost","location":"http4k-config/org.http4k.config/-host/-companion/localhost.html","searchKeys":["localhost","val localhost: Host","org.http4k.config.Host.Companion.localhost"]},{"name":"val port: Port? = null","description":"org.http4k.config.Authority.port","location":"http4k-config/org.http4k.config/-authority/port.html","searchKeys":["port","val port: Port? = null","org.http4k.config.Authority.port"]},{"name":"val value: Duration","description":"org.http4k.config.Timeout.value","location":"http4k-config/org.http4k.config/-timeout/value.html","searchKeys":["value","val value: Duration","org.http4k.config.Timeout.value"]},{"name":"val value: Int","description":"org.http4k.config.Port.value","location":"http4k-config/org.http4k.config/-port/value.html","searchKeys":["value","val value: Int","org.http4k.config.Port.value"]},{"name":"val value: String","description":"org.http4k.config.Host.value","location":"http4k-config/org.http4k.config/-host/value.html","searchKeys":["value","val value: String","org.http4k.config.Host.value"]},{"name":"abstract fun Caching(baseTemplateDir: String = \"./\"): TemplateRenderer","description":"org.http4k.template.Templates.Caching","location":"http4k-template-core/org.http4k.template/-templates/-caching.html","searchKeys":["Caching","abstract fun Caching(baseTemplateDir: String = \"./\"): TemplateRenderer","org.http4k.template.Templates.Caching"]},{"name":"abstract fun CachingClasspath(baseClasspathPackage: String = \"\"): TemplateRenderer","description":"org.http4k.template.Templates.CachingClasspath","location":"http4k-template-core/org.http4k.template/-templates/-caching-classpath.html","searchKeys":["CachingClasspath","abstract fun CachingClasspath(baseClasspathPackage: String = \"\"): TemplateRenderer","org.http4k.template.Templates.CachingClasspath"]},{"name":"abstract fun HotReload(baseTemplateDir: String = \"./\"): TemplateRenderer","description":"org.http4k.template.Templates.HotReload","location":"http4k-template-core/org.http4k.template/-templates/-hot-reload.html","searchKeys":["HotReload","abstract fun HotReload(baseTemplateDir: String = \"./\"): TemplateRenderer","org.http4k.template.Templates.HotReload"]},{"name":"constructor(view: ViewModel)","description":"org.http4k.template.ViewNotFound.ViewNotFound","location":"http4k-template-core/org.http4k.template/-view-not-found/-view-not-found.html","searchKeys":["ViewNotFound","constructor(view: ViewModel)","org.http4k.template.ViewNotFound.ViewNotFound"]},{"name":"data class ViewNotFound(view: ViewModel) : RuntimeException","description":"org.http4k.template.ViewNotFound","location":"http4k-template-core/org.http4k.template/-view-not-found/index.html","searchKeys":["ViewNotFound","data class ViewNotFound(view: ViewModel) : RuntimeException","org.http4k.template.ViewNotFound"]},{"name":"fun Body.Companion.viewModel(renderer: TemplateRenderer, contentType: ContentType): BiDiBodyLensSpec<ViewModel>","description":"org.http4k.template.viewModel","location":"http4k-template-core/org.http4k.template/view-model.html","searchKeys":["viewModel","fun Body.Companion.viewModel(renderer: TemplateRenderer, contentType: ContentType): BiDiBodyLensSpec<ViewModel>","org.http4k.template.viewModel"]},{"name":"fun TemplateRenderer.renderToResponse(viewModel: ViewModel, status: Status = OK, contentType: ContentType = TEXT_HTML): Response","description":"org.http4k.template.renderToResponse","location":"http4k-template-core/org.http4k.template/render-to-response.html","searchKeys":["renderToResponse","fun TemplateRenderer.renderToResponse(viewModel: ViewModel, status: Status = OK, contentType: ContentType = TEXT_HTML): Response","org.http4k.template.renderToResponse"]},{"name":"fun TemplateRenderer.then(that: TemplateRenderer): TemplateRenderer","description":"org.http4k.template.then","location":"http4k-template-core/org.http4k.template/then.html","searchKeys":["then","fun TemplateRenderer.then(that: TemplateRenderer): TemplateRenderer","org.http4k.template.then"]},{"name":"fun WsMessage.Companion.viewModel(renderer: TemplateRenderer): BiDiWsMessageLensSpec<ViewModel>","description":"org.http4k.template.viewModel","location":"http4k-template-core/org.http4k.template/view-model.html","searchKeys":["viewModel","fun WsMessage.Companion.viewModel(renderer: TemplateRenderer): BiDiWsMessageLensSpec<ViewModel>","org.http4k.template.viewModel"]},{"name":"interface Templates","description":"org.http4k.template.Templates","location":"http4k-template-core/org.http4k.template/-templates/index.html","searchKeys":["Templates","interface Templates","org.http4k.template.Templates"]},{"name":"interface ViewModel","description":"org.http4k.template.ViewModel","location":"http4k-template-core/org.http4k.template/-view-model/index.html","searchKeys":["ViewModel","interface ViewModel","org.http4k.template.ViewModel"]},{"name":"open fun template(): String","description":"org.http4k.template.ViewModel.template","location":"http4k-template-core/org.http4k.template/-view-model/template.html","searchKeys":["template","open fun template(): String","org.http4k.template.ViewModel.template"]},{"name":"typealias TemplateRenderer = (ViewModel) -> String","description":"org.http4k.template.TemplateRenderer","location":"http4k-template-core/org.http4k.template/-template-renderer/index.html","searchKeys":["TemplateRenderer","typealias TemplateRenderer = (ViewModel) -> String","org.http4k.template.TemplateRenderer"]},{"name":"class Pug4jTemplates(configure: PugConfiguration = PugConfiguration()) : Templates","description":"org.http4k.template.Pug4jTemplates","location":"http4k-template-pug4j/org.http4k.template/-pug4j-templates/index.html","searchKeys":["Pug4jTemplates","class Pug4jTemplates(configure: PugConfiguration = PugConfiguration()) : Templates","org.http4k.template.Pug4jTemplates"]},{"name":"constructor(configure: PugConfiguration = PugConfiguration())","description":"org.http4k.template.Pug4jTemplates.Pug4jTemplates","location":"http4k-template-pug4j/org.http4k.template/-pug4j-templates/-pug4j-templates.html","searchKeys":["Pug4jTemplates","constructor(configure: PugConfiguration = PugConfiguration())","org.http4k.template.Pug4jTemplates.Pug4jTemplates"]},{"name":"open override fun Caching(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.Pug4jTemplates.Caching","location":"http4k-template-pug4j/org.http4k.template/-pug4j-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): TemplateRenderer","org.http4k.template.Pug4jTemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","description":"org.http4k.template.Pug4jTemplates.CachingClasspath","location":"http4k-template-pug4j/org.http4k.template/-pug4j-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","org.http4k.template.Pug4jTemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): (ViewModel) -> String","description":"org.http4k.template.Pug4jTemplates.HotReload","location":"http4k-template-pug4j/org.http4k.template/-pug4j-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): (ViewModel) -> String","org.http4k.template.Pug4jTemplates.HotReload"]},{"name":"typealias Jade4jTemplates = Pug4jTemplates","description":"org.http4k.template.Jade4jTemplates","location":"http4k-template-pug4j/org.http4k.template/-jade4j-templates/index.html","searchKeys":["Jade4jTemplates","typealias Jade4jTemplates = Pug4jTemplates","org.http4k.template.Jade4jTemplates"]},{"name":"abstract fun createFile(filename: String?): MultipartFile","description":"org.http4k.multipart.DiskLocation.createFile","location":"http4k-multipart/org.http4k.multipart/-disk-location/create-file.html","searchKeys":["createFile","abstract fun createFile(filename: String?): MultipartFile","org.http4k.multipart.DiskLocation.createFile"]},{"name":"abstract fun file(): File","description":"org.http4k.multipart.MultipartFile.file","location":"http4k-multipart/org.http4k.multipart/-multipart-file/file.html","searchKeys":["file","abstract fun file(): File","org.http4k.multipart.MultipartFile.file"]},{"name":"abstract override fun close()","description":"org.http4k.multipart.MultipartFile.close","location":"http4k-multipart/org.http4k.multipart/-multipart-file/close.html","searchKeys":["close","abstract override fun close()","org.http4k.multipart.MultipartFile.close"]},{"name":"abstract val name: String","description":"org.http4k.core.MultipartEntity.name","location":"http4k-multipart/org.http4k.core/-multipart-entity/name.html","searchKeys":["name","abstract val name: String","org.http4k.core.MultipartEntity.name"]},{"name":"class Base64Decoder","description":"org.apache.commons.fileupload.util.mime.Base64Decoder","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-base64-decoder/index.html","searchKeys":["Base64Decoder","class Base64Decoder","org.apache.commons.fileupload.util.mime.Base64Decoder"]},{"name":"class MimeUtility","description":"org.apache.commons.fileupload.util.mime.MimeUtility","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-mime-utility/index.html","searchKeys":["MimeUtility","class MimeUtility","org.apache.commons.fileupload.util.mime.MimeUtility"]},{"name":"class ParseException : Exception","description":"org.apache.commons.fileupload.util.mime.ParseException","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-parse-exception/index.html","searchKeys":["ParseException","class ParseException : Exception","org.apache.commons.fileupload.util.mime.ParseException"]},{"name":"class QuotedPrintableDecoder","description":"org.apache.commons.fileupload.util.mime.QuotedPrintableDecoder","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-quoted-printable-decoder/index.html","searchKeys":["QuotedPrintableDecoder","class QuotedPrintableDecoder","org.apache.commons.fileupload.util.mime.QuotedPrintableDecoder"]},{"name":"const val DEFAULT_DISK_THRESHOLD: Int","description":"org.http4k.core.MultipartFormBody.Companion.DEFAULT_DISK_THRESHOLD","location":"http4k-multipart/org.http4k.core/-multipart-form-body/-companion/-d-e-f-a-u-l-t_-d-i-s-k_-t-h-r-e-s-h-o-l-d.html","searchKeys":["DEFAULT_DISK_THRESHOLD","const val DEFAULT_DISK_THRESHOLD: Int","org.http4k.core.MultipartFormBody.Companion.DEFAULT_DISK_THRESHOLD"]},{"name":"constructor()","description":"org.apache.commons.fileupload.util.ParameterParser.ParameterParser","location":"http4k-multipart/org.apache.commons.fileupload.util/-parameter-parser/-parameter-parser.html","searchKeys":["ParameterParser","constructor()","org.apache.commons.fileupload.util.ParameterParser.ParameterParser"]},{"name":"constructor()","description":"org.http4k.multipart.BitFiddling.BitFiddling","location":"http4k-multipart/org.http4k.multipart/-bit-fiddling/-bit-fiddling.html","searchKeys":["BitFiddling","constructor()","org.http4k.multipart.BitFiddling.BitFiddling"]},{"name":"constructor(boundary: String = UUID.randomUUID().toString())","description":"org.http4k.core.MultipartFormBody.MultipartFormBody","location":"http4k-multipart/org.http4k.core/-multipart-form-body/-multipart-form-body.html","searchKeys":["MultipartFormBody","constructor(boundary: String = UUID.randomUUID().toString())","org.http4k.core.MultipartFormBody.MultipartFormBody"]},{"name":"constructor(fields: Map<String, List<MultipartFormField>> = emptyMap(), files: Map<String, List<MultipartFormFile>> = emptyMap(), errors: List<Failure> = emptyList(), onClose: List<() -> Unit> = emptyList())","description":"org.http4k.lens.MultipartForm.MultipartForm","location":"http4k-multipart/org.http4k.lens/-multipart-form/-multipart-form.html","searchKeys":["MultipartForm","constructor(fields: Map<String, List<MultipartFormField>> = emptyMap(), files: Map<String, List<MultipartFormFile>> = emptyMap(), errors: List<Failure> = emptyList(), onClose: List<() -> Unit> = emptyList())","org.http4k.lens.MultipartForm.MultipartForm"]},{"name":"constructor(filename: String, contentType: ContentType, content: InputStream)","description":"org.http4k.lens.MultipartFormFile.MultipartFormFile","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/-multipart-form-file.html","searchKeys":["MultipartFormFile","constructor(filename: String, contentType: ContentType, content: InputStream)","org.http4k.lens.MultipartFormFile.MultipartFormFile"]},{"name":"constructor(message: String)","description":"org.apache.commons.fileupload.util.mime.ParseException.ParseException","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-parse-exception/-parse-exception.html","searchKeys":["ParseException","constructor(message: String)","org.apache.commons.fileupload.util.mime.ParseException.ParseException"]},{"name":"constructor(name: String, file: MultipartFormFile, headers: Headers = emptyList())","description":"org.http4k.core.MultipartEntity.File.File","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/-file.html","searchKeys":["File","constructor(name: String, file: MultipartFormFile, headers: Headers = emptyList())","org.http4k.core.MultipartEntity.File.File"]},{"name":"constructor(name: String, value: String, headers: Headers = emptyList())","description":"org.http4k.core.MultipartEntity.Field.Field","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/-field.html","searchKeys":["Field","constructor(name: String, value: String, headers: Headers = emptyList())","org.http4k.core.MultipartEntity.Field.Field"]},{"name":"constructor(value: String, headers: Headers = emptyList())","description":"org.http4k.lens.MultipartFormField.MultipartFormField","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/-multipart-form-field.html","searchKeys":["MultipartFormField","constructor(value: String, headers: Headers = emptyList())","org.http4k.lens.MultipartFormField.MultipartFormField"]},{"name":"data class Field(val name: String, val value: String, val headers: Headers = emptyList()) : MultipartEntity","description":"org.http4k.core.MultipartEntity.Field","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/index.html","searchKeys":["Field","data class Field(val name: String, val value: String, val headers: Headers = emptyList()) : MultipartEntity","org.http4k.core.MultipartEntity.Field"]},{"name":"data class File(val name: String, val file: MultipartFormFile, val headers: Headers = emptyList()) : MultipartEntity","description":"org.http4k.core.MultipartEntity.File","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/index.html","searchKeys":["File","data class File(val name: String, val file: MultipartFormFile, val headers: Headers = emptyList()) : MultipartEntity","org.http4k.core.MultipartEntity.File"]},{"name":"data class MultipartForm(val fields: Map<String, List<MultipartFormField>> = emptyMap(), val files: Map<String, List<MultipartFormFile>> = emptyMap(), val errors: List<Failure> = emptyList(), val onClose: List<() -> Unit> = emptyList()) : Closeable","description":"org.http4k.lens.MultipartForm","location":"http4k-multipart/org.http4k.lens/-multipart-form/index.html","searchKeys":["MultipartForm","data class MultipartForm(val fields: Map<String, List<MultipartFormField>> = emptyMap(), val files: Map<String, List<MultipartFormFile>> = emptyMap(), val errors: List<Failure> = emptyList(), val onClose: List<() -> Unit> = emptyList()) : Closeable","org.http4k.lens.MultipartForm"]},{"name":"data class MultipartFormBody : Body, Closeable","description":"org.http4k.core.MultipartFormBody","location":"http4k-multipart/org.http4k.core/-multipart-form-body/index.html","searchKeys":["MultipartFormBody","data class MultipartFormBody : Body, Closeable","org.http4k.core.MultipartFormBody"]},{"name":"data class MultipartFormField(val value: String, val headers: Headers = emptyList())","description":"org.http4k.lens.MultipartFormField","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/index.html","searchKeys":["MultipartFormField","data class MultipartFormField(val value: String, val headers: Headers = emptyList())","org.http4k.lens.MultipartFormField"]},{"name":"data class MultipartFormFile : Closeable","description":"org.http4k.lens.MultipartFormFile","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/index.html","searchKeys":["MultipartFormFile","data class MultipartFormFile : Closeable","org.http4k.lens.MultipartFormFile"]},{"name":"fun <NODE : Any> MultipartFormField.Companion.json(auto: Json<NODE>): BiDiLensSpec<MultipartForm, NODE>","description":"org.http4k.format.json","location":"http4k-multipart/org.http4k.format/json.html","searchKeys":["json","fun <NODE : Any> MultipartFormField.Companion.json(auto: Json<NODE>): BiDiLensSpec<MultipartForm, NODE>","org.http4k.format.json"]},{"name":"fun <R : HttpMessage> R.multipartForm(t: MultipartForm): R","description":"org.http4k.lens.multipartForm","location":"http4k-multipart/org.http4k.lens/multipart-form.html","searchKeys":["multipartForm","fun <R : HttpMessage> R.multipartForm(t: MultipartForm): R","org.http4k.lens.multipartForm"]},{"name":"fun Body.Companion.multipartForm(validator: Validator, vararg parts: Lens<MultipartForm, *>, defaultBoundary: String = MULTIPART_BOUNDARY, diskThreshold: Int = DEFAULT_DISK_THRESHOLD, contentTypeFn: (String) -> ContentType = ::MultipartFormWithBoundary, getDiskLocation: () -> DiskLocation = { DiskLocation.Temp() }): BiDiBodyLensSpec<MultipartForm>","description":"org.http4k.lens.multipartForm","location":"http4k-multipart/org.http4k.lens/multipart-form.html","searchKeys":["multipartForm","fun Body.Companion.multipartForm(validator: Validator, vararg parts: Lens<MultipartForm, *>, defaultBoundary: String = MULTIPART_BOUNDARY, diskThreshold: Int = DEFAULT_DISK_THRESHOLD, contentTypeFn: (String) -> ContentType = ::MultipartFormWithBoundary, getDiskLocation: () -> DiskLocation = { DiskLocation.Temp() }): BiDiBodyLensSpec<MultipartForm>","org.http4k.lens.multipartForm"]},{"name":"fun HttpMessage.multipartIterator(): Iterator<MultipartEntity>","description":"org.http4k.core.multipartIterator","location":"http4k-multipart/org.http4k.core/multipart-iterator.html","searchKeys":["multipartIterator","fun HttpMessage.multipartIterator(): Iterator<MultipartEntity>","org.http4k.core.multipartIterator"]},{"name":"fun MultipartForm.with(vararg modifiers: (MultipartForm) -> MultipartForm): MultipartForm","description":"org.http4k.core.with","location":"http4k-multipart/org.http4k.core/with.html","searchKeys":["with","fun MultipartForm.with(vararg modifiers: (MultipartForm) -> MultipartForm): MultipartForm","org.http4k.core.with"]},{"name":"fun Permanent(diskDir: File = Files.createTempDirectory(\"http4k-mp\").toFile()): DiskLocation","description":"org.http4k.multipart.DiskLocation.Companion.Permanent","location":"http4k-multipart/org.http4k.multipart/-disk-location/-companion/-permanent.html","searchKeys":["Permanent","fun Permanent(diskDir: File = Files.createTempDirectory(\"http4k-mp\").toFile()): DiskLocation","org.http4k.multipart.DiskLocation.Companion.Permanent"]},{"name":"fun ServerFilters.ProcessFiles(fileConsumer: (MultipartEntity.File) -> String): Filter","description":"org.http4k.filter.ProcessFiles","location":"http4k-multipart/org.http4k.filter/-process-files.html","searchKeys":["ProcessFiles","fun ServerFilters.ProcessFiles(fileConsumer: (MultipartEntity.File) -> String): Filter","org.http4k.filter.ProcessFiles"]},{"name":"fun Temp(diskDir: File = Files.createTempDirectory(\"http4k-mp\").toFile().apply { deleteOnExit() }): DiskLocation","description":"org.http4k.multipart.DiskLocation.Companion.Temp","location":"http4k-multipart/org.http4k.multipart/-disk-location/-companion/-temp.html","searchKeys":["Temp","fun Temp(diskDir: File = Files.createTempDirectory(\"http4k-mp\").toFile().apply { deleteOnExit() }): DiskLocation","org.http4k.multipart.DiskLocation.Companion.Temp"]},{"name":"fun field(name: String): MultipartFormField?","description":"org.http4k.core.MultipartFormBody.field","location":"http4k-multipart/org.http4k.core/-multipart-form-body/field.html","searchKeys":["field","fun field(name: String): MultipartFormField?","org.http4k.core.MultipartFormBody.field"]},{"name":"fun fieldValue(name: String): String?","description":"org.http4k.core.MultipartFormBody.fieldValue","location":"http4k-multipart/org.http4k.core/-multipart-form-body/field-value.html","searchKeys":["fieldValue","fun fieldValue(name: String): String?","org.http4k.core.MultipartFormBody.fieldValue"]},{"name":"fun fieldValues(name: String): List<String>","description":"org.http4k.core.MultipartFormBody.fieldValues","location":"http4k-multipart/org.http4k.core/-multipart-form-body/field-values.html","searchKeys":["fieldValues","fun fieldValues(name: String): List<String>","org.http4k.core.MultipartFormBody.fieldValues"]},{"name":"fun fields(name: String): List<MultipartFormField>","description":"org.http4k.core.MultipartFormBody.fields","location":"http4k-multipart/org.http4k.core/-multipart-form-body/fields.html","searchKeys":["fields","fun fields(name: String): List<MultipartFormField>","org.http4k.core.MultipartFormBody.fields"]},{"name":"fun file(name: String): MultipartFormFile?","description":"org.http4k.core.MultipartFormBody.file","location":"http4k-multipart/org.http4k.core/-multipart-form-body/file.html","searchKeys":["file","fun file(name: String): MultipartFormFile?","org.http4k.core.MultipartFormBody.file"]},{"name":"fun files(name: String): List<MultipartFormFile>","description":"org.http4k.core.MultipartFormBody.files","location":"http4k-multipart/org.http4k.core/-multipart-form-body/files.html","searchKeys":["files","fun files(name: String): List<MultipartFormFile>","org.http4k.core.MultipartFormBody.files"]},{"name":"fun from(httpMessage: HttpMessage, diskThreshold: Int = DEFAULT_DISK_THRESHOLD, diskLocation: DiskLocation = DiskLocation.Temp()): MultipartFormBody","description":"org.http4k.core.MultipartFormBody.Companion.from","location":"http4k-multipart/org.http4k.core/-multipart-form-body/-companion/from.html","searchKeys":["from","fun from(httpMessage: HttpMessage, diskThreshold: Int = DEFAULT_DISK_THRESHOLD, diskLocation: DiskLocation = DiskLocation.Temp()): MultipartFormBody","org.http4k.core.MultipartFormBody.Companion.from"]},{"name":"fun inputStream(): BiDiLensSpec<MultipartForm, InputStream>","description":"org.http4k.lens.MultipartFormFile.Companion.inputStream","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/-companion/input-stream.html","searchKeys":["inputStream","fun inputStream(): BiDiLensSpec<MultipartForm, InputStream>","org.http4k.lens.MultipartFormFile.Companion.inputStream"]},{"name":"fun minusField(name: String): MultipartForm","description":"org.http4k.lens.MultipartForm.minusField","location":"http4k-multipart/org.http4k.lens/-multipart-form/minus-field.html","searchKeys":["minusField","fun minusField(name: String): MultipartForm","org.http4k.lens.MultipartForm.minusField"]},{"name":"fun minusFile(name: String): MultipartForm","description":"org.http4k.lens.MultipartForm.minusFile","location":"http4k-multipart/org.http4k.lens/-multipart-form/minus-file.html","searchKeys":["minusFile","fun minusFile(name: String): MultipartForm","org.http4k.lens.MultipartForm.minusFile"]},{"name":"fun string(): BiDiLensSpec<MultipartForm, String>","description":"org.http4k.lens.MultipartFormField.Companion.string","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/-companion/string.html","searchKeys":["string","fun string(): BiDiLensSpec<MultipartForm, String>","org.http4k.lens.MultipartFormField.Companion.string"]},{"name":"inline fun <T : Any> MultipartFormField.Companion.auto(auto: AutoMarshalling): BiDiLensSpec<MultipartForm, T>","description":"org.http4k.format.auto","location":"http4k-multipart/org.http4k.format/auto.html","searchKeys":["auto","inline fun <T : Any> MultipartFormField.Companion.auto(auto: AutoMarshalling): BiDiLensSpec<MultipartForm, T>","org.http4k.format.auto"]},{"name":"interface DiskLocation : Closeable","description":"org.http4k.multipart.DiskLocation","location":"http4k-multipart/org.http4k.multipart/-disk-location/index.html","searchKeys":["DiskLocation","interface DiskLocation : Closeable","org.http4k.multipart.DiskLocation"]},{"name":"interface MultipartFile : Closeable","description":"org.http4k.multipart.MultipartFile","location":"http4k-multipart/org.http4k.multipart/-multipart-file/index.html","searchKeys":["MultipartFile","interface MultipartFile : Closeable","org.http4k.multipart.MultipartFile"]},{"name":"object Companion","description":"org.http4k.core.MultipartFormBody.Companion","location":"http4k-multipart/org.http4k.core/-multipart-form-body/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.MultipartFormBody.Companion"]},{"name":"object Companion","description":"org.http4k.multipart.DiskLocation.Companion","location":"http4k-multipart/org.http4k.multipart/-disk-location/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.multipart.DiskLocation.Companion"]},{"name":"object Companion : BiDiLensSpec<MultipartForm, MultipartFormField> ","description":"org.http4k.lens.MultipartFormField.Companion","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/-companion/index.html","searchKeys":["Companion","object Companion : BiDiLensSpec<MultipartForm, MultipartFormField> ","org.http4k.lens.MultipartFormField.Companion"]},{"name":"object Companion : BiDiLensSpec<MultipartForm, MultipartFormFile> ","description":"org.http4k.lens.MultipartFormFile.Companion","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/-companion/index.html","searchKeys":["Companion","object Companion : BiDiLensSpec<MultipartForm, MultipartFormFile> ","org.http4k.lens.MultipartFormFile.Companion"]},{"name":"open class BitFiddling","description":"org.http4k.multipart.BitFiddling","location":"http4k-multipart/org.http4k.multipart/-bit-fiddling/index.html","searchKeys":["BitFiddling","open class BitFiddling","org.http4k.multipart.BitFiddling"]},{"name":"open class ParameterParser","description":"org.apache.commons.fileupload.util.ParameterParser","location":"http4k-multipart/org.apache.commons.fileupload.util/-parameter-parser/index.html","searchKeys":["ParameterParser","open class ParameterParser","org.apache.commons.fileupload.util.ParameterParser"]},{"name":"open fun decode(data: Array<Byte>, out: OutputStream)","description":"org.apache.commons.fileupload.util.mime.Base64Decoder.decode","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-base64-decoder/decode.html","searchKeys":["decode","open fun decode(data: Array<Byte>, out: OutputStream)","org.apache.commons.fileupload.util.mime.Base64Decoder.decode"]},{"name":"open fun decode(data: Array<Byte>, out: OutputStream)","description":"org.apache.commons.fileupload.util.mime.QuotedPrintableDecoder.decode","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-quoted-printable-decoder/decode.html","searchKeys":["decode","open fun decode(data: Array<Byte>, out: OutputStream)","org.apache.commons.fileupload.util.mime.QuotedPrintableDecoder.decode"]},{"name":"open fun decodeText(text: String): String","description":"org.apache.commons.fileupload.util.mime.MimeUtility.decodeText","location":"http4k-multipart/org.apache.commons.fileupload.util.mime/-mime-utility/decode-text.html","searchKeys":["decodeText","open fun decodeText(text: String): String","org.apache.commons.fileupload.util.mime.MimeUtility.decodeText"]},{"name":"open fun getAnInt(b: Byte, i: Int): Int","description":"org.http4k.multipart.BitFiddling.getAnInt","location":"http4k-multipart/org.http4k.multipart/-bit-fiddling/get-an-int.html","searchKeys":["getAnInt","open fun getAnInt(b: Byte, i: Int): Int","org.http4k.multipart.BitFiddling.getAnInt"]},{"name":"open fun parse(str: String, separator: Char): Map<String, String>","description":"org.apache.commons.fileupload.util.ParameterParser.parse","location":"http4k-multipart/org.apache.commons.fileupload.util/-parameter-parser/parse.html","searchKeys":["parse","open fun parse(str: String, separator: Char): Map<String, String>","org.apache.commons.fileupload.util.ParameterParser.parse"]},{"name":"open fun parse(str: String, separators: Array<Char>): Map<String, String>","description":"org.apache.commons.fileupload.util.ParameterParser.parse","location":"http4k-multipart/org.apache.commons.fileupload.util/-parameter-parser/parse.html","searchKeys":["parse","open fun parse(str: String, separators: Array<Char>): Map<String, String>","org.apache.commons.fileupload.util.ParameterParser.parse"]},{"name":"open fun setLowerCaseNames()","description":"org.apache.commons.fileupload.util.ParameterParser.setLowerCaseNames","location":"http4k-multipart/org.apache.commons.fileupload.util/-parameter-parser/set-lower-case-names.html","searchKeys":["setLowerCaseNames","open fun setLowerCaseNames()","org.apache.commons.fileupload.util.ParameterParser.setLowerCaseNames"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.core.MultipartFormBody.equals","location":"http4k-multipart/org.http4k.core/-multipart-form-body/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.core.MultipartFormBody.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.lens.MultipartForm.equals","location":"http4k-multipart/org.http4k.lens/-multipart-form/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.lens.MultipartForm.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.lens.MultipartFormFile.equals","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.lens.MultipartFormFile.equals"]},{"name":"open override fun close()","description":"org.http4k.core.MultipartEntity.Field.close","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/close.html","searchKeys":["close","open override fun close()","org.http4k.core.MultipartEntity.Field.close"]},{"name":"open override fun close()","description":"org.http4k.core.MultipartEntity.File.close","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/close.html","searchKeys":["close","open override fun close()","org.http4k.core.MultipartEntity.File.close"]},{"name":"open override fun close()","description":"org.http4k.core.MultipartFormBody.close","location":"http4k-multipart/org.http4k.core/-multipart-form-body/close.html","searchKeys":["close","open override fun close()","org.http4k.core.MultipartFormBody.close"]},{"name":"open override fun close()","description":"org.http4k.lens.MultipartForm.close","location":"http4k-multipart/org.http4k.lens/-multipart-form/close.html","searchKeys":["close","open override fun close()","org.http4k.lens.MultipartForm.close"]},{"name":"open override fun close()","description":"org.http4k.lens.MultipartFormFile.close","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/close.html","searchKeys":["close","open override fun close()","org.http4k.lens.MultipartFormFile.close"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.core.MultipartFormBody.hashCode","location":"http4k-multipart/org.http4k.core/-multipart-form-body/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.core.MultipartFormBody.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.lens.MultipartForm.hashCode","location":"http4k-multipart/org.http4k.lens/-multipart-form/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.lens.MultipartForm.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.lens.MultipartFormFile.hashCode","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.lens.MultipartFormFile.hashCode"]},{"name":"open override fun toString(): String","description":"org.http4k.core.MultipartFormBody.toString","location":"http4k-multipart/org.http4k.core/-multipart-form-body/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.MultipartFormBody.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.MultipartFormFile.toString","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.MultipartFormFile.toString"]},{"name":"open override val length: Long? = null","description":"org.http4k.core.MultipartFormBody.length","location":"http4k-multipart/org.http4k.core/-multipart-form-body/length.html","searchKeys":["length","open override val length: Long? = null","org.http4k.core.MultipartFormBody.length"]},{"name":"open override val name: String","description":"org.http4k.core.MultipartEntity.Field.name","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/name.html","searchKeys":["name","open override val name: String","org.http4k.core.MultipartEntity.Field.name"]},{"name":"open override val name: String","description":"org.http4k.core.MultipartEntity.File.name","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/name.html","searchKeys":["name","open override val name: String","org.http4k.core.MultipartEntity.File.name"]},{"name":"open override val payload: ByteBuffer","description":"org.http4k.core.MultipartFormBody.payload","location":"http4k-multipart/org.http4k.core/-multipart-form-body/payload.html","searchKeys":["payload","open override val payload: ByteBuffer","org.http4k.core.MultipartFormBody.payload"]},{"name":"open override val stream: InputStream","description":"org.http4k.core.MultipartFormBody.stream","location":"http4k-multipart/org.http4k.core/-multipart-form-body/stream.html","searchKeys":["stream","open override val stream: InputStream","org.http4k.core.MultipartFormBody.stream"]},{"name":"operator fun plus(field: Pair<String, MultipartFormField>): MultipartFormBody","description":"org.http4k.core.MultipartFormBody.plus","location":"http4k-multipart/org.http4k.core/-multipart-form-body/plus.html","searchKeys":["plus","operator fun plus(field: Pair<String, MultipartFormField>): MultipartFormBody","org.http4k.core.MultipartFormBody.plus"]},{"name":"operator fun plus(field: Pair<String, MultipartFormFile>): MultipartFormBody","description":"org.http4k.core.MultipartFormBody.plus","location":"http4k-multipart/org.http4k.core/-multipart-form-body/plus.html","searchKeys":["plus","operator fun plus(field: Pair<String, MultipartFormFile>): MultipartFormBody","org.http4k.core.MultipartFormBody.plus"]},{"name":"operator fun plus(field: Pair<String, String>): MultipartFormBody","description":"org.http4k.core.MultipartFormBody.plus","location":"http4k-multipart/org.http4k.core/-multipart-form-body/plus.html","searchKeys":["plus","operator fun plus(field: Pair<String, String>): MultipartFormBody","org.http4k.core.MultipartFormBody.plus"]},{"name":"operator fun plus(kv: Pair<String, MultipartFormField>): MultipartForm","description":"org.http4k.lens.MultipartForm.plus","location":"http4k-multipart/org.http4k.lens/-multipart-form/plus.html","searchKeys":["plus","operator fun plus(kv: Pair<String, MultipartFormField>): MultipartForm","org.http4k.lens.MultipartForm.plus"]},{"name":"operator fun plus(kv: Pair<String, MultipartFormFile>): MultipartForm","description":"org.http4k.lens.MultipartForm.plus","location":"http4k-multipart/org.http4k.lens/-multipart-form/plus.html","searchKeys":["plus","operator fun plus(kv: Pair<String, MultipartFormFile>): MultipartForm","org.http4k.lens.MultipartForm.plus"]},{"name":"operator fun plus(kv: Pair<String, String>): MultipartForm","description":"org.http4k.lens.MultipartForm.plus","location":"http4k-multipart/org.http4k.lens/-multipart-form/plus.html","searchKeys":["plus","operator fun plus(kv: Pair<String, String>): MultipartForm","org.http4k.lens.MultipartForm.plus"]},{"name":"sealed class MultipartEntity : Closeable","description":"org.http4k.core.MultipartEntity","location":"http4k-multipart/org.http4k.core/-multipart-entity/index.html","searchKeys":["MultipartEntity","sealed class MultipartEntity : Closeable","org.http4k.core.MultipartEntity"]},{"name":"val MULTIPART_BOUNDARY: String","description":"org.http4k.lens.MULTIPART_BOUNDARY","location":"http4k-multipart/org.http4k.lens/-m-u-l-t-i-p-a-r-t_-b-o-u-n-d-a-r-y.html","searchKeys":["MULTIPART_BOUNDARY","val MULTIPART_BOUNDARY: String","org.http4k.lens.MULTIPART_BOUNDARY"]},{"name":"val boundary: String","description":"org.http4k.core.MultipartFormBody.boundary","location":"http4k-multipart/org.http4k.core/-multipart-form-body/boundary.html","searchKeys":["boundary","val boundary: String","org.http4k.core.MultipartFormBody.boundary"]},{"name":"val closeable: Closeable","description":"org.http4k.lens.MultipartFormFile.closeable","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/closeable.html","searchKeys":["closeable","val closeable: Closeable","org.http4k.lens.MultipartFormFile.closeable"]},{"name":"val content: InputStream","description":"org.http4k.lens.MultipartFormFile.content","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/content.html","searchKeys":["content","val content: InputStream","org.http4k.lens.MultipartFormFile.content"]},{"name":"val contentType: ContentType","description":"org.http4k.lens.MultipartFormFile.contentType","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/content-type.html","searchKeys":["contentType","val contentType: ContentType","org.http4k.lens.MultipartFormFile.contentType"]},{"name":"val errors: List<Failure>","description":"org.http4k.lens.MultipartForm.errors","location":"http4k-multipart/org.http4k.lens/-multipart-form/errors.html","searchKeys":["errors","val errors: List<Failure>","org.http4k.lens.MultipartForm.errors"]},{"name":"val fields: Map<String, List<MultipartFormField>>","description":"org.http4k.lens.MultipartForm.fields","location":"http4k-multipart/org.http4k.lens/-multipart-form/fields.html","searchKeys":["fields","val fields: Map<String, List<MultipartFormField>>","org.http4k.lens.MultipartForm.fields"]},{"name":"val file: MultipartFormFile","description":"org.http4k.core.MultipartEntity.File.file","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/file.html","searchKeys":["file","val file: MultipartFormFile","org.http4k.core.MultipartEntity.File.file"]},{"name":"val filename: String","description":"org.http4k.lens.MultipartFormFile.filename","location":"http4k-multipart/org.http4k.lens/-multipart-form-file/filename.html","searchKeys":["filename","val filename: String","org.http4k.lens.MultipartFormFile.filename"]},{"name":"val files: Map<String, List<MultipartFormFile>>","description":"org.http4k.lens.MultipartForm.files","location":"http4k-multipart/org.http4k.lens/-multipart-form/files.html","searchKeys":["files","val files: Map<String, List<MultipartFormFile>>","org.http4k.lens.MultipartForm.files"]},{"name":"val headers: Headers","description":"org.http4k.core.MultipartEntity.Field.headers","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/headers.html","searchKeys":["headers","val headers: Headers","org.http4k.core.MultipartEntity.Field.headers"]},{"name":"val headers: Headers","description":"org.http4k.core.MultipartEntity.File.headers","location":"http4k-multipart/org.http4k.core/-multipart-entity/-file/headers.html","searchKeys":["headers","val headers: Headers","org.http4k.core.MultipartEntity.File.headers"]},{"name":"val headers: Headers","description":"org.http4k.lens.MultipartFormField.headers","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/headers.html","searchKeys":["headers","val headers: Headers","org.http4k.lens.MultipartFormField.headers"]},{"name":"val onClose: List<() -> Unit>","description":"org.http4k.lens.MultipartForm.onClose","location":"http4k-multipart/org.http4k.lens/-multipart-form/on-close.html","searchKeys":["onClose","val onClose: List<() -> Unit>","org.http4k.lens.MultipartForm.onClose"]},{"name":"val value: String","description":"org.http4k.core.MultipartEntity.Field.value","location":"http4k-multipart/org.http4k.core/-multipart-entity/-field/value.html","searchKeys":["value","val value: String","org.http4k.core.MultipartEntity.Field.value"]},{"name":"val value: String","description":"org.http4k.lens.MultipartFormField.value","location":"http4k-multipart/org.http4k.lens/-multipart-form-field/value.html","searchKeys":["value","val value: String","org.http4k.lens.MultipartFormField.value"]},{"name":"fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.of(5, ChronoUnit.SECONDS), wsClient: WebSocketClient = WebSocketClient(defaultJettyHttpClient())): WsClient","description":"org.http4k.client.JettyWebsocketClient.blocking","location":"http4k-client-jetty/org.http4k.client/-jetty-websocket-client/blocking.html","searchKeys":["blocking","fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.of(5, ChronoUnit.SECONDS), wsClient: WebSocketClient = WebSocketClient(defaultJettyHttpClient())): WsClient","org.http4k.client.JettyWebsocketClient.blocking"]},{"name":"fun defaultJettyHttpClient(): HttpClient","description":"org.http4k.client.PreCannedJettyHttpClients.defaultJettyHttpClient","location":"http4k-client-jetty/org.http4k.client/-pre-canned-jetty-http-clients/default-jetty-http-client.html","searchKeys":["defaultJettyHttpClient","fun defaultJettyHttpClient(): HttpClient","org.http4k.client.PreCannedJettyHttpClients.defaultJettyHttpClient"]},{"name":"fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.ZERO, wsClient: WebSocketClient = WebSocketClient(defaultJettyHttpClient()), onError: (Throwable) -> Unit = {}, onConnect: WsConsumer = {}): Websocket","description":"org.http4k.client.JettyWebsocketClient.nonBlocking","location":"http4k-client-jetty/org.http4k.client/-jetty-websocket-client/non-blocking.html","searchKeys":["nonBlocking","fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.ZERO, wsClient: WebSocketClient = WebSocketClient(defaultJettyHttpClient()), onError: (Throwable) -> Unit = {}, onConnect: WsConsumer = {}): Websocket","org.http4k.client.JettyWebsocketClient.nonBlocking"]},{"name":"object JettyClient","description":"org.http4k.client.JettyClient","location":"http4k-client-jetty/org.http4k.client/-jetty-client/index.html","searchKeys":["JettyClient","object JettyClient","org.http4k.client.JettyClient"]},{"name":"object JettyWebsocketClient","description":"org.http4k.client.JettyWebsocketClient","location":"http4k-client-jetty/org.http4k.client/-jetty-websocket-client/index.html","searchKeys":["JettyWebsocketClient","object JettyWebsocketClient","org.http4k.client.JettyWebsocketClient"]},{"name":"object PreCannedJettyHttpClients","description":"org.http4k.client.PreCannedJettyHttpClients","location":"http4k-client-jetty/org.http4k.client/-pre-canned-jetty-http-clients/index.html","searchKeys":["PreCannedJettyHttpClients","object PreCannedJettyHttpClients","org.http4k.client.PreCannedJettyHttpClients"]},{"name":"operator fun invoke(client: HttpClient = defaultJettyHttpClient(), bodyMode: BodyMode = BodyMode.Memory, requestModifier: (Request) -> Request = { it }): DualSyncAsyncHttpHandler","description":"org.http4k.client.JettyClient.invoke","location":"http4k-client-jetty/org.http4k.client/-jetty-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: HttpClient = defaultJettyHttpClient(), bodyMode: BodyMode = BodyMode.Memory, requestModifier: (Request) -> Request = { it }): DualSyncAsyncHttpHandler","org.http4k.client.JettyClient.invoke"]},{"name":"class AdaptingWebSocket(client: WebSocketClient) : PushPullAdaptingWebSocket","description":"org.http4k.client.internal.AdaptingWebSocket","location":"http4k-client-websocket/org.http4k.client.internal/-adapting-web-socket/index.html","searchKeys":["AdaptingWebSocket","class AdaptingWebSocket(client: WebSocketClient) : PushPullAdaptingWebSocket","org.http4k.client.internal.AdaptingWebSocket"]},{"name":"class BlockingQueueClient(uri: Uri, headers: Headers, timeout: Duration, draft: Draft, queue: LinkedBlockingQueue<() -> WsMessage?>) : WebSocketClient","description":"org.http4k.client.internal.BlockingQueueClient","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/index.html","searchKeys":["BlockingQueueClient","class BlockingQueueClient(uri: Uri, headers: Headers, timeout: Duration, draft: Draft, queue: LinkedBlockingQueue<() -> WsMessage?>) : WebSocketClient","org.http4k.client.internal.BlockingQueueClient"]},{"name":"class BlockingWsClient(queue: LinkedBlockingQueue<() -> WsMessage?>, client: BlockingQueueClient, autoReconnection: Boolean) : WsClient","description":"org.http4k.client.internal.BlockingWsClient","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-ws-client/index.html","searchKeys":["BlockingWsClient","class BlockingWsClient(queue: LinkedBlockingQueue<() -> WsMessage?>, client: BlockingQueueClient, autoReconnection: Boolean) : WsClient","org.http4k.client.internal.BlockingWsClient"]},{"name":"class NonBlockingClient(uri: Uri, headers: Headers, timeout: Duration, onConnect: WsConsumer, draft: Draft, socket: AtomicReference<PushPullAdaptingWebSocket>) : WebSocketClient","description":"org.http4k.client.internal.NonBlockingClient","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/index.html","searchKeys":["NonBlockingClient","class NonBlockingClient(uri: Uri, headers: Headers, timeout: Duration, onConnect: WsConsumer, draft: Draft, socket: AtomicReference<PushPullAdaptingWebSocket>) : WebSocketClient","org.http4k.client.internal.NonBlockingClient"]},{"name":"constructor(client: WebSocketClient)","description":"org.http4k.client.internal.AdaptingWebSocket.AdaptingWebSocket","location":"http4k-client-websocket/org.http4k.client.internal/-adapting-web-socket/-adapting-web-socket.html","searchKeys":["AdaptingWebSocket","constructor(client: WebSocketClient)","org.http4k.client.internal.AdaptingWebSocket.AdaptingWebSocket"]},{"name":"constructor(queue: LinkedBlockingQueue<() -> WsMessage?>, client: BlockingQueueClient, autoReconnection: Boolean)","description":"org.http4k.client.internal.BlockingWsClient.BlockingWsClient","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-ws-client/-blocking-ws-client.html","searchKeys":["BlockingWsClient","constructor(queue: LinkedBlockingQueue<() -> WsMessage?>, client: BlockingQueueClient, autoReconnection: Boolean)","org.http4k.client.internal.BlockingWsClient.BlockingWsClient"]},{"name":"constructor(uri: Uri, headers: Headers, timeout: Duration, draft: Draft, queue: LinkedBlockingQueue<() -> WsMessage?>)","description":"org.http4k.client.internal.BlockingQueueClient.BlockingQueueClient","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/-blocking-queue-client.html","searchKeys":["BlockingQueueClient","constructor(uri: Uri, headers: Headers, timeout: Duration, draft: Draft, queue: LinkedBlockingQueue<() -> WsMessage?>)","org.http4k.client.internal.BlockingQueueClient.BlockingQueueClient"]},{"name":"constructor(uri: Uri, headers: Headers, timeout: Duration, onConnect: WsConsumer, draft: Draft, socket: AtomicReference<PushPullAdaptingWebSocket>)","description":"org.http4k.client.internal.NonBlockingClient.NonBlockingClient","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/-non-blocking-client.html","searchKeys":["NonBlockingClient","constructor(uri: Uri, headers: Headers, timeout: Duration, onConnect: WsConsumer, draft: Draft, socket: AtomicReference<PushPullAdaptingWebSocket>)","org.http4k.client.internal.NonBlockingClient.NonBlockingClient"]},{"name":"fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = of(5, SECONDS), autoReconnection: Boolean = false, draft: Draft = Draft_6455()): WsClient","description":"org.http4k.client.WebsocketClient.blocking","location":"http4k-client-websocket/org.http4k.client/-websocket-client/blocking.html","searchKeys":["blocking","fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = of(5, SECONDS), autoReconnection: Boolean = false, draft: Draft = Draft_6455()): WsClient","org.http4k.client.WebsocketClient.blocking"]},{"name":"fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = ZERO, onError: (Throwable) -> Unit = {}, draft: Draft = Draft_6455(), onConnect: WsConsumer = {}): Websocket","description":"org.http4k.client.WebsocketClient.nonBlocking","location":"http4k-client-websocket/org.http4k.client/-websocket-client/non-blocking.html","searchKeys":["nonBlocking","fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = ZERO, onError: (Throwable) -> Unit = {}, draft: Draft = Draft_6455(), onConnect: WsConsumer = {}): Websocket","org.http4k.client.WebsocketClient.nonBlocking"]},{"name":"object WebsocketClient","description":"org.http4k.client.WebsocketClient","location":"http4k-client-websocket/org.http4k.client/-websocket-client/index.html","searchKeys":["WebsocketClient","object WebsocketClient","org.http4k.client.WebsocketClient"]},{"name":"open override fun close(status: WsStatus)","description":"org.http4k.client.internal.AdaptingWebSocket.close","location":"http4k-client-websocket/org.http4k.client.internal/-adapting-web-socket/close.html","searchKeys":["close","open override fun close(status: WsStatus)","org.http4k.client.internal.AdaptingWebSocket.close"]},{"name":"open override fun close(status: WsStatus)","description":"org.http4k.client.internal.BlockingWsClient.close","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-ws-client/close.html","searchKeys":["close","open override fun close(status: WsStatus)","org.http4k.client.internal.BlockingWsClient.close"]},{"name":"open override fun onClose(code: Int, reason: String, remote: Boolean)","description":"org.http4k.client.internal.NonBlockingClient.onClose","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/on-close.html","searchKeys":["onClose","open override fun onClose(code: Int, reason: String, remote: Boolean)","org.http4k.client.internal.NonBlockingClient.onClose"]},{"name":"open override fun onClose(code: Int, reason: String?, remote: Boolean)","description":"org.http4k.client.internal.BlockingQueueClient.onClose","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/on-close.html","searchKeys":["onClose","open override fun onClose(code: Int, reason: String?, remote: Boolean)","org.http4k.client.internal.BlockingQueueClient.onClose"]},{"name":"open override fun onError(e: Exception)","description":"org.http4k.client.internal.BlockingQueueClient.onError","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/on-error.html","searchKeys":["onError","open override fun onError(e: Exception)","org.http4k.client.internal.BlockingQueueClient.onError"]},{"name":"open override fun onError(e: Exception)","description":"org.http4k.client.internal.NonBlockingClient.onError","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/on-error.html","searchKeys":["onError","open override fun onError(e: Exception)","org.http4k.client.internal.NonBlockingClient.onError"]},{"name":"open override fun onMessage(bytes: ByteBuffer)","description":"org.http4k.client.internal.BlockingQueueClient.onMessage","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/on-message.html","searchKeys":["onMessage","open override fun onMessage(bytes: ByteBuffer)","org.http4k.client.internal.BlockingQueueClient.onMessage"]},{"name":"open override fun onMessage(bytes: ByteBuffer)","description":"org.http4k.client.internal.NonBlockingClient.onMessage","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/on-message.html","searchKeys":["onMessage","open override fun onMessage(bytes: ByteBuffer)","org.http4k.client.internal.NonBlockingClient.onMessage"]},{"name":"open override fun onMessage(message: String)","description":"org.http4k.client.internal.BlockingQueueClient.onMessage","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/on-message.html","searchKeys":["onMessage","open override fun onMessage(message: String)","org.http4k.client.internal.BlockingQueueClient.onMessage"]},{"name":"open override fun onMessage(message: String)","description":"org.http4k.client.internal.NonBlockingClient.onMessage","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/on-message.html","searchKeys":["onMessage","open override fun onMessage(message: String)","org.http4k.client.internal.NonBlockingClient.onMessage"]},{"name":"open override fun onOpen(handshakedata: ServerHandshake?)","description":"org.http4k.client.internal.NonBlockingClient.onOpen","location":"http4k-client-websocket/org.http4k.client.internal/-non-blocking-client/on-open.html","searchKeys":["onOpen","open override fun onOpen(handshakedata: ServerHandshake?)","org.http4k.client.internal.NonBlockingClient.onOpen"]},{"name":"open override fun onOpen(sh: ServerHandshake)","description":"org.http4k.client.internal.BlockingQueueClient.onOpen","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-queue-client/on-open.html","searchKeys":["onOpen","open override fun onOpen(sh: ServerHandshake)","org.http4k.client.internal.BlockingQueueClient.onOpen"]},{"name":"open override fun received(): Sequence<WsMessage>","description":"org.http4k.client.internal.BlockingWsClient.received","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-ws-client/received.html","searchKeys":["received","open override fun received(): Sequence<WsMessage>","org.http4k.client.internal.BlockingWsClient.received"]},{"name":"open override fun send(message: WsMessage)","description":"org.http4k.client.internal.AdaptingWebSocket.send","location":"http4k-client-websocket/org.http4k.client.internal/-adapting-web-socket/send.html","searchKeys":["send","open override fun send(message: WsMessage)","org.http4k.client.internal.AdaptingWebSocket.send"]},{"name":"open override fun send(message: WsMessage)","description":"org.http4k.client.internal.BlockingWsClient.send","location":"http4k-client-websocket/org.http4k.client.internal/-blocking-ws-client/send.html","searchKeys":["send","open override fun send(message: WsMessage)","org.http4k.client.internal.BlockingWsClient.send"]},{"name":"class Http4kChannelHandler(handler: HttpHandler) : SimpleChannelInboundHandler<FullHttpRequest> ","description":"org.http4k.server.Http4kChannelHandler","location":"http4k-server-netty/org.http4k.server/-http4k-channel-handler/index.html","searchKeys":["Http4kChannelHandler","class Http4kChannelHandler(handler: HttpHandler) : SimpleChannelInboundHandler<FullHttpRequest> ","org.http4k.server.Http4kChannelHandler"]},{"name":"class Http4kWsChannelHandler(wSocket: WsConsumer) : SimpleChannelInboundHandler<WebSocketFrame> ","description":"org.http4k.server.Http4kWsChannelHandler","location":"http4k-server-netty/org.http4k.server/-http4k-ws-channel-handler/index.html","searchKeys":["Http4kWsChannelHandler","class Http4kWsChannelHandler(wSocket: WsConsumer) : SimpleChannelInboundHandler<WebSocketFrame> ","org.http4k.server.Http4kWsChannelHandler"]},{"name":"class Netty(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : PolyServerConfig","description":"org.http4k.server.Netty","location":"http4k-server-netty/org.http4k.server/-netty/index.html","searchKeys":["Netty","class Netty(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : PolyServerConfig","org.http4k.server.Netty"]},{"name":"class WebSocketServerHandler(wsHandler: WsHandler) : ChannelInboundHandlerAdapter","description":"org.http4k.server.WebSocketServerHandler","location":"http4k-server-netty/org.http4k.server/-web-socket-server-handler/index.html","searchKeys":["WebSocketServerHandler","class WebSocketServerHandler(wsHandler: WsHandler) : ChannelInboundHandlerAdapter","org.http4k.server.WebSocketServerHandler"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.Http4kChannelHandler.Http4kChannelHandler","location":"http4k-server-netty/org.http4k.server/-http4k-channel-handler/-http4k-channel-handler.html","searchKeys":["Http4kChannelHandler","constructor(handler: HttpHandler)","org.http4k.server.Http4kChannelHandler.Http4kChannelHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Netty.Netty","location":"http4k-server-netty/org.http4k.server/-netty/-netty.html","searchKeys":["Netty","constructor(port: Int = 8000)","org.http4k.server.Netty.Netty"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.Netty.Netty","location":"http4k-server-netty/org.http4k.server/-netty/-netty.html","searchKeys":["Netty","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.Netty.Netty"]},{"name":"constructor(wSocket: WsConsumer)","description":"org.http4k.server.Http4kWsChannelHandler.Http4kWsChannelHandler","location":"http4k-server-netty/org.http4k.server/-http4k-ws-channel-handler/-http4k-ws-channel-handler.html","searchKeys":["Http4kWsChannelHandler","constructor(wSocket: WsConsumer)","org.http4k.server.Http4kWsChannelHandler.Http4kWsChannelHandler"]},{"name":"constructor(wsHandler: WsHandler)","description":"org.http4k.server.WebSocketServerHandler.WebSocketServerHandler","location":"http4k-server-netty/org.http4k.server/-web-socket-server-handler/-web-socket-server-handler.html","searchKeys":["WebSocketServerHandler","constructor(wsHandler: WsHandler)","org.http4k.server.WebSocketServerHandler.WebSocketServerHandler"]},{"name":"open override fun channelRead(ctx: ChannelHandlerContext, msg: Any)","description":"org.http4k.server.WebSocketServerHandler.channelRead","location":"http4k-server-netty/org.http4k.server/-web-socket-server-handler/channel-read.html","searchKeys":["channelRead","open override fun channelRead(ctx: ChannelHandlerContext, msg: Any)","org.http4k.server.WebSocketServerHandler.channelRead"]},{"name":"open override fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable)","description":"org.http4k.server.Http4kWsChannelHandler.exceptionCaught","location":"http4k-server-netty/org.http4k.server/-http4k-ws-channel-handler/exception-caught.html","searchKeys":["exceptionCaught","open override fun exceptionCaught(ctx: ChannelHandlerContext, cause: Throwable)","org.http4k.server.Http4kWsChannelHandler.exceptionCaught"]},{"name":"open override fun handlerAdded(ctx: ChannelHandlerContext)","description":"org.http4k.server.Http4kWsChannelHandler.handlerAdded","location":"http4k-server-netty/org.http4k.server/-http4k-ws-channel-handler/handler-added.html","searchKeys":["handlerAdded","open override fun handlerAdded(ctx: ChannelHandlerContext)","org.http4k.server.Http4kWsChannelHandler.handlerAdded"]},{"name":"open override fun handlerRemoved(ctx: ChannelHandlerContext)","description":"org.http4k.server.Http4kWsChannelHandler.handlerRemoved","location":"http4k-server-netty/org.http4k.server/-http4k-ws-channel-handler/handler-removed.html","searchKeys":["handlerRemoved","open override fun handlerRemoved(ctx: ChannelHandlerContext)","org.http4k.server.Http4kWsChannelHandler.handlerRemoved"]},{"name":"open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","description":"org.http4k.server.Netty.toServer","location":"http4k-server-netty/org.http4k.server/-netty/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","org.http4k.server.Netty.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.Netty.stopMode","location":"http4k-server-netty/org.http4k.server/-netty/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.Netty.stopMode"]},{"name":"val port: Int = 8000","description":"org.http4k.server.Netty.port","location":"http4k-server-netty/org.http4k.server/-netty/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.Netty.port"]},{"name":"val shutdownTimeoutMillis: Long","description":"org.http4k.server.Netty.shutdownTimeoutMillis","location":"http4k-server-netty/org.http4k.server/-netty/shutdown-timeout-millis.html","searchKeys":["shutdownTimeoutMillis","val shutdownTimeoutMillis: Long","org.http4k.server.Netty.shutdownTimeoutMillis"]},{"name":"class KtorNetty(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : ServerConfig","description":"org.http4k.server.KtorNetty","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/index.html","searchKeys":["KtorNetty","class KtorNetty(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : ServerConfig","org.http4k.server.KtorNetty"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.KtorNetty.KtorNetty","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/-ktor-netty.html","searchKeys":["KtorNetty","constructor(port: Int = 8000)","org.http4k.server.KtorNetty.KtorNetty"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.KtorNetty.KtorNetty","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/-ktor-netty.html","searchKeys":["KtorNetty","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.KtorNetty.KtorNetty"]},{"name":"fun ApplicationRequest.asHttp4k(): Request?","description":"org.http4k.server.asHttp4k","location":"http4k-server-ktornetty/org.http4k.server/as-http4k.html","searchKeys":["asHttp4k","fun ApplicationRequest.asHttp4k(): Request?","org.http4k.server.asHttp4k"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.KtorNetty.toServer","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.KtorNetty.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.KtorNetty.stopMode","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.KtorNetty.stopMode"]},{"name":"suspend fun ApplicationResponse.fromHttp4K(response: Response)","description":"org.http4k.server.fromHttp4K","location":"http4k-server-ktornetty/org.http4k.server/from-http4-k.html","searchKeys":["fromHttp4K","suspend fun ApplicationResponse.fromHttp4K(response: Response)","org.http4k.server.fromHttp4K"]},{"name":"val port: Int = 8000","description":"org.http4k.server.KtorNetty.port","location":"http4k-server-ktornetty/org.http4k.server/-ktor-netty/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.KtorNetty.port"]},{"name":"class CssSelector : AbstractValue<String> ","description":"org.http4k.htmx.CssSelector","location":"http4k-htmx/org.http4k.htmx/-css-selector/index.html","searchKeys":["CssSelector","class CssSelector : AbstractValue<String> ","org.http4k.htmx.CssSelector"]},{"name":"class HxSwap : AbstractValue<String> ","description":"org.http4k.htmx.HxSwap","location":"http4k-htmx/org.http4k.htmx/-hx-swap/index.html","searchKeys":["HxSwap","class HxSwap : AbstractValue<String> ","org.http4k.htmx.HxSwap"]},{"name":"class Id : AbstractValue<String> ","description":"org.http4k.htmx.Id","location":"http4k-htmx/org.http4k.htmx/-id/index.html","searchKeys":["Id","class Id : AbstractValue<String> ","org.http4k.htmx.Id"]},{"name":"fun Request.isHtmx(): Boolean","description":"org.http4k.core.isHtmx","location":"http4k-htmx/org.http4k.core/is-htmx.html","searchKeys":["isHtmx","fun Request.isHtmx(): Boolean","org.http4k.core.isHtmx"]},{"name":"fun Request.isHtmx(): Boolean","description":"org.http4k.lens.isHtmx","location":"http4k-htmx/org.http4k.lens/is-htmx.html","searchKeys":["isHtmx","fun Request.isHtmx(): Boolean","org.http4k.lens.isHtmx"]},{"name":"fun Request.isHtmxBoosted(): Boolean","description":"org.http4k.lens.isHtmxBoosted","location":"http4k-htmx/org.http4k.lens/is-htmx-boosted.html","searchKeys":["isHtmxBoosted","fun Request.isHtmxBoosted(): Boolean","org.http4k.lens.isHtmxBoosted"]},{"name":"fun Request.isHtmxHistoryRestoreRequest(): Boolean","description":"org.http4k.lens.isHtmxHistoryRestoreRequest","location":"http4k-htmx/org.http4k.lens/is-htmx-history-restore-request.html","searchKeys":["isHtmxHistoryRestoreRequest","fun Request.isHtmxHistoryRestoreRequest(): Boolean","org.http4k.lens.isHtmxHistoryRestoreRequest"]},{"name":"fun htmxWebjar(): RoutingHttpHandler","description":"org.http4k.routing.htmxWebjar","location":"http4k-htmx/org.http4k.routing/htmx-webjar.html","searchKeys":["htmxWebjar","fun htmxWebjar(): RoutingHttpHandler","org.http4k.routing.htmxWebjar"]},{"name":"fun htmxWebjars(): RoutingHttpHandler","description":"org.http4k.routing.htmxWebjars","location":"http4k-htmx/org.http4k.routing/htmx-webjars.html","searchKeys":["htmxWebjars","fun htmxWebjars(): RoutingHttpHandler","org.http4k.routing.htmxWebjars"]},{"name":"object Companion : NonBlankStringValueFactory<CssSelector> ","description":"org.http4k.htmx.CssSelector.Companion","location":"http4k-htmx/org.http4k.htmx/-css-selector/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<CssSelector> ","org.http4k.htmx.CssSelector.Companion"]},{"name":"object Companion : NonBlankStringValueFactory<HxSwap> ","description":"org.http4k.htmx.HxSwap.Companion","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<HxSwap> ","org.http4k.htmx.HxSwap.Companion"]},{"name":"object Companion : NonBlankStringValueFactory<Id> ","description":"org.http4k.htmx.Id.Companion","location":"http4k-htmx/org.http4k.htmx/-id/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<Id> ","org.http4k.htmx.Id.Companion"]},{"name":"val Header.HX_BOOSTED: BiDiLens<HttpMessage, Boolean>","description":"org.http4k.lens.HX_BOOSTED","location":"http4k-htmx/org.http4k.lens/-h-x_-b-o-o-s-t-e-d.html","searchKeys":["HX_BOOSTED","val Header.HX_BOOSTED: BiDiLens<HttpMessage, Boolean>","org.http4k.lens.HX_BOOSTED"]},{"name":"val Header.HX_CURRENT_URL: BiDiLens<HttpMessage, Uri?>","description":"org.http4k.lens.HX_CURRENT_URL","location":"http4k-htmx/org.http4k.lens/-h-x_-c-u-r-r-e-n-t_-u-r-l.html","searchKeys":["HX_CURRENT_URL","val Header.HX_CURRENT_URL: BiDiLens<HttpMessage, Uri?>","org.http4k.lens.HX_CURRENT_URL"]},{"name":"val Header.HX_HISTORY_RESTORE_REQUEST: BiDiLens<HttpMessage, Boolean>","description":"org.http4k.lens.HX_HISTORY_RESTORE_REQUEST","location":"http4k-htmx/org.http4k.lens/-h-x_-h-i-s-t-o-r-y_-r-e-s-t-o-r-e_-r-e-q-u-e-s-t.html","searchKeys":["HX_HISTORY_RESTORE_REQUEST","val Header.HX_HISTORY_RESTORE_REQUEST: BiDiLens<HttpMessage, Boolean>","org.http4k.lens.HX_HISTORY_RESTORE_REQUEST"]},{"name":"val Header.HX_LOCATION: BiDiLens<HttpMessage, Uri?>","description":"org.http4k.lens.HX_LOCATION","location":"http4k-htmx/org.http4k.lens/-h-x_-l-o-c-a-t-i-o-n.html","searchKeys":["HX_LOCATION","val Header.HX_LOCATION: BiDiLens<HttpMessage, Uri?>","org.http4k.lens.HX_LOCATION"]},{"name":"val Header.HX_PROMPT: BiDiLens<HttpMessage, String?>","description":"org.http4k.lens.HX_PROMPT","location":"http4k-htmx/org.http4k.lens/-h-x_-p-r-o-m-p-t.html","searchKeys":["HX_PROMPT","val Header.HX_PROMPT: BiDiLens<HttpMessage, String?>","org.http4k.lens.HX_PROMPT"]},{"name":"val Header.HX_PUSH_URL: BiDiLens<HttpMessage, Uri?>","description":"org.http4k.lens.HX_PUSH_URL","location":"http4k-htmx/org.http4k.lens/-h-x_-p-u-s-h_-u-r-l.html","searchKeys":["HX_PUSH_URL","val Header.HX_PUSH_URL: BiDiLens<HttpMessage, Uri?>","org.http4k.lens.HX_PUSH_URL"]},{"name":"val Header.HX_REDIRECT: BiDiLens<HttpMessage, Uri?>","description":"org.http4k.lens.HX_REDIRECT","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-d-i-r-e-c-t.html","searchKeys":["HX_REDIRECT","val Header.HX_REDIRECT: BiDiLens<HttpMessage, Uri?>","org.http4k.lens.HX_REDIRECT"]},{"name":"val Header.HX_REFRESH: BiDiLens<HttpMessage, Boolean>","description":"org.http4k.lens.HX_REFRESH","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-f-r-e-s-h.html","searchKeys":["HX_REFRESH","val Header.HX_REFRESH: BiDiLens<HttpMessage, Boolean>","org.http4k.lens.HX_REFRESH"]},{"name":"val Header.HX_REPLACE_URL: BiDiLens<HttpMessage, Uri?>","description":"org.http4k.lens.HX_REPLACE_URL","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-p-l-a-c-e_-u-r-l.html","searchKeys":["HX_REPLACE_URL","val Header.HX_REPLACE_URL: BiDiLens<HttpMessage, Uri?>","org.http4k.lens.HX_REPLACE_URL"]},{"name":"val Header.HX_REQUEST: BiDiLens<HttpMessage, Boolean>","description":"org.http4k.lens.HX_REQUEST","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-q-u-e-s-t.html","searchKeys":["HX_REQUEST","val Header.HX_REQUEST: BiDiLens<HttpMessage, Boolean>","org.http4k.lens.HX_REQUEST"]},{"name":"val Header.HX_RESELECT: BiDiLens<HttpMessage, CssSelector?>","description":"org.http4k.lens.HX_RESELECT","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-s-e-l-e-c-t.html","searchKeys":["HX_RESELECT","val Header.HX_RESELECT: BiDiLens<HttpMessage, CssSelector?>","org.http4k.lens.HX_RESELECT"]},{"name":"val Header.HX_RESWAP: BiDiLens<HttpMessage, HxSwap?>","description":"org.http4k.lens.HX_RESWAP","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-s-w-a-p.html","searchKeys":["HX_RESWAP","val Header.HX_RESWAP: BiDiLens<HttpMessage, HxSwap?>","org.http4k.lens.HX_RESWAP"]},{"name":"val Header.HX_RETARGET: BiDiLens<HttpMessage, CssSelector?>","description":"org.http4k.lens.HX_RETARGET","location":"http4k-htmx/org.http4k.lens/-h-x_-r-e-t-a-r-g-e-t.html","searchKeys":["HX_RETARGET","val Header.HX_RETARGET: BiDiLens<HttpMessage, CssSelector?>","org.http4k.lens.HX_RETARGET"]},{"name":"val Header.HX_TARGET: BiDiLens<HttpMessage, Id?>","description":"org.http4k.lens.HX_TARGET","location":"http4k-htmx/org.http4k.lens/-h-x_-t-a-r-g-e-t.html","searchKeys":["HX_TARGET","val Header.HX_TARGET: BiDiLens<HttpMessage, Id?>","org.http4k.lens.HX_TARGET"]},{"name":"val Header.HX_TRIGGER: BiDiLens<HttpMessage, Id?>","description":"org.http4k.lens.HX_TRIGGER","location":"http4k-htmx/org.http4k.lens/-h-x_-t-r-i-g-g-e-r.html","searchKeys":["HX_TRIGGER","val Header.HX_TRIGGER: BiDiLens<HttpMessage, Id?>","org.http4k.lens.HX_TRIGGER"]},{"name":"val Header.HX_TRIGGER_AFTER_SETTLE: BiDiLens<HttpMessage, String?>","description":"org.http4k.lens.HX_TRIGGER_AFTER_SETTLE","location":"http4k-htmx/org.http4k.lens/-h-x_-t-r-i-g-g-e-r_-a-f-t-e-r_-s-e-t-t-l-e.html","searchKeys":["HX_TRIGGER_AFTER_SETTLE","val Header.HX_TRIGGER_AFTER_SETTLE: BiDiLens<HttpMessage, String?>","org.http4k.lens.HX_TRIGGER_AFTER_SETTLE"]},{"name":"val Header.HX_TRIGGER_AFTER_SWAP: BiDiLens<HttpMessage, String?>","description":"org.http4k.lens.HX_TRIGGER_AFTER_SWAP","location":"http4k-htmx/org.http4k.lens/-h-x_-t-r-i-g-g-e-r_-a-f-t-e-r_-s-w-a-p.html","searchKeys":["HX_TRIGGER_AFTER_SWAP","val Header.HX_TRIGGER_AFTER_SWAP: BiDiLens<HttpMessage, String?>","org.http4k.lens.HX_TRIGGER_AFTER_SWAP"]},{"name":"val Header.HX_TRIGGER_NAME: BiDiLens<HttpMessage, String?>","description":"org.http4k.lens.HX_TRIGGER_NAME","location":"http4k-htmx/org.http4k.lens/-h-x_-t-r-i-g-g-e-r_-n-a-m-e.html","searchKeys":["HX_TRIGGER_NAME","val Header.HX_TRIGGER_NAME: BiDiLens<HttpMessage, String?>","org.http4k.lens.HX_TRIGGER_NAME"]},{"name":"val Request.Companion.isHtmx: Router","description":"org.http4k.core.isHtmx","location":"http4k-htmx/org.http4k.core/is-htmx.html","searchKeys":["isHtmx","val Request.Companion.isHtmx: Router","org.http4k.core.isHtmx"]},{"name":"val Status.Companion.STOP_POLLING: Status","description":"org.http4k.core.STOP_POLLING","location":"http4k-htmx/org.http4k.core/-s-t-o-p_-p-o-l-l-i-n-g.html","searchKeys":["STOP_POLLING","val Status.Companion.STOP_POLLING: Status","org.http4k.core.STOP_POLLING"]},{"name":"val afterbegin: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.afterbegin","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/afterbegin.html","searchKeys":["afterbegin","val afterbegin: HxSwap","org.http4k.htmx.HxSwap.Companion.afterbegin"]},{"name":"val afterend: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.afterend","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/afterend.html","searchKeys":["afterend","val afterend: HxSwap","org.http4k.htmx.HxSwap.Companion.afterend"]},{"name":"val beforebegin: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.beforebegin","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/beforebegin.html","searchKeys":["beforebegin","val beforebegin: HxSwap","org.http4k.htmx.HxSwap.Companion.beforebegin"]},{"name":"val beforeend: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.beforeend","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/beforeend.html","searchKeys":["beforeend","val beforeend: HxSwap","org.http4k.htmx.HxSwap.Companion.beforeend"]},{"name":"val delete: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.delete","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/delete.html","searchKeys":["delete","val delete: HxSwap","org.http4k.htmx.HxSwap.Companion.delete"]},{"name":"val innerHTML: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.innerHTML","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/inner-h-t-m-l.html","searchKeys":["innerHTML","val innerHTML: HxSwap","org.http4k.htmx.HxSwap.Companion.innerHTML"]},{"name":"val none: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.none","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/none.html","searchKeys":["none","val none: HxSwap","org.http4k.htmx.HxSwap.Companion.none"]},{"name":"val outerHTML: HxSwap","description":"org.http4k.htmx.HxSwap.Companion.outerHTML","location":"http4k-htmx/org.http4k.htmx/-hx-swap/-companion/outer-h-t-m-l.html","searchKeys":["outerHTML","val outerHTML: HxSwap","org.http4k.htmx.HxSwap.Companion.outerHTML"]},{"name":"class JavaWebSocket(port: Int = 8000, hostName: String = \"0.0.0.0\", drafts: List<Draft>? = null, val stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate, addShutdownHook: Boolean = true, startupTimeout: Duration = Duration.ofSeconds(5), configFn: WebSocketServer.() -> Unit = {\n        isReuseAddr = true // Set SO_REUSEADDR by default\n    }) : PolyServerConfig","description":"org.http4k.server.websocket.JavaWebSocket","location":"http4k-server-websocket/org.http4k.server.websocket/-java-web-socket/index.html","searchKeys":["JavaWebSocket","class JavaWebSocket(port: Int = 8000, hostName: String = \"0.0.0.0\", drafts: List<Draft>? = null, val stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate, addShutdownHook: Boolean = true, startupTimeout: Duration = Duration.ofSeconds(5), configFn: WebSocketServer.() -> Unit = {\n        isReuseAddr = true // Set SO_REUSEADDR by default\n    }) : PolyServerConfig","org.http4k.server.websocket.JavaWebSocket"]},{"name":"constructor(port: Int = 8000, hostName: String = \"0.0.0.0\", drafts: List<Draft>? = null, stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate, addShutdownHook: Boolean = true, startupTimeout: Duration = Duration.ofSeconds(5), configFn: WebSocketServer.() -> Unit = {\n        isReuseAddr = true // Set SO_REUSEADDR by default\n    })","description":"org.http4k.server.websocket.JavaWebSocket.JavaWebSocket","location":"http4k-server-websocket/org.http4k.server.websocket/-java-web-socket/-java-web-socket.html","searchKeys":["JavaWebSocket","constructor(port: Int = 8000, hostName: String = \"0.0.0.0\", drafts: List<Draft>? = null, stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate, addShutdownHook: Boolean = true, startupTimeout: Duration = Duration.ofSeconds(5), configFn: WebSocketServer.() -> Unit = {\n        isReuseAddr = true // Set SO_REUSEADDR by default\n    })","org.http4k.server.websocket.JavaWebSocket.JavaWebSocket"]},{"name":"open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","description":"org.http4k.server.websocket.JavaWebSocket.toServer","location":"http4k-server-websocket/org.http4k.server.websocket/-java-web-socket/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","org.http4k.server.websocket.JavaWebSocket.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.websocket.JavaWebSocket.stopMode","location":"http4k-server-websocket/org.http4k.server.websocket/-java-web-socket/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.websocket.JavaWebSocket.stopMode"]},{"name":"class AwsSdkAsyncClient(http: HttpHandler) : SdkAsyncHttpClient","description":"org.http4k.aws.AwsSdkAsyncClient","location":"http4k-aws/org.http4k.aws/-aws-sdk-async-client/index.html","searchKeys":["AwsSdkAsyncClient","class AwsSdkAsyncClient(http: HttpHandler) : SdkAsyncHttpClient","org.http4k.aws.AwsSdkAsyncClient"]},{"name":"class AwsSdkClient(http: HttpHandler) : SdkHttpClient","description":"org.http4k.aws.AwsSdkClient","location":"http4k-aws/org.http4k.aws/-aws-sdk-client/index.html","searchKeys":["AwsSdkClient","class AwsSdkClient(http: HttpHandler) : SdkHttpClient","org.http4k.aws.AwsSdkClient"]},{"name":"constructor(accessKey: String, secretKey: String, sessionToken: String? = null)","description":"org.http4k.aws.AwsCredentials.AwsCredentials","location":"http4k-aws/org.http4k.aws/-aws-credentials/-aws-credentials.html","searchKeys":["AwsCredentials","constructor(accessKey: String, secretKey: String, sessionToken: String? = null)","org.http4k.aws.AwsCredentials.AwsCredentials"]},{"name":"constructor(hash: String, length: Long)","description":"org.http4k.filter.CanonicalPayload.CanonicalPayload","location":"http4k-aws/org.http4k.filter/-canonical-payload/-canonical-payload.html","searchKeys":["CanonicalPayload","constructor(hash: String, length: Long)","org.http4k.filter.CanonicalPayload.CanonicalPayload"]},{"name":"constructor(http: HttpHandler)","description":"org.http4k.aws.AwsSdkAsyncClient.AwsSdkAsyncClient","location":"http4k-aws/org.http4k.aws/-aws-sdk-async-client/-aws-sdk-async-client.html","searchKeys":["AwsSdkAsyncClient","constructor(http: HttpHandler)","org.http4k.aws.AwsSdkAsyncClient.AwsSdkAsyncClient"]},{"name":"constructor(http: HttpHandler)","description":"org.http4k.aws.AwsSdkClient.AwsSdkClient","location":"http4k-aws/org.http4k.aws/-aws-sdk-client/-aws-sdk-client.html","searchKeys":["AwsSdkClient","constructor(http: HttpHandler)","org.http4k.aws.AwsSdkClient.AwsSdkClient"]},{"name":"constructor(method: Method, uri: Uri, signedHeaders: Headers, expires: Instant)","description":"org.http4k.aws.AwsPreSignedRequest.AwsPreSignedRequest","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/-aws-pre-signed-request.html","searchKeys":["AwsPreSignedRequest","constructor(method: Method, uri: Uri, signedHeaders: Headers, expires: Instant)","org.http4k.aws.AwsPreSignedRequest.AwsPreSignedRequest"]},{"name":"constructor(region: String, service: String)","description":"org.http4k.aws.AwsCredentialScope.AwsCredentialScope","location":"http4k-aws/org.http4k.aws/-aws-credential-scope/-aws-credential-scope.html","searchKeys":["AwsCredentialScope","constructor(region: String, service: String)","org.http4k.aws.AwsCredentialScope.AwsCredentialScope"]},{"name":"data class AwsCredentialScope(val region: String, val service: String)","description":"org.http4k.aws.AwsCredentialScope","location":"http4k-aws/org.http4k.aws/-aws-credential-scope/index.html","searchKeys":["AwsCredentialScope","data class AwsCredentialScope(val region: String, val service: String)","org.http4k.aws.AwsCredentialScope"]},{"name":"data class AwsCredentials(val accessKey: String, val secretKey: String, val sessionToken: String? = null)","description":"org.http4k.aws.AwsCredentials","location":"http4k-aws/org.http4k.aws/-aws-credentials/index.html","searchKeys":["AwsCredentials","data class AwsCredentials(val accessKey: String, val secretKey: String, val sessionToken: String? = null)","org.http4k.aws.AwsCredentials"]},{"name":"data class AwsPreSignedRequest(val method: Method, val uri: Uri, val signedHeaders: Headers, val expires: Instant)","description":"org.http4k.aws.AwsPreSignedRequest","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/index.html","searchKeys":["AwsPreSignedRequest","data class AwsPreSignedRequest(val method: Method, val uri: Uri, val signedHeaders: Headers, val expires: Instant)","org.http4k.aws.AwsPreSignedRequest"]},{"name":"data class CanonicalPayload(val hash: String, val length: Long)","description":"org.http4k.filter.CanonicalPayload","location":"http4k-aws/org.http4k.filter/-canonical-payload/index.html","searchKeys":["CanonicalPayload","data class CanonicalPayload(val hash: String, val length: Long)","org.http4k.filter.CanonicalPayload"]},{"name":"data object Signed : Payload.Mode","description":"org.http4k.filter.Payload.Mode.Signed","location":"http4k-aws/org.http4k.filter/-payload/-mode/-signed/index.html","searchKeys":["Signed","data object Signed : Payload.Mode","org.http4k.filter.Payload.Mode.Signed"]},{"name":"data object Unsigned : Payload.Mode","description":"org.http4k.filter.Payload.Mode.Unsigned","location":"http4k-aws/org.http4k.filter/-payload/-mode/-unsigned/index.html","searchKeys":["Unsigned","data object Unsigned : Payload.Mode","org.http4k.filter.Payload.Mode.Unsigned"]},{"name":"fun AwsRequestPreSigner(scope: AwsCredentialScope, credentials: AwsCredentials, clock: Clock = Clock.systemUTC()): AwsPreRequestSigner","description":"org.http4k.aws.AwsRequestPreSigner","location":"http4k-aws/org.http4k.aws/-aws-request-pre-signer.html","searchKeys":["AwsRequestPreSigner","fun AwsRequestPreSigner(scope: AwsCredentialScope, credentials: AwsCredentials, clock: Clock = Clock.systemUTC()): AwsPreRequestSigner","org.http4k.aws.AwsRequestPreSigner"]},{"name":"fun AwsRequestPreSigner(scope: AwsCredentialScope, credentialsProvider: () -> AwsCredentials, clock: Clock = Clock.systemUTC()): AwsPreRequestSigner","description":"org.http4k.aws.AwsRequestPreSigner","location":"http4k-aws/org.http4k.aws/-aws-request-pre-signer.html","searchKeys":["AwsRequestPreSigner","fun AwsRequestPreSigner(scope: AwsCredentialScope, credentialsProvider: () -> AwsCredentials, clock: Clock = Clock.systemUTC()): AwsPreRequestSigner","org.http4k.aws.AwsRequestPreSigner"]},{"name":"fun ClientFilters.AwsAuth(scope: AwsCredentialScope, credentials: AwsCredentials, clock: Clock = Clock.systemDefaultZone(), payloadMode: Payload.Mode = Payload.Mode.Signed): Filter","description":"org.http4k.filter.AwsAuth","location":"http4k-aws/org.http4k.filter/-aws-auth.html","searchKeys":["AwsAuth","fun ClientFilters.AwsAuth(scope: AwsCredentialScope, credentials: AwsCredentials, clock: Clock = Clock.systemDefaultZone(), payloadMode: Payload.Mode = Payload.Mode.Signed): Filter","org.http4k.filter.AwsAuth"]},{"name":"fun ClientFilters.AwsAuth(scope: AwsCredentialScope, credentialsProvider: () -> AwsCredentials, clock: Clock = Clock.systemDefaultZone(), payloadMode: Payload.Mode = Payload.Mode.Signed): Filter","description":"org.http4k.filter.AwsAuth","location":"http4k-aws/org.http4k.filter/-aws-auth.html","searchKeys":["AwsAuth","fun ClientFilters.AwsAuth(scope: AwsCredentialScope, credentialsProvider: () -> AwsCredentials, clock: Clock = Clock.systemDefaultZone(), payloadMode: Payload.Mode = Payload.Mode.Signed): Filter","org.http4k.filter.AwsAuth"]},{"name":"fun ClientFilters.SetAwsServiceUrl(serviceName: String, region: String): Filter","description":"org.http4k.filter.SetAwsServiceUrl","location":"http4k-aws/org.http4k.filter/-set-aws-service-url.html","searchKeys":["SetAwsServiceUrl","fun ClientFilters.SetAwsServiceUrl(serviceName: String, region: String): Filter","org.http4k.filter.SetAwsServiceUrl"]},{"name":"fun interface AwsPreRequestSigner : Function2<Request, Duration, AwsPreSignedRequest> ","description":"org.http4k.aws.AwsPreRequestSigner","location":"http4k-aws/org.http4k.aws/-aws-pre-request-signer/index.html","searchKeys":["AwsPreRequestSigner","fun interface AwsPreRequestSigner : Function2<Request, Duration, AwsPreSignedRequest> ","org.http4k.aws.AwsPreRequestSigner"]},{"name":"object Payload","description":"org.http4k.filter.Payload","location":"http4k-aws/org.http4k.filter/-payload/index.html","searchKeys":["Payload","object Payload","org.http4k.filter.Payload"]},{"name":"open operator override fun invoke(request: Request): CanonicalPayload","description":"org.http4k.filter.Payload.Mode.Signed.invoke","location":"http4k-aws/org.http4k.filter/-payload/-mode/-signed/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): CanonicalPayload","org.http4k.filter.Payload.Mode.Signed.invoke"]},{"name":"open operator override fun invoke(request: Request): CanonicalPayload","description":"org.http4k.filter.Payload.Mode.Unsigned.invoke","location":"http4k-aws/org.http4k.filter/-payload/-mode/-unsigned/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): CanonicalPayload","org.http4k.filter.Payload.Mode.Unsigned.invoke"]},{"name":"open override fun close()","description":"org.http4k.aws.AwsSdkAsyncClient.close","location":"http4k-aws/org.http4k.aws/-aws-sdk-async-client/close.html","searchKeys":["close","open override fun close()","org.http4k.aws.AwsSdkAsyncClient.close"]},{"name":"open override fun close()","description":"org.http4k.aws.AwsSdkClient.close","location":"http4k-aws/org.http4k.aws/-aws-sdk-client/close.html","searchKeys":["close","open override fun close()","org.http4k.aws.AwsSdkClient.close"]},{"name":"open override fun execute(request: AsyncExecuteRequest): CompletableFuture<Void>","description":"org.http4k.aws.AwsSdkAsyncClient.execute","location":"http4k-aws/org.http4k.aws/-aws-sdk-async-client/execute.html","searchKeys":["execute","open override fun execute(request: AsyncExecuteRequest): CompletableFuture<Void>","org.http4k.aws.AwsSdkAsyncClient.execute"]},{"name":"open override fun prepareRequest(request: HttpExecuteRequest): ExecutableHttpRequest","description":"org.http4k.aws.AwsSdkClient.prepareRequest","location":"http4k-aws/org.http4k.aws/-aws-sdk-client/prepare-request.html","searchKeys":["prepareRequest","open override fun prepareRequest(request: HttpExecuteRequest): ExecutableHttpRequest","org.http4k.aws.AwsSdkClient.prepareRequest"]},{"name":"sealed interface Mode : Function1<Request, CanonicalPayload> ","description":"org.http4k.filter.Payload.Mode","location":"http4k-aws/org.http4k.filter/-payload/-mode/index.html","searchKeys":["Mode","sealed interface Mode : Function1<Request, CanonicalPayload> ","org.http4k.filter.Payload.Mode"]},{"name":"val accessKey: String","description":"org.http4k.aws.AwsCredentials.accessKey","location":"http4k-aws/org.http4k.aws/-aws-credentials/access-key.html","searchKeys":["accessKey","val accessKey: String","org.http4k.aws.AwsCredentials.accessKey"]},{"name":"val expires: Instant","description":"org.http4k.aws.AwsPreSignedRequest.expires","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/expires.html","searchKeys":["expires","val expires: Instant","org.http4k.aws.AwsPreSignedRequest.expires"]},{"name":"val hash: String","description":"org.http4k.filter.CanonicalPayload.hash","location":"http4k-aws/org.http4k.filter/-canonical-payload/hash.html","searchKeys":["hash","val hash: String","org.http4k.filter.CanonicalPayload.hash"]},{"name":"val length: Long","description":"org.http4k.filter.CanonicalPayload.length","location":"http4k-aws/org.http4k.filter/-canonical-payload/length.html","searchKeys":["length","val length: Long","org.http4k.filter.CanonicalPayload.length"]},{"name":"val method: Method","description":"org.http4k.aws.AwsPreSignedRequest.method","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/method.html","searchKeys":["method","val method: Method","org.http4k.aws.AwsPreSignedRequest.method"]},{"name":"val region: String","description":"org.http4k.aws.AwsCredentialScope.region","location":"http4k-aws/org.http4k.aws/-aws-credential-scope/region.html","searchKeys":["region","val region: String","org.http4k.aws.AwsCredentialScope.region"]},{"name":"val secretKey: String","description":"org.http4k.aws.AwsCredentials.secretKey","location":"http4k-aws/org.http4k.aws/-aws-credentials/secret-key.html","searchKeys":["secretKey","val secretKey: String","org.http4k.aws.AwsCredentials.secretKey"]},{"name":"val service: String","description":"org.http4k.aws.AwsCredentialScope.service","location":"http4k-aws/org.http4k.aws/-aws-credential-scope/service.html","searchKeys":["service","val service: String","org.http4k.aws.AwsCredentialScope.service"]},{"name":"val sessionToken: String? = null","description":"org.http4k.aws.AwsCredentials.sessionToken","location":"http4k-aws/org.http4k.aws/-aws-credentials/session-token.html","searchKeys":["sessionToken","val sessionToken: String? = null","org.http4k.aws.AwsCredentials.sessionToken"]},{"name":"val signedHeaders: Headers","description":"org.http4k.aws.AwsPreSignedRequest.signedHeaders","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/signed-headers.html","searchKeys":["signedHeaders","val signedHeaders: Headers","org.http4k.aws.AwsPreSignedRequest.signedHeaders"]},{"name":"val uri: Uri","description":"org.http4k.aws.AwsPreSignedRequest.uri","location":"http4k-aws/org.http4k.aws/-aws-pre-signed-request/uri.html","searchKeys":["uri","val uri: Uri","org.http4k.aws.AwsPreSignedRequest.uri"]},{"name":"abstract fun addNote(note: String)","description":"org.http4k.servirtium.InteractionControl.addNote","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-control/add-note.html","searchKeys":["addNote","abstract fun addNote(note: String)","org.http4k.servirtium.InteractionControl.addNote"]},{"name":"abstract fun clean(): Boolean","description":"org.http4k.servirtium.InteractionStorage.clean","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-storage/clean.html","searchKeys":["clean","abstract fun clean(): Boolean","org.http4k.servirtium.InteractionStorage.clean"]},{"name":"class GitHub constructor(owner: String, repo: String, credentials: Credentials, basePath: Path = Paths.get(\"\"), reference: String? = null, http: HttpHandler = SetHostFrom(Uri.of(\"https://api.github.com\")).then(JavaHttpClient())) : Function1<String, InteractionStorage> ","description":"org.http4k.servirtium.GitHub","location":"http4k-testing-servirtium/org.http4k.servirtium/-git-hub/index.html","searchKeys":["GitHub","class GitHub constructor(owner: String, repo: String, credentials: Credentials, basePath: Path = Paths.get(\"\"), reference: String? = null, http: HttpHandler = SetHostFrom(Uri.of(\"https://api.github.com\")).then(JavaHttpClient())) : Function1<String, InteractionStorage> ","org.http4k.servirtium.GitHub"]},{"name":"class ServirtiumRecording constructor(baseName: String, httpHandler: HttpHandler, storageProvider: StorageProvider, options: InteractionOptions = Defaults) : ParameterResolver, BeforeTestExecutionCallback, AfterTestExecutionCallback","description":"org.http4k.junit.ServirtiumRecording","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/index.html","searchKeys":["ServirtiumRecording","class ServirtiumRecording constructor(baseName: String, httpHandler: HttpHandler, storageProvider: StorageProvider, options: InteractionOptions = Defaults) : ParameterResolver, BeforeTestExecutionCallback, AfterTestExecutionCallback","org.http4k.junit.ServirtiumRecording"]},{"name":"class ServirtiumReplay constructor(baseName: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults) : ParameterResolver","description":"org.http4k.junit.ServirtiumReplay","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-replay/index.html","searchKeys":["ServirtiumReplay","class ServirtiumReplay constructor(baseName: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults) : ParameterResolver","org.http4k.junit.ServirtiumReplay"]},{"name":"constructor(baseName: String, httpHandler: HttpHandler, storageProvider: StorageProvider, options: InteractionOptions = Defaults)","description":"org.http4k.junit.ServirtiumRecording.ServirtiumRecording","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/-servirtium-recording.html","searchKeys":["ServirtiumRecording","constructor(baseName: String, httpHandler: HttpHandler, storageProvider: StorageProvider, options: InteractionOptions = Defaults)","org.http4k.junit.ServirtiumRecording.ServirtiumRecording"]},{"name":"constructor(baseName: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults)","description":"org.http4k.junit.ServirtiumReplay.ServirtiumReplay","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-replay/-servirtium-replay.html","searchKeys":["ServirtiumReplay","constructor(baseName: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults)","org.http4k.junit.ServirtiumReplay.ServirtiumReplay"]},{"name":"constructor(content: String)","description":"org.http4k.servirtium.GithubFile.GithubFile","location":"http4k-testing-servirtium/org.http4k.servirtium/-github-file/-github-file.html","searchKeys":["GithubFile","constructor(content: String)","org.http4k.servirtium.GithubFile.GithubFile"]},{"name":"constructor(owner: String, repo: String, credentials: Credentials, basePath: Path = Paths.get(\"\"), reference: String? = null, http: HttpHandler = SetHostFrom(Uri.of(\"https://api.github.com\")).then(JavaHttpClient()))","description":"org.http4k.servirtium.GitHub.GitHub","location":"http4k-testing-servirtium/org.http4k.servirtium/-git-hub/-git-hub.html","searchKeys":["GitHub","constructor(owner: String, repo: String, credentials: Credentials, basePath: Path = Paths.get(\"\"), reference: String? = null, http: HttpHandler = SetHostFrom(Uri.of(\"https://api.github.com\")).then(JavaHttpClient()))","org.http4k.servirtium.GitHub.GitHub"]},{"name":"data class GithubFile(val content: String)","description":"org.http4k.servirtium.GithubFile","location":"http4k-testing-servirtium/org.http4k.servirtium/-github-file/index.html","searchKeys":["GithubFile","data class GithubFile(val content: String)","org.http4k.servirtium.GithubFile"]},{"name":"fun <T : HttpMessage> T.alphabetiseHeaders(): T","description":"org.http4k.core.alphabetiseHeaders","location":"http4k-testing-servirtium/org.http4k.core/alphabetise-headers.html","searchKeys":["alphabetiseHeaders","fun <T : HttpMessage> T.alphabetiseHeaders(): T","org.http4k.core.alphabetiseHeaders"]},{"name":"fun Disk(root: File): StorageProvider","description":"org.http4k.servirtium.InteractionStorage.Companion.Disk","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-storage/-companion/-disk.html","searchKeys":["Disk","fun Disk(root: File): StorageProvider","org.http4k.servirtium.InteractionStorage.Companion.Disk"]},{"name":"fun InMemory(): (String) -> InteractionStorage","description":"org.http4k.servirtium.InteractionStorage.Companion.InMemory","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-storage/-companion/-in-memory.html","searchKeys":["InMemory","fun InMemory(): (String) -> InteractionStorage","org.http4k.servirtium.InteractionStorage.Companion.InMemory"]},{"name":"fun InteractionOptions.trafficPrinter(): Filter","description":"org.http4k.servirtium.trafficPrinter","location":"http4k-testing-servirtium/org.http4k.servirtium/traffic-printer.html","searchKeys":["trafficPrinter","fun InteractionOptions.trafficPrinter(): Filter","org.http4k.servirtium.trafficPrinter"]},{"name":"fun Recording(name: String, target: Uri, storageProvider: StorageProvider, options: InteractionOptions = Defaults, port: Int = 0, serverFn: (Int) -> ServerConfig = ::SunHttp, proxyClient: HttpHandler = ApacheClient()): ServirtiumServer","description":"org.http4k.servirtium.ServirtiumServer.Companion.Recording","location":"http4k-testing-servirtium/org.http4k.servirtium/-servirtium-server/-companion/-recording.html","searchKeys":["Recording","fun Recording(name: String, target: Uri, storageProvider: StorageProvider, options: InteractionOptions = Defaults, port: Int = 0, serverFn: (Int) -> ServerConfig = ::SunHttp, proxyClient: HttpHandler = ApacheClient()): ServirtiumServer","org.http4k.servirtium.ServirtiumServer.Companion.Recording"]},{"name":"fun Replay(name: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults, port: Int = 0, serverFn: (Int) -> ServerConfig = ::SunHttp): ServirtiumServer","description":"org.http4k.servirtium.ServirtiumServer.Companion.Replay","location":"http4k-testing-servirtium/org.http4k.servirtium/-servirtium-server/-companion/-replay.html","searchKeys":["Replay","fun Replay(name: String, storageProvider: StorageProvider, options: InteractionOptions = Defaults, port: Int = 0, serverFn: (Int) -> ServerConfig = ::SunHttp): ServirtiumServer","org.http4k.servirtium.ServirtiumServer.Companion.Replay"]},{"name":"fun Replay.Companion.Servirtium(output: Supplier<ByteArray>, options: InteractionOptions = Defaults): Replay","description":"org.http4k.traffic.Servirtium","location":"http4k-testing-servirtium/org.http4k.traffic/-servirtium.html","searchKeys":["Servirtium","fun Replay.Companion.Servirtium(output: Supplier<ByteArray>, options: InteractionOptions = Defaults): Replay","org.http4k.traffic.Servirtium"]},{"name":"fun Replay.replayingMatchingContent(manipulations: (Request) -> Request = { it }): HttpHandler","description":"org.http4k.traffic.replayingMatchingContent","location":"http4k-testing-servirtium/org.http4k.traffic/replaying-matching-content.html","searchKeys":["replayingMatchingContent","fun Replay.replayingMatchingContent(manipulations: (Request) -> Request = { it }): HttpHandler","org.http4k.traffic.replayingMatchingContent"]},{"name":"fun Sink.Companion.Servirtium(target: Consumer<ByteArray>, options: InteractionOptions): Sink","description":"org.http4k.traffic.Servirtium","location":"http4k-testing-servirtium/org.http4k.traffic/-servirtium.html","searchKeys":["Servirtium","fun Sink.Companion.Servirtium(target: Consumer<ByteArray>, options: InteractionOptions): Sink","org.http4k.traffic.Servirtium"]},{"name":"fun StorageBased(storage: InteractionStorage): InteractionControl","description":"org.http4k.servirtium.InteractionControl.Companion.StorageBased","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-control/-companion/-storage-based.html","searchKeys":["StorageBased","fun StorageBased(storage: InteractionStorage): InteractionControl","org.http4k.servirtium.InteractionControl.Companion.StorageBased"]},{"name":"fun interface InteractionControl","description":"org.http4k.servirtium.InteractionControl","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-control/index.html","searchKeys":["InteractionControl","fun interface InteractionControl","org.http4k.servirtium.InteractionControl"]},{"name":"interface InteractionOptions","description":"org.http4k.servirtium.InteractionOptions","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/index.html","searchKeys":["InteractionOptions","interface InteractionOptions","org.http4k.servirtium.InteractionOptions"]},{"name":"interface InteractionStorage : Supplier<ByteArray> , Consumer<ByteArray> ","description":"org.http4k.servirtium.InteractionStorage","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-storage/index.html","searchKeys":["InteractionStorage","interface InteractionStorage : Supplier<ByteArray> , Consumer<ByteArray> ","org.http4k.servirtium.InteractionStorage"]},{"name":"interface ServirtiumServer : Http4kServer, InteractionControl","description":"org.http4k.servirtium.ServirtiumServer","location":"http4k-testing-servirtium/org.http4k.servirtium/-servirtium-server/index.html","searchKeys":["ServirtiumServer","interface ServirtiumServer : Http4kServer, InteractionControl","org.http4k.servirtium.ServirtiumServer"]},{"name":"object Companion","description":"org.http4k.servirtium.InteractionControl.Companion","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-control/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.servirtium.InteractionControl.Companion"]},{"name":"object Companion","description":"org.http4k.servirtium.InteractionOptions.Companion","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.servirtium.InteractionOptions.Companion"]},{"name":"object Companion","description":"org.http4k.servirtium.InteractionStorage.Companion","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-storage/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.servirtium.InteractionStorage.Companion"]},{"name":"object Companion","description":"org.http4k.servirtium.ServirtiumServer.Companion","location":"http4k-testing-servirtium/org.http4k.servirtium/-servirtium-server/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.servirtium.ServirtiumServer.Companion"]},{"name":"open fun debugTraffic(): Boolean","description":"org.http4k.servirtium.InteractionOptions.debugTraffic","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/debug-traffic.html","searchKeys":["debugTraffic","open fun debugTraffic(): Boolean","org.http4k.servirtium.InteractionOptions.debugTraffic"]},{"name":"open fun isBinary(contentType: ContentType?): Boolean","description":"org.http4k.servirtium.InteractionOptions.isBinary","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/is-binary.html","searchKeys":["isBinary","open fun isBinary(contentType: ContentType?): Boolean","org.http4k.servirtium.InteractionOptions.isBinary"]},{"name":"open fun modify(request: Request): Request","description":"org.http4k.servirtium.InteractionOptions.modify","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/modify.html","searchKeys":["modify","open fun modify(request: Request): Request","org.http4k.servirtium.InteractionOptions.modify"]},{"name":"open fun modify(response: Response): Response","description":"org.http4k.servirtium.InteractionOptions.modify","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/modify.html","searchKeys":["modify","open fun modify(response: Response): Response","org.http4k.servirtium.InteractionOptions.modify"]},{"name":"open operator override fun invoke(name: String): InteractionStorage","description":"org.http4k.servirtium.GitHub.invoke","location":"http4k-testing-servirtium/org.http4k.servirtium/-git-hub/invoke.html","searchKeys":["invoke","open operator override fun invoke(name: String): InteractionStorage","org.http4k.servirtium.GitHub.invoke"]},{"name":"open override fun afterTestExecution(context: ExtensionContext)","description":"org.http4k.junit.ServirtiumRecording.afterTestExecution","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/after-test-execution.html","searchKeys":["afterTestExecution","open override fun afterTestExecution(context: ExtensionContext)","org.http4k.junit.ServirtiumRecording.afterTestExecution"]},{"name":"open override fun beforeTestExecution(context: ExtensionContext?)","description":"org.http4k.junit.ServirtiumRecording.beforeTestExecution","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/before-test-execution.html","searchKeys":["beforeTestExecution","open override fun beforeTestExecution(context: ExtensionContext?)","org.http4k.junit.ServirtiumRecording.beforeTestExecution"]},{"name":"open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Any","description":"org.http4k.junit.ServirtiumRecording.resolveParameter","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/resolve-parameter.html","searchKeys":["resolveParameter","open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Any","org.http4k.junit.ServirtiumRecording.resolveParameter"]},{"name":"open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Any","description":"org.http4k.junit.ServirtiumReplay.resolveParameter","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-replay/resolve-parameter.html","searchKeys":["resolveParameter","open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Any","org.http4k.junit.ServirtiumReplay.resolveParameter"]},{"name":"open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","description":"org.http4k.junit.ServirtiumRecording.supportsParameter","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-recording/supports-parameter.html","searchKeys":["supportsParameter","open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","org.http4k.junit.ServirtiumRecording.supportsParameter"]},{"name":"open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","description":"org.http4k.junit.ServirtiumReplay.supportsParameter","location":"http4k-testing-servirtium/org.http4k.junit/-servirtium-replay/supports-parameter.html","searchKeys":["supportsParameter","open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","org.http4k.junit.ServirtiumReplay.supportsParameter"]},{"name":"typealias StorageProvider = (String) -> InteractionStorage","description":"org.http4k.servirtium.StorageProvider","location":"http4k-testing-servirtium/org.http4k.servirtium/-storage-provider/index.html","searchKeys":["StorageProvider","typealias StorageProvider = (String) -> InteractionStorage","org.http4k.servirtium.StorageProvider"]},{"name":"val Defaults: InteractionOptions","description":"org.http4k.servirtium.InteractionOptions.Companion.Defaults","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-options/-companion/-defaults.html","searchKeys":["Defaults","val Defaults: InteractionOptions","org.http4k.servirtium.InteractionOptions.Companion.Defaults"]},{"name":"val NoOp: InteractionControl","description":"org.http4k.servirtium.InteractionControl.Companion.NoOp","location":"http4k-testing-servirtium/org.http4k.servirtium/-interaction-control/-companion/-no-op.html","searchKeys":["NoOp","val NoOp: InteractionControl","org.http4k.servirtium.InteractionControl.Companion.NoOp"]},{"name":"val content: String","description":"org.http4k.servirtium.GithubFile.content","location":"http4k-testing-servirtium/org.http4k.servirtium/-github-file/content.html","searchKeys":["content","val content: String","org.http4k.servirtium.GithubFile.content"]},{"name":"val decoded: ByteArray","description":"org.http4k.servirtium.GithubFile.decoded","location":"http4k-testing-servirtium/org.http4k.servirtium/-github-file/decoded.html","searchKeys":["decoded","val decoded: ByteArray","org.http4k.servirtium.GithubFile.decoded"]},{"name":"object Bulkheading","description":"org.http4k.filter.ResilienceFilters.Bulkheading","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-bulkheading/index.html","searchKeys":["Bulkheading","object Bulkheading","org.http4k.filter.ResilienceFilters.Bulkheading"]},{"name":"object CircuitBreak","description":"org.http4k.filter.ResilienceFilters.CircuitBreak","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-circuit-break/index.html","searchKeys":["CircuitBreak","object CircuitBreak","org.http4k.filter.ResilienceFilters.CircuitBreak"]},{"name":"object RateLimit","description":"org.http4k.filter.ResilienceFilters.RateLimit","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-rate-limit/index.html","searchKeys":["RateLimit","object RateLimit","org.http4k.filter.ResilienceFilters.RateLimit"]},{"name":"object ResilienceFilters","description":"org.http4k.filter.ResilienceFilters","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/index.html","searchKeys":["ResilienceFilters","object ResilienceFilters","org.http4k.filter.ResilienceFilters"]},{"name":"object RetryFailures","description":"org.http4k.filter.ResilienceFilters.RetryFailures","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-retry-failures/index.html","searchKeys":["RetryFailures","object RetryFailures","org.http4k.filter.ResilienceFilters.RetryFailures"]},{"name":"operator fun invoke(bulkhead: Bulkhead = Bulkhead.ofDefaults(\"Bulkhead\"), onError: () -> Response = { Response(TOO_MANY_REQUESTS.description(\"Bulkhead limit exceeded\")) }): Filter","description":"org.http4k.filter.ResilienceFilters.Bulkheading.invoke","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-bulkheading/invoke.html","searchKeys":["invoke","operator fun invoke(bulkhead: Bulkhead = Bulkhead.ofDefaults(\"Bulkhead\"), onError: () -> Response = { Response(TOO_MANY_REQUESTS.description(\"Bulkhead limit exceeded\")) }): Filter","org.http4k.filter.ResilienceFilters.Bulkheading.invoke"]},{"name":"operator fun invoke(cb: CircuitBreaker = CircuitBreaker.ofDefaults(\"Circuit\"), isError: (Response) -> Boolean = { it.status.serverError }, onError: () -> Response = { Response(SERVICE_UNAVAILABLE.description(\"Circuit is open\")) }): Filter","description":"org.http4k.filter.ResilienceFilters.CircuitBreak.invoke","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-circuit-break/invoke.html","searchKeys":["invoke","operator fun invoke(cb: CircuitBreaker = CircuitBreaker.ofDefaults(\"Circuit\"), isError: (Response) -> Boolean = { it.status.serverError }, onError: () -> Response = { Response(SERVICE_UNAVAILABLE.description(\"Circuit is open\")) }): Filter","org.http4k.filter.ResilienceFilters.CircuitBreak.invoke"]},{"name":"operator fun invoke(rateLimit: RateLimiter = RateLimiter.ofDefaults(\"RateLimit\"), onError: () -> Response = { Response(TOO_MANY_REQUESTS.description(\"Rate limit exceeded\")) }): Filter","description":"org.http4k.filter.ResilienceFilters.RateLimit.invoke","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-rate-limit/invoke.html","searchKeys":["invoke","operator fun invoke(rateLimit: RateLimiter = RateLimiter.ofDefaults(\"RateLimit\"), onError: () -> Response = { Response(TOO_MANY_REQUESTS.description(\"Rate limit exceeded\")) }): Filter","org.http4k.filter.ResilienceFilters.RateLimit.invoke"]},{"name":"operator fun invoke(retry: Retry = ofDefaults(\"Retrying\"), isError: (Response) -> Boolean = { it.status.serverError }): Filter","description":"org.http4k.filter.ResilienceFilters.RetryFailures.invoke","location":"http4k-resilience4j/org.http4k.filter/-resilience-filters/-retry-failures/invoke.html","searchKeys":["invoke","operator fun invoke(retry: Retry = ofDefaults(\"Retrying\"), isError: (Response) -> Boolean = { it.status.serverError }): Filter","org.http4k.filter.ResilienceFilters.RetryFailures.invoke"]},{"name":"fun defaultApacheHttpClient(): CloseableHttpClient","description":"org.http4k.client.PreCannedApache4HttpClients.defaultApacheHttpClient","location":"http4k-client-apache4/org.http4k.client/-pre-canned-apache4-http-clients/default-apache-http-client.html","searchKeys":["defaultApacheHttpClient","fun defaultApacheHttpClient(): CloseableHttpClient","org.http4k.client.PreCannedApache4HttpClients.defaultApacheHttpClient"]},{"name":"fun insecureApacheHttpClient(): CloseableHttpClient","description":"org.http4k.client.PreCannedApache4HttpClients.insecureApacheHttpClient","location":"http4k-client-apache4/org.http4k.client/-pre-canned-apache4-http-clients/insecure-apache-http-client.html","searchKeys":["insecureApacheHttpClient","fun insecureApacheHttpClient(): CloseableHttpClient","org.http4k.client.PreCannedApache4HttpClients.insecureApacheHttpClient"]},{"name":"object Apache4Client","description":"org.http4k.client.Apache4Client","location":"http4k-client-apache4/org.http4k.client/-apache4-client/index.html","searchKeys":["Apache4Client","object Apache4Client","org.http4k.client.Apache4Client"]},{"name":"object PreCannedApache4HttpClients","description":"org.http4k.client.PreCannedApache4HttpClients","location":"http4k-client-apache4/org.http4k.client/-pre-canned-apache4-http-clients/index.html","searchKeys":["PreCannedApache4HttpClients","object PreCannedApache4HttpClients","org.http4k.client.PreCannedApache4HttpClients"]},{"name":"operator fun invoke(client: CloseableHttpClient = defaultApacheHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): HttpHandler","description":"org.http4k.client.Apache4Client.invoke","location":"http4k-client-apache4/org.http4k.client/-apache4-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: CloseableHttpClient = defaultApacheHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): HttpHandler","org.http4k.client.Apache4Client.invoke"]},{"name":"object FailsafeFilter","description":"org.http4k.filter.FailsafeFilter","location":"http4k-failsafe/org.http4k.filter/-failsafe-filter/index.html","searchKeys":["FailsafeFilter","object FailsafeFilter","org.http4k.filter.FailsafeFilter"]},{"name":"operator fun invoke(failsafeExecutor: FailsafeExecutor<Response>, onError: (FailsafeException) -> Response = defaultErrorHandler): Filter","description":"org.http4k.filter.FailsafeFilter.invoke","location":"http4k-failsafe/org.http4k.filter/-failsafe-filter/invoke.html","searchKeys":["invoke","operator fun invoke(failsafeExecutor: FailsafeExecutor<Response>, onError: (FailsafeException) -> Response = defaultErrorHandler): Filter","org.http4k.filter.FailsafeFilter.invoke"]},{"name":"class MicrometerMetrics(defaults: MetricsDefaults)","description":"org.http4k.filter.MicrometerMetrics","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics/index.html","searchKeys":["MicrometerMetrics","class MicrometerMetrics(defaults: MetricsDefaults)","org.http4k.filter.MicrometerMetrics"]},{"name":"constructor(defaults: MetricsDefaults)","description":"org.http4k.filter.MicrometerMetrics.MicrometerMetrics","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics/-micrometer-metrics.html","searchKeys":["MicrometerMetrics","constructor(defaults: MetricsDefaults)","org.http4k.filter.MicrometerMetrics.MicrometerMetrics"]},{"name":"fun RequestCounter(meterRegistry: MeterRegistry, name: String = defaults.counterDescription.first, description: String = defaults.counterDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = Clock.systemUTC()): Filter","description":"org.http4k.filter.MicrometerMetrics.RequestCounter","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics/-request-counter.html","searchKeys":["RequestCounter","fun RequestCounter(meterRegistry: MeterRegistry, name: String = defaults.counterDescription.first, description: String = defaults.counterDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = Clock.systemUTC()): Filter","org.http4k.filter.MicrometerMetrics.RequestCounter"]},{"name":"fun RequestTimer(meterRegistry: MeterRegistry, name: String = defaults.timerDescription.first, description: String = defaults.timerDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = Clock.systemUTC()): Filter","description":"org.http4k.filter.MicrometerMetrics.RequestTimer","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics/-request-timer.html","searchKeys":["RequestTimer","fun RequestTimer(meterRegistry: MeterRegistry, name: String = defaults.timerDescription.first, description: String = defaults.timerDescription.second, labeler: HttpTransactionLabeler = defaults.labeler, clock: Clock = Clock.systemUTC()): Filter","org.http4k.filter.MicrometerMetrics.RequestTimer"]},{"name":"val ClientFilters.MicrometerMetrics: MicrometerMetrics","description":"org.http4k.filter.MicrometerMetrics","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics.html","searchKeys":["MicrometerMetrics","val ClientFilters.MicrometerMetrics: MicrometerMetrics","org.http4k.filter.MicrometerMetrics"]},{"name":"val ServerFilters.MicrometerMetrics: MicrometerMetrics","description":"org.http4k.filter.MicrometerMetrics","location":"http4k-metrics-micrometer/org.http4k.filter/-micrometer-metrics.html","searchKeys":["MicrometerMetrics","val ServerFilters.MicrometerMetrics: MicrometerMetrics","org.http4k.filter.MicrometerMetrics"]},{"name":"class HandlebarsTemplates(configure: (Handlebars) -> Handlebars = { it }) : Templates","description":"org.http4k.template.HandlebarsTemplates","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/index.html","searchKeys":["HandlebarsTemplates","class HandlebarsTemplates(configure: (Handlebars) -> Handlebars = { it }) : Templates","org.http4k.template.HandlebarsTemplates"]},{"name":"constructor(configure: (Handlebars) -> Handlebars = { it })","description":"org.http4k.template.HandlebarsTemplates.HandlebarsTemplates","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/-handlebars-templates.html","searchKeys":["HandlebarsTemplates","constructor(configure: (Handlebars) -> Handlebars = { it })","org.http4k.template.HandlebarsTemplates.HandlebarsTemplates"]},{"name":"fun HotReload(firstBaseDir: String, secondBaseDir: String, vararg rest: String): TemplateRenderer","description":"org.http4k.template.HandlebarsTemplates.HotReload","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/-hot-reload.html","searchKeys":["HotReload","fun HotReload(firstBaseDir: String, secondBaseDir: String, vararg rest: String): TemplateRenderer","org.http4k.template.HandlebarsTemplates.HotReload"]},{"name":"open override fun Caching(baseTemplateDir: String): (ViewModel) -> String","description":"org.http4k.template.HandlebarsTemplates.Caching","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): (ViewModel) -> String","org.http4k.template.HandlebarsTemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): (ViewModel) -> String","description":"org.http4k.template.HandlebarsTemplates.CachingClasspath","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): (ViewModel) -> String","org.http4k.template.HandlebarsTemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.HandlebarsTemplates.HotReload","location":"http4k-template-handlebars/org.http4k.template/-handlebars-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): TemplateRenderer","org.http4k.template.HandlebarsTemplates.HotReload"]},{"name":"constructor(mapper: XmlMapper, defaultContentType: ContentType = APPLICATION_XML)","description":"org.http4k.format.ConfigurableJacksonXml.ConfigurableJacksonXml","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/-configurable-jackson-xml.html","searchKeys":["ConfigurableJacksonXml","constructor(mapper: XmlMapper, defaultContentType: ContentType = APPLICATION_XML)","org.http4k.format.ConfigurableJacksonXml.ConfigurableJacksonXml"]},{"name":"fun KotlinModule.asConfigurableXml(): AutoMappingConfiguration<XmlMapper>","description":"org.http4k.format.asConfigurableXml","location":"http4k-format-jackson-xml/org.http4k.format/as-configurable-xml.html","searchKeys":["asConfigurableXml","fun KotlinModule.asConfigurableXml(): AutoMappingConfiguration<XmlMapper>","org.http4k.format.asConfigurableXml"]},{"name":"inline fun <T : Any, R : HttpMessage> R.xml(t: T): R","description":"org.http4k.format.ConfigurableJacksonXml.xml","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/xml.html","searchKeys":["xml","inline fun <T : Any, R : HttpMessage> R.xml(t: T): R","org.http4k.format.ConfigurableJacksonXml.xml"]},{"name":"inline fun <T : Any> HttpMessage.xml(): T","description":"org.http4k.format.ConfigurableJacksonXml.xml","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/xml.html","searchKeys":["xml","inline fun <T : Any> HttpMessage.xml(): T","org.http4k.format.ConfigurableJacksonXml.xml"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJacksonXml.autoBody","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJacksonXml.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableJacksonXml.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-jackson-xml/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableJacksonXml.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableJacksonXml.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-jackson-xml/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableJacksonXml.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object JacksonXml : ConfigurableJacksonXml","description":"org.http4k.format.JacksonXml","location":"http4k-format-jackson-xml/org.http4k.format/-jackson-xml/index.html","searchKeys":["JacksonXml","object JacksonXml : ConfigurableJacksonXml","org.http4k.format.JacksonXml"]},{"name":"open class ConfigurableJacksonXml(mapper: XmlMapper, val defaultContentType: ContentType = APPLICATION_XML) : AutoMarshallingXml","description":"org.http4k.format.ConfigurableJacksonXml","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/index.html","searchKeys":["ConfigurableJacksonXml","open class ConfigurableJacksonXml(mapper: XmlMapper, val defaultContentType: ContentType = APPLICATION_XML) : AutoMarshallingXml","org.http4k.format.ConfigurableJacksonXml"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJacksonXml.asA","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableJacksonXml.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJacksonXml.asA","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableJacksonXml.asA"]},{"name":"open override fun Any.asXmlString(): String","description":"org.http4k.format.ConfigurableJacksonXml.asXmlString","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/as-xml-string.html","searchKeys":["asXmlString","open override fun Any.asXmlString(): String","org.http4k.format.ConfigurableJacksonXml.asXmlString"]},{"name":"open override fun asInputStream(input: Any): InputStream","description":"org.http4k.format.ConfigurableJacksonXml.asInputStream","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/as-input-stream.html","searchKeys":["asInputStream","open override fun asInputStream(input: Any): InputStream","org.http4k.format.ConfigurableJacksonXml.asInputStream"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableJacksonXml.defaultContentType","location":"http4k-format-jackson-xml/org.http4k.format/-configurable-jackson-xml/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableJacksonXml.defaultContentType"]},{"name":"class Http4kBrowser(delegate: Browser, val baseUri: Uri) : Browser","description":"org.http4k.playwright.Http4kBrowser","location":"http4k-testing-playwright/org.http4k.playwright/-http4k-browser/index.html","searchKeys":["Http4kBrowser","class Http4kBrowser(delegate: Browser, val baseUri: Uri) : Browser","org.http4k.playwright.Http4kBrowser"]},{"name":"class HttpPage(delegate: Page, baseUri: Uri) : Page","description":"org.http4k.playwright.HttpPage","location":"http4k-testing-playwright/org.http4k.playwright/-http-page/index.html","searchKeys":["HttpPage","class HttpPage(delegate: Page, baseUri: Uri) : Page","org.http4k.playwright.HttpPage"]},{"name":"class LaunchPlaywrightBrowser constructor(http: HttpHandler, browserType: Playwright.() -> BrowserType = Playwright::chromium, launchOptions: BrowserType.LaunchOptions = LaunchOptions(), createPlaywright: () -> Playwright = ::create, serverFn: (Int) -> ServerConfig = ::SunHttp) : ParameterResolver, BeforeTestExecutionCallback, AfterTestExecutionCallback","description":"org.http4k.playwright.LaunchPlaywrightBrowser","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/index.html","searchKeys":["LaunchPlaywrightBrowser","class LaunchPlaywrightBrowser constructor(http: HttpHandler, browserType: Playwright.() -> BrowserType = Playwright::chromium, launchOptions: BrowserType.LaunchOptions = LaunchOptions(), createPlaywright: () -> Playwright = ::create, serverFn: (Int) -> ServerConfig = ::SunHttp) : ParameterResolver, BeforeTestExecutionCallback, AfterTestExecutionCallback","org.http4k.playwright.LaunchPlaywrightBrowser"]},{"name":"constructor(delegate: Browser, baseUri: Uri)","description":"org.http4k.playwright.Http4kBrowser.Http4kBrowser","location":"http4k-testing-playwright/org.http4k.playwright/-http4k-browser/-http4k-browser.html","searchKeys":["Http4kBrowser","constructor(delegate: Browser, baseUri: Uri)","org.http4k.playwright.Http4kBrowser.Http4kBrowser"]},{"name":"constructor(delegate: Page, baseUri: Uri)","description":"org.http4k.playwright.HttpPage.HttpPage","location":"http4k-testing-playwright/org.http4k.playwright/-http-page/-http-page.html","searchKeys":["HttpPage","constructor(delegate: Page, baseUri: Uri)","org.http4k.playwright.HttpPage.HttpPage"]},{"name":"constructor(http: HttpHandler, browserType: Playwright.() -> BrowserType = Playwright::chromium, launchOptions: BrowserType.LaunchOptions = LaunchOptions(), createPlaywright: () -> Playwright = ::create, serverFn: (Int) -> ServerConfig = ::SunHttp)","description":"org.http4k.playwright.LaunchPlaywrightBrowser.LaunchPlaywrightBrowser","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/-launch-playwright-browser.html","searchKeys":["LaunchPlaywrightBrowser","constructor(http: HttpHandler, browserType: Playwright.() -> BrowserType = Playwright::chromium, launchOptions: BrowserType.LaunchOptions = LaunchOptions(), createPlaywright: () -> Playwright = ::create, serverFn: (Int) -> ServerConfig = ::SunHttp)","org.http4k.playwright.LaunchPlaywrightBrowser.LaunchPlaywrightBrowser"]},{"name":"fun navigate(uri: Uri): Response","description":"org.http4k.playwright.HttpPage.navigate","location":"http4k-testing-playwright/org.http4k.playwright/-http-page/navigate.html","searchKeys":["navigate","fun navigate(uri: Uri): Response","org.http4k.playwright.HttpPage.navigate"]},{"name":"fun navigateHome(): Response","description":"org.http4k.playwright.HttpPage.navigateHome","location":"http4k-testing-playwright/org.http4k.playwright/-http-page/navigate-home.html","searchKeys":["navigateHome","fun navigateHome(): Response","org.http4k.playwright.HttpPage.navigateHome"]},{"name":"open override fun afterTestExecution(context: ExtensionContext)","description":"org.http4k.playwright.LaunchPlaywrightBrowser.afterTestExecution","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/after-test-execution.html","searchKeys":["afterTestExecution","open override fun afterTestExecution(context: ExtensionContext)","org.http4k.playwright.LaunchPlaywrightBrowser.afterTestExecution"]},{"name":"open override fun beforeTestExecution(context: ExtensionContext?)","description":"org.http4k.playwright.LaunchPlaywrightBrowser.beforeTestExecution","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/before-test-execution.html","searchKeys":["beforeTestExecution","open override fun beforeTestExecution(context: ExtensionContext?)","org.http4k.playwright.LaunchPlaywrightBrowser.beforeTestExecution"]},{"name":"open override fun navigate(uri: String): Response","description":"org.http4k.playwright.HttpPage.navigate","location":"http4k-testing-playwright/org.http4k.playwright/-http-page/navigate.html","searchKeys":["navigate","open override fun navigate(uri: String): Response","org.http4k.playwright.HttpPage.navigate"]},{"name":"open override fun newPage(): HttpPage","description":"org.http4k.playwright.Http4kBrowser.newPage","location":"http4k-testing-playwright/org.http4k.playwright/-http4k-browser/new-page.html","searchKeys":["newPage","open override fun newPage(): HttpPage","org.http4k.playwright.Http4kBrowser.newPage"]},{"name":"open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Http4kBrowser","description":"org.http4k.playwright.LaunchPlaywrightBrowser.resolveParameter","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/resolve-parameter.html","searchKeys":["resolveParameter","open override fun resolveParameter(pc: ParameterContext, ec: ExtensionContext): Http4kBrowser","org.http4k.playwright.LaunchPlaywrightBrowser.resolveParameter"]},{"name":"open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","description":"org.http4k.playwright.LaunchPlaywrightBrowser.supportsParameter","location":"http4k-testing-playwright/org.http4k.playwright/-launch-playwright-browser/supports-parameter.html","searchKeys":["supportsParameter","open override fun supportsParameter(pc: ParameterContext, ec: ExtensionContext): Boolean","org.http4k.playwright.LaunchPlaywrightBrowser.supportsParameter"]},{"name":"val baseUri: Uri","description":"org.http4k.playwright.Http4kBrowser.baseUri","location":"http4k-testing-playwright/org.http4k.playwright/-http4k-browser/base-uri.html","searchKeys":["baseUri","val baseUri: Uri","org.http4k.playwright.Http4kBrowser.baseUri"]},{"name":"object HelidonClient","description":"org.http4k.client.HelidonClient","location":"http4k-client-helidon/org.http4k.client/-helidon-client/index.html","searchKeys":["HelidonClient","object HelidonClient","org.http4k.client.HelidonClient"]},{"name":"operator fun invoke(client: WebClient = WebClient.builder().followRedirects(false).build(), bodyMode: BodyMode = Memory): HttpHandler","description":"org.http4k.client.HelidonClient.invoke","location":"http4k-client-helidon/org.http4k.client/-helidon-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: WebClient = WebClient.builder().followRedirects(false).build(), bodyMode: BodyMode = Memory): HttpHandler","org.http4k.client.HelidonClient.invoke"]},{"name":"Auth","description":"org.http4k.security.digest.Qop.Auth","location":"http4k-security-digest/org.http4k.security.digest/-qop/-auth/index.html","searchKeys":["Auth","Auth","org.http4k.security.digest.Qop.Auth"]},{"name":"AuthInt","description":"org.http4k.security.digest.Qop.AuthInt","location":"http4k-security-digest/org.http4k.security.digest/-qop/-auth-int/index.html","searchKeys":["AuthInt","AuthInt","org.http4k.security.digest.Qop.AuthInt"]},{"name":"Proxy","description":"org.http4k.security.digest.DigestMode.Proxy","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/-proxy/index.html","searchKeys":["Proxy","Proxy","org.http4k.security.digest.DigestMode.Proxy"]},{"name":"Standard","description":"org.http4k.security.digest.DigestMode.Standard","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/-standard/index.html","searchKeys":["Standard","Standard","org.http4k.security.digest.DigestMode.Standard"]},{"name":"class DigestAuthProvider(realm: String, passwordLookup: (String) -> String?, qop: List<Qop>, algorithm: String, nonceGenerator: NonceGenerator, nonceVerifier: NonceVerifier = { true }, digestMode: DigestMode = DigestMode.Standard)","description":"org.http4k.security.digest.DigestAuthProvider","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-provider/index.html","searchKeys":["DigestAuthProvider","class DigestAuthProvider(realm: String, passwordLookup: (String) -> String?, qop: List<Qop>, algorithm: String, nonceGenerator: NonceGenerator, nonceVerifier: NonceVerifier = { true }, digestMode: DigestMode = DigestMode.Standard)","org.http4k.security.digest.DigestAuthProvider"]},{"name":"class DigestAuthReceiver(nonceGenerator: NonceGenerator, digestMode: DigestMode)","description":"org.http4k.security.digest.DigestAuthReceiver","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-receiver/index.html","searchKeys":["DigestAuthReceiver","class DigestAuthReceiver(nonceGenerator: NonceGenerator, digestMode: DigestMode)","org.http4k.security.digest.DigestAuthReceiver"]},{"name":"class DigestEncoder(digester: MessageDigest, charset: Charset = ISO_8859_1)","description":"org.http4k.security.digest.DigestEncoder","location":"http4k-security-digest/org.http4k.security.digest/-digest-encoder/index.html","searchKeys":["DigestEncoder","class DigestEncoder(digester: MessageDigest, charset: Charset = ISO_8859_1)","org.http4k.security.digest.DigestEncoder"]},{"name":"constructor(digester: MessageDigest, charset: Charset = ISO_8859_1)","description":"org.http4k.security.digest.DigestEncoder.DigestEncoder","location":"http4k-security-digest/org.http4k.security.digest/-digest-encoder/-digest-encoder.html","searchKeys":["DigestEncoder","constructor(digester: MessageDigest, charset: Charset = ISO_8859_1)","org.http4k.security.digest.DigestEncoder.DigestEncoder"]},{"name":"constructor(nonceGenerator: NonceGenerator, digestMode: DigestMode)","description":"org.http4k.security.digest.DigestAuthReceiver.DigestAuthReceiver","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-receiver/-digest-auth-receiver.html","searchKeys":["DigestAuthReceiver","constructor(nonceGenerator: NonceGenerator, digestMode: DigestMode)","org.http4k.security.digest.DigestAuthReceiver.DigestAuthReceiver"]},{"name":"constructor(prefix: String, parameters: Map<String, String?>)","description":"org.http4k.security.digest.ParameterizedHeader.ParameterizedHeader","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/-parameterized-header.html","searchKeys":["ParameterizedHeader","constructor(prefix: String, parameters: Map<String, String?>)","org.http4k.security.digest.ParameterizedHeader.ParameterizedHeader"]},{"name":"constructor(realm: String, nonce: Nonce, algorithm: String?, qop: List<Qop>, opaque: String?)","description":"org.http4k.security.digest.DigestChallenge.DigestChallenge","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/-digest-challenge.html","searchKeys":["DigestChallenge","constructor(realm: String, nonce: Nonce, algorithm: String?, qop: List<Qop>, opaque: String?)","org.http4k.security.digest.DigestChallenge.DigestChallenge"]},{"name":"constructor(realm: String, passwordLookup: (String) -> String?, qop: List<Qop>, algorithm: String, nonceGenerator: NonceGenerator, nonceVerifier: NonceVerifier = { true }, digestMode: DigestMode = DigestMode.Standard)","description":"org.http4k.security.digest.DigestAuthProvider.DigestAuthProvider","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-provider/-digest-auth-provider.html","searchKeys":["DigestAuthProvider","constructor(realm: String, passwordLookup: (String) -> String?, qop: List<Qop>, algorithm: String, nonceGenerator: NonceGenerator, nonceVerifier: NonceVerifier = { true }, digestMode: DigestMode = DigestMode.Standard)","org.http4k.security.digest.DigestAuthProvider.DigestAuthProvider"]},{"name":"constructor(realm: String, username: String, digestUri: String, nonce: Nonce, response: String, opaque: String?, nonceCount: Long?, algorithm: String?, cnonce: Nonce?, qop: Qop?)","description":"org.http4k.security.digest.DigestCredential.DigestCredential","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/-digest-credential.html","searchKeys":["DigestCredential","constructor(realm: String, username: String, digestUri: String, nonce: Nonce, response: String, opaque: String?, nonceCount: Long?, algorithm: String?, cnonce: Nonce?, qop: Qop?)","org.http4k.security.digest.DigestCredential.DigestCredential"]},{"name":"data class DigestChallenge(val realm: String, val nonce: Nonce, val algorithm: String?, val qop: List<Qop>, val opaque: String?)","description":"org.http4k.security.digest.DigestChallenge","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/index.html","searchKeys":["DigestChallenge","data class DigestChallenge(val realm: String, val nonce: Nonce, val algorithm: String?, val qop: List<Qop>, val opaque: String?)","org.http4k.security.digest.DigestChallenge"]},{"name":"data class DigestCredential(val realm: String, val username: String, val digestUri: String, val nonce: Nonce, val response: String, val opaque: String?, val nonceCount: Long?, val algorithm: String?, val cnonce: Nonce?, val qop: Qop?)","description":"org.http4k.security.digest.DigestCredential","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/index.html","searchKeys":["DigestCredential","data class DigestCredential(val realm: String, val username: String, val digestUri: String, val nonce: Nonce, val response: String, val opaque: String?, val nonceCount: Long?, val algorithm: String?, val cnonce: Nonce?, val qop: Qop?)","org.http4k.security.digest.DigestCredential"]},{"name":"data class ParameterizedHeader(val prefix: String, val parameters: Map<String, String?>)","description":"org.http4k.security.digest.ParameterizedHeader","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/index.html","searchKeys":["ParameterizedHeader","data class ParameterizedHeader(val prefix: String, val parameters: Map<String, String?>)","org.http4k.security.digest.ParameterizedHeader"]},{"name":"enum DigestMode : Enum<DigestMode> ","description":"org.http4k.security.digest.DigestMode","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/index.html","searchKeys":["DigestMode","enum DigestMode : Enum<DigestMode> ","org.http4k.security.digest.DigestMode"]},{"name":"enum Qop : Enum<Qop> ","description":"org.http4k.security.digest.Qop","location":"http4k-security-digest/org.http4k.security.digest/-qop/index.html","searchKeys":["Qop","enum Qop : Enum<Qop> ","org.http4k.security.digest.Qop"]},{"name":"fun ClientFilters.DigestAuth(credentials: () -> Credentials, nonceGenerator: NonceGenerator, digestMode: DigestMode = DigestMode.Standard): Filter","description":"org.http4k.filter.DigestAuth","location":"http4k-security-digest/org.http4k.filter/-digest-auth.html","searchKeys":["DigestAuth","fun ClientFilters.DigestAuth(credentials: () -> Credentials, nonceGenerator: NonceGenerator, digestMode: DigestMode = DigestMode.Standard): Filter","org.http4k.filter.DigestAuth"]},{"name":"fun ClientFilters.DigestAuth(credentials: Credentials, nonceGenerator: NonceGenerator = SECURE_NONCE, digestMode: DigestMode = DigestMode.Standard): Filter","description":"org.http4k.filter.DigestAuth","location":"http4k-security-digest/org.http4k.filter/-digest-auth.html","searchKeys":["DigestAuth","fun ClientFilters.DigestAuth(credentials: Credentials, nonceGenerator: NonceGenerator = SECURE_NONCE, digestMode: DigestMode = DigestMode.Standard): Filter","org.http4k.filter.DigestAuth"]},{"name":"fun ServerFilters.DigestAuth(realm: String, passwordLookup: (String) -> String?, qop: List<Qop> = listOf(Qop.Auth), digestMode: DigestMode = DigestMode.Standard, nonceGenerator: NonceGenerator = SECURE_NONCE, nonceVerifier: NonceVerifier = { true }, algorithm: String = \"MD5\", usernameKey: RequestContextLens<String>? = null): Filter","description":"org.http4k.filter.DigestAuth","location":"http4k-security-digest/org.http4k.filter/-digest-auth.html","searchKeys":["DigestAuth","fun ServerFilters.DigestAuth(realm: String, passwordLookup: (String) -> String?, qop: List<Qop> = listOf(Qop.Auth), digestMode: DigestMode = DigestMode.Standard, nonceGenerator: NonceGenerator = SECURE_NONCE, nonceVerifier: NonceVerifier = { true }, algorithm: String = \"MD5\", usernameKey: RequestContextLens<String>? = null): Filter","org.http4k.filter.DigestAuth"]},{"name":"fun authorizeRequest(request: Request, challenge: DigestChallenge, credentials: Credentials): Request","description":"org.http4k.security.digest.DigestAuthReceiver.authorizeRequest","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-receiver/authorize-request.html","searchKeys":["authorizeRequest","fun authorizeRequest(request: Request, challenge: DigestChallenge, credentials: Credentials): Request","org.http4k.security.digest.DigestAuthReceiver.authorizeRequest"]},{"name":"fun digestCredentials(request: Request): DigestCredential?","description":"org.http4k.security.digest.DigestAuthProvider.digestCredentials","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-provider/digest-credentials.html","searchKeys":["digestCredentials","fun digestCredentials(request: Request): DigestCredential?","org.http4k.security.digest.DigestAuthProvider.digestCredentials"]},{"name":"fun from(value: String): Qop?","description":"org.http4k.security.digest.Qop.Companion.from","location":"http4k-security-digest/org.http4k.security.digest/-qop/-companion/from.html","searchKeys":["from","fun from(value: String): Qop?","org.http4k.security.digest.Qop.Companion.from"]},{"name":"fun fromHeader(headerValue: String): DigestCredential?","description":"org.http4k.security.digest.DigestCredential.Companion.fromHeader","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/-companion/from-header.html","searchKeys":["fromHeader","fun fromHeader(headerValue: String): DigestCredential?","org.http4k.security.digest.DigestCredential.Companion.fromHeader"]},{"name":"fun generateChallenge(): Response","description":"org.http4k.security.digest.DigestAuthProvider.generateChallenge","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-provider/generate-challenge.html","searchKeys":["generateChallenge","fun generateChallenge(): Response","org.http4k.security.digest.DigestAuthProvider.generateChallenge"]},{"name":"fun getChallengeHeader(response: Response): DigestChallenge?","description":"org.http4k.security.digest.DigestAuthReceiver.getChallengeHeader","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-receiver/get-challenge-header.html","searchKeys":["getChallengeHeader","fun getChallengeHeader(response: Response): DigestChallenge?","org.http4k.security.digest.DigestAuthReceiver.getChallengeHeader"]},{"name":"fun parse(headerValue: String): DigestChallenge?","description":"org.http4k.security.digest.DigestChallenge.Companion.parse","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/-companion/parse.html","searchKeys":["parse","fun parse(headerValue: String): DigestChallenge?","org.http4k.security.digest.DigestChallenge.Companion.parse"]},{"name":"fun parse(headerValue: String): ParameterizedHeader","description":"org.http4k.security.digest.ParameterizedHeader.Companion.parse","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/-companion/parse.html","searchKeys":["parse","fun parse(headerValue: String): ParameterizedHeader","org.http4k.security.digest.ParameterizedHeader.Companion.parse"]},{"name":"fun responseBytes(): ByteArray?","description":"org.http4k.security.digest.DigestCredential.responseBytes","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/response-bytes.html","searchKeys":["responseBytes","fun responseBytes(): ByteArray?","org.http4k.security.digest.DigestCredential.responseBytes"]},{"name":"fun toHeaderValue(): String","description":"org.http4k.security.digest.DigestChallenge.toHeaderValue","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/to-header-value.html","searchKeys":["toHeaderValue","fun toHeaderValue(): String","org.http4k.security.digest.DigestChallenge.toHeaderValue"]},{"name":"fun toHeaderValue(): String","description":"org.http4k.security.digest.DigestCredential.toHeaderValue","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/to-header-value.html","searchKeys":["toHeaderValue","fun toHeaderValue(): String","org.http4k.security.digest.DigestCredential.toHeaderValue"]},{"name":"fun valueOf(value: String): DigestMode","description":"org.http4k.security.digest.DigestMode.valueOf","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): DigestMode","org.http4k.security.digest.DigestMode.valueOf"]},{"name":"fun valueOf(value: String): Qop","description":"org.http4k.security.digest.Qop.valueOf","location":"http4k-security-digest/org.http4k.security.digest/-qop/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Qop","org.http4k.security.digest.Qop.valueOf"]},{"name":"fun values(): Array<DigestMode>","description":"org.http4k.security.digest.DigestMode.values","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/values.html","searchKeys":["values","fun values(): Array<DigestMode>","org.http4k.security.digest.DigestMode.values"]},{"name":"fun values(): Array<Qop>","description":"org.http4k.security.digest.Qop.values","location":"http4k-security-digest/org.http4k.security.digest/-qop/values.html","searchKeys":["values","fun values(): Array<Qop>","org.http4k.security.digest.Qop.values"]},{"name":"fun verify(credentials: DigestCredential, method: Method): Boolean","description":"org.http4k.security.digest.DigestAuthProvider.verify","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-provider/verify.html","searchKeys":["verify","fun verify(credentials: DigestCredential, method: Method): Boolean","org.http4k.security.digest.DigestAuthProvider.verify"]},{"name":"object Companion","description":"org.http4k.security.digest.DigestAuthReceiver.Companion","location":"http4k-security-digest/org.http4k.security.digest/-digest-auth-receiver/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.digest.DigestAuthReceiver.Companion"]},{"name":"object Companion","description":"org.http4k.security.digest.DigestChallenge.Companion","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.digest.DigestChallenge.Companion"]},{"name":"object Companion","description":"org.http4k.security.digest.DigestCredential.Companion","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.digest.DigestCredential.Companion"]},{"name":"object Companion","description":"org.http4k.security.digest.ParameterizedHeader.Companion","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.digest.ParameterizedHeader.Companion"]},{"name":"object Companion","description":"org.http4k.security.digest.Qop.Companion","location":"http4k-security-digest/org.http4k.security.digest/-qop/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.digest.Qop.Companion"]},{"name":"operator fun invoke(realm: String, qop: Qop?, method: Method, username: String, password: String, nonce: Nonce, cnonce: Nonce?, nonceCount: Long?, digestUri: String): ByteArray","description":"org.http4k.security.digest.DigestEncoder.invoke","location":"http4k-security-digest/org.http4k.security.digest/-digest-encoder/invoke.html","searchKeys":["invoke","operator fun invoke(realm: String, qop: Qop?, method: Method, username: String, password: String, nonce: Nonce, cnonce: Nonce?, nonceCount: Long?, digestUri: String): ByteArray","org.http4k.security.digest.DigestEncoder.invoke"]},{"name":"val algorithm: String?","description":"org.http4k.security.digest.DigestChallenge.algorithm","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/algorithm.html","searchKeys":["algorithm","val algorithm: String?","org.http4k.security.digest.DigestChallenge.algorithm"]},{"name":"val algorithm: String?","description":"org.http4k.security.digest.DigestCredential.algorithm","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/algorithm.html","searchKeys":["algorithm","val algorithm: String?","org.http4k.security.digest.DigestCredential.algorithm"]},{"name":"val authHeaderName: String","description":"org.http4k.security.digest.DigestMode.authHeaderName","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/auth-header-name.html","searchKeys":["authHeaderName","val authHeaderName: String","org.http4k.security.digest.DigestMode.authHeaderName"]},{"name":"val challengeHeaderName: String","description":"org.http4k.security.digest.DigestMode.challengeHeaderName","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/challenge-header-name.html","searchKeys":["challengeHeaderName","val challengeHeaderName: String","org.http4k.security.digest.DigestMode.challengeHeaderName"]},{"name":"val cnonce: Nonce?","description":"org.http4k.security.digest.DigestCredential.cnonce","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/cnonce.html","searchKeys":["cnonce","val cnonce: Nonce?","org.http4k.security.digest.DigestCredential.cnonce"]},{"name":"val digestUri: String","description":"org.http4k.security.digest.DigestCredential.digestUri","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/digest-uri.html","searchKeys":["digestUri","val digestUri: String","org.http4k.security.digest.DigestCredential.digestUri"]},{"name":"val entries: EnumEntries<DigestMode>","description":"org.http4k.security.digest.DigestMode.entries","location":"http4k-security-digest/org.http4k.security.digest/-digest-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<DigestMode>","org.http4k.security.digest.DigestMode.entries"]},{"name":"val entries: EnumEntries<Qop>","description":"org.http4k.security.digest.Qop.entries","location":"http4k-security-digest/org.http4k.security.digest/-qop/entries.html","searchKeys":["entries","val entries: EnumEntries<Qop>","org.http4k.security.digest.Qop.entries"]},{"name":"val nonce: Nonce","description":"org.http4k.security.digest.DigestChallenge.nonce","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/nonce.html","searchKeys":["nonce","val nonce: Nonce","org.http4k.security.digest.DigestChallenge.nonce"]},{"name":"val nonce: Nonce","description":"org.http4k.security.digest.DigestCredential.nonce","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/nonce.html","searchKeys":["nonce","val nonce: Nonce","org.http4k.security.digest.DigestCredential.nonce"]},{"name":"val nonceCount: Long?","description":"org.http4k.security.digest.DigestCredential.nonceCount","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/nonce-count.html","searchKeys":["nonceCount","val nonceCount: Long?","org.http4k.security.digest.DigestCredential.nonceCount"]},{"name":"val opaque: String?","description":"org.http4k.security.digest.DigestChallenge.opaque","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/opaque.html","searchKeys":["opaque","val opaque: String?","org.http4k.security.digest.DigestChallenge.opaque"]},{"name":"val opaque: String?","description":"org.http4k.security.digest.DigestCredential.opaque","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/opaque.html","searchKeys":["opaque","val opaque: String?","org.http4k.security.digest.DigestCredential.opaque"]},{"name":"val parameters: Map<String, String?>","description":"org.http4k.security.digest.ParameterizedHeader.parameters","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/parameters.html","searchKeys":["parameters","val parameters: Map<String, String?>","org.http4k.security.digest.ParameterizedHeader.parameters"]},{"name":"val prefix: String","description":"org.http4k.security.digest.ParameterizedHeader.prefix","location":"http4k-security-digest/org.http4k.security.digest/-parameterized-header/prefix.html","searchKeys":["prefix","val prefix: String","org.http4k.security.digest.ParameterizedHeader.prefix"]},{"name":"val qop: List<Qop>","description":"org.http4k.security.digest.DigestChallenge.qop","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/qop.html","searchKeys":["qop","val qop: List<Qop>","org.http4k.security.digest.DigestChallenge.qop"]},{"name":"val qop: Qop?","description":"org.http4k.security.digest.DigestCredential.qop","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/qop.html","searchKeys":["qop","val qop: Qop?","org.http4k.security.digest.DigestCredential.qop"]},{"name":"val realm: String","description":"org.http4k.security.digest.DigestChallenge.realm","location":"http4k-security-digest/org.http4k.security.digest/-digest-challenge/realm.html","searchKeys":["realm","val realm: String","org.http4k.security.digest.DigestChallenge.realm"]},{"name":"val realm: String","description":"org.http4k.security.digest.DigestCredential.realm","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/realm.html","searchKeys":["realm","val realm: String","org.http4k.security.digest.DigestCredential.realm"]},{"name":"val response: String","description":"org.http4k.security.digest.DigestCredential.response","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/response.html","searchKeys":["response","val response: String","org.http4k.security.digest.DigestCredential.response"]},{"name":"val username: String","description":"org.http4k.security.digest.DigestCredential.username","location":"http4k-security-digest/org.http4k.security.digest/-digest-credential/username.html","searchKeys":["username","val username: String","org.http4k.security.digest.DigestCredential.username"]},{"name":"val value: String","description":"org.http4k.security.digest.Qop.value","location":"http4k-security-digest/org.http4k.security.digest/-qop/value.html","searchKeys":["value","val value: String","org.http4k.security.digest.Qop.value"]},{"name":"AccessDenied","description":"org.http4k.security.oauth.server.RfcError.AccessDenied","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-access-denied/index.html","searchKeys":["AccessDenied","AccessDenied","org.http4k.security.oauth.server.RfcError.AccessDenied"]},{"name":"AuthorizationCode","description":"org.http4k.security.oauth.server.accesstoken.GrantType.AuthorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/-authorization-code/index.html","searchKeys":["AuthorizationCode","AuthorizationCode","org.http4k.security.oauth.server.accesstoken.GrantType.AuthorizationCode"]},{"name":"ClientCredentials","description":"org.http4k.security.oauth.server.accesstoken.GrantType.ClientCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/-client-credentials/index.html","searchKeys":["ClientCredentials","ClientCredentials","org.http4k.security.oauth.server.accesstoken.GrantType.ClientCredentials"]},{"name":"Code","description":"org.http4k.security.ResponseType.Code","location":"http4k-security-oauth/org.http4k.security/-response-type/-code/index.html","searchKeys":["Code","Code","org.http4k.security.ResponseType.Code"]},{"name":"CodeIdToken","description":"org.http4k.security.ResponseType.CodeIdToken","location":"http4k-security-oauth/org.http4k.security/-response-type/-code-id-token/index.html","searchKeys":["CodeIdToken","CodeIdToken","org.http4k.security.ResponseType.CodeIdToken"]},{"name":"Fragment","description":"org.http4k.security.ResponseMode.Fragment","location":"http4k-security-oauth/org.http4k.security/-response-mode/-fragment/index.html","searchKeys":["Fragment","Fragment","org.http4k.security.ResponseMode.Fragment"]},{"name":"InvalidClient","description":"org.http4k.security.oauth.server.RfcError.InvalidClient","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-invalid-client/index.html","searchKeys":["InvalidClient","InvalidClient","org.http4k.security.oauth.server.RfcError.InvalidClient"]},{"name":"InvalidGrant","description":"org.http4k.security.oauth.server.RfcError.InvalidGrant","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-invalid-grant/index.html","searchKeys":["InvalidGrant","InvalidGrant","org.http4k.security.oauth.server.RfcError.InvalidGrant"]},{"name":"InvalidRequest","description":"org.http4k.security.oauth.server.RfcError.InvalidRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-invalid-request/index.html","searchKeys":["InvalidRequest","InvalidRequest","org.http4k.security.oauth.server.RfcError.InvalidRequest"]},{"name":"InvalidRequestObject","description":"org.http4k.security.oauth.server.RfcError.InvalidRequestObject","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-invalid-request-object/index.html","searchKeys":["InvalidRequestObject","InvalidRequestObject","org.http4k.security.oauth.server.RfcError.InvalidRequestObject"]},{"name":"InvalidScope","description":"org.http4k.security.oauth.server.RfcError.InvalidScope","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-invalid-scope/index.html","searchKeys":["InvalidScope","InvalidScope","org.http4k.security.oauth.server.RfcError.InvalidScope"]},{"name":"Query","description":"org.http4k.security.ResponseMode.Query","location":"http4k-security-oauth/org.http4k.security/-response-mode/-query/index.html","searchKeys":["Query","Query","org.http4k.security.ResponseMode.Query"]},{"name":"RefreshToken","description":"org.http4k.security.oauth.server.accesstoken.GrantType.RefreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/-refresh-token/index.html","searchKeys":["RefreshToken","RefreshToken","org.http4k.security.oauth.server.accesstoken.GrantType.RefreshToken"]},{"name":"UnsupportedGrantType","description":"org.http4k.security.oauth.server.RfcError.UnsupportedGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-unsupported-grant-type/index.html","searchKeys":["UnsupportedGrantType","UnsupportedGrantType","org.http4k.security.oauth.server.RfcError.UnsupportedGrantType"]},{"name":"UnsupportedResponseType","description":"org.http4k.security.oauth.server.RfcError.UnsupportedResponseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/-unsupported-response-type/index.html","searchKeys":["UnsupportedResponseType","UnsupportedResponseType","org.http4k.security.oauth.server.RfcError.UnsupportedResponseType"]},{"name":"abstract class OAuthError(val rfcError: RfcError, val description: String)","description":"org.http4k.security.oauth.server.OAuthError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-error/index.html","searchKeys":["OAuthError","abstract class OAuthError(val rfcError: RfcError, val description: String)","org.http4k.security.oauth.server.OAuthError"]},{"name":"abstract fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/combine.html","searchKeys":["combine","abstract fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.combine"]},{"name":"abstract fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/combine.html","searchKeys":["combine","abstract fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.combine"]},{"name":"abstract fun addParameter(key: String, value: String?): ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender.addParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/add-parameter.html","searchKeys":["addParameter","abstract fun addParameter(key: String, value: String?): ResponseRender","org.http4k.security.oauth.server.ResponseRender.addParameter"]},{"name":"abstract fun assignCsrf(redirect: Response, csrf: CrossSiteRequestForgeryToken): Response","description":"org.http4k.security.OAuthPersistence.assignCsrf","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/assign-csrf.html","searchKeys":["assignCsrf","abstract fun assignCsrf(redirect: Response, csrf: CrossSiteRequestForgeryToken): Response","org.http4k.security.OAuthPersistence.assignCsrf"]},{"name":"abstract fun assignNonce(redirect: Response, nonce: Nonce): Response","description":"org.http4k.security.OAuthPersistence.assignNonce","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/assign-nonce.html","searchKeys":["assignNonce","abstract fun assignNonce(redirect: Response, nonce: Nonce): Response","org.http4k.security.OAuthPersistence.assignNonce"]},{"name":"abstract fun assignOriginalUri(redirect: Response, originalUri: Uri): Response","description":"org.http4k.security.OAuthPersistence.assignOriginalUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/assign-original-uri.html","searchKeys":["assignOriginalUri","abstract fun assignOriginalUri(redirect: Response, originalUri: Uri): Response","org.http4k.security.OAuthPersistence.assignOriginalUri"]},{"name":"abstract fun assignToken(request: Request, redirect: Response, accessToken: AccessToken, idToken: IdToken? = null): Response","description":"org.http4k.security.OAuthPersistence.assignToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/assign-token.html","searchKeys":["assignToken","abstract fun assignToken(request: Request, redirect: Response, accessToken: AccessToken, idToken: IdToken? = null): Response","org.http4k.security.OAuthPersistence.assignToken"]},{"name":"abstract fun authenticate(request: Request): Request","description":"org.http4k.security.AccessTokenFetcherAuthenticator.authenticate","location":"http4k-security-oauth/org.http4k.security/-access-token-fetcher-authenticator/authenticate.html","searchKeys":["authenticate","abstract fun authenticate(request: Request): Request","org.http4k.security.AccessTokenFetcherAuthenticator.authenticate"]},{"name":"abstract fun complete(): Response","description":"org.http4k.security.oauth.server.ResponseRender.complete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/complete.html","searchKeys":["complete","abstract fun complete(): Response","org.http4k.security.oauth.server.ResponseRender.complete"]},{"name":"abstract fun consumeFromAccessTokenResponse(idToken: IdToken): Result<Unit, OAuthCallbackError.InvalidIdToken>","description":"org.http4k.security.openid.IdTokenConsumer.consumeFromAccessTokenResponse","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/consume-from-access-token-response.html","searchKeys":["consumeFromAccessTokenResponse","abstract fun consumeFromAccessTokenResponse(idToken: IdToken): Result<Unit, OAuthCallbackError.InvalidIdToken>","org.http4k.security.openid.IdTokenConsumer.consumeFromAccessTokenResponse"]},{"name":"abstract fun consumeFromAuthorizationResponse(idToken: IdToken): Result<Unit, OAuthCallbackError.InvalidIdToken>","description":"org.http4k.security.openid.IdTokenConsumer.consumeFromAuthorizationResponse","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/consume-from-authorization-response.html","searchKeys":["consumeFromAuthorizationResponse","abstract fun consumeFromAuthorizationResponse(idToken: IdToken): Result<Unit, OAuthCallbackError.InvalidIdToken>","org.http4k.security.openid.IdTokenConsumer.consumeFromAuthorizationResponse"]},{"name":"abstract fun create(authRequest: AuthRequest, state: State, nonce: Nonce?): RequestJwtContainer","description":"org.http4k.security.openid.RequestJwts.create","location":"http4k-security-oauth/org.http4k.security.openid/-request-jwts/create.html","searchKeys":["create","abstract fun create(authRequest: AuthRequest, state: State, nonce: Nonce?): RequestJwtContainer","org.http4k.security.openid.RequestJwts.create"]},{"name":"abstract fun create(clientId: ClientId, tokenRequest: AuthorizationCodeAccessTokenRequest): Result<AccessToken, AccessTokenError>","description":"org.http4k.security.oauth.server.AccessTokens.create","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-tokens/create.html","searchKeys":["create","abstract fun create(clientId: ClientId, tokenRequest: AuthorizationCodeAccessTokenRequest): Result<AccessToken, AccessTokenError>","org.http4k.security.oauth.server.AccessTokens.create"]},{"name":"abstract fun create(clientId: ClientId, tokenRequest: TokenRequest): Result<AccessToken, AccessTokenError>","description":"org.http4k.security.oauth.server.AccessTokens.create","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-tokens/create.html","searchKeys":["create","abstract fun create(clientId: ClientId, tokenRequest: TokenRequest): Result<AccessToken, AccessTokenError>","org.http4k.security.oauth.server.AccessTokens.create"]},{"name":"abstract fun create(request: Request, authRequest: AuthRequest, response: Response): Result<AuthorizationCode, UserRejectedRequest>","description":"org.http4k.security.oauth.server.AuthorizationCodes.create","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-codes/create.html","searchKeys":["create","abstract fun create(request: Request, authRequest: AuthRequest, response: Response): Result<AuthorizationCode, UserRejectedRequest>","org.http4k.security.oauth.server.AuthorizationCodes.create"]},{"name":"abstract fun createForAccessToken(authorizationCodeDetails: AuthorizationCodeDetails, code: AuthorizationCode, accessToken: AccessToken): IdToken","description":"org.http4k.security.oauth.server.IdTokens.createForAccessToken","location":"http4k-security-oauth/org.http4k.security.oauth.server/-id-tokens/create-for-access-token.html","searchKeys":["createForAccessToken","abstract fun createForAccessToken(authorizationCodeDetails: AuthorizationCodeDetails, code: AuthorizationCode, accessToken: AccessToken): IdToken","org.http4k.security.oauth.server.IdTokens.createForAccessToken"]},{"name":"abstract fun createForAuthorization(request: Request, authRequest: AuthRequest, response: Response, nonce: Nonce?, code: AuthorizationCode): IdToken","description":"org.http4k.security.oauth.server.IdTokens.createForAuthorization","location":"http4k-security-oauth/org.http4k.security.oauth.server/-id-tokens/create-for-authorization.html","searchKeys":["createForAuthorization","abstract fun createForAuthorization(request: Request, authRequest: AuthRequest, response: Response, nonce: Nonce?, code: AuthorizationCode): IdToken","org.http4k.security.oauth.server.IdTokens.createForAuthorization"]},{"name":"abstract fun detailsFor(code: AuthorizationCode): AuthorizationCodeDetails","description":"org.http4k.security.oauth.server.AuthorizationCodes.detailsFor","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-codes/details-for.html","searchKeys":["detailsFor","abstract fun detailsFor(code: AuthorizationCode): AuthorizationCodeDetails","org.http4k.security.oauth.server.AuthorizationCodes.detailsFor"]},{"name":"abstract fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","description":"org.http4k.security.oauth.server.AuthRequestExtractor.extract","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-extractor/extract.html","searchKeys":["extract","abstract fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","org.http4k.security.oauth.server.AuthRequestExtractor.extract"]},{"name":"abstract fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.AccessTokenGenerator.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-access-token-generator/generate.html","searchKeys":["generate","abstract fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.AccessTokenGenerator.generate"]},{"name":"abstract fun isValidClientAndRedirectUriInCaseOfError(request: Request, clientId: ClientId, redirectUri: Uri): Boolean","description":"org.http4k.security.oauth.server.AuthoriseRequestValidator.isValidClientAndRedirectUriInCaseOfError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-validator/is-valid-client-and-redirect-uri-in-case-of-error.html","searchKeys":["isValidClientAndRedirectUriInCaseOfError","abstract fun isValidClientAndRedirectUriInCaseOfError(request: Request, clientId: ClientId, redirectUri: Uri): Boolean","org.http4k.security.oauth.server.AuthoriseRequestValidator.isValidClientAndRedirectUriInCaseOfError"]},{"name":"abstract fun nonceFromIdToken(idToken: IdToken): Nonce?","description":"org.http4k.security.openid.IdTokenConsumer.nonceFromIdToken","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/nonce-from-id-token.html","searchKeys":["nonceFromIdToken","abstract fun nonceFromIdToken(idToken: IdToken): Nonce?","org.http4k.security.openid.IdTokenConsumer.nonceFromIdToken"]},{"name":"abstract fun refreshAccessToken(clientId: ClientId, tokenRequest: TokenRequest, refreshToken: RefreshToken): Result<AccessToken, AccessTokenError>","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokens.refreshAccessToken","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-tokens/refresh-access-token.html","searchKeys":["refreshAccessToken","abstract fun refreshAccessToken(clientId: ClientId, tokenRequest: TokenRequest, refreshToken: RefreshToken): Result<AccessToken, AccessTokenError>","org.http4k.security.oauth.server.refreshtoken.RefreshTokens.refreshAccessToken"]},{"name":"abstract fun resolveAuthRequest(request: Request): AuthRequest?","description":"org.http4k.security.oauth.server.AuthRequestTracking.resolveAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking/resolve-auth-request.html","searchKeys":["resolveAuthRequest","abstract fun resolveAuthRequest(request: Request): AuthRequest?","org.http4k.security.oauth.server.AuthRequestTracking.resolveAuthRequest"]},{"name":"abstract fun retrieveCsrf(request: Request): CrossSiteRequestForgeryToken?","description":"org.http4k.security.OAuthPersistence.retrieveCsrf","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/retrieve-csrf.html","searchKeys":["retrieveCsrf","abstract fun retrieveCsrf(request: Request): CrossSiteRequestForgeryToken?","org.http4k.security.OAuthPersistence.retrieveCsrf"]},{"name":"abstract fun retrieveNonce(request: Request): Nonce?","description":"org.http4k.security.OAuthPersistence.retrieveNonce","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/retrieve-nonce.html","searchKeys":["retrieveNonce","abstract fun retrieveNonce(request: Request): Nonce?","org.http4k.security.OAuthPersistence.retrieveNonce"]},{"name":"abstract fun retrieveOriginalUri(request: Request): Uri?","description":"org.http4k.security.OAuthPersistence.retrieveOriginalUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/retrieve-original-uri.html","searchKeys":["retrieveOriginalUri","abstract fun retrieveOriginalUri(request: Request): Uri?","org.http4k.security.OAuthPersistence.retrieveOriginalUri"]},{"name":"abstract fun retrieveToken(request: Request): AccessToken?","description":"org.http4k.security.OAuthPersistence.retrieveToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/retrieve-token.html","searchKeys":["retrieveToken","abstract fun retrieveToken(request: Request): AccessToken?","org.http4k.security.OAuthPersistence.retrieveToken"]},{"name":"abstract fun trackAuthRequest(request: Request, authRequest: AuthRequest, response: Response): Response","description":"org.http4k.security.oauth.server.AuthRequestTracking.trackAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking/track-auth-request.html","searchKeys":["trackAuthRequest","abstract fun trackAuthRequest(request: Request, authRequest: AuthRequest, response: Response): Response","org.http4k.security.oauth.server.AuthRequestTracking.trackAuthRequest"]},{"name":"abstract fun validate(clientId: ClientId, requestJwtContainer: RequestJwtContainer): InvalidAuthorizationRequest?","description":"org.http4k.security.oauth.server.request.RequestJWTValidator.validate","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-j-w-t-validator/validate.html","searchKeys":["validate","abstract fun validate(clientId: ClientId, requestJwtContainer: RequestJwtContainer): InvalidAuthorizationRequest?","org.http4k.security.oauth.server.request.RequestJWTValidator.validate"]},{"name":"abstract fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","description":"org.http4k.security.oauth.server.AuthoriseRequestValidator.validate","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-validator/validate.html","searchKeys":["validate","abstract fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","org.http4k.security.oauth.server.AuthoriseRequestValidator.validate"]},{"name":"abstract fun validateClientId(request: Request, clientId: ClientId): Boolean","description":"org.http4k.security.oauth.server.ClientValidator.validateClientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validator/validate-client-id.html","searchKeys":["validateClientId","abstract fun validateClientId(request: Request, clientId: ClientId): Boolean","org.http4k.security.oauth.server.ClientValidator.validateClientId"]},{"name":"abstract fun validateCredentials(request: Request, clientId: ClientId, clientSecret: String): Boolean","description":"org.http4k.security.oauth.server.ClientValidator.validateCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validator/validate-credentials.html","searchKeys":["validateCredentials","abstract fun validateCredentials(request: Request, clientId: ClientId, clientSecret: String): Boolean","org.http4k.security.oauth.server.ClientValidator.validateCredentials"]},{"name":"abstract fun validateCredentials(request: Request, tokenRequest: TokenRequest): Result<Triple<Request, ClientId, TokenRequest>, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.AccessTokenRequestAuthentication.validateCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-access-token-request-authentication/validate-credentials.html","searchKeys":["validateCredentials","abstract fun validateCredentials(request: Request, tokenRequest: TokenRequest): Result<Triple<Request, ClientId, TokenRequest>, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.AccessTokenRequestAuthentication.validateCredentials"]},{"name":"abstract fun validateRedirection(request: Request, clientId: ClientId, redirectionUri: Uri): Boolean","description":"org.http4k.security.oauth.server.ClientValidator.validateRedirection","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validator/validate-redirection.html","searchKeys":["validateRedirection","abstract fun validateRedirection(request: Request, clientId: ClientId, redirectionUri: Uri): Boolean","org.http4k.security.oauth.server.ClientValidator.validateRedirection"]},{"name":"abstract fun validateScopes(request: Request, clientId: ClientId, scopes: List<String>): Boolean","description":"org.http4k.security.oauth.server.ClientValidator.validateScopes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validator/validate-scopes.html","searchKeys":["validateScopes","abstract fun validateScopes(request: Request, clientId: ClientId, scopes: List<String>): Boolean","org.http4k.security.oauth.server.ClientValidator.validateScopes"]},{"name":"abstract operator fun get(refreshToken: RefreshToken): ExpiringCredentials<AccessToken>?","description":"org.http4k.security.oauth.client.AccessTokens.get","location":"http4k-security-oauth/org.http4k.security.oauth.client/-access-tokens/get.html","searchKeys":["get","abstract operator fun get(refreshToken: RefreshToken): ExpiringCredentials<AccessToken>?","org.http4k.security.oauth.client.AccessTokens.get"]},{"name":"abstract operator fun set(refreshToken: RefreshToken, accessToken: ExpiringCredentials<AccessToken>)","description":"org.http4k.security.oauth.client.AccessTokens.set","location":"http4k-security-oauth/org.http4k.security.oauth.client/-access-tokens/set.html","searchKeys":["set","abstract operator fun set(refreshToken: RefreshToken, accessToken: ExpiringCredentials<AccessToken>)","org.http4k.security.oauth.client.AccessTokens.set"]},{"name":"abstract val expiresIn: Long?","description":"org.http4k.security.AccessToken.expiresIn","location":"http4k-security-oauth/org.http4k.security/-access-token/expires-in.html","searchKeys":["expiresIn","abstract val expiresIn: Long?","org.http4k.security.AccessToken.expiresIn"]},{"name":"abstract val refreshToken: RefreshToken?","description":"org.http4k.security.AccessToken.refreshToken","location":"http4k-security-oauth/org.http4k.security/-access-token/refresh-token.html","searchKeys":["refreshToken","abstract val refreshToken: RefreshToken?","org.http4k.security.AccessToken.refreshToken"]},{"name":"abstract val scope: String?","description":"org.http4k.security.AccessToken.scope","location":"http4k-security-oauth/org.http4k.security/-access-token/scope.html","searchKeys":["scope","abstract val scope: String?","org.http4k.security.AccessToken.scope"]},{"name":"abstract val type: String?","description":"org.http4k.security.AccessToken.type","location":"http4k-security-oauth/org.http4k.security/-access-token/type.html","searchKeys":["type","abstract val type: String?","org.http4k.security.AccessToken.type"]},{"name":"abstract val value: String","description":"org.http4k.security.AccessToken.value","location":"http4k-security-oauth/org.http4k.security/-access-token/value.html","searchKeys":["value","abstract val value: String","org.http4k.security.AccessToken.value"]},{"name":"class AccessTokenFetcher(api: HttpHandler, callbackUri: Uri, providerConfig: OAuthProviderConfig, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","description":"org.http4k.security.AccessTokenFetcher","location":"http4k-security-oauth/org.http4k.security/-access-token-fetcher/index.html","searchKeys":["AccessTokenFetcher","class AccessTokenFetcher(api: HttpHandler, callbackUri: Uri, providerConfig: OAuthProviderConfig, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","org.http4k.security.AccessTokenFetcher"]},{"name":"class AuthRequestTrackingFilter(tracking: AuthRequestTracking, extractor: AuthRequestExtractor, authoriseRequestErrorRender: AuthoriseRequestErrorRender) : Filter","description":"org.http4k.security.oauth.server.AuthRequestTrackingFilter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking-filter/index.html","searchKeys":["AuthRequestTrackingFilter","class AuthRequestTrackingFilter(tracking: AuthRequestTracking, extractor: AuthRequestExtractor, authoriseRequestErrorRender: AuthoriseRequestErrorRender) : Filter","org.http4k.security.oauth.server.AuthRequestTrackingFilter"]},{"name":"class AuthRequestWithRequestAuthRequestExtractor(requestJWTValidator: RequestJWTValidator, combineAuthRequestRequestStrategy: AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy) : AuthRequestExtractor","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/index.html","searchKeys":["AuthRequestWithRequestAuthRequestExtractor","class AuthRequestWithRequestAuthRequestExtractor(requestJWTValidator: RequestJWTValidator, combineAuthRequestRequestStrategy: AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy) : AuthRequestExtractor","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor"]},{"name":"class AuthenticationComplete(authorizationCodes: AuthorizationCodes, requestTracking: AuthRequestTracking, idTokens: IdTokens, documentationUri: String? = null) : Function1<request: Request, Response> ","description":"org.http4k.security.oauth.server.AuthenticationComplete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authentication-complete/index.html","searchKeys":["AuthenticationComplete","class AuthenticationComplete(authorizationCodes: AuthorizationCodes, requestTracking: AuthRequestTracking, idTokens: IdTokens, documentationUri: String? = null) : Function1<request: Request, Response> ","org.http4k.security.oauth.server.AuthenticationComplete"]},{"name":"class AuthoriseRequestErrorRender(authoriseRequestValidator: AuthoriseRequestValidator, requestJWTValidator: RequestJWTValidator, fallBack: JsonResponseErrorRenderer, documentationUri: String? = null)","description":"org.http4k.security.oauth.server.AuthoriseRequestErrorRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-error-render/index.html","searchKeys":["AuthoriseRequestErrorRender","class AuthoriseRequestErrorRender(authoriseRequestValidator: AuthoriseRequestValidator, requestJWTValidator: RequestJWTValidator, fallBack: JsonResponseErrorRenderer, documentationUri: String? = null)","org.http4k.security.oauth.server.AuthoriseRequestErrorRender"]},{"name":"class AuthorizationCodeAccessTokenGenerator(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens) : AccessTokenGenerator","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/index.html","searchKeys":["AuthorizationCodeAccessTokenGenerator","class AuthorizationCodeAccessTokenGenerator(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens) : AccessTokenGenerator","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator"]},{"name":"class BasicAuthAccessTokenFetcherAuthenticator(providerConfig: OAuthProviderConfig) : AccessTokenFetcherAuthenticator","description":"org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-basic-auth-access-token-fetcher-authenticator/index.html","searchKeys":["BasicAuthAccessTokenFetcherAuthenticator","class BasicAuthAccessTokenFetcherAuthenticator(providerConfig: OAuthProviderConfig) : AccessTokenFetcherAuthenticator","org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator"]},{"name":"class ClientCredentialsAccessTokenGenerator(accessTokens: AccessTokens) : AccessTokenGenerator","description":"org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-credentials-access-token-generator/index.html","searchKeys":["ClientCredentialsAccessTokenGenerator","class ClientCredentialsAccessTokenGenerator(accessTokens: AccessTokens) : AccessTokenGenerator","org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator"]},{"name":"class ClientSecretAccessTokenFetcherAuthenticator(credentials: Credentials) : AccessTokenFetcherAuthenticator","description":"org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-client-secret-access-token-fetcher-authenticator/index.html","searchKeys":["ClientSecretAccessTokenFetcherAuthenticator","class ClientSecretAccessTokenFetcherAuthenticator(credentials: Credentials) : AccessTokenFetcherAuthenticator","org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator"]},{"name":"class ClientSecretAccessTokenRequestAuthentication(clientValidator: ClientValidator) : AccessTokenRequestAuthentication","description":"org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-secret-access-token-request-authentication/index.html","searchKeys":["ClientSecretAccessTokenRequestAuthentication","class ClientSecretAccessTokenRequestAuthentication(clientValidator: ClientValidator) : AccessTokenRequestAuthentication","org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication"]},{"name":"class ClientValidationFilter(authoriseRequestValidator: AuthoriseRequestValidator, errorRenderer: AuthoriseRequestErrorRender, extractor: AuthRequestExtractor) : Filter","description":"org.http4k.security.oauth.server.ClientValidationFilter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validation-filter/index.html","searchKeys":["ClientValidationFilter","class ClientValidationFilter(authoriseRequestValidator: AuthoriseRequestValidator, errorRenderer: AuthoriseRequestErrorRender, extractor: AuthRequestExtractor) : Filter","org.http4k.security.oauth.server.ClientValidationFilter"]},{"name":"class ContentTypeJsonOrForm(autoMarshallingJson: AutoMarshallingJson<*> = OAuthMoshi) : AccessTokenExtractor","description":"org.http4k.security.ContentTypeJsonOrForm","location":"http4k-security-oauth/org.http4k.security/-content-type-json-or-form/index.html","searchKeys":["ContentTypeJsonOrForm","class ContentTypeJsonOrForm(autoMarshallingJson: AutoMarshallingJson<*> = OAuthMoshi) : AccessTokenExtractor","org.http4k.security.ContentTypeJsonOrForm"]},{"name":"class FragmentResponseRender(uri: Uri) : ResponseRender","description":"org.http4k.security.oauth.server.FragmentResponseRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-fragment-response-render/index.html","searchKeys":["FragmentResponseRender","class FragmentResponseRender(uri: Uri) : ResponseRender","org.http4k.security.oauth.server.FragmentResponseRender"]},{"name":"class GenerateAccessToken(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, errorRenderer: JsonResponseErrorRenderer, grantTypes: GrantTypesConfiguration, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer) : Function1<request: Request, Response> ","description":"org.http4k.security.oauth.server.GenerateAccessToken","location":"http4k-security-oauth/org.http4k.security.oauth.server/-generate-access-token/index.html","searchKeys":["GenerateAccessToken","class GenerateAccessToken(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, errorRenderer: JsonResponseErrorRenderer, grantTypes: GrantTypesConfiguration, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer) : Function1<request: Request, Response> ","org.http4k.security.oauth.server.GenerateAccessToken"]},{"name":"class GenerateAccessTokenForGrantType(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, grantTypes: GrantTypesConfiguration)","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/index.html","searchKeys":["GenerateAccessTokenForGrantType","class GenerateAccessTokenForGrantType(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, grantTypes: GrantTypesConfiguration)","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType"]},{"name":"class InsecureCookieBasedAuthRequestTracking : AuthRequestTracking","description":"org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking","location":"http4k-security-oauth/org.http4k.security.oauth.server/-insecure-cookie-based-auth-request-tracking/index.html","searchKeys":["InsecureCookieBasedAuthRequestTracking","class InsecureCookieBasedAuthRequestTracking : AuthRequestTracking","org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking"]},{"name":"class InsecureCookieBasedOAuthPersistence(cookieNamePrefix: String, cookieValidity: Duration = Duration.ofDays(1), clock: Clock = Clock.systemUTC()) : OAuthPersistence","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/index.html","searchKeys":["InsecureCookieBasedOAuthPersistence","class InsecureCookieBasedOAuthPersistence(cookieNamePrefix: String, cookieValidity: Duration = Duration.ofDays(1), clock: Clock = Clock.systemUTC()) : OAuthPersistence","org.http4k.security.InsecureCookieBasedOAuthPersistence"]},{"name":"class JsonResponseErrorRenderer(json: AutoMarshalling, documentationUri: String? = null)","description":"org.http4k.security.oauth.server.JsonResponseErrorRenderer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-json-response-error-renderer/index.html","searchKeys":["JsonResponseErrorRenderer","class JsonResponseErrorRenderer(json: AutoMarshalling, documentationUri: String? = null)","org.http4k.security.oauth.server.JsonResponseErrorRenderer"]},{"name":"class MustHaveRedirectUri(delegate: AuthoriseRequestValidator) : AuthoriseRequestValidator","description":"org.http4k.security.oauth.server.MustHaveRedirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-must-have-redirect-uri/index.html","searchKeys":["MustHaveRedirectUri","class MustHaveRedirectUri(delegate: AuthoriseRequestValidator) : AuthoriseRequestValidator","org.http4k.security.oauth.server.MustHaveRedirectUri"]},{"name":"class OAuthCallback(oAuthPersistence: OAuthPersistence, idTokenConsumer: IdTokenConsumer, accessTokenFetcher: AccessTokenFetcher) : Function1<request: Request, Response> ","description":"org.http4k.security.OAuthCallback","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback/index.html","searchKeys":["OAuthCallback","class OAuthCallback(oAuthPersistence: OAuthPersistence, idTokenConsumer: IdTokenConsumer, accessTokenFetcher: AccessTokenFetcher) : Function1<request: Request, Response> ","org.http4k.security.OAuthCallback"]},{"name":"class OAuthOfflineRequestAuthorizer(config: OAuthProviderConfig, accessTokens: AccessTokens, backend: HttpHandler, authRequestFilter: Filter, gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","description":"org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-offline-request-authorizer/index.html","searchKeys":["OAuthOfflineRequestAuthorizer","class OAuthOfflineRequestAuthorizer(config: OAuthProviderConfig, accessTokens: AccessTokens, backend: HttpHandler, authRequestFilter: Filter, gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer"]},{"name":"class OAuthProvider(val providerConfig: OAuthProviderConfig, client: HttpHandler, callbackUri: Uri, val scopes: List<String>, oAuthPersistence: OAuthPersistence, modifyAuthState: (Uri) -> Uri = { it }, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, responseType: ResponseType = Code, idTokenConsumer: IdTokenConsumer = NoOp, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator = ClientSecretAccessTokenFetcherAuthenticator(\n        providerConfig\n    ), jwtRedirectionUriBuilder: (RequestJwts) -> RedirectionUriBuilder = ::uriBuilderWithRequestJwt, redirectionUrlBuilder: RedirectionUriBuilder = defaultUriBuilder, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), responseMode: ResponseMode? = null, originalUri: (Request) -> Uri = Request::uri)","description":"org.http4k.security.OAuthProvider","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/index.html","searchKeys":["OAuthProvider","class OAuthProvider(val providerConfig: OAuthProviderConfig, client: HttpHandler, callbackUri: Uri, val scopes: List<String>, oAuthPersistence: OAuthPersistence, modifyAuthState: (Uri) -> Uri = { it }, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, responseType: ResponseType = Code, idTokenConsumer: IdTokenConsumer = NoOp, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator = ClientSecretAccessTokenFetcherAuthenticator(\n        providerConfig\n    ), jwtRedirectionUriBuilder: (RequestJwts) -> RedirectionUriBuilder = ::uriBuilderWithRequestJwt, redirectionUrlBuilder: RedirectionUriBuilder = defaultUriBuilder, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), responseMode: ResponseMode? = null, originalUri: (Request) -> Uri = Request::uri)","org.http4k.security.OAuthProvider"]},{"name":"class OAuthRedirectionFilter(providerConfig: OAuthProviderConfig, callbackUri: Uri, scopes: List<String>, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, modifyState: (Uri) -> Uri, oAuthPersistence: OAuthPersistence, responseType: ResponseType, redirectionBuilder: RedirectionUriBuilder = defaultUriBuilder, originalUri: (Request) -> Uri = Request::uri, responseMode: ResponseMode? = null) : Filter","description":"org.http4k.security.OAuthRedirectionFilter","location":"http4k-security-oauth/org.http4k.security/-o-auth-redirection-filter/index.html","searchKeys":["OAuthRedirectionFilter","class OAuthRedirectionFilter(providerConfig: OAuthProviderConfig, callbackUri: Uri, scopes: List<String>, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, modifyState: (Uri) -> Uri, oAuthPersistence: OAuthPersistence, responseType: ResponseType, redirectionBuilder: RedirectionUriBuilder = defaultUriBuilder, originalUri: (Request) -> Uri = Request::uri, responseMode: ResponseMode? = null) : Filter","org.http4k.security.OAuthRedirectionFilter"]},{"name":"class OAuthServer(tokenPath: String, authRequestTracking: AuthRequestTracking, authoriseRequestValidator: AuthoriseRequestValidator, accessTokenRequestAuthentication: AccessTokenRequestAuthentication, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(accessTokenRequestAuthentication), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","description":"org.http4k.security.oauth.server.OAuthServer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/index.html","searchKeys":["OAuthServer","class OAuthServer(tokenPath: String, authRequestTracking: AuthRequestTracking, authoriseRequestValidator: AuthoriseRequestValidator, accessTokenRequestAuthentication: AccessTokenRequestAuthentication, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(accessTokenRequestAuthentication), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","org.http4k.security.oauth.server.OAuthServer"]},{"name":"class QueryResponseRender(uri: Uri) : ResponseRender","description":"org.http4k.security.oauth.server.QueryResponseRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-query-response-render/index.html","searchKeys":["QueryResponseRender","class QueryResponseRender(uri: Uri) : ResponseRender","org.http4k.security.oauth.server.QueryResponseRender"]},{"name":"class RefreshTokenAccessTokenGenerator(refreshTokens: RefreshTokens) : AccessTokenGenerator","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-token-access-token-generator/index.html","searchKeys":["RefreshTokenAccessTokenGenerator","class RefreshTokenAccessTokenGenerator(refreshTokens: RefreshTokens) : AccessTokenGenerator","org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator"]},{"name":"class SimpleAuthoriseRequestValidator(clientValidator: ClientValidator) : AuthoriseRequestValidator","description":"org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator","location":"http4k-security-oauth/org.http4k.security.oauth.server/-simple-authorise-request-validator/index.html","searchKeys":["SimpleAuthoriseRequestValidator","class SimpleAuthoriseRequestValidator(clientValidator: ClientValidator) : AuthoriseRequestValidator","org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator"]},{"name":"const val OIDC_SCOPE: String","description":"org.http4k.security.oauth.server.AuthRequest.Companion.OIDC_SCOPE","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/-companion/-o-i-d-c_-s-c-o-p-e.html","searchKeys":["OIDC_SCOPE","const val OIDC_SCOPE: String","org.http4k.security.oauth.server.AuthRequest.Companion.OIDC_SCOPE"]},{"name":"constructor()","description":"org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.InsecureCookieBasedAuthRequestTracking","location":"http4k-security-oauth/org.http4k.security.oauth.server/-insecure-cookie-based-auth-request-tracking/-insecure-cookie-based-auth-request-tracking.html","searchKeys":["InsecureCookieBasedAuthRequestTracking","constructor()","org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.InsecureCookieBasedAuthRequestTracking"]},{"name":"constructor(accessToken: AccessToken, idToken: IdToken? = null)","description":"org.http4k.security.AccessTokenDetails.AccessTokenDetails","location":"http4k-security-oauth/org.http4k.security/-access-token-details/-access-token-details.html","searchKeys":["AccessTokenDetails","constructor(accessToken: AccessToken, idToken: IdToken? = null)","org.http4k.security.AccessTokenDetails.AccessTokenDetails"]},{"name":"constructor(accessTokens: AccessTokens)","description":"org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator.ClientCredentialsAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-credentials-access-token-generator/-client-credentials-access-token-generator.html","searchKeys":["ClientCredentialsAccessTokenGenerator","constructor(accessTokens: AccessTokens)","org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator.ClientCredentialsAccessTokenGenerator"]},{"name":"constructor(access_token: String, token_type: String? = null, expires_in: Long? = null, id_token: String? = null, scope: String? = null, refresh_token: String? = null)","description":"org.http4k.security.AccessTokenResponse.AccessTokenResponse","location":"http4k-security-oauth/org.http4k.security/-access-token-response/-access-token-response.html","searchKeys":["AccessTokenResponse","constructor(access_token: String, token_type: String? = null, expires_in: Long? = null, id_token: String? = null, scope: String? = null, refresh_token: String? = null)","org.http4k.security.AccessTokenResponse.AccessTokenResponse"]},{"name":"constructor(api: HttpHandler, callbackUri: Uri, providerConfig: OAuthProviderConfig, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","description":"org.http4k.security.AccessTokenFetcher.AccessTokenFetcher","location":"http4k-security-oauth/org.http4k.security/-access-token-fetcher/-access-token-fetcher.html","searchKeys":["AccessTokenFetcher","constructor(api: HttpHandler, callbackUri: Uri, providerConfig: OAuthProviderConfig, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","org.http4k.security.AccessTokenFetcher.AccessTokenFetcher"]},{"name":"constructor(authBase: Uri, authPath: String, tokenPath: String, credentials: Credentials, apiBase: Uri = authBase, authUri: Uri = authBase.extend(Uri.of(authPath)), tokenUri: Uri = authBase.extend(Uri.of(tokenPath)))","description":"org.http4k.security.OAuthProviderConfig.OAuthProviderConfig","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/-o-auth-provider-config.html","searchKeys":["OAuthProviderConfig","constructor(authBase: Uri, authPath: String, tokenPath: String, credentials: Credentials, apiBase: Uri = authBase, authUri: Uri = authBase.extend(Uri.of(authPath)), tokenUri: Uri = authBase.extend(Uri.of(tokenPath)))","org.http4k.security.OAuthProviderConfig.OAuthProviderConfig"]},{"name":"constructor(authoriseRequestValidator: AuthoriseRequestValidator, errorRenderer: AuthoriseRequestErrorRender, extractor: AuthRequestExtractor)","description":"org.http4k.security.oauth.server.ClientValidationFilter.ClientValidationFilter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validation-filter/-client-validation-filter.html","searchKeys":["ClientValidationFilter","constructor(authoriseRequestValidator: AuthoriseRequestValidator, errorRenderer: AuthoriseRequestErrorRender, extractor: AuthRequestExtractor)","org.http4k.security.oauth.server.ClientValidationFilter.ClientValidationFilter"]},{"name":"constructor(authoriseRequestValidator: AuthoriseRequestValidator, requestJWTValidator: RequestJWTValidator, fallBack: JsonResponseErrorRenderer, documentationUri: String? = null)","description":"org.http4k.security.oauth.server.AuthoriseRequestErrorRender.AuthoriseRequestErrorRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-error-render/-authorise-request-error-render.html","searchKeys":["AuthoriseRequestErrorRender","constructor(authoriseRequestValidator: AuthoriseRequestValidator, requestJWTValidator: RequestJWTValidator, fallBack: JsonResponseErrorRenderer, documentationUri: String? = null)","org.http4k.security.oauth.server.AuthoriseRequestErrorRender.AuthoriseRequestErrorRender"]},{"name":"constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens)","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.AuthorizationCodeAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/-authorization-code-access-token-generator.html","searchKeys":["AuthorizationCodeAccessTokenGenerator","constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens)","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.AuthorizationCodeAccessTokenGenerator"]},{"name":"constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, errorRenderer: JsonResponseErrorRenderer, grantTypes: GrantTypesConfiguration, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","description":"org.http4k.security.oauth.server.GenerateAccessToken.GenerateAccessToken","location":"http4k-security-oauth/org.http4k.security.oauth.server/-generate-access-token/-generate-access-token.html","searchKeys":["GenerateAccessToken","constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, errorRenderer: JsonResponseErrorRenderer, grantTypes: GrantTypesConfiguration, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","org.http4k.security.oauth.server.GenerateAccessToken.GenerateAccessToken"]},{"name":"constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, grantTypes: GrantTypesConfiguration)","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.GenerateAccessTokenForGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/-generate-access-token-for-grant-type.html","searchKeys":["GenerateAccessTokenForGrantType","constructor(authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, idTokens: IdTokens, refreshTokens: RefreshTokens, grantTypes: GrantTypesConfiguration)","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.GenerateAccessTokenForGrantType"]},{"name":"constructor(authorizationCodes: AuthorizationCodes, requestTracking: AuthRequestTracking, idTokens: IdTokens, documentationUri: String? = null)","description":"org.http4k.security.oauth.server.AuthenticationComplete.AuthenticationComplete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authentication-complete/-authentication-complete.html","searchKeys":["AuthenticationComplete","constructor(authorizationCodes: AuthorizationCodes, requestTracking: AuthRequestTracking, idTokens: IdTokens, documentationUri: String? = null)","org.http4k.security.oauth.server.AuthenticationComplete.AuthenticationComplete"]},{"name":"constructor(autoMarshallingJson: AutoMarshallingJson<*> = OAuthMoshi)","description":"org.http4k.security.ContentTypeJsonOrForm.ContentTypeJsonOrForm","location":"http4k-security-oauth/org.http4k.security/-content-type-json-or-form/-content-type-json-or-form.html","searchKeys":["ContentTypeJsonOrForm","constructor(autoMarshallingJson: AutoMarshallingJson<*> = OAuthMoshi)","org.http4k.security.ContentTypeJsonOrForm.ContentTypeJsonOrForm"]},{"name":"constructor(callbackUri: Uri)","description":"org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing.AuthorizationCodeMissing","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-authorization-code-missing/-authorization-code-missing.html","searchKeys":["AuthorizationCodeMissing","constructor(callbackUri: Uri)","org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing.AuthorizationCodeMissing"]},{"name":"constructor(client: ClientId, scopes: List<String>, redirectUri: Uri?, state: State?, responseType: ResponseType = Code, nonce: Nonce? = null, responseMode: ResponseMode? = null, request: RequestJwtContainer? = null, requestObject: RequestObject? = null, additionalProperties: Map<String, Any> = emptyMap())","description":"org.http4k.security.oauth.server.AuthRequest.AuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/-auth-request.html","searchKeys":["AuthRequest","constructor(client: ClientId, scopes: List<String>, redirectUri: Uri?, state: State?, responseType: ResponseType = Code, nonce: Nonce? = null, responseMode: ResponseMode? = null, request: RequestJwtContainer? = null, requestObject: RequestObject? = null, additionalProperties: Map<String, Any> = emptyMap())","org.http4k.security.oauth.server.AuthRequest.AuthRequest"]},{"name":"constructor(client: ClientId? = null, redirectUri: Uri? = null, audience: List<String> = emptyList(), issuer: String? = null, scope: List<String> = emptyList(), responseMode: ResponseMode? = null, responseType: ResponseType? = null, state: State? = null, nonce: Nonce? = null, magAge: Long? = null, expiry: Long? = null, claims: Claims = Claims())","description":"org.http4k.security.oauth.server.request.RequestObject.RequestObject","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/-request-object.html","searchKeys":["RequestObject","constructor(client: ClientId? = null, redirectUri: Uri? = null, audience: List<String> = emptyList(), issuer: String? = null, scope: List<String> = emptyList(), responseMode: ResponseMode? = null, responseType: ResponseType? = null, state: State? = null, nonce: Nonce? = null, magAge: Long? = null, expiry: Long? = null, claims: Claims = Claims())","org.http4k.security.oauth.server.request.RequestObject.RequestObject"]},{"name":"constructor(clientId: ClientId, clientSecret: String, redirectUri: Uri, scopes: List<String>, authorizationCode: AuthorizationCode)","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.AuthorizationCodeAccessTokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/-authorization-code-access-token-request.html","searchKeys":["AuthorizationCodeAccessTokenRequest","constructor(clientId: ClientId, clientSecret: String, redirectUri: Uri, scopes: List<String>, authorizationCode: AuthorizationCode)","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.AuthorizationCodeAccessTokenRequest"]},{"name":"constructor(clientId: ClientId, redirectUri: Uri, expiresAt: Instant, state: State?, isOIDC: Boolean, responseType: ResponseType = Code, nonce: Nonce? = null)","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.AuthorizationCodeDetails","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/-authorization-code-details.html","searchKeys":["AuthorizationCodeDetails","constructor(clientId: ClientId, redirectUri: Uri, expiresAt: Instant, state: State?, isOIDC: Boolean, responseType: ResponseType = Code, nonce: Nonce? = null)","org.http4k.security.oauth.server.AuthorizationCodeDetails.AuthorizationCodeDetails"]},{"name":"constructor(clientValidator: ClientValidator)","description":"org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.SimpleAuthoriseRequestValidator","location":"http4k-security-oauth/org.http4k.security.oauth.server/-simple-authorise-request-validator/-simple-authorise-request-validator.html","searchKeys":["SimpleAuthoriseRequestValidator","constructor(clientValidator: ClientValidator)","org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.SimpleAuthoriseRequestValidator"]},{"name":"constructor(clientValidator: ClientValidator)","description":"org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication.ClientSecretAccessTokenRequestAuthentication","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-secret-access-token-request-authentication/-client-secret-access-token-request-authentication.html","searchKeys":["ClientSecretAccessTokenRequestAuthentication","constructor(clientValidator: ClientValidator)","org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication.ClientSecretAccessTokenRequestAuthentication"]},{"name":"constructor(config: OAuthProviderConfig, accessTokens: AccessTokens, backend: HttpHandler, authRequestFilter: Filter, gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","description":"org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer.OAuthOfflineRequestAuthorizer","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-offline-request-authorizer/-o-auth-offline-request-authorizer.html","searchKeys":["OAuthOfflineRequestAuthorizer","constructor(config: OAuthProviderConfig, accessTokens: AccessTokens, backend: HttpHandler, authRequestFilter: Filter, gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm())","org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer.OAuthOfflineRequestAuthorizer"]},{"name":"constructor(cookieNamePrefix: String, cookieValidity: Duration = Duration.ofDays(1), clock: Clock = Clock.systemUTC())","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.InsecureCookieBasedOAuthPersistence","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/-insecure-cookie-based-o-auth-persistence.html","searchKeys":["InsecureCookieBasedOAuthPersistence","constructor(cookieNamePrefix: String, cookieValidity: Duration = Duration.ofDays(1), clock: Clock = Clock.systemUTC())","org.http4k.security.InsecureCookieBasedOAuthPersistence.InsecureCookieBasedOAuthPersistence"]},{"name":"constructor(credentials: Credentials)","description":"org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.ClientSecretAccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-client-secret-access-token-fetcher-authenticator/-client-secret-access-token-fetcher-authenticator.html","searchKeys":["ClientSecretAccessTokenFetcherAuthenticator","constructor(credentials: Credentials)","org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.ClientSecretAccessTokenFetcherAuthenticator"]},{"name":"constructor(delegate: AuthoriseRequestValidator)","description":"org.http4k.security.oauth.server.MustHaveRedirectUri.MustHaveRedirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-must-have-redirect-uri/-must-have-redirect-uri.html","searchKeys":["MustHaveRedirectUri","constructor(delegate: AuthoriseRequestValidator)","org.http4k.security.oauth.server.MustHaveRedirectUri.MustHaveRedirectUri"]},{"name":"constructor(error: String, error_description: String, error_uri: String?)","description":"org.http4k.security.oauth.server.ErrorResponse.ErrorResponse","location":"http4k-security-oauth/org.http4k.security.oauth.server/-error-response/-error-response.html","searchKeys":["ErrorResponse","constructor(error: String, error_description: String, error_uri: String?)","org.http4k.security.oauth.server.ErrorResponse.ErrorResponse"]},{"name":"constructor(essential: Boolean = false, value: String? = null, values: List<String>? = null)","description":"org.http4k.security.oauth.server.request.Claim.Claim","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claim/-claim.html","searchKeys":["Claim","constructor(essential: Boolean = false, value: String? = null, values: List<String>? = null)","org.http4k.security.oauth.server.request.Claim.Claim"]},{"name":"constructor(expected: String?, received: String?)","description":"org.http4k.security.OAuthCallbackError.InvalidCsrfToken.InvalidCsrfToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-csrf-token/-invalid-csrf-token.html","searchKeys":["InvalidCsrfToken","constructor(expected: String?, received: String?)","org.http4k.security.OAuthCallbackError.InvalidCsrfToken.InvalidCsrfToken"]},{"name":"constructor(expected: String?, received: String?)","description":"org.http4k.security.OAuthCallbackError.InvalidNonce.InvalidNonce","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-nonce/-invalid-nonce.html","searchKeys":["InvalidNonce","constructor(expected: String?, received: String?)","org.http4k.security.OAuthCallbackError.InvalidNonce.InvalidNonce"]},{"name":"constructor(grantType: GrantType, clientId: ClientId?, clientSecret: String?, code: String?, redirectUri: Uri?, scopes: List<String>, clientAssertionType: Uri?, clientAssertion: String?, refreshToken: RefreshToken?)","description":"org.http4k.security.oauth.server.TokenRequest.TokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/-token-request.html","searchKeys":["TokenRequest","constructor(grantType: GrantType, clientId: ClientId?, clientSecret: String?, code: String?, redirectUri: Uri?, scopes: List<String>, clientAssertionType: Uri?, clientAssertion: String?, refreshToken: RefreshToken?)","org.http4k.security.oauth.server.TokenRequest.TokenRequest"]},{"name":"constructor(grant_type: String, refresh_token: String?, client_id: String?, code: String?, redirect_uri: Uri?)","description":"org.http4k.security.oauth.client.TokenRequest.TokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/-token-request.html","searchKeys":["TokenRequest","constructor(grant_type: String, refresh_token: String?, client_id: String?, code: String?, redirect_uri: Uri?)","org.http4k.security.oauth.client.TokenRequest.TokenRequest"]},{"name":"constructor(json: AutoMarshalling, documentationUri: String? = null)","description":"org.http4k.security.oauth.server.JsonResponseErrorRenderer.JsonResponseErrorRenderer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-json-response-error-renderer/-json-response-error-renderer.html","searchKeys":["JsonResponseErrorRenderer","constructor(json: AutoMarshalling, documentationUri: String? = null)","org.http4k.security.oauth.server.JsonResponseErrorRenderer.JsonResponseErrorRenderer"]},{"name":"constructor(message: String)","description":"org.http4k.security.oauth.server.InvalidRequest.InvalidRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-request/-invalid-request.html","searchKeys":["InvalidRequest","constructor(message: String)","org.http4k.security.oauth.server.InvalidRequest.InvalidRequest"]},{"name":"constructor(oAuthPersistence: OAuthPersistence, idTokenConsumer: IdTokenConsumer, accessTokenFetcher: AccessTokenFetcher)","description":"org.http4k.security.OAuthCallback.OAuthCallback","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback/-o-auth-callback.html","searchKeys":["OAuthCallback","constructor(oAuthPersistence: OAuthPersistence, idTokenConsumer: IdTokenConsumer, accessTokenFetcher: AccessTokenFetcher)","org.http4k.security.OAuthCallback.OAuthCallback"]},{"name":"constructor(providerConfig: OAuthProviderConfig)","description":"org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator.BasicAuthAccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-basic-auth-access-token-fetcher-authenticator/-basic-auth-access-token-fetcher-authenticator.html","searchKeys":["BasicAuthAccessTokenFetcherAuthenticator","constructor(providerConfig: OAuthProviderConfig)","org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator.BasicAuthAccessTokenFetcherAuthenticator"]},{"name":"constructor(providerConfig: OAuthProviderConfig)","description":"org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.ClientSecretAccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-client-secret-access-token-fetcher-authenticator/-client-secret-access-token-fetcher-authenticator.html","searchKeys":["ClientSecretAccessTokenFetcherAuthenticator","constructor(providerConfig: OAuthProviderConfig)","org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.ClientSecretAccessTokenFetcherAuthenticator"]},{"name":"constructor(providerConfig: OAuthProviderConfig, callbackUri: Uri, scopes: List<String>, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, modifyState: (Uri) -> Uri, oAuthPersistence: OAuthPersistence, responseType: ResponseType, redirectionBuilder: RedirectionUriBuilder = defaultUriBuilder, originalUri: (Request) -> Uri = Request::uri, responseMode: ResponseMode? = null)","description":"org.http4k.security.OAuthRedirectionFilter.OAuthRedirectionFilter","location":"http4k-security-oauth/org.http4k.security/-o-auth-redirection-filter/-o-auth-redirection-filter.html","searchKeys":["OAuthRedirectionFilter","constructor(providerConfig: OAuthProviderConfig, callbackUri: Uri, scopes: List<String>, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, modifyState: (Uri) -> Uri, oAuthPersistence: OAuthPersistence, responseType: ResponseType, redirectionBuilder: RedirectionUriBuilder = defaultUriBuilder, originalUri: (Request) -> Uri = Request::uri, responseMode: ResponseMode? = null)","org.http4k.security.OAuthRedirectionFilter.OAuthRedirectionFilter"]},{"name":"constructor(providerConfig: OAuthProviderConfig, client: HttpHandler, callbackUri: Uri, scopes: List<String>, oAuthPersistence: OAuthPersistence, modifyAuthState: (Uri) -> Uri = { it }, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, responseType: ResponseType = Code, idTokenConsumer: IdTokenConsumer = NoOp, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator = ClientSecretAccessTokenFetcherAuthenticator(\n        providerConfig\n    ), jwtRedirectionUriBuilder: (RequestJwts) -> RedirectionUriBuilder = ::uriBuilderWithRequestJwt, redirectionUrlBuilder: RedirectionUriBuilder = defaultUriBuilder, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), responseMode: ResponseMode? = null, originalUri: (Request) -> Uri = Request::uri)","description":"org.http4k.security.OAuthProvider.OAuthProvider","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/-o-auth-provider.html","searchKeys":["OAuthProvider","constructor(providerConfig: OAuthProviderConfig, client: HttpHandler, callbackUri: Uri, scopes: List<String>, oAuthPersistence: OAuthPersistence, modifyAuthState: (Uri) -> Uri = { it }, generateCrsf: CsrfGenerator = SECURE_CSRF, nonceGenerator: NonceGenerator = SECURE_NONCE, responseType: ResponseType = Code, idTokenConsumer: IdTokenConsumer = NoOp, accessTokenFetcherAuthenticator: AccessTokenFetcherAuthenticator = ClientSecretAccessTokenFetcherAuthenticator(\n        providerConfig\n    ), jwtRedirectionUriBuilder: (RequestJwts) -> RedirectionUriBuilder = ::uriBuilderWithRequestJwt, redirectionUrlBuilder: RedirectionUriBuilder = defaultUriBuilder, accessTokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), responseMode: ResponseMode? = null, originalUri: (Request) -> Uri = Request::uri)","org.http4k.security.OAuthProvider.OAuthProvider"]},{"name":"constructor(reason: String)","description":"org.http4k.security.OAuthCallbackError.InvalidAccessToken.InvalidAccessToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-access-token/-invalid-access-token.html","searchKeys":["InvalidAccessToken","constructor(reason: String)","org.http4k.security.OAuthCallbackError.InvalidAccessToken.InvalidAccessToken"]},{"name":"constructor(reason: String)","description":"org.http4k.security.OAuthCallbackError.InvalidIdToken.InvalidIdToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-id-token/-invalid-id-token.html","searchKeys":["InvalidIdToken","constructor(reason: String)","org.http4k.security.OAuthCallbackError.InvalidIdToken.InvalidIdToken"]},{"name":"constructor(reason: String)","description":"org.http4k.security.oauth.server.InvalidAuthorizationRequest.InvalidAuthorizationRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-authorization-request/-invalid-authorization-request.html","searchKeys":["InvalidAuthorizationRequest","constructor(reason: String)","org.http4k.security.oauth.server.InvalidAuthorizationRequest.InvalidAuthorizationRequest"]},{"name":"constructor(refreshTokens: RefreshTokens)","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator.RefreshTokenAccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-token-access-token-generator/-refresh-token-access-token-generator.html","searchKeys":["RefreshTokenAccessTokenGenerator","constructor(refreshTokens: RefreshTokens)","org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator.RefreshTokenAccessTokenGenerator"]},{"name":"constructor(requestJWTValidator: RequestJWTValidator, combineAuthRequestRequestStrategy: AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy)","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.AuthRequestWithRequestAuthRequestExtractor","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-auth-request-with-request-auth-request-extractor.html","searchKeys":["AuthRequestWithRequestAuthRequestExtractor","constructor(requestJWTValidator: RequestJWTValidator, combineAuthRequestRequestStrategy: AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy)","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.AuthRequestWithRequestAuthRequestExtractor"]},{"name":"constructor(requestedGrantType: String)","description":"org.http4k.security.oauth.server.UnsupportedGrantType.UnsupportedGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-grant-type/-unsupported-grant-type.html","searchKeys":["UnsupportedGrantType","constructor(requestedGrantType: String)","org.http4k.security.oauth.server.UnsupportedGrantType.UnsupportedGrantType"]},{"name":"constructor(requestedResponseType: String)","description":"org.http4k.security.oauth.server.UnsupportedResponseType.UnsupportedResponseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-response-type/-unsupported-response-type.html","searchKeys":["UnsupportedResponseType","constructor(requestedResponseType: String)","org.http4k.security.oauth.server.UnsupportedResponseType.UnsupportedResponseType"]},{"name":"constructor(rfcError: RfcError, description: String)","description":"org.http4k.security.oauth.server.OAuthError.OAuthError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-error/-o-auth-error.html","searchKeys":["OAuthError","constructor(rfcError: RfcError, description: String)","org.http4k.security.oauth.server.OAuthError.OAuthError"]},{"name":"constructor(status: Status, reason: String)","description":"org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.CouldNotFetchAccessToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-could-not-fetch-access-token/-could-not-fetch-access-token.html","searchKeys":["CouldNotFetchAccessToken","constructor(status: Status, reason: String)","org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.CouldNotFetchAccessToken"]},{"name":"constructor(supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>)","description":"org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.GrantTypesConfiguration","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-types-configuration/-grant-types-configuration.html","searchKeys":["GrantTypesConfiguration","constructor(supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>)","org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.GrantTypesConfiguration"]},{"name":"constructor(tokenPath: String, authRequestTracking: AuthRequestTracking, authoriseRequestValidator: AuthoriseRequestValidator, accessTokenRequestAuthentication: AccessTokenRequestAuthentication, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(accessTokenRequestAuthentication), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","description":"org.http4k.security.oauth.server.OAuthServer.OAuthServer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-o-auth-server.html","searchKeys":["OAuthServer","constructor(tokenPath: String, authRequestTracking: AuthRequestTracking, authoriseRequestValidator: AuthoriseRequestValidator, accessTokenRequestAuthentication: AccessTokenRequestAuthentication, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(accessTokenRequestAuthentication), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","org.http4k.security.oauth.server.OAuthServer.OAuthServer"]},{"name":"constructor(tokenPath: String, authRequestTracking: AuthRequestTracking, clientValidator: ClientValidator, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(\n            ClientSecretAccessTokenRequestAuthentication(clientValidator)\n        ), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","description":"org.http4k.security.oauth.server.OAuthServer.OAuthServer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-o-auth-server.html","searchKeys":["OAuthServer","constructor(tokenPath: String, authRequestTracking: AuthRequestTracking, clientValidator: ClientValidator, authorizationCodes: AuthorizationCodes, accessTokens: AccessTokens, clock: Clock, json: AutoMarshalling = OAuthMoshi, authRequestExtractor: AuthRequestExtractor = AuthRequestFromQueryParameters, grantTypes: GrantTypesConfiguration = GrantTypesConfiguration.default(\n            ClientSecretAccessTokenRequestAuthentication(clientValidator)\n        ), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, requestJWTValidator: RequestJWTValidator = RequestJWTValidator.Unsupported, documentationUri: String? = null, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer)","org.http4k.security.oauth.server.OAuthServer.OAuthServer"]},{"name":"constructor(tracking: AuthRequestTracking, extractor: AuthRequestExtractor, authoriseRequestErrorRender: AuthoriseRequestErrorRender)","description":"org.http4k.security.oauth.server.AuthRequestTrackingFilter.AuthRequestTrackingFilter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking-filter/-auth-request-tracking-filter.html","searchKeys":["AuthRequestTrackingFilter","constructor(tracking: AuthRequestTracking, extractor: AuthRequestExtractor, authoriseRequestErrorRender: AuthoriseRequestErrorRender)","org.http4k.security.oauth.server.AuthRequestTrackingFilter.AuthRequestTrackingFilter"]},{"name":"constructor(uri: Uri)","description":"org.http4k.security.oauth.server.FragmentResponseRender.FragmentResponseRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-fragment-response-render/-fragment-response-render.html","searchKeys":["FragmentResponseRender","constructor(uri: Uri)","org.http4k.security.oauth.server.FragmentResponseRender.FragmentResponseRender"]},{"name":"constructor(uri: Uri)","description":"org.http4k.security.oauth.server.QueryResponseRender.QueryResponseRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-query-response-render/-query-response-render.html","searchKeys":["QueryResponseRender","constructor(uri: Uri)","org.http4k.security.oauth.server.QueryResponseRender.QueryResponseRender"]},{"name":"constructor(userinfo: Map<String, Claim>? = null, id_token: Map<String, Claim>? = null)","description":"org.http4k.security.oauth.server.request.Claims.Claims","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claims/-claims.html","searchKeys":["Claims","constructor(userinfo: Map<String, Claim>? = null, id_token: Map<String, Claim>? = null)","org.http4k.security.oauth.server.request.Claims.Claims"]},{"name":"constructor(value: String)","description":"org.http4k.security.CrossSiteRequestForgeryToken.CrossSiteRequestForgeryToken","location":"http4k-security-oauth/org.http4k.security/-cross-site-request-forgery-token/-cross-site-request-forgery-token.html","searchKeys":["CrossSiteRequestForgeryToken","constructor(value: String)","org.http4k.security.CrossSiteRequestForgeryToken.CrossSiteRequestForgeryToken"]},{"name":"constructor(value: String)","description":"org.http4k.security.State.State","location":"http4k-security-oauth/org.http4k.security/-state/-state.html","searchKeys":["State","constructor(value: String)","org.http4k.security.State.State"]},{"name":"constructor(value: String)","description":"org.http4k.security.oauth.core.RefreshToken.RefreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.core/-refresh-token/-refresh-token.html","searchKeys":["RefreshToken","constructor(value: String)","org.http4k.security.oauth.core.RefreshToken.RefreshToken"]},{"name":"constructor(value: String)","description":"org.http4k.security.oauth.server.AuthorizationCode.AuthorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code/-authorization-code.html","searchKeys":["AuthorizationCode","constructor(value: String)","org.http4k.security.oauth.server.AuthorizationCode.AuthorizationCode"]},{"name":"constructor(value: String)","description":"org.http4k.security.oauth.server.ClientId.ClientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-id/-client-id.html","searchKeys":["ClientId","constructor(value: String)","org.http4k.security.oauth.server.ClientId.ClientId"]},{"name":"constructor(value: String)","description":"org.http4k.security.openid.IdToken.IdToken","location":"http4k-security-oauth/org.http4k.security.openid/-id-token/-id-token.html","searchKeys":["IdToken","constructor(value: String)","org.http4k.security.openid.IdToken.IdToken"]},{"name":"constructor(value: String)","description":"org.http4k.security.openid.RequestJwtContainer.RequestJwtContainer","location":"http4k-security-oauth/org.http4k.security.openid/-request-jwt-container/-request-jwt-container.html","searchKeys":["RequestJwtContainer","constructor(value: String)","org.http4k.security.openid.RequestJwtContainer.RequestJwtContainer"]},{"name":"data class AccessTokenDetails(val accessToken: AccessToken, val idToken: IdToken? = null)","description":"org.http4k.security.AccessTokenDetails","location":"http4k-security-oauth/org.http4k.security/-access-token-details/index.html","searchKeys":["AccessTokenDetails","data class AccessTokenDetails(val accessToken: AccessToken, val idToken: IdToken? = null)","org.http4k.security.AccessTokenDetails"]},{"name":"data class AccessTokenResponse(val access_token: String, val token_type: String? = null, val expires_in: Long? = null, val id_token: String? = null, val scope: String? = null, val refresh_token: String? = null)","description":"org.http4k.security.AccessTokenResponse","location":"http4k-security-oauth/org.http4k.security/-access-token-response/index.html","searchKeys":["AccessTokenResponse","data class AccessTokenResponse(val access_token: String, val token_type: String? = null, val expires_in: Long? = null, val id_token: String? = null, val scope: String? = null, val refresh_token: String? = null)","org.http4k.security.AccessTokenResponse"]},{"name":"data class AuthRequest(val client: ClientId, val scopes: List<String>, val redirectUri: Uri?, val state: State?, val responseType: ResponseType = Code, val nonce: Nonce? = null, val responseMode: ResponseMode? = null, val request: RequestJwtContainer? = null, val requestObject: RequestObject? = null, val additionalProperties: Map<String, Any> = emptyMap())","description":"org.http4k.security.oauth.server.AuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/index.html","searchKeys":["AuthRequest","data class AuthRequest(val client: ClientId, val scopes: List<String>, val redirectUri: Uri?, val state: State?, val responseType: ResponseType = Code, val nonce: Nonce? = null, val responseMode: ResponseMode? = null, val request: RequestJwtContainer? = null, val requestObject: RequestObject? = null, val additionalProperties: Map<String, Any> = emptyMap())","org.http4k.security.oauth.server.AuthRequest"]},{"name":"data class AuthorizationCode(val value: String)","description":"org.http4k.security.oauth.server.AuthorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code/index.html","searchKeys":["AuthorizationCode","data class AuthorizationCode(val value: String)","org.http4k.security.oauth.server.AuthorizationCode"]},{"name":"data class AuthorizationCodeAccessTokenRequest(val clientId: ClientId, val clientSecret: String, val redirectUri: Uri, val scopes: List<String>, val authorizationCode: AuthorizationCode)","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/index.html","searchKeys":["AuthorizationCodeAccessTokenRequest","data class AuthorizationCodeAccessTokenRequest(val clientId: ClientId, val clientSecret: String, val redirectUri: Uri, val scopes: List<String>, val authorizationCode: AuthorizationCode)","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest"]},{"name":"data class AuthorizationCodeDetails(val clientId: ClientId, val redirectUri: Uri, val expiresAt: Instant, val state: State?, val isOIDC: Boolean, val responseType: ResponseType = Code, val nonce: Nonce? = null)","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/index.html","searchKeys":["AuthorizationCodeDetails","data class AuthorizationCodeDetails(val clientId: ClientId, val redirectUri: Uri, val expiresAt: Instant, val state: State?, val isOIDC: Boolean, val responseType: ResponseType = Code, val nonce: Nonce? = null)","org.http4k.security.oauth.server.AuthorizationCodeDetails"]},{"name":"data class AuthorizationCodeMissing(val callbackUri: Uri) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-authorization-code-missing/index.html","searchKeys":["AuthorizationCodeMissing","data class AuthorizationCodeMissing(val callbackUri: Uri) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing"]},{"name":"data class Claim(val essential: Boolean = false, val value: String? = null, val values: List<String>? = null)","description":"org.http4k.security.oauth.server.request.Claim","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claim/index.html","searchKeys":["Claim","data class Claim(val essential: Boolean = false, val value: String? = null, val values: List<String>? = null)","org.http4k.security.oauth.server.request.Claim"]},{"name":"data class Claims(val userinfo: Map<String, Claim>? = null, val id_token: Map<String, Claim>? = null)","description":"org.http4k.security.oauth.server.request.Claims","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claims/index.html","searchKeys":["Claims","data class Claims(val userinfo: Map<String, Claim>? = null, val id_token: Map<String, Claim>? = null)","org.http4k.security.oauth.server.request.Claims"]},{"name":"data class ClientId(val value: String)","description":"org.http4k.security.oauth.server.ClientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-id/index.html","searchKeys":["ClientId","data class ClientId(val value: String)","org.http4k.security.oauth.server.ClientId"]},{"name":"data class CouldNotFetchAccessToken(val status: Status, val reason: String) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-could-not-fetch-access-token/index.html","searchKeys":["CouldNotFetchAccessToken","data class CouldNotFetchAccessToken(val status: Status, val reason: String) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken"]},{"name":"data class CrossSiteRequestForgeryToken(val value: String)","description":"org.http4k.security.CrossSiteRequestForgeryToken","location":"http4k-security-oauth/org.http4k.security/-cross-site-request-forgery-token/index.html","searchKeys":["CrossSiteRequestForgeryToken","data class CrossSiteRequestForgeryToken(val value: String)","org.http4k.security.CrossSiteRequestForgeryToken"]},{"name":"data class ErrorResponse(val error: String, val error_description: String, val error_uri: String?)","description":"org.http4k.security.oauth.server.ErrorResponse","location":"http4k-security-oauth/org.http4k.security.oauth.server/-error-response/index.html","searchKeys":["ErrorResponse","data class ErrorResponse(val error: String, val error_description: String, val error_uri: String?)","org.http4k.security.oauth.server.ErrorResponse"]},{"name":"data class GrantTypesConfiguration(val supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>)","description":"org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-types-configuration/index.html","searchKeys":["GrantTypesConfiguration","data class GrantTypesConfiguration(val supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>)","org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration"]},{"name":"data class IdToken(val value: String)","description":"org.http4k.security.openid.IdToken","location":"http4k-security-oauth/org.http4k.security.openid/-id-token/index.html","searchKeys":["IdToken","data class IdToken(val value: String)","org.http4k.security.openid.IdToken"]},{"name":"data class InvalidAccessToken(val reason: String) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.InvalidAccessToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-access-token/index.html","searchKeys":["InvalidAccessToken","data class InvalidAccessToken(val reason: String) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.InvalidAccessToken"]},{"name":"data class InvalidAuthorizationRequest(val reason: String) : AuthorizationError","description":"org.http4k.security.oauth.server.InvalidAuthorizationRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-authorization-request/index.html","searchKeys":["InvalidAuthorizationRequest","data class InvalidAuthorizationRequest(val reason: String) : AuthorizationError","org.http4k.security.oauth.server.InvalidAuthorizationRequest"]},{"name":"data class InvalidCsrfToken(val expected: String?, val received: String?) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.InvalidCsrfToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-csrf-token/index.html","searchKeys":["InvalidCsrfToken","data class InvalidCsrfToken(val expected: String?, val received: String?) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.InvalidCsrfToken"]},{"name":"data class InvalidIdToken(val reason: String) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.InvalidIdToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-id-token/index.html","searchKeys":["InvalidIdToken","data class InvalidIdToken(val reason: String) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.InvalidIdToken"]},{"name":"data class InvalidNonce(val expected: String?, val received: String?) : OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError.InvalidNonce","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-nonce/index.html","searchKeys":["InvalidNonce","data class InvalidNonce(val expected: String?, val received: String?) : OAuthCallbackError","org.http4k.security.OAuthCallbackError.InvalidNonce"]},{"name":"data class InvalidRequest(val message: String) : AccessTokenError","description":"org.http4k.security.oauth.server.InvalidRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-request/index.html","searchKeys":["InvalidRequest","data class InvalidRequest(val message: String) : AccessTokenError","org.http4k.security.oauth.server.InvalidRequest"]},{"name":"data class OAuthProviderConfig(authBase: Uri, val authPath: String, val tokenPath: String, val credentials: Credentials, val apiBase: Uri = authBase, val authUri: Uri = authBase.extend(Uri.of(authPath)), val tokenUri: Uri = authBase.extend(Uri.of(tokenPath)))","description":"org.http4k.security.OAuthProviderConfig","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/index.html","searchKeys":["OAuthProviderConfig","data class OAuthProviderConfig(authBase: Uri, val authPath: String, val tokenPath: String, val credentials: Credentials, val apiBase: Uri = authBase, val authUri: Uri = authBase.extend(Uri.of(authPath)), val tokenUri: Uri = authBase.extend(Uri.of(tokenPath)))","org.http4k.security.OAuthProviderConfig"]},{"name":"data class RefreshToken(val value: String)","description":"org.http4k.security.oauth.core.RefreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.core/-refresh-token/index.html","searchKeys":["RefreshToken","data class RefreshToken(val value: String)","org.http4k.security.oauth.core.RefreshToken"]},{"name":"data class RequestJwtContainer(val value: String)","description":"org.http4k.security.openid.RequestJwtContainer","location":"http4k-security-oauth/org.http4k.security.openid/-request-jwt-container/index.html","searchKeys":["RequestJwtContainer","data class RequestJwtContainer(val value: String)","org.http4k.security.openid.RequestJwtContainer"]},{"name":"data class RequestObject(val client: ClientId? = null, val redirectUri: Uri? = null, val audience: List<String> = emptyList(), val issuer: String? = null, val scope: List<String> = emptyList(), val responseMode: ResponseMode? = null, val responseType: ResponseType? = null, val state: State? = null, val nonce: Nonce? = null, val magAge: Long? = null, val expiry: Long? = null, val claims: Claims = Claims())","description":"org.http4k.security.oauth.server.request.RequestObject","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/index.html","searchKeys":["RequestObject","data class RequestObject(val client: ClientId? = null, val redirectUri: Uri? = null, val audience: List<String> = emptyList(), val issuer: String? = null, val scope: List<String> = emptyList(), val responseMode: ResponseMode? = null, val responseType: ResponseType? = null, val state: State? = null, val nonce: Nonce? = null, val magAge: Long? = null, val expiry: Long? = null, val claims: Claims = Claims())","org.http4k.security.oauth.server.request.RequestObject"]},{"name":"data class State(val value: String)","description":"org.http4k.security.State","location":"http4k-security-oauth/org.http4k.security/-state/index.html","searchKeys":["State","data class State(val value: String)","org.http4k.security.State"]},{"name":"data class TokenRequest(val grantType: GrantType, val clientId: ClientId?, val clientSecret: String?, val code: String?, val redirectUri: Uri?, val scopes: List<String>, val clientAssertionType: Uri?, val clientAssertion: String?, val refreshToken: RefreshToken?)","description":"org.http4k.security.oauth.server.TokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/index.html","searchKeys":["TokenRequest","data class TokenRequest(val grantType: GrantType, val clientId: ClientId?, val clientSecret: String?, val code: String?, val redirectUri: Uri?, val scopes: List<String>, val clientAssertionType: Uri?, val clientAssertion: String?, val refreshToken: RefreshToken?)","org.http4k.security.oauth.server.TokenRequest"]},{"name":"data class TokenRequest(val grant_type: String, val refresh_token: String?, val client_id: String?, val code: String?, val redirect_uri: Uri?)","description":"org.http4k.security.oauth.client.TokenRequest","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/index.html","searchKeys":["TokenRequest","data class TokenRequest(val grant_type: String, val refresh_token: String?, val client_id: String?, val code: String?, val redirect_uri: Uri?)","org.http4k.security.oauth.client.TokenRequest"]},{"name":"data class UnsupportedGrantType(val requestedGrantType: String) : AccessTokenError","description":"org.http4k.security.oauth.server.UnsupportedGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-grant-type/index.html","searchKeys":["UnsupportedGrantType","data class UnsupportedGrantType(val requestedGrantType: String) : AccessTokenError","org.http4k.security.oauth.server.UnsupportedGrantType"]},{"name":"data class UnsupportedResponseType(val requestedResponseType: String) : AuthorizationError","description":"org.http4k.security.oauth.server.UnsupportedResponseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-response-type/index.html","searchKeys":["UnsupportedResponseType","data class UnsupportedResponseType(val requestedResponseType: String) : AuthorizationError","org.http4k.security.oauth.server.UnsupportedResponseType"]},{"name":"data object AuthRequestOnly : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-auth-request-only/index.html","searchKeys":["AuthRequestOnly","data object AuthRequestOnly : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly"]},{"name":"data object AuthorizationCodeAlreadyUsed : AccessTokenError","description":"org.http4k.security.oauth.server.AuthorizationCodeAlreadyUsed","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-already-used/index.html","searchKeys":["AuthorizationCodeAlreadyUsed","data object AuthorizationCodeAlreadyUsed : AccessTokenError","org.http4k.security.oauth.server.AuthorizationCodeAlreadyUsed"]},{"name":"data object AuthorizationCodeExpired : AccessTokenError","description":"org.http4k.security.oauth.server.AuthorizationCodeExpired","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-expired/index.html","searchKeys":["AuthorizationCodeExpired","data object AuthorizationCodeExpired : AccessTokenError","org.http4k.security.oauth.server.AuthorizationCodeExpired"]},{"name":"data object ClientIdMismatch : AccessTokenError","description":"org.http4k.security.oauth.server.ClientIdMismatch","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-id-mismatch/index.html","searchKeys":["ClientIdMismatch","data object ClientIdMismatch : AccessTokenError","org.http4k.security.oauth.server.ClientIdMismatch"]},{"name":"data object Combine : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-combine/index.html","searchKeys":["Combine","data object Combine : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine"]},{"name":"data object InvalidClientAssertion : AccessTokenError","description":"org.http4k.security.oauth.server.InvalidClientAssertion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-client-assertion/index.html","searchKeys":["InvalidClientAssertion","data object InvalidClientAssertion : AccessTokenError","org.http4k.security.oauth.server.InvalidClientAssertion"]},{"name":"data object InvalidClientAssertionType : AccessTokenError","description":"org.http4k.security.oauth.server.InvalidClientAssertionType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-client-assertion-type/index.html","searchKeys":["InvalidClientAssertionType","data object InvalidClientAssertionType : AccessTokenError","org.http4k.security.oauth.server.InvalidClientAssertionType"]},{"name":"data object InvalidClientCredentials : AccessTokenError","description":"org.http4k.security.oauth.server.InvalidClientCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-client-credentials/index.html","searchKeys":["InvalidClientCredentials","data object InvalidClientCredentials : AccessTokenError","org.http4k.security.oauth.server.InvalidClientCredentials"]},{"name":"data object InvalidClientId : AuthorizationError","description":"org.http4k.security.oauth.server.InvalidClientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-client-id/index.html","searchKeys":["InvalidClientId","data object InvalidClientId : AuthorizationError","org.http4k.security.oauth.server.InvalidClientId"]},{"name":"data object InvalidRedirectUri : AuthorizationError","description":"org.http4k.security.oauth.server.InvalidRedirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-redirect-uri/index.html","searchKeys":["InvalidRedirectUri","data object InvalidRedirectUri : AuthorizationError","org.http4k.security.oauth.server.InvalidRedirectUri"]},{"name":"data object InvalidRequestObject : AuthorizationError","description":"org.http4k.security.oauth.server.InvalidRequestObject","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-request-object/index.html","searchKeys":["InvalidRequestObject","data object InvalidRequestObject : AuthorizationError","org.http4k.security.oauth.server.InvalidRequestObject"]},{"name":"data object InvalidScopes : AuthorizationError","description":"org.http4k.security.oauth.server.InvalidScopes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-scopes/index.html","searchKeys":["InvalidScopes","data object InvalidScopes : AuthorizationError","org.http4k.security.oauth.server.InvalidScopes"]},{"name":"data object MissingAuthorizationCode : AccessTokenError","description":"org.http4k.security.oauth.server.MissingAuthorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.server/-missing-authorization-code/index.html","searchKeys":["MissingAuthorizationCode","data object MissingAuthorizationCode : AccessTokenError","org.http4k.security.oauth.server.MissingAuthorizationCode"]},{"name":"data object MissingRedirectUri : AccessTokenError","description":"org.http4k.security.oauth.server.MissingRedirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-missing-redirect-uri/index.html","searchKeys":["MissingRedirectUri","data object MissingRedirectUri : AccessTokenError","org.http4k.security.oauth.server.MissingRedirectUri"]},{"name":"data object RedirectUriMismatch : AccessTokenError","description":"org.http4k.security.oauth.server.RedirectUriMismatch","location":"http4k-security-oauth/org.http4k.security.oauth.server/-redirect-uri-mismatch/index.html","searchKeys":["RedirectUriMismatch","data object RedirectUriMismatch : AccessTokenError","org.http4k.security.oauth.server.RedirectUriMismatch"]},{"name":"data object RequestObjectOnly : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-request-object-only/index.html","searchKeys":["RequestObjectOnly","data object RequestObjectOnly : AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly"]},{"name":"data object UserRejectedRequest : AuthorizationError","description":"org.http4k.security.oauth.server.UserRejectedRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-user-rejected-request/index.html","searchKeys":["UserRejectedRequest","data object UserRejectedRequest : AuthorizationError","org.http4k.security.oauth.server.UserRejectedRequest"]},{"name":"enum GrantType : Enum<GrantType> ","description":"org.http4k.security.oauth.server.accesstoken.GrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/index.html","searchKeys":["GrantType","enum GrantType : Enum<GrantType> ","org.http4k.security.oauth.server.accesstoken.GrantType"]},{"name":"enum ResponseMode : Enum<ResponseMode> ","description":"org.http4k.security.ResponseMode","location":"http4k-security-oauth/org.http4k.security/-response-mode/index.html","searchKeys":["ResponseMode","enum ResponseMode : Enum<ResponseMode> ","org.http4k.security.ResponseMode"]},{"name":"enum ResponseType : Enum<ResponseType> ","description":"org.http4k.security.ResponseType","location":"http4k-security-oauth/org.http4k.security/-response-type/index.html","searchKeys":["ResponseType","enum ResponseType : Enum<ResponseType> ","org.http4k.security.ResponseType"]},{"name":"enum RfcError : Enum<RfcError> ","description":"org.http4k.security.oauth.server.RfcError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/index.html","searchKeys":["RfcError","enum RfcError : Enum<RfcError> ","org.http4k.security.oauth.server.RfcError"]},{"name":"fun AccessTokens.Companion.InMemory(): AccessTokens","description":"org.http4k.security.oauth.client.InMemory","location":"http4k-security-oauth/org.http4k.security.oauth.client/-in-memory.html","searchKeys":["InMemory","fun AccessTokens.Companion.InMemory(): AccessTokens","org.http4k.security.oauth.client.InMemory"]},{"name":"fun AccessTokens.Companion.None(): AccessTokens","description":"org.http4k.security.oauth.client.None","location":"http4k-security-oauth/org.http4k.security.oauth.client/-none.html","searchKeys":["None","fun AccessTokens.Companion.None(): AccessTokens","org.http4k.security.oauth.client.None"]},{"name":"fun ClientFilters.OAuthClientCredentials(clientCredentials: Credentials, scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.OAuthClientCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-client-credentials.html","searchKeys":["OAuthClientCredentials","fun ClientFilters.OAuthClientCredentials(clientCredentials: Credentials, scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.OAuthClientCredentials"]},{"name":"fun ClientFilters.OAuthClientCredentials(config: OAuthProviderConfig, scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.OAuthClientCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-client-credentials.html","searchKeys":["OAuthClientCredentials","fun ClientFilters.OAuthClientCredentials(config: OAuthProviderConfig, scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.OAuthClientCredentials"]},{"name":"fun ClientFilters.OAuthOffline(config: OAuthProviderConfig, refreshToken: RefreshToken, backend: HttpHandler, accessTokens: AccessTokens = AccessTokens.None(), authRequestFilter: Filter = BasicAuth(config.credentials)): Filter","description":"org.http4k.security.oauth.client.OAuthOffline","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-offline.html","searchKeys":["OAuthOffline","fun ClientFilters.OAuthOffline(config: OAuthProviderConfig, refreshToken: RefreshToken, backend: HttpHandler, accessTokens: AccessTokens = AccessTokens.None(), authRequestFilter: Filter = BasicAuth(config.credentials)): Filter","org.http4k.security.oauth.client.OAuthOffline"]},{"name":"fun ClientFilters.OAuthRefreshToken(clientCredentials: Credentials, token: RefreshToken, scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.OAuthRefreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-refresh-token.html","searchKeys":["OAuthRefreshToken","fun ClientFilters.OAuthRefreshToken(clientCredentials: Credentials, token: RefreshToken, scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.OAuthRefreshToken"]},{"name":"fun ClientFilters.OAuthRefreshToken(config: OAuthProviderConfig, token: RefreshToken, scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.OAuthRefreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-refresh-token.html","searchKeys":["OAuthRefreshToken","fun ClientFilters.OAuthRefreshToken(config: OAuthProviderConfig, token: RefreshToken, scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.OAuthRefreshToken"]},{"name":"fun ClientFilters.OAuthUserCredentials(clientCredentials: Credentials, userCredentials: Credentials, scopes: List<String>): Filter","description":"org.http4k.security.oauth.client.OAuthUserCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-user-credentials.html","searchKeys":["OAuthUserCredentials","fun ClientFilters.OAuthUserCredentials(clientCredentials: Credentials, userCredentials: Credentials, scopes: List<String>): Filter","org.http4k.security.oauth.client.OAuthUserCredentials"]},{"name":"fun ClientFilters.OAuthUserCredentials(config: OAuthProviderConfig, userCredentials: Credentials, scopes: List<String>): Filter","description":"org.http4k.security.oauth.client.OAuthUserCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-user-credentials.html","searchKeys":["OAuthUserCredentials","fun ClientFilters.OAuthUserCredentials(config: OAuthProviderConfig, userCredentials: Credentials, scopes: List<String>): Filter","org.http4k.security.oauth.client.OAuthUserCredentials"]},{"name":"fun ClientFilters.RefreshingOAuthToken(config: OAuthProviderConfig, backend: HttpHandler, oAuthFlowFilter: Filter = ClientFilters.OAuthClientCredentials(config.credentials, emptyList()), gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.RefreshingOAuthToken","location":"http4k-security-oauth/org.http4k.security.oauth.client/-refreshing-o-auth-token.html","searchKeys":["RefreshingOAuthToken","fun ClientFilters.RefreshingOAuthToken(config: OAuthProviderConfig, backend: HttpHandler, oAuthFlowFilter: Filter = ClientFilters.OAuthClientCredentials(config.credentials, emptyList()), gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.RefreshingOAuthToken"]},{"name":"fun ClientFilters.RefreshingOAuthToken(oauthCredentials: Credentials, tokenUri: Uri, backend: HttpHandler, oAuthFlowFilter: Filter = ClientFilters.OAuthClientCredentials(oauthCredentials, scopes = emptyList()), gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), tokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), scopes: List<String> = emptyList()): Filter","description":"org.http4k.security.oauth.client.RefreshingOAuthToken","location":"http4k-security-oauth/org.http4k.security.oauth.client/-refreshing-o-auth-token.html","searchKeys":["RefreshingOAuthToken","fun ClientFilters.RefreshingOAuthToken(oauthCredentials: Credentials, tokenUri: Uri, backend: HttpHandler, oAuthFlowFilter: Filter = ClientFilters.OAuthClientCredentials(oauthCredentials, scopes = emptyList()), gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), tokenExtractor: AccessTokenExtractor = ContentTypeJsonOrForm(), scopes: List<String> = emptyList()): Filter","org.http4k.security.oauth.client.RefreshingOAuthToken"]},{"name":"fun FakeOAuthServer(authPath: String, tokenPath: String, clock: Clock = Clock.systemDefaultZone(), accessTokens: AccessTokens = SimpleAccessTokens(), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer): RoutingHttpHandler","description":"org.http4k.security.oauth.testing.FakeOAuthServer","location":"http4k-security-oauth/org.http4k.security.oauth.testing/-fake-o-auth-server.html","searchKeys":["FakeOAuthServer","fun FakeOAuthServer(authPath: String, tokenPath: String, clock: Clock = Clock.systemDefaultZone(), accessTokens: AccessTokens = SimpleAccessTokens(), idTokens: IdTokens = IdTokens.Unsupported, refreshTokens: RefreshTokens = RefreshTokens.Unsupported, tokenResponseRenderer: AccessTokenResponseRenderer = DefaultAccessTokenResponseRenderer): RoutingHttpHandler","org.http4k.security.oauth.testing.FakeOAuthServer"]},{"name":"fun OAuthProvider.Companion.auth0(auth0Uri: Uri, client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","description":"org.http4k.security.auth0","location":"http4k-security-oauth/org.http4k.security/auth0.html","searchKeys":["auth0","fun OAuthProvider.Companion.auth0(auth0Uri: Uri, client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","org.http4k.security.auth0"]},{"name":"fun OAuthProvider.Companion.discord(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","description":"org.http4k.security.discord","location":"http4k-security-oauth/org.http4k.security/discord.html","searchKeys":["discord","fun OAuthProvider.Companion.discord(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","org.http4k.security.discord"]},{"name":"fun OAuthProvider.Companion.dropbox(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","description":"org.http4k.security.dropbox","location":"http4k-security-oauth/org.http4k.security/dropbox.html","searchKeys":["dropbox","fun OAuthProvider.Companion.dropbox(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","org.http4k.security.dropbox"]},{"name":"fun OAuthProvider.Companion.facebook(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf(\"email\")): OAuthProvider","description":"org.http4k.security.facebook","location":"http4k-security-oauth/org.http4k.security/facebook.html","searchKeys":["facebook","fun OAuthProvider.Companion.facebook(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf(\"email\")): OAuthProvider","org.http4k.security.facebook"]},{"name":"fun OAuthProvider.Companion.gitHub(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","description":"org.http4k.security.gitHub","location":"http4k-security-oauth/org.http4k.security/git-hub.html","searchKeys":["gitHub","fun OAuthProvider.Companion.gitHub(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","org.http4k.security.gitHub"]},{"name":"fun OAuthProvider.Companion.gitLab(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","description":"org.http4k.security.gitLab","location":"http4k-security-oauth/org.http4k.security/git-lab.html","searchKeys":["gitLab","fun OAuthProvider.Companion.gitLab(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf()): OAuthProvider","org.http4k.security.gitLab"]},{"name":"fun OAuthProvider.Companion.google(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf(\"openid\")): OAuthProvider","description":"org.http4k.security.google","location":"http4k-security-oauth/org.http4k.security/google.html","searchKeys":["google","fun OAuthProvider.Companion.google(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence, scopes: List<String> = listOf(\"openid\")): OAuthProvider","org.http4k.security.google"]},{"name":"fun OAuthProvider.Companion.soundCloud(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","description":"org.http4k.security.soundCloud","location":"http4k-security-oauth/org.http4k.security/sound-cloud.html","searchKeys":["soundCloud","fun OAuthProvider.Companion.soundCloud(client: HttpHandler, credentials: Credentials, callbackUri: Uri, oAuthPersistence: OAuthPersistence): OAuthProvider","org.http4k.security.soundCloud"]},{"name":"fun Request.authorizationRequest(): AuthRequest","description":"org.http4k.security.oauth.server.authorizationRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/authorization-request.html","searchKeys":["authorizationRequest","fun Request.authorizationRequest(): AuthRequest","org.http4k.security.oauth.server.authorizationRequest"]},{"name":"fun Request.fragmentParameter(name: String): String?","description":"org.http4k.security.fragmentParameter","location":"http4k-security-oauth/org.http4k.security/fragment-parameter.html","searchKeys":["fragmentParameter","fun Request.fragmentParameter(name: String): String?","org.http4k.security.fragmentParameter"]},{"name":"fun Request.fragmentParameter(name: String, value: String?): Request","description":"org.http4k.security.fragmentParameter","location":"http4k-security-oauth/org.http4k.security/fragment-parameter.html","searchKeys":["fragmentParameter","fun Request.fragmentParameter(name: String, value: String?): Request","org.http4k.security.fragmentParameter"]},{"name":"fun Request.fragmentParameters(name: String): List<String?>","description":"org.http4k.security.fragmentParameters","location":"http4k-security-oauth/org.http4k.security/fragment-parameters.html","searchKeys":["fragmentParameters","fun Request.fragmentParameters(name: String): List<String?>","org.http4k.security.fragmentParameters"]},{"name":"fun Uri.fragmentParameter(name: String, value: String?): Uri","description":"org.http4k.security.fragmentParameter","location":"http4k-security-oauth/org.http4k.security/fragment-parameter.html","searchKeys":["fragmentParameter","fun Uri.fragmentParameter(name: String, value: String?): Uri","org.http4k.security.fragmentParameter"]},{"name":"fun Uri.fragmentParameters(): Parameters","description":"org.http4k.security.fragmentParameters","location":"http4k-security-oauth/org.http4k.security/fragment-parameters.html","searchKeys":["fragmentParameters","fun Uri.fragmentParameters(): Parameters","org.http4k.security.fragmentParameters"]},{"name":"fun Uri.removeFragmentParameter(name: String): Uri","description":"org.http4k.security.removeFragmentParameter","location":"http4k-security-oauth/org.http4k.security/remove-fragment-parameter.html","searchKeys":["removeFragmentParameter","fun Uri.removeFragmentParameter(name: String): Uri","org.http4k.security.removeFragmentParameter"]},{"name":"fun authFilter(requestJwts: RequestJwts): OAuthRedirectionFilter","description":"org.http4k.security.OAuthProvider.authFilter","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/auth-filter.html","searchKeys":["authFilter","fun authFilter(requestJwts: RequestJwts): OAuthRedirectionFilter","org.http4k.security.OAuthProvider.authFilter"]},{"name":"fun authorizationCode(code: String, redirectUri: Uri?, clientId: ClientId?): TokenRequest","description":"org.http4k.security.oauth.client.TokenRequest.Companion.authorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/-companion/authorization-code.html","searchKeys":["authorizationCode","fun authorizationCode(code: String, redirectUri: Uri?, clientId: ClientId?): TokenRequest","org.http4k.security.oauth.client.TokenRequest.Companion.authorizationCode"]},{"name":"fun default(requestAuthentication: AccessTokenRequestAuthentication): GrantTypesConfiguration","description":"org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.Companion.default","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-types-configuration/-companion/default.html","searchKeys":["default","fun default(requestAuthentication: AccessTokenRequestAuthentication): GrantTypesConfiguration","org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.Companion.default"]},{"name":"fun errorFor(request: Request, error: OAuthError): Response","description":"org.http4k.security.oauth.server.AuthoriseRequestErrorRender.errorFor","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-error-render/error-for.html","searchKeys":["errorFor","fun errorFor(request: Request, error: OAuthError): Response","org.http4k.security.oauth.server.AuthoriseRequestErrorRender.errorFor"]},{"name":"fun extract(clientId: ClientId, tokenRequest: TokenRequest): Result<AuthorizationCodeAccessTokenRequest, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.Companion.extract","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/-companion/extract.html","searchKeys":["extract","fun extract(clientId: ClientId, tokenRequest: TokenRequest): Result<AuthorizationCodeAccessTokenRequest, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.Companion.extract"]},{"name":"fun extractRequestJwtClaimsAsMap(value: String): Result<Map<*, *>, InvalidRequestObject>","description":"org.http4k.security.oauth.server.request.RequestObjectExtractor.extractRequestJwtClaimsAsMap","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object-extractor/extract-request-jwt-claims-as-map.html","searchKeys":["extractRequestJwtClaimsAsMap","fun extractRequestJwtClaimsAsMap(value: String): Result<Map<*, *>, InvalidRequestObject>","org.http4k.security.oauth.server.request.RequestObjectExtractor.extractRequestJwtClaimsAsMap"]},{"name":"fun extractRequestObjectFromJwt(value: String): Result<RequestObject, InvalidRequestObject>","description":"org.http4k.security.oauth.server.request.RequestObjectExtractor.extractRequestObjectFromJwt","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object-extractor/extract-request-object-from-jwt.html","searchKeys":["extractRequestObjectFromJwt","fun extractRequestObjectFromJwt(value: String): Result<RequestObject, InvalidRequestObject>","org.http4k.security.oauth.server.request.RequestObjectExtractor.extractRequestObjectFromJwt"]},{"name":"fun fetch(authCode: String): Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>","description":"org.http4k.security.AccessTokenFetcher.fetch","location":"http4k-security-oauth/org.http4k.security/-access-token-fetcher/fetch.html","searchKeys":["fetch","fun fetch(authCode: String): Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>","org.http4k.security.AccessTokenFetcher.fetch"]},{"name":"fun forAuthRequest(authorizationRequest: AuthRequest): ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender.Companion.forAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/-companion/for-auth-request.html","searchKeys":["forAuthRequest","fun forAuthRequest(authorizationRequest: AuthRequest): ResponseRender","org.http4k.security.oauth.server.ResponseRender.Companion.forAuthRequest"]},{"name":"fun forAuthRequest(responseMode: ResponseMode?, responseType: ResponseType, redirectUri: Uri): ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender.Companion.forAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/-companion/for-auth-request.html","searchKeys":["forAuthRequest","fun forAuthRequest(responseMode: ResponseMode?, responseType: ResponseType, redirectUri: Uri): ResponseRender","org.http4k.security.oauth.server.ResponseRender.Companion.forAuthRequest"]},{"name":"fun fromQueryParameterValue(value: String): ResponseMode","description":"org.http4k.security.ResponseMode.Companion.fromQueryParameterValue","location":"http4k-security-oauth/org.http4k.security/-response-mode/-companion/from-query-parameter-value.html","searchKeys":["fromQueryParameterValue","fun fromQueryParameterValue(value: String): ResponseMode","org.http4k.security.ResponseMode.Companion.fromQueryParameterValue"]},{"name":"fun fromQueryParameterValue(value: String): ResponseType","description":"org.http4k.security.ResponseType.Companion.fromQueryParameterValue","location":"http4k-security-oauth/org.http4k.security/-response-type/-companion/from-query-parameter-value.html","searchKeys":["fromQueryParameterValue","fun fromQueryParameterValue(value: String): ResponseType","org.http4k.security.ResponseType.Companion.fromQueryParameterValue"]},{"name":"fun generate(request: AuthorizationCodeAccessTokenRequest): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/generate.html","searchKeys":["generate","fun generate(request: AuthorizationCodeAccessTokenRequest): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.generate"]},{"name":"fun generate(request: Request): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/generate.html","searchKeys":["generate","fun generate(request: Request): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.generate"]},{"name":"fun interface AccessTokenExtractor : Function1<Response, Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>> ","description":"org.http4k.security.AccessTokenExtractor","location":"http4k-security-oauth/org.http4k.security/-access-token-extractor/index.html","searchKeys":["AccessTokenExtractor","fun interface AccessTokenExtractor : Function1<Response, Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>> ","org.http4k.security.AccessTokenExtractor"]},{"name":"fun interface AccessTokenFetcherAuthenticator","description":"org.http4k.security.AccessTokenFetcherAuthenticator","location":"http4k-security-oauth/org.http4k.security/-access-token-fetcher-authenticator/index.html","searchKeys":["AccessTokenFetcherAuthenticator","fun interface AccessTokenFetcherAuthenticator","org.http4k.security.AccessTokenFetcherAuthenticator"]},{"name":"fun interface AccessTokenGenerator","description":"org.http4k.security.oauth.server.accesstoken.AccessTokenGenerator","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-access-token-generator/index.html","searchKeys":["AccessTokenGenerator","fun interface AccessTokenGenerator","org.http4k.security.oauth.server.accesstoken.AccessTokenGenerator"]},{"name":"fun interface AccessTokenResponseRenderer : Function1<AccessTokenDetails, Response> ","description":"org.http4k.security.oauth.server.AccessTokenResponseRenderer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-token-response-renderer/index.html","searchKeys":["AccessTokenResponseRenderer","fun interface AccessTokenResponseRenderer : Function1<AccessTokenDetails, Response> ","org.http4k.security.oauth.server.AccessTokenResponseRenderer"]},{"name":"fun interface AuthRequestExtractor","description":"org.http4k.security.oauth.server.AuthRequestExtractor","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-extractor/index.html","searchKeys":["AuthRequestExtractor","fun interface AuthRequestExtractor","org.http4k.security.oauth.server.AuthRequestExtractor"]},{"name":"fun interface RefreshTokens","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokens","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-tokens/index.html","searchKeys":["RefreshTokens","fun interface RefreshTokens","org.http4k.security.oauth.server.refreshtoken.RefreshTokens"]},{"name":"fun interface RequestJWTValidator","description":"org.http4k.security.oauth.server.request.RequestJWTValidator","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-j-w-t-validator/index.html","searchKeys":["RequestJWTValidator","fun interface RequestJWTValidator","org.http4k.security.oauth.server.request.RequestJWTValidator"]},{"name":"fun interface RequestJwts","description":"org.http4k.security.openid.RequestJwts","location":"http4k-security-oauth/org.http4k.security.openid/-request-jwts/index.html","searchKeys":["RequestJwts","fun interface RequestJwts","org.http4k.security.openid.RequestJwts"]},{"name":"fun isOIDC(): Boolean","description":"org.http4k.security.oauth.server.AuthRequest.isOIDC","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/is-o-i-d-c.html","searchKeys":["isOIDC","fun isOIDC(): Boolean","org.http4k.security.oauth.server.AuthRequest.isOIDC"]},{"name":"fun refreshToken(refreshToken: RefreshToken): TokenRequest","description":"org.http4k.security.oauth.client.TokenRequest.Companion.refreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/-companion/refresh-token.html","searchKeys":["refreshToken","fun refreshToken(refreshToken: RefreshToken): TokenRequest","org.http4k.security.oauth.client.TokenRequest.Companion.refreshToken"]},{"name":"fun response(error: OAuthError): Response","description":"org.http4k.security.oauth.server.JsonResponseErrorRenderer.response","location":"http4k-security-oauth/org.http4k.security.oauth.server/-json-response-error-renderer/response.html","searchKeys":["response","fun response(error: OAuthError): Response","org.http4k.security.oauth.server.JsonResponseErrorRenderer.response"]},{"name":"fun toAccessToken(): AccessToken","description":"org.http4k.security.AccessTokenResponse.toAccessToken","location":"http4k-security-oauth/org.http4k.security/-access-token-response/to-access-token.html","searchKeys":["toAccessToken","fun toAccessToken(): AccessToken","org.http4k.security.AccessTokenResponse.toAccessToken"]},{"name":"fun toFilter(refreshToken: RefreshToken): Filter","description":"org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer.toFilter","location":"http4k-security-oauth/org.http4k.security.oauth.client/-o-auth-offline-request-authorizer/to-filter.html","searchKeys":["toFilter","fun toFilter(refreshToken: RefreshToken): Filter","org.http4k.security.oauth.client.OAuthOfflineRequestAuthorizer.toFilter"]},{"name":"fun uriBuilderWithRequestJwt(requestJwts: RequestJwts): (Uri, AuthRequest, State, Nonce?) -> Uri","description":"org.http4k.security.uriBuilderWithRequestJwt","location":"http4k-security-oauth/org.http4k.security/uri-builder-with-request-jwt.html","searchKeys":["uriBuilderWithRequestJwt","fun uriBuilderWithRequestJwt(requestJwts: RequestJwts): (Uri, AuthRequest, State, Nonce?) -> Uri","org.http4k.security.uriBuilderWithRequestJwt"]},{"name":"fun valueOf(value: String): GrantType","description":"org.http4k.security.oauth.server.accesstoken.GrantType.valueOf","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): GrantType","org.http4k.security.oauth.server.accesstoken.GrantType.valueOf"]},{"name":"fun valueOf(value: String): ResponseMode","description":"org.http4k.security.ResponseMode.valueOf","location":"http4k-security-oauth/org.http4k.security/-response-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ResponseMode","org.http4k.security.ResponseMode.valueOf"]},{"name":"fun valueOf(value: String): ResponseType","description":"org.http4k.security.ResponseType.valueOf","location":"http4k-security-oauth/org.http4k.security/-response-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ResponseType","org.http4k.security.ResponseType.valueOf"]},{"name":"fun valueOf(value: String): RfcError","description":"org.http4k.security.oauth.server.RfcError.valueOf","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RfcError","org.http4k.security.oauth.server.RfcError.valueOf"]},{"name":"fun values(): Array<GrantType>","description":"org.http4k.security.oauth.server.accesstoken.GrantType.values","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/values.html","searchKeys":["values","fun values(): Array<GrantType>","org.http4k.security.oauth.server.accesstoken.GrantType.values"]},{"name":"fun values(): Array<ResponseMode>","description":"org.http4k.security.ResponseMode.values","location":"http4k-security-oauth/org.http4k.security/-response-mode/values.html","searchKeys":["values","fun values(): Array<ResponseMode>","org.http4k.security.ResponseMode.values"]},{"name":"fun values(): Array<ResponseType>","description":"org.http4k.security.ResponseType.values","location":"http4k-security-oauth/org.http4k.security/-response-type/values.html","searchKeys":["values","fun values(): Array<ResponseType>","org.http4k.security.ResponseType.values"]},{"name":"fun values(): Array<RfcError>","description":"org.http4k.security.oauth.server.RfcError.values","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/values.html","searchKeys":["values","fun values(): Array<RfcError>","org.http4k.security.oauth.server.RfcError.values"]},{"name":"interface AccessToken","description":"org.http4k.security.AccessToken","location":"http4k-security-oauth/org.http4k.security/-access-token/index.html","searchKeys":["AccessToken","interface AccessToken","org.http4k.security.AccessToken"]},{"name":"interface AccessTokenRequestAuthentication","description":"org.http4k.security.oauth.server.accesstoken.AccessTokenRequestAuthentication","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-access-token-request-authentication/index.html","searchKeys":["AccessTokenRequestAuthentication","interface AccessTokenRequestAuthentication","org.http4k.security.oauth.server.accesstoken.AccessTokenRequestAuthentication"]},{"name":"interface AccessTokens","description":"org.http4k.security.oauth.client.AccessTokens","location":"http4k-security-oauth/org.http4k.security.oauth.client/-access-tokens/index.html","searchKeys":["AccessTokens","interface AccessTokens","org.http4k.security.oauth.client.AccessTokens"]},{"name":"interface AccessTokens","description":"org.http4k.security.oauth.server.AccessTokens","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-tokens/index.html","searchKeys":["AccessTokens","interface AccessTokens","org.http4k.security.oauth.server.AccessTokens"]},{"name":"interface AuthRequestTracking","description":"org.http4k.security.oauth.server.AuthRequestTracking","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking/index.html","searchKeys":["AuthRequestTracking","interface AuthRequestTracking","org.http4k.security.oauth.server.AuthRequestTracking"]},{"name":"interface AuthoriseRequestValidator","description":"org.http4k.security.oauth.server.AuthoriseRequestValidator","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorise-request-validator/index.html","searchKeys":["AuthoriseRequestValidator","interface AuthoriseRequestValidator","org.http4k.security.oauth.server.AuthoriseRequestValidator"]},{"name":"interface AuthorizationCodes","description":"org.http4k.security.oauth.server.AuthorizationCodes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-codes/index.html","searchKeys":["AuthorizationCodes","interface AuthorizationCodes","org.http4k.security.oauth.server.AuthorizationCodes"]},{"name":"interface ClientValidator","description":"org.http4k.security.oauth.server.ClientValidator","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validator/index.html","searchKeys":["ClientValidator","interface ClientValidator","org.http4k.security.oauth.server.ClientValidator"]},{"name":"interface IdTokenConsumer","description":"org.http4k.security.openid.IdTokenConsumer","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/index.html","searchKeys":["IdTokenConsumer","interface IdTokenConsumer","org.http4k.security.openid.IdTokenConsumer"]},{"name":"interface IdTokens","description":"org.http4k.security.oauth.server.IdTokens","location":"http4k-security-oauth/org.http4k.security.oauth.server/-id-tokens/index.html","searchKeys":["IdTokens","interface IdTokens","org.http4k.security.oauth.server.IdTokens"]},{"name":"interface OAuthPersistence","description":"org.http4k.security.OAuthPersistence","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/index.html","searchKeys":["OAuthPersistence","interface OAuthPersistence","org.http4k.security.OAuthPersistence"]},{"name":"interface ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/index.html","searchKeys":["ResponseRender","interface ResponseRender","org.http4k.security.oauth.server.ResponseRender"]},{"name":"object AccessTokenResponseMoshiAdapter : JsonAdapter<AccessTokenResponse> ","description":"org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter","location":"http4k-security-oauth/org.http4k.security.oauth.format/-access-token-response-moshi-adapter/index.html","searchKeys":["AccessTokenResponseMoshiAdapter","object AccessTokenResponseMoshiAdapter : JsonAdapter<AccessTokenResponse> ","org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter"]},{"name":"object AuthRequestFromQueryParameters : AuthRequestExtractor","description":"org.http4k.security.oauth.server.AuthRequestFromQueryParameters","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-from-query-parameters/index.html","searchKeys":["AuthRequestFromQueryParameters","object AuthRequestFromQueryParameters : AuthRequestExtractor","org.http4k.security.oauth.server.AuthRequestFromQueryParameters"]},{"name":"object Companion","description":"org.http4k.security.AccessToken.Companion","location":"http4k-security-oauth/org.http4k.security/-access-token/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.AccessToken.Companion"]},{"name":"object Companion","description":"org.http4k.security.CrossSiteRequestForgeryToken.Companion","location":"http4k-security-oauth/org.http4k.security/-cross-site-request-forgery-token/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.CrossSiteRequestForgeryToken.Companion"]},{"name":"object Companion","description":"org.http4k.security.OAuthProvider.Companion","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.OAuthProvider.Companion"]},{"name":"object Companion","description":"org.http4k.security.ResponseMode.Companion","location":"http4k-security-oauth/org.http4k.security/-response-mode/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.ResponseMode.Companion"]},{"name":"object Companion","description":"org.http4k.security.ResponseType.Companion","location":"http4k-security-oauth/org.http4k.security/-response-type/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.ResponseType.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.client.AccessTokens.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.client/-access-tokens/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.client.AccessTokens.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.client.TokenRequest.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.client.TokenRequest.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.AuthRequest.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.AuthRequest.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.ClientValidationFilter.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validation-filter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.ClientValidationFilter.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.IdTokens.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-id-tokens/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.IdTokens.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.OAuthServer.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.OAuthServer.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.ResponseRender.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.ResponseRender.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-types-configuration/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokens.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-tokens/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.refreshtoken.RefreshTokens.Companion"]},{"name":"object Companion","description":"org.http4k.security.oauth.server.request.RequestJWTValidator.Companion","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-j-w-t-validator/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.oauth.server.request.RequestJWTValidator.Companion"]},{"name":"object Companion","description":"org.http4k.security.openid.IdTokenConsumer.Companion","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.openid.IdTokenConsumer.Companion"]},{"name":"object DefaultAccessTokenResponseRenderer : AccessTokenResponseRenderer","description":"org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer","location":"http4k-security-oauth/org.http4k.security.oauth.server/-default-access-token-response-renderer/index.html","searchKeys":["DefaultAccessTokenResponseRenderer","object DefaultAccessTokenResponseRenderer : AccessTokenResponseRenderer","org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer"]},{"name":"object ErrorResponseMoshiAdapter : JsonAdapter<ErrorResponse> ","description":"org.http4k.security.oauth.format.ErrorResponseMoshiAdapter","location":"http4k-security-oauth/org.http4k.security.oauth.format/-error-response-moshi-adapter/index.html","searchKeys":["ErrorResponseMoshiAdapter","object ErrorResponseMoshiAdapter : JsonAdapter<ErrorResponse> ","org.http4k.security.oauth.format.ErrorResponseMoshiAdapter"]},{"name":"object OAuthMoshi : ConfigurableMoshi","description":"org.http4k.security.oauth.format.OAuthMoshi","location":"http4k-security-oauth/org.http4k.security.oauth.format/-o-auth-moshi/index.html","searchKeys":["OAuthMoshi","object OAuthMoshi : ConfigurableMoshi","org.http4k.security.oauth.format.OAuthMoshi"]},{"name":"object OAuthWebForms","description":"org.http4k.security.OAuthWebForms","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/index.html","searchKeys":["OAuthWebForms","object OAuthWebForms","org.http4k.security.OAuthWebForms"]},{"name":"object RequestObjectExtractor","description":"org.http4k.security.oauth.server.request.RequestObjectExtractor","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object-extractor/index.html","searchKeys":["RequestObjectExtractor","object RequestObjectExtractor","org.http4k.security.oauth.server.request.RequestObjectExtractor"]},{"name":"object TokenRequestMoshiAdatper : JsonAdapter<TokenRequest> ","description":"org.http4k.security.oauth.format.TokenRequestMoshiAdatper","location":"http4k-security-oauth/org.http4k.security.oauth.format/-token-request-moshi-adatper/index.html","searchKeys":["TokenRequestMoshiAdatper","object TokenRequestMoshiAdatper : JsonAdapter<TokenRequest> ","org.http4k.security.oauth.format.TokenRequestMoshiAdatper"]},{"name":"open fun authFailureResponse(reason: OAuthCallbackError): Response","description":"org.http4k.security.OAuthPersistence.authFailureResponse","location":"http4k-security-oauth/org.http4k.security/-o-auth-persistence/auth-failure-response.html","searchKeys":["authFailureResponse","open fun authFailureResponse(reason: OAuthCallbackError): Response","org.http4k.security.OAuthPersistence.authFailureResponse"]},{"name":"open fun create(clientId: ClientId, tokenRequest: AuthorizationCodeAccessTokenRequest, authorizationCode: AuthorizationCode): Result<AccessToken, AccessTokenError>","description":"org.http4k.security.oauth.server.AccessTokens.create","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-tokens/create.html","searchKeys":["create","open fun create(clientId: ClientId, tokenRequest: AuthorizationCodeAccessTokenRequest, authorizationCode: AuthorizationCode): Result<AccessToken, AccessTokenError>","org.http4k.security.oauth.server.AccessTokens.create"]},{"name":"open fun withDocumentationUri(documentationUri: String?): ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender.withDocumentationUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/with-documentation-uri.html","searchKeys":["withDocumentationUri","open fun withDocumentationUri(documentationUri: String?): ResponseRender","org.http4k.security.oauth.server.ResponseRender.withDocumentationUri"]},{"name":"open fun withState(state: State?): ResponseRender","description":"org.http4k.security.oauth.server.ResponseRender.withState","location":"http4k-security-oauth/org.http4k.security.oauth.server/-response-render/with-state.html","searchKeys":["withState","open fun withState(state: State?): ResponseRender","org.http4k.security.oauth.server.ResponseRender.withState"]},{"name":"open operator override fun invoke(next: HttpHandler): (Request) -> Response","description":"org.http4k.security.oauth.server.AuthRequestTrackingFilter.invoke","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-tracking-filter/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): (Request) -> Response","org.http4k.security.oauth.server.AuthRequestTrackingFilter.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.security.OAuthRedirectionFilter.invoke","location":"http4k-security-oauth/org.http4k.security/-o-auth-redirection-filter/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.security.OAuthRedirectionFilter.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.security.oauth.server.ClientValidationFilter.invoke","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validation-filter/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.security.oauth.server.ClientValidationFilter.invoke"]},{"name":"open operator override fun invoke(p1: AccessTokenDetails): Response","description":"org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer.invoke","location":"http4k-security-oauth/org.http4k.security.oauth.server/-default-access-token-response-renderer/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: AccessTokenDetails): Response","org.http4k.security.oauth.server.DefaultAccessTokenResponseRenderer.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.security.OAuthCallback.invoke","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.security.OAuthCallback.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.security.oauth.server.AuthenticationComplete.invoke","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authentication-complete/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.security.oauth.server.AuthenticationComplete.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.security.oauth.server.GenerateAccessToken.invoke","location":"http4k-security-oauth/org.http4k.security.oauth.server/-generate-access-token/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.security.oauth.server.GenerateAccessToken.invoke"]},{"name":"open operator override fun invoke(response: Response): Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>","description":"org.http4k.security.ContentTypeJsonOrForm.invoke","location":"http4k-security-oauth/org.http4k.security/-content-type-json-or-form/invoke.html","searchKeys":["invoke","open operator override fun invoke(response: Response): Result<AccessTokenDetails, OAuthCallbackError.CouldNotFetchAccessToken>","org.http4k.security.ContentTypeJsonOrForm.invoke"]},{"name":"open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-auth-request-only/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly.combine"]},{"name":"open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-combine/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine.combine"]},{"name":"open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-request-object-only/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: List<T>, requestObjectValue: List<T>): List<T>","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly.combine"]},{"name":"open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-auth-request-only/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.AuthRequestOnly.combine"]},{"name":"open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-combine/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.Combine.combine"]},{"name":"open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly.combine","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/-request-object-only/combine.html","searchKeys":["combine","open override fun <T> combine(authRequestValue: T?, requestObjectValue: T?): T?","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy.RequestObjectOnly.combine"]},{"name":"open override fun addParameter(key: String, value: String?): ResponseRender","description":"org.http4k.security.oauth.server.FragmentResponseRender.addParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-fragment-response-render/add-parameter.html","searchKeys":["addParameter","open override fun addParameter(key: String, value: String?): ResponseRender","org.http4k.security.oauth.server.FragmentResponseRender.addParameter"]},{"name":"open override fun addParameter(key: String, value: String?): ResponseRender","description":"org.http4k.security.oauth.server.QueryResponseRender.addParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-query-response-render/add-parameter.html","searchKeys":["addParameter","open override fun addParameter(key: String, value: String?): ResponseRender","org.http4k.security.oauth.server.QueryResponseRender.addParameter"]},{"name":"open override fun assignCsrf(redirect: Response, csrf: CrossSiteRequestForgeryToken): Response","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.assignCsrf","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/assign-csrf.html","searchKeys":["assignCsrf","open override fun assignCsrf(redirect: Response, csrf: CrossSiteRequestForgeryToken): Response","org.http4k.security.InsecureCookieBasedOAuthPersistence.assignCsrf"]},{"name":"open override fun assignNonce(redirect: Response, nonce: Nonce): Response","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.assignNonce","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/assign-nonce.html","searchKeys":["assignNonce","open override fun assignNonce(redirect: Response, nonce: Nonce): Response","org.http4k.security.InsecureCookieBasedOAuthPersistence.assignNonce"]},{"name":"open override fun assignOriginalUri(redirect: Response, originalUri: Uri): Response","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.assignOriginalUri","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/assign-original-uri.html","searchKeys":["assignOriginalUri","open override fun assignOriginalUri(redirect: Response, originalUri: Uri): Response","org.http4k.security.InsecureCookieBasedOAuthPersistence.assignOriginalUri"]},{"name":"open override fun assignToken(request: Request, redirect: Response, accessToken: AccessToken, idToken: IdToken?): Response","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.assignToken","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/assign-token.html","searchKeys":["assignToken","open override fun assignToken(request: Request, redirect: Response, accessToken: AccessToken, idToken: IdToken?): Response","org.http4k.security.InsecureCookieBasedOAuthPersistence.assignToken"]},{"name":"open override fun authFailureResponse(reason: OAuthCallbackError): Response","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.authFailureResponse","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/auth-failure-response.html","searchKeys":["authFailureResponse","open override fun authFailureResponse(reason: OAuthCallbackError): Response","org.http4k.security.InsecureCookieBasedOAuthPersistence.authFailureResponse"]},{"name":"open override fun authenticate(request: Request): Request","description":"org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator.authenticate","location":"http4k-security-oauth/org.http4k.security/-basic-auth-access-token-fetcher-authenticator/authenticate.html","searchKeys":["authenticate","open override fun authenticate(request: Request): Request","org.http4k.security.BasicAuthAccessTokenFetcherAuthenticator.authenticate"]},{"name":"open override fun authenticate(request: Request): Request","description":"org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.authenticate","location":"http4k-security-oauth/org.http4k.security/-client-secret-access-token-fetcher-authenticator/authenticate.html","searchKeys":["authenticate","open override fun authenticate(request: Request): Request","org.http4k.security.ClientSecretAccessTokenFetcherAuthenticator.authenticate"]},{"name":"open override fun complete(): Response","description":"org.http4k.security.oauth.server.FragmentResponseRender.complete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-fragment-response-render/complete.html","searchKeys":["complete","open override fun complete(): Response","org.http4k.security.oauth.server.FragmentResponseRender.complete"]},{"name":"open override fun complete(): Response","description":"org.http4k.security.oauth.server.QueryResponseRender.complete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-query-response-render/complete.html","searchKeys":["complete","open override fun complete(): Response","org.http4k.security.oauth.server.QueryResponseRender.complete"]},{"name":"open override fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","description":"org.http4k.security.oauth.server.AuthRequestFromQueryParameters.extract","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-from-query-parameters/extract.html","searchKeys":["extract","open override fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","org.http4k.security.oauth.server.AuthRequestFromQueryParameters.extract"]},{"name":"open override fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.extract","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/extract.html","searchKeys":["extract","open override fun extract(request: Request): Result<AuthRequest, InvalidAuthorizationRequest>","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.extract"]},{"name":"open override fun fromJson(reader: JsonReader): AccessTokenResponse","description":"org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter.fromJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-access-token-response-moshi-adapter/from-json.html","searchKeys":["fromJson","open override fun fromJson(reader: JsonReader): AccessTokenResponse","org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter.fromJson"]},{"name":"open override fun fromJson(reader: JsonReader): ErrorResponse?","description":"org.http4k.security.oauth.format.ErrorResponseMoshiAdapter.fromJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-error-response-moshi-adapter/from-json.html","searchKeys":["fromJson","open override fun fromJson(reader: JsonReader): ErrorResponse?","org.http4k.security.oauth.format.ErrorResponseMoshiAdapter.fromJson"]},{"name":"open override fun fromJson(reader: JsonReader): TokenRequest","description":"org.http4k.security.oauth.format.TokenRequestMoshiAdatper.fromJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-token-request-moshi-adatper/from-json.html","searchKeys":["fromJson","open override fun fromJson(reader: JsonReader): TokenRequest","org.http4k.security.oauth.format.TokenRequestMoshiAdatper.fromJson"]},{"name":"open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-generator/generate.html","searchKeys":["generate","open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenGenerator.generate"]},{"name":"open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-credentials-access-token-generator/generate.html","searchKeys":["generate","open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.ClientCredentialsAccessTokenGenerator.generate"]},{"name":"open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator.generate","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-token-access-token-generator/generate.html","searchKeys":["generate","open override fun generate(request: Request, clientId: ClientId, tokenRequest: TokenRequest): Result<AccessTokenDetails, AccessTokenError>","org.http4k.security.oauth.server.refreshtoken.RefreshTokenAccessTokenGenerator.generate"]},{"name":"open override fun isValidClientAndRedirectUriInCaseOfError(request: Request, clientId: ClientId, redirectUri: Uri): Boolean","description":"org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.isValidClientAndRedirectUriInCaseOfError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-simple-authorise-request-validator/is-valid-client-and-redirect-uri-in-case-of-error.html","searchKeys":["isValidClientAndRedirectUriInCaseOfError","open override fun isValidClientAndRedirectUriInCaseOfError(request: Request, clientId: ClientId, redirectUri: Uri): Boolean","org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.isValidClientAndRedirectUriInCaseOfError"]},{"name":"open override fun resolveAuthRequest(request: Request): AuthRequest?","description":"org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.resolveAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-insecure-cookie-based-auth-request-tracking/resolve-auth-request.html","searchKeys":["resolveAuthRequest","open override fun resolveAuthRequest(request: Request): AuthRequest?","org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.resolveAuthRequest"]},{"name":"open override fun retrieveCsrf(request: Request): CrossSiteRequestForgeryToken?","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveCsrf","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/retrieve-csrf.html","searchKeys":["retrieveCsrf","open override fun retrieveCsrf(request: Request): CrossSiteRequestForgeryToken?","org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveCsrf"]},{"name":"open override fun retrieveNonce(request: Request): Nonce?","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveNonce","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/retrieve-nonce.html","searchKeys":["retrieveNonce","open override fun retrieveNonce(request: Request): Nonce?","org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveNonce"]},{"name":"open override fun retrieveOriginalUri(request: Request): Uri?","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveOriginalUri","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/retrieve-original-uri.html","searchKeys":["retrieveOriginalUri","open override fun retrieveOriginalUri(request: Request): Uri?","org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveOriginalUri"]},{"name":"open override fun retrieveToken(request: Request): AccessToken?","description":"org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveToken","location":"http4k-security-oauth/org.http4k.security/-insecure-cookie-based-o-auth-persistence/retrieve-token.html","searchKeys":["retrieveToken","open override fun retrieveToken(request: Request): AccessToken?","org.http4k.security.InsecureCookieBasedOAuthPersistence.retrieveToken"]},{"name":"open override fun toJson(writer: JsonWriter, request: TokenRequest?)","description":"org.http4k.security.oauth.format.TokenRequestMoshiAdatper.toJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-token-request-moshi-adatper/to-json.html","searchKeys":["toJson","open override fun toJson(writer: JsonWriter, request: TokenRequest?)","org.http4k.security.oauth.format.TokenRequestMoshiAdatper.toJson"]},{"name":"open override fun toJson(writer: JsonWriter, value: AccessTokenResponse?)","description":"org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter.toJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-access-token-response-moshi-adapter/to-json.html","searchKeys":["toJson","open override fun toJson(writer: JsonWriter, value: AccessTokenResponse?)","org.http4k.security.oauth.format.AccessTokenResponseMoshiAdapter.toJson"]},{"name":"open override fun toJson(writer: JsonWriter, value: ErrorResponse?)","description":"org.http4k.security.oauth.format.ErrorResponseMoshiAdapter.toJson","location":"http4k-security-oauth/org.http4k.security.oauth.format/-error-response-moshi-adapter/to-json.html","searchKeys":["toJson","open override fun toJson(writer: JsonWriter, value: ErrorResponse?)","org.http4k.security.oauth.format.ErrorResponseMoshiAdapter.toJson"]},{"name":"open override fun trackAuthRequest(request: Request, authRequest: AuthRequest, response: Response): Response","description":"org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.trackAuthRequest","location":"http4k-security-oauth/org.http4k.security.oauth.server/-insecure-cookie-based-auth-request-tracking/track-auth-request.html","searchKeys":["trackAuthRequest","open override fun trackAuthRequest(request: Request, authRequest: AuthRequest, response: Response): Response","org.http4k.security.oauth.server.InsecureCookieBasedAuthRequestTracking.trackAuthRequest"]},{"name":"open override fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","description":"org.http4k.security.oauth.server.MustHaveRedirectUri.validate","location":"http4k-security-oauth/org.http4k.security.oauth.server/-must-have-redirect-uri/validate.html","searchKeys":["validate","open override fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","org.http4k.security.oauth.server.MustHaveRedirectUri.validate"]},{"name":"open override fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","description":"org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.validate","location":"http4k-security-oauth/org.http4k.security.oauth.server/-simple-authorise-request-validator/validate.html","searchKeys":["validate","open override fun validate(request: Request, authorizationRequest: AuthRequest): Result<Request, OAuthError>","org.http4k.security.oauth.server.SimpleAuthoriseRequestValidator.validate"]},{"name":"open override fun validateCredentials(request: Request, tokenRequest: TokenRequest): Result<Triple<Request, ClientId, TokenRequest>, AccessTokenError>","description":"org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication.validateCredentials","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-client-secret-access-token-request-authentication/validate-credentials.html","searchKeys":["validateCredentials","open override fun validateCredentials(request: Request, tokenRequest: TokenRequest): Result<Triple<Request, ClientId, TokenRequest>, AccessTokenError>","org.http4k.security.oauth.server.accesstoken.ClientSecretAccessTokenRequestAuthentication.validateCredentials"]},{"name":"operator fun invoke(value: String, type: String? = \"Bearer\", expiresIn: Long? = null, scope: String? = null, refreshToken: RefreshToken? = null): AccessToken","description":"org.http4k.security.AccessToken.Companion.invoke","location":"http4k-security-oauth/org.http4k.security/-access-token/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(value: String, type: String? = \"Bearer\", expiresIn: Long? = null, scope: String? = null, refreshToken: RefreshToken? = null): AccessToken","org.http4k.security.AccessToken.Companion.invoke"]},{"name":"sealed class AccessTokenError : OAuthError","description":"org.http4k.security.oauth.server.AccessTokenError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-access-token-error/index.html","searchKeys":["AccessTokenError","sealed class AccessTokenError : OAuthError","org.http4k.security.oauth.server.AccessTokenError"]},{"name":"sealed class AuthorizationError : OAuthError","description":"org.http4k.security.oauth.server.AuthorizationError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-error/index.html","searchKeys":["AuthorizationError","sealed class AuthorizationError : OAuthError","org.http4k.security.oauth.server.AuthorizationError"]},{"name":"sealed class OAuthCallbackError","description":"org.http4k.security.OAuthCallbackError","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/index.html","searchKeys":["OAuthCallbackError","sealed class OAuthCallbackError","org.http4k.security.OAuthCallbackError"]},{"name":"sealed interface CombineAuthRequestRequestStrategy","description":"org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request-with-request-auth-request-extractor/-combine-auth-request-request-strategy/index.html","searchKeys":["CombineAuthRequestRequestStrategy","sealed interface CombineAuthRequestRequestStrategy","org.http4k.security.oauth.server.AuthRequestWithRequestAuthRequestExtractor.CombineAuthRequestRequestStrategy"]},{"name":"typealias CsrfGenerator = (Request) -> CrossSiteRequestForgeryToken","description":"org.http4k.security.CsrfGenerator","location":"http4k-security-oauth/org.http4k.security/-csrf-generator/index.html","searchKeys":["CsrfGenerator","typealias CsrfGenerator = (Request) -> CrossSiteRequestForgeryToken","org.http4k.security.CsrfGenerator"]},{"name":"typealias OAuthServerMoshi = OAuthMoshi","description":"org.http4k.security.oauth.server.OAuthServerMoshi","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server-moshi/index.html","searchKeys":["OAuthServerMoshi","typealias OAuthServerMoshi = OAuthMoshi","org.http4k.security.oauth.server.OAuthServerMoshi"]},{"name":"typealias RedirectionUriBuilder = (Uri, AuthRequest, state: State, nonce: Nonce?) -> Uri","description":"org.http4k.security.RedirectionUriBuilder","location":"http4k-security-oauth/org.http4k.security/-redirection-uri-builder/index.html","searchKeys":["RedirectionUriBuilder","typealias RedirectionUriBuilder = (Uri, AuthRequest, state: State, nonce: Nonce?) -> Uri","org.http4k.security.RedirectionUriBuilder"]},{"name":"val NoOp: IdTokenConsumer","description":"org.http4k.security.openid.IdTokenConsumer.Companion.NoOp","location":"http4k-security-oauth/org.http4k.security.openid/-id-token-consumer/-companion/-no-op.html","searchKeys":["NoOp","val NoOp: IdTokenConsumer","org.http4k.security.openid.IdTokenConsumer.Companion.NoOp"]},{"name":"val SECURE_CSRF: (Request) -> CrossSiteRequestForgeryToken","description":"org.http4k.security.CrossSiteRequestForgeryToken.Companion.SECURE_CSRF","location":"http4k-security-oauth/org.http4k.security/-cross-site-request-forgery-token/-companion/-s-e-c-u-r-e_-c-s-r-f.html","searchKeys":["SECURE_CSRF","val SECURE_CSRF: (Request) -> CrossSiteRequestForgeryToken","org.http4k.security.CrossSiteRequestForgeryToken.Companion.SECURE_CSRF"]},{"name":"val Unsupported: IdTokens","description":"org.http4k.security.oauth.server.IdTokens.Companion.Unsupported","location":"http4k-security-oauth/org.http4k.security.oauth.server/-id-tokens/-companion/-unsupported.html","searchKeys":["Unsupported","val Unsupported: IdTokens","org.http4k.security.oauth.server.IdTokens.Companion.Unsupported"]},{"name":"val Unsupported: RefreshTokens","description":"org.http4k.security.oauth.server.refreshtoken.RefreshTokens.Companion.Unsupported","location":"http4k-security-oauth/org.http4k.security.oauth.server.refreshtoken/-refresh-tokens/-companion/-unsupported.html","searchKeys":["Unsupported","val Unsupported: RefreshTokens","org.http4k.security.oauth.server.refreshtoken.RefreshTokens.Companion.Unsupported"]},{"name":"val Unsupported: RequestJWTValidator","description":"org.http4k.security.oauth.server.request.RequestJWTValidator.Companion.Unsupported","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-j-w-t-validator/-companion/-unsupported.html","searchKeys":["Unsupported","val Unsupported: RequestJWTValidator","org.http4k.security.oauth.server.request.RequestJWTValidator.Companion.Unsupported"]},{"name":"val accessToken: AccessToken","description":"org.http4k.security.AccessTokenDetails.accessToken","location":"http4k-security-oauth/org.http4k.security/-access-token-details/access-token.html","searchKeys":["accessToken","val accessToken: AccessToken","org.http4k.security.AccessTokenDetails.accessToken"]},{"name":"val accessToken: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.accessToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/access-token.html","searchKeys":["accessToken","val accessToken: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.accessToken"]},{"name":"val accessTokenResp: BiDiLens<WebForm, String>","description":"org.http4k.security.OAuthWebForms.accessTokenResp","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/access-token-resp.html","searchKeys":["accessTokenResp","val accessTokenResp: BiDiLens<WebForm, String>","org.http4k.security.OAuthWebForms.accessTokenResp"]},{"name":"val accessTokenResponseBody: BiDiBodyLens<AccessTokenResponse>","description":"org.http4k.security.accessTokenResponseBody","location":"http4k-security-oauth/org.http4k.security/access-token-response-body.html","searchKeys":["accessTokenResponseBody","val accessTokenResponseBody: BiDiBodyLens<AccessTokenResponse>","org.http4k.security.accessTokenResponseBody"]},{"name":"val access_token: String","description":"org.http4k.security.AccessTokenResponse.access_token","location":"http4k-security-oauth/org.http4k.security/-access-token-response/access_token.html","searchKeys":["access_token","val access_token: String","org.http4k.security.AccessTokenResponse.access_token"]},{"name":"val additionalProperties: Map<String, Any>","description":"org.http4k.security.oauth.server.AuthRequest.additionalProperties","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/additional-properties.html","searchKeys":["additionalProperties","val additionalProperties: Map<String, Any>","org.http4k.security.oauth.server.AuthRequest.additionalProperties"]},{"name":"val api: (request: Request) -> Response","description":"org.http4k.security.OAuthProvider.api","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/api.html","searchKeys":["api","val api: (request: Request) -> Response","org.http4k.security.OAuthProvider.api"]},{"name":"val apiBase: Uri","description":"org.http4k.security.OAuthProviderConfig.apiBase","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/api-base.html","searchKeys":["apiBase","val apiBase: Uri","org.http4k.security.OAuthProviderConfig.apiBase"]},{"name":"val audience: List<String>","description":"org.http4k.security.oauth.server.request.RequestObject.audience","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/audience.html","searchKeys":["audience","val audience: List<String>","org.http4k.security.oauth.server.request.RequestObject.audience"]},{"name":"val authFilter: OAuthRedirectionFilter","description":"org.http4k.security.OAuthProvider.authFilter","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/auth-filter.html","searchKeys":["authFilter","val authFilter: OAuthRedirectionFilter","org.http4k.security.OAuthProvider.authFilter"]},{"name":"val authPath: String","description":"org.http4k.security.OAuthProviderConfig.authPath","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/auth-path.html","searchKeys":["authPath","val authPath: String","org.http4k.security.OAuthProviderConfig.authPath"]},{"name":"val authUri: Uri","description":"org.http4k.security.OAuthProviderConfig.authUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/auth-uri.html","searchKeys":["authUri","val authUri: Uri","org.http4k.security.OAuthProviderConfig.authUri"]},{"name":"val authenticationComplete: AuthenticationComplete","description":"org.http4k.security.oauth.server.OAuthServer.authenticationComplete","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/authentication-complete.html","searchKeys":["authenticationComplete","val authenticationComplete: AuthenticationComplete","org.http4k.security.oauth.server.OAuthServer.authenticationComplete"]},{"name":"val authenticationStart: Filter","description":"org.http4k.security.oauth.server.OAuthServer.authenticationStart","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/authentication-start.html","searchKeys":["authenticationStart","val authenticationStart: Filter","org.http4k.security.oauth.server.OAuthServer.authenticationStart"]},{"name":"val authorizationCode: AuthorizationCode","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.authorizationCode","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/authorization-code.html","searchKeys":["authorizationCode","val authorizationCode: AuthorizationCode","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.authorizationCode"]},{"name":"val callback: OAuthCallback","description":"org.http4k.security.OAuthProvider.callback","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/callback.html","searchKeys":["callback","val callback: OAuthCallback","org.http4k.security.OAuthProvider.callback"]},{"name":"val callbackEndpoint: RoutingHttpHandler","description":"org.http4k.security.OAuthProvider.callbackEndpoint","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/callback-endpoint.html","searchKeys":["callbackEndpoint","val callbackEndpoint: RoutingHttpHandler","org.http4k.security.OAuthProvider.callbackEndpoint"]},{"name":"val callbackUri: Uri","description":"org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing.callbackUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-authorization-code-missing/callback-uri.html","searchKeys":["callbackUri","val callbackUri: Uri","org.http4k.security.OAuthCallbackError.AuthorizationCodeMissing.callbackUri"]},{"name":"val claims: Claims","description":"org.http4k.security.oauth.server.request.RequestObject.claims","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/claims.html","searchKeys":["claims","val claims: Claims","org.http4k.security.oauth.server.request.RequestObject.claims"]},{"name":"val client: ClientId","description":"org.http4k.security.oauth.server.AuthRequest.client","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/client.html","searchKeys":["client","val client: ClientId","org.http4k.security.oauth.server.AuthRequest.client"]},{"name":"val client: ClientId? = null","description":"org.http4k.security.oauth.server.request.RequestObject.client","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/client.html","searchKeys":["client","val client: ClientId? = null","org.http4k.security.oauth.server.request.RequestObject.client"]},{"name":"val clientAssertion: BiDiLens<WebForm, String?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.clientAssertion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/client-assertion.html","searchKeys":["clientAssertion","val clientAssertion: BiDiLens<WebForm, String?>","org.http4k.security.oauth.server.OAuthServer.Companion.clientAssertion"]},{"name":"val clientAssertion: String?","description":"org.http4k.security.oauth.server.TokenRequest.clientAssertion","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/client-assertion.html","searchKeys":["clientAssertion","val clientAssertion: String?","org.http4k.security.oauth.server.TokenRequest.clientAssertion"]},{"name":"val clientAssertionType: BiDiLens<WebForm, Uri?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.clientAssertionType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/client-assertion-type.html","searchKeys":["clientAssertionType","val clientAssertionType: BiDiLens<WebForm, Uri?>","org.http4k.security.oauth.server.OAuthServer.Companion.clientAssertionType"]},{"name":"val clientAssertionType: Uri?","description":"org.http4k.security.oauth.server.TokenRequest.clientAssertionType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/client-assertion-type.html","searchKeys":["clientAssertionType","val clientAssertionType: Uri?","org.http4k.security.oauth.server.TokenRequest.clientAssertionType"]},{"name":"val clientId: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.clientId","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/client-id.html","searchKeys":["clientId","val clientId: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.clientId"]},{"name":"val clientId: ClientId","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.clientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/client-id.html","searchKeys":["clientId","val clientId: ClientId","org.http4k.security.oauth.server.AuthorizationCodeDetails.clientId"]},{"name":"val clientId: ClientId","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.clientId","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/client-id.html","searchKeys":["clientId","val clientId: ClientId","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.clientId"]},{"name":"val clientId: ClientId?","description":"org.http4k.security.oauth.server.TokenRequest.clientId","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/client-id.html","searchKeys":["clientId","val clientId: ClientId?","org.http4k.security.oauth.server.TokenRequest.clientId"]},{"name":"val clientIdForm: BiDiLens<WebForm, ClientId?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.clientIdForm","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/client-id-form.html","searchKeys":["clientIdForm","val clientIdForm: BiDiLens<WebForm, ClientId?>","org.http4k.security.oauth.server.OAuthServer.Companion.clientIdForm"]},{"name":"val clientIdQueryParameter: BiDiLens<Request, ClientId>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.clientIdQueryParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/client-id-query-parameter.html","searchKeys":["clientIdQueryParameter","val clientIdQueryParameter: BiDiLens<Request, ClientId>","org.http4k.security.oauth.server.OAuthServer.Companion.clientIdQueryParameter"]},{"name":"val clientSecret: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.clientSecret","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/client-secret.html","searchKeys":["clientSecret","val clientSecret: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.clientSecret"]},{"name":"val clientSecret: BiDiLens<WebForm, String?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.clientSecret","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/client-secret.html","searchKeys":["clientSecret","val clientSecret: BiDiLens<WebForm, String?>","org.http4k.security.oauth.server.OAuthServer.Companion.clientSecret"]},{"name":"val clientSecret: String","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.clientSecret","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/client-secret.html","searchKeys":["clientSecret","val clientSecret: String","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.clientSecret"]},{"name":"val clientSecret: String?","description":"org.http4k.security.oauth.server.TokenRequest.clientSecret","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/client-secret.html","searchKeys":["clientSecret","val clientSecret: String?","org.http4k.security.oauth.server.TokenRequest.clientSecret"]},{"name":"val client_id: String?","description":"org.http4k.security.oauth.client.TokenRequest.client_id","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/client_id.html","searchKeys":["client_id","val client_id: String?","org.http4k.security.oauth.client.TokenRequest.client_id"]},{"name":"val code: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.code","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/code.html","searchKeys":["code","val code: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.code"]},{"name":"val code: BiDiLens<WebForm, String?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.code","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/code.html","searchKeys":["code","val code: BiDiLens<WebForm, String?>","org.http4k.security.oauth.server.OAuthServer.Companion.code"]},{"name":"val code: String?","description":"org.http4k.security.oauth.client.TokenRequest.code","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/code.html","searchKeys":["code","val code: String?","org.http4k.security.oauth.client.TokenRequest.code"]},{"name":"val code: String?","description":"org.http4k.security.oauth.server.TokenRequest.code","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/code.html","searchKeys":["code","val code: String?","org.http4k.security.oauth.server.TokenRequest.code"]},{"name":"val credentials: Credentials","description":"org.http4k.security.OAuthProviderConfig.credentials","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/credentials.html","searchKeys":["credentials","val credentials: Credentials","org.http4k.security.OAuthProviderConfig.credentials"]},{"name":"val defaultUriBuilder: RedirectionUriBuilder","description":"org.http4k.security.defaultUriBuilder","location":"http4k-security-oauth/org.http4k.security/default-uri-builder.html","searchKeys":["defaultUriBuilder","val defaultUriBuilder: RedirectionUriBuilder","org.http4k.security.defaultUriBuilder"]},{"name":"val description: String","description":"org.http4k.security.oauth.server.OAuthError.description","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-error/description.html","searchKeys":["description","val description: String","org.http4k.security.oauth.server.OAuthError.description"]},{"name":"val entries: EnumEntries<GrantType>","description":"org.http4k.security.oauth.server.accesstoken.GrantType.entries","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/entries.html","searchKeys":["entries","val entries: EnumEntries<GrantType>","org.http4k.security.oauth.server.accesstoken.GrantType.entries"]},{"name":"val entries: EnumEntries<ResponseMode>","description":"org.http4k.security.ResponseMode.entries","location":"http4k-security-oauth/org.http4k.security/-response-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<ResponseMode>","org.http4k.security.ResponseMode.entries"]},{"name":"val entries: EnumEntries<ResponseType>","description":"org.http4k.security.ResponseType.entries","location":"http4k-security-oauth/org.http4k.security/-response-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ResponseType>","org.http4k.security.ResponseType.entries"]},{"name":"val entries: EnumEntries<RfcError>","description":"org.http4k.security.oauth.server.RfcError.entries","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/entries.html","searchKeys":["entries","val entries: EnumEntries<RfcError>","org.http4k.security.oauth.server.RfcError.entries"]},{"name":"val error: String","description":"org.http4k.security.oauth.server.ErrorResponse.error","location":"http4k-security-oauth/org.http4k.security.oauth.server/-error-response/error.html","searchKeys":["error","val error: String","org.http4k.security.oauth.server.ErrorResponse.error"]},{"name":"val error_description: String","description":"org.http4k.security.oauth.server.ErrorResponse.error_description","location":"http4k-security-oauth/org.http4k.security.oauth.server/-error-response/error_description.html","searchKeys":["error_description","val error_description: String","org.http4k.security.oauth.server.ErrorResponse.error_description"]},{"name":"val error_uri: String?","description":"org.http4k.security.oauth.server.ErrorResponse.error_uri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-error-response/error_uri.html","searchKeys":["error_uri","val error_uri: String?","org.http4k.security.oauth.server.ErrorResponse.error_uri"]},{"name":"val essential: Boolean = false","description":"org.http4k.security.oauth.server.request.Claim.essential","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claim/essential.html","searchKeys":["essential","val essential: Boolean = false","org.http4k.security.oauth.server.request.Claim.essential"]},{"name":"val expected: String?","description":"org.http4k.security.OAuthCallbackError.InvalidCsrfToken.expected","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-csrf-token/expected.html","searchKeys":["expected","val expected: String?","org.http4k.security.OAuthCallbackError.InvalidCsrfToken.expected"]},{"name":"val expected: String?","description":"org.http4k.security.OAuthCallbackError.InvalidNonce.expected","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-nonce/expected.html","searchKeys":["expected","val expected: String?","org.http4k.security.OAuthCallbackError.InvalidNonce.expected"]},{"name":"val expiresAt: Instant","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.expiresAt","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/expires-at.html","searchKeys":["expiresAt","val expiresAt: Instant","org.http4k.security.oauth.server.AuthorizationCodeDetails.expiresAt"]},{"name":"val expiresIn: BiDiLens<WebForm, Long?>","description":"org.http4k.security.OAuthWebForms.expiresIn","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/expires-in.html","searchKeys":["expiresIn","val expiresIn: BiDiLens<WebForm, Long?>","org.http4k.security.OAuthWebForms.expiresIn"]},{"name":"val expires_in: Long? = null","description":"org.http4k.security.AccessTokenResponse.expires_in","location":"http4k-security-oauth/org.http4k.security/-access-token-response/expires_in.html","searchKeys":["expires_in","val expires_in: Long? = null","org.http4k.security.AccessTokenResponse.expires_in"]},{"name":"val expiry: Long? = null","description":"org.http4k.security.oauth.server.request.RequestObject.expiry","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/expiry.html","searchKeys":["expiry","val expiry: Long? = null","org.http4k.security.oauth.server.request.RequestObject.expiry"]},{"name":"val grantType: BiDiLens<WebForm, String>","description":"org.http4k.security.OAuthWebForms.grantType","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/grant-type.html","searchKeys":["grantType","val grantType: BiDiLens<WebForm, String>","org.http4k.security.OAuthWebForms.grantType"]},{"name":"val grantType: BiDiLens<WebForm, String>","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion.grantType","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/-companion/grant-type.html","searchKeys":["grantType","val grantType: BiDiLens<WebForm, String>","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion.grantType"]},{"name":"val grantType: GrantType","description":"org.http4k.security.oauth.server.TokenRequest.grantType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/grant-type.html","searchKeys":["grantType","val grantType: GrantType","org.http4k.security.oauth.server.TokenRequest.grantType"]},{"name":"val grantTypeForm: BiDiBodyLens<WebForm>","description":"org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion.grantTypeForm","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-generate-access-token-for-grant-type/-companion/grant-type-form.html","searchKeys":["grantTypeForm","val grantTypeForm: BiDiBodyLens<WebForm>","org.http4k.security.oauth.server.accesstoken.GenerateAccessTokenForGrantType.Companion.grantTypeForm"]},{"name":"val grant_type: String","description":"org.http4k.security.oauth.client.TokenRequest.grant_type","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/grant_type.html","searchKeys":["grant_type","val grant_type: String","org.http4k.security.oauth.client.TokenRequest.grant_type"]},{"name":"val idToken: BiDiLens<WebForm, IdToken?>","description":"org.http4k.security.OAuthWebForms.idToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/id-token.html","searchKeys":["idToken","val idToken: BiDiLens<WebForm, IdToken?>","org.http4k.security.OAuthWebForms.idToken"]},{"name":"val idToken: IdToken? = null","description":"org.http4k.security.AccessTokenDetails.idToken","location":"http4k-security-oauth/org.http4k.security/-access-token-details/id-token.html","searchKeys":["idToken","val idToken: IdToken? = null","org.http4k.security.AccessTokenDetails.idToken"]},{"name":"val id_token: Map<String, Claim>? = null","description":"org.http4k.security.oauth.server.request.Claims.id_token","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claims/id_token.html","searchKeys":["id_token","val id_token: Map<String, Claim>? = null","org.http4k.security.oauth.server.request.Claims.id_token"]},{"name":"val id_token: String? = null","description":"org.http4k.security.AccessTokenResponse.id_token","location":"http4k-security-oauth/org.http4k.security/-access-token-response/id_token.html","searchKeys":["id_token","val id_token: String? = null","org.http4k.security.AccessTokenResponse.id_token"]},{"name":"val isOIDC: Boolean","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.isOIDC","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/is-o-i-d-c.html","searchKeys":["isOIDC","val isOIDC: Boolean","org.http4k.security.oauth.server.AuthorizationCodeDetails.isOIDC"]},{"name":"val issuer: String? = null","description":"org.http4k.security.oauth.server.request.RequestObject.issuer","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/issuer.html","searchKeys":["issuer","val issuer: String? = null","org.http4k.security.oauth.server.request.RequestObject.issuer"]},{"name":"val magAge: Long? = null","description":"org.http4k.security.oauth.server.request.RequestObject.magAge","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/mag-age.html","searchKeys":["magAge","val magAge: Long? = null","org.http4k.security.oauth.server.request.RequestObject.magAge"]},{"name":"val message: String","description":"org.http4k.security.oauth.server.InvalidRequest.message","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-request/message.html","searchKeys":["message","val message: String","org.http4k.security.oauth.server.InvalidRequest.message"]},{"name":"val nonce: BiDiLens<Request, Nonce?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.nonce","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/nonce.html","searchKeys":["nonce","val nonce: BiDiLens<Request, Nonce?>","org.http4k.security.oauth.server.OAuthServer.Companion.nonce"]},{"name":"val nonce: Nonce? = null","description":"org.http4k.security.oauth.server.AuthRequest.nonce","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/nonce.html","searchKeys":["nonce","val nonce: Nonce? = null","org.http4k.security.oauth.server.AuthRequest.nonce"]},{"name":"val nonce: Nonce? = null","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.nonce","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/nonce.html","searchKeys":["nonce","val nonce: Nonce? = null","org.http4k.security.oauth.server.AuthorizationCodeDetails.nonce"]},{"name":"val nonce: Nonce? = null","description":"org.http4k.security.oauth.server.request.RequestObject.nonce","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/nonce.html","searchKeys":["nonce","val nonce: Nonce? = null","org.http4k.security.oauth.server.request.RequestObject.nonce"]},{"name":"val password: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.password","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/password.html","searchKeys":["password","val password: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.password"]},{"name":"val providerConfig: OAuthProviderConfig","description":"org.http4k.security.OAuthProvider.providerConfig","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/provider-config.html","searchKeys":["providerConfig","val providerConfig: OAuthProviderConfig","org.http4k.security.OAuthProvider.providerConfig"]},{"name":"val queryParameterValue: String","description":"org.http4k.security.ResponseMode.queryParameterValue","location":"http4k-security-oauth/org.http4k.security/-response-mode/query-parameter-value.html","searchKeys":["queryParameterValue","val queryParameterValue: String","org.http4k.security.ResponseMode.queryParameterValue"]},{"name":"val queryParameterValue: String","description":"org.http4k.security.ResponseType.queryParameterValue","location":"http4k-security-oauth/org.http4k.security/-response-type/query-parameter-value.html","searchKeys":["queryParameterValue","val queryParameterValue: String","org.http4k.security.ResponseType.queryParameterValue"]},{"name":"val reason: String","description":"org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.reason","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-could-not-fetch-access-token/reason.html","searchKeys":["reason","val reason: String","org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.reason"]},{"name":"val reason: String","description":"org.http4k.security.OAuthCallbackError.InvalidAccessToken.reason","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-access-token/reason.html","searchKeys":["reason","val reason: String","org.http4k.security.OAuthCallbackError.InvalidAccessToken.reason"]},{"name":"val reason: String","description":"org.http4k.security.OAuthCallbackError.InvalidIdToken.reason","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-id-token/reason.html","searchKeys":["reason","val reason: String","org.http4k.security.OAuthCallbackError.InvalidIdToken.reason"]},{"name":"val reason: String","description":"org.http4k.security.oauth.server.InvalidAuthorizationRequest.reason","location":"http4k-security-oauth/org.http4k.security.oauth.server/-invalid-authorization-request/reason.html","searchKeys":["reason","val reason: String","org.http4k.security.oauth.server.InvalidAuthorizationRequest.reason"]},{"name":"val received: String?","description":"org.http4k.security.OAuthCallbackError.InvalidCsrfToken.received","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-csrf-token/received.html","searchKeys":["received","val received: String?","org.http4k.security.OAuthCallbackError.InvalidCsrfToken.received"]},{"name":"val received: String?","description":"org.http4k.security.OAuthCallbackError.InvalidNonce.received","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-invalid-nonce/received.html","searchKeys":["received","val received: String?","org.http4k.security.OAuthCallbackError.InvalidNonce.received"]},{"name":"val redirectUri: BiDiLens<WebForm, Uri?>","description":"org.http4k.security.OAuthWebForms.redirectUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: BiDiLens<WebForm, Uri?>","org.http4k.security.OAuthWebForms.redirectUri"]},{"name":"val redirectUri: Uri","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.redirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: Uri","org.http4k.security.oauth.server.AuthorizationCodeDetails.redirectUri"]},{"name":"val redirectUri: Uri","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.redirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: Uri","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.redirectUri"]},{"name":"val redirectUri: Uri?","description":"org.http4k.security.oauth.server.AuthRequest.redirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: Uri?","org.http4k.security.oauth.server.AuthRequest.redirectUri"]},{"name":"val redirectUri: Uri?","description":"org.http4k.security.oauth.server.TokenRequest.redirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: Uri?","org.http4k.security.oauth.server.TokenRequest.redirectUri"]},{"name":"val redirectUri: Uri? = null","description":"org.http4k.security.oauth.server.request.RequestObject.redirectUri","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/redirect-uri.html","searchKeys":["redirectUri","val redirectUri: Uri? = null","org.http4k.security.oauth.server.request.RequestObject.redirectUri"]},{"name":"val redirectUriForm: BiDiLens<WebForm, Uri?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.redirectUriForm","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/redirect-uri-form.html","searchKeys":["redirectUriForm","val redirectUriForm: BiDiLens<WebForm, Uri?>","org.http4k.security.oauth.server.OAuthServer.Companion.redirectUriForm"]},{"name":"val redirectUriQueryParameter: BiDiLens<Request, Uri?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.redirectUriQueryParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/redirect-uri-query-parameter.html","searchKeys":["redirectUriQueryParameter","val redirectUriQueryParameter: BiDiLens<Request, Uri?>","org.http4k.security.oauth.server.OAuthServer.Companion.redirectUriQueryParameter"]},{"name":"val redirect_uri: Uri?","description":"org.http4k.security.oauth.client.TokenRequest.redirect_uri","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/redirect_uri.html","searchKeys":["redirect_uri","val redirect_uri: Uri?","org.http4k.security.oauth.client.TokenRequest.redirect_uri"]},{"name":"val refreshToken: BiDiLens<WebForm, RefreshToken?>","description":"org.http4k.security.OAuthWebForms.refreshToken","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/refresh-token.html","searchKeys":["refreshToken","val refreshToken: BiDiLens<WebForm, RefreshToken?>","org.http4k.security.OAuthWebForms.refreshToken"]},{"name":"val refreshToken: BiDiLens<WebForm, String?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.refreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/refresh-token.html","searchKeys":["refreshToken","val refreshToken: BiDiLens<WebForm, String?>","org.http4k.security.oauth.server.OAuthServer.Companion.refreshToken"]},{"name":"val refreshToken: RefreshToken?","description":"org.http4k.security.oauth.server.TokenRequest.refreshToken","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/refresh-token.html","searchKeys":["refreshToken","val refreshToken: RefreshToken?","org.http4k.security.oauth.server.TokenRequest.refreshToken"]},{"name":"val refresh_token: String?","description":"org.http4k.security.oauth.client.TokenRequest.refresh_token","location":"http4k-security-oauth/org.http4k.security.oauth.client/-token-request/refresh_token.html","searchKeys":["refresh_token","val refresh_token: String?","org.http4k.security.oauth.client.TokenRequest.refresh_token"]},{"name":"val refresh_token: String? = null","description":"org.http4k.security.AccessTokenResponse.refresh_token","location":"http4k-security-oauth/org.http4k.security/-access-token-response/refresh_token.html","searchKeys":["refresh_token","val refresh_token: String? = null","org.http4k.security.AccessTokenResponse.refresh_token"]},{"name":"val request: BiDiLens<Request, RequestJwtContainer?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.request","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/request.html","searchKeys":["request","val request: BiDiLens<Request, RequestJwtContainer?>","org.http4k.security.oauth.server.OAuthServer.Companion.request"]},{"name":"val request: RequestJwtContainer? = null","description":"org.http4k.security.oauth.server.AuthRequest.request","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/request.html","searchKeys":["request","val request: RequestJwtContainer? = null","org.http4k.security.oauth.server.AuthRequest.request"]},{"name":"val requestForm: BiDiBodyLens<WebForm>","description":"org.http4k.security.OAuthWebForms.requestForm","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/request-form.html","searchKeys":["requestForm","val requestForm: BiDiBodyLens<WebForm>","org.http4k.security.OAuthWebForms.requestForm"]},{"name":"val requestObject: RequestObject? = null","description":"org.http4k.security.oauth.server.AuthRequest.requestObject","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/request-object.html","searchKeys":["requestObject","val requestObject: RequestObject? = null","org.http4k.security.oauth.server.AuthRequest.requestObject"]},{"name":"val requestedGrantType: String","description":"org.http4k.security.oauth.server.UnsupportedGrantType.requestedGrantType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-grant-type/requested-grant-type.html","searchKeys":["requestedGrantType","val requestedGrantType: String","org.http4k.security.oauth.server.UnsupportedGrantType.requestedGrantType"]},{"name":"val requestedResponseType: String","description":"org.http4k.security.oauth.server.UnsupportedResponseType.requestedResponseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-unsupported-response-type/requested-response-type.html","searchKeys":["requestedResponseType","val requestedResponseType: String","org.http4k.security.oauth.server.UnsupportedResponseType.requestedResponseType"]},{"name":"val responseForm: BiDiBodyLens<AccessTokenDetails>","description":"org.http4k.security.OAuthWebForms.responseForm","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/response-form.html","searchKeys":["responseForm","val responseForm: BiDiBodyLens<AccessTokenDetails>","org.http4k.security.OAuthWebForms.responseForm"]},{"name":"val responseMode: BiDiLens<Request, ResponseMode?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.responseMode","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/response-mode.html","searchKeys":["responseMode","val responseMode: BiDiLens<Request, ResponseMode?>","org.http4k.security.oauth.server.OAuthServer.Companion.responseMode"]},{"name":"val responseMode: ResponseMode? = null","description":"org.http4k.security.oauth.server.AuthRequest.responseMode","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/response-mode.html","searchKeys":["responseMode","val responseMode: ResponseMode? = null","org.http4k.security.oauth.server.AuthRequest.responseMode"]},{"name":"val responseMode: ResponseMode? = null","description":"org.http4k.security.oauth.server.request.RequestObject.responseMode","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/response-mode.html","searchKeys":["responseMode","val responseMode: ResponseMode? = null","org.http4k.security.oauth.server.request.RequestObject.responseMode"]},{"name":"val responseType: BiDiLens<Request, ResponseType>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.responseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/response-type.html","searchKeys":["responseType","val responseType: BiDiLens<Request, ResponseType>","org.http4k.security.oauth.server.OAuthServer.Companion.responseType"]},{"name":"val responseType: ResponseType","description":"org.http4k.security.oauth.server.AuthRequest.responseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/response-type.html","searchKeys":["responseType","val responseType: ResponseType","org.http4k.security.oauth.server.AuthRequest.responseType"]},{"name":"val responseType: ResponseType","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.responseType","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/response-type.html","searchKeys":["responseType","val responseType: ResponseType","org.http4k.security.oauth.server.AuthorizationCodeDetails.responseType"]},{"name":"val responseType: ResponseType? = null","description":"org.http4k.security.oauth.server.request.RequestObject.responseType","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/response-type.html","searchKeys":["responseType","val responseType: ResponseType? = null","org.http4k.security.oauth.server.request.RequestObject.responseType"]},{"name":"val rfcError: RfcError","description":"org.http4k.security.oauth.server.OAuthError.rfcError","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-error/rfc-error.html","searchKeys":["rfcError","val rfcError: RfcError","org.http4k.security.oauth.server.OAuthError.rfcError"]},{"name":"val rfcValue: String","description":"org.http4k.security.oauth.server.RfcError.rfcValue","location":"http4k-security-oauth/org.http4k.security.oauth.server/-rfc-error/rfc-value.html","searchKeys":["rfcValue","val rfcValue: String","org.http4k.security.oauth.server.RfcError.rfcValue"]},{"name":"val rfcValue: String","description":"org.http4k.security.oauth.server.accesstoken.GrantType.rfcValue","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-type/rfc-value.html","searchKeys":["rfcValue","val rfcValue: String","org.http4k.security.oauth.server.accesstoken.GrantType.rfcValue"]},{"name":"val scope: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.scope","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/scope.html","searchKeys":["scope","val scope: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.scope"]},{"name":"val scope: List<String>","description":"org.http4k.security.oauth.server.request.RequestObject.scope","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/scope.html","searchKeys":["scope","val scope: List<String>","org.http4k.security.oauth.server.request.RequestObject.scope"]},{"name":"val scope: String? = null","description":"org.http4k.security.AccessTokenResponse.scope","location":"http4k-security-oauth/org.http4k.security/-access-token-response/scope.html","searchKeys":["scope","val scope: String? = null","org.http4k.security.AccessTokenResponse.scope"]},{"name":"val scopes: List<String>","description":"org.http4k.security.OAuthProvider.scopes","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider/scopes.html","searchKeys":["scopes","val scopes: List<String>","org.http4k.security.OAuthProvider.scopes"]},{"name":"val scopes: List<String>","description":"org.http4k.security.oauth.server.AuthRequest.scopes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/scopes.html","searchKeys":["scopes","val scopes: List<String>","org.http4k.security.oauth.server.AuthRequest.scopes"]},{"name":"val scopes: List<String>","description":"org.http4k.security.oauth.server.TokenRequest.scopes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-token-request/scopes.html","searchKeys":["scopes","val scopes: List<String>","org.http4k.security.oauth.server.TokenRequest.scopes"]},{"name":"val scopes: List<String>","description":"org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.scopes","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-authorization-code-access-token-request/scopes.html","searchKeys":["scopes","val scopes: List<String>","org.http4k.security.oauth.server.accesstoken.AuthorizationCodeAccessTokenRequest.scopes"]},{"name":"val scopesForm: BiDiLens<WebForm, List<String>?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.scopesForm","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/scopes-form.html","searchKeys":["scopesForm","val scopesForm: BiDiLens<WebForm, List<String>?>","org.http4k.security.oauth.server.OAuthServer.Companion.scopesForm"]},{"name":"val scopesQueryParameter: BiDiLens<Request, List<String>?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.scopesQueryParameter","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/scopes-query-parameter.html","searchKeys":["scopesQueryParameter","val scopesQueryParameter: BiDiLens<Request, List<String>?>","org.http4k.security.oauth.server.OAuthServer.Companion.scopesQueryParameter"]},{"name":"val state: BiDiLens<Request, State?>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.state","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/state.html","searchKeys":["state","val state: BiDiLens<Request, State?>","org.http4k.security.oauth.server.OAuthServer.Companion.state"]},{"name":"val state: State?","description":"org.http4k.security.oauth.server.AuthRequest.state","location":"http4k-security-oauth/org.http4k.security.oauth.server/-auth-request/state.html","searchKeys":["state","val state: State?","org.http4k.security.oauth.server.AuthRequest.state"]},{"name":"val state: State?","description":"org.http4k.security.oauth.server.AuthorizationCodeDetails.state","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code-details/state.html","searchKeys":["state","val state: State?","org.http4k.security.oauth.server.AuthorizationCodeDetails.state"]},{"name":"val state: State? = null","description":"org.http4k.security.oauth.server.request.RequestObject.state","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-request-object/state.html","searchKeys":["state","val state: State? = null","org.http4k.security.oauth.server.request.RequestObject.state"]},{"name":"val status: Status","description":"org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.status","location":"http4k-security-oauth/org.http4k.security/-o-auth-callback-error/-could-not-fetch-access-token/status.html","searchKeys":["status","val status: Status","org.http4k.security.OAuthCallbackError.CouldNotFetchAccessToken.status"]},{"name":"val supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>","description":"org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.supportedGrantTypes","location":"http4k-security-oauth/org.http4k.security.oauth.server.accesstoken/-grant-types-configuration/supported-grant-types.html","searchKeys":["supportedGrantTypes","val supportedGrantTypes: Map<GrantType, AccessTokenRequestAuthentication>","org.http4k.security.oauth.server.accesstoken.GrantTypesConfiguration.supportedGrantTypes"]},{"name":"val tokenPath: String","description":"org.http4k.security.OAuthProviderConfig.tokenPath","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/token-path.html","searchKeys":["tokenPath","val tokenPath: String","org.http4k.security.OAuthProviderConfig.tokenPath"]},{"name":"val tokenRequestLens: BiDiBodyLens<TokenRequest>","description":"org.http4k.security.oauth.client.tokenRequestLens","location":"http4k-security-oauth/org.http4k.security.oauth.client/token-request-lens.html","searchKeys":["tokenRequestLens","val tokenRequestLens: BiDiBodyLens<TokenRequest>","org.http4k.security.oauth.client.tokenRequestLens"]},{"name":"val tokenRequestWebForm: BiDiBodyLens<WebForm>","description":"org.http4k.security.oauth.server.OAuthServer.Companion.tokenRequestWebForm","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/-companion/token-request-web-form.html","searchKeys":["tokenRequestWebForm","val tokenRequestWebForm: BiDiBodyLens<WebForm>","org.http4k.security.oauth.server.OAuthServer.Companion.tokenRequestWebForm"]},{"name":"val tokenRoute: RoutingHttpHandler","description":"org.http4k.security.oauth.server.OAuthServer.tokenRoute","location":"http4k-security-oauth/org.http4k.security.oauth.server/-o-auth-server/token-route.html","searchKeys":["tokenRoute","val tokenRoute: RoutingHttpHandler","org.http4k.security.oauth.server.OAuthServer.tokenRoute"]},{"name":"val tokenType: BiDiLens<WebForm, String>","description":"org.http4k.security.OAuthWebForms.tokenType","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/token-type.html","searchKeys":["tokenType","val tokenType: BiDiLens<WebForm, String>","org.http4k.security.OAuthWebForms.tokenType"]},{"name":"val tokenUri: Uri","description":"org.http4k.security.OAuthProviderConfig.tokenUri","location":"http4k-security-oauth/org.http4k.security/-o-auth-provider-config/token-uri.html","searchKeys":["tokenUri","val tokenUri: Uri","org.http4k.security.OAuthProviderConfig.tokenUri"]},{"name":"val token_type: String? = null","description":"org.http4k.security.AccessTokenResponse.token_type","location":"http4k-security-oauth/org.http4k.security/-access-token-response/token_type.html","searchKeys":["token_type","val token_type: String? = null","org.http4k.security.AccessTokenResponse.token_type"]},{"name":"val userinfo: Map<String, Claim>? = null","description":"org.http4k.security.oauth.server.request.Claims.userinfo","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claims/userinfo.html","searchKeys":["userinfo","val userinfo: Map<String, Claim>? = null","org.http4k.security.oauth.server.request.Claims.userinfo"]},{"name":"val username: BiDiLens<WebForm, String?>","description":"org.http4k.security.OAuthWebForms.username","location":"http4k-security-oauth/org.http4k.security/-o-auth-web-forms/username.html","searchKeys":["username","val username: BiDiLens<WebForm, String?>","org.http4k.security.OAuthWebForms.username"]},{"name":"val validResponseTypes: List<String>","description":"org.http4k.security.oauth.server.ClientValidationFilter.Companion.validResponseTypes","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-validation-filter/-companion/valid-response-types.html","searchKeys":["validResponseTypes","val validResponseTypes: List<String>","org.http4k.security.oauth.server.ClientValidationFilter.Companion.validResponseTypes"]},{"name":"val value: String","description":"org.http4k.security.CrossSiteRequestForgeryToken.value","location":"http4k-security-oauth/org.http4k.security/-cross-site-request-forgery-token/value.html","searchKeys":["value","val value: String","org.http4k.security.CrossSiteRequestForgeryToken.value"]},{"name":"val value: String","description":"org.http4k.security.State.value","location":"http4k-security-oauth/org.http4k.security/-state/value.html","searchKeys":["value","val value: String","org.http4k.security.State.value"]},{"name":"val value: String","description":"org.http4k.security.oauth.core.RefreshToken.value","location":"http4k-security-oauth/org.http4k.security.oauth.core/-refresh-token/value.html","searchKeys":["value","val value: String","org.http4k.security.oauth.core.RefreshToken.value"]},{"name":"val value: String","description":"org.http4k.security.oauth.server.AuthorizationCode.value","location":"http4k-security-oauth/org.http4k.security.oauth.server/-authorization-code/value.html","searchKeys":["value","val value: String","org.http4k.security.oauth.server.AuthorizationCode.value"]},{"name":"val value: String","description":"org.http4k.security.oauth.server.ClientId.value","location":"http4k-security-oauth/org.http4k.security.oauth.server/-client-id/value.html","searchKeys":["value","val value: String","org.http4k.security.oauth.server.ClientId.value"]},{"name":"val value: String","description":"org.http4k.security.openid.IdToken.value","location":"http4k-security-oauth/org.http4k.security.openid/-id-token/value.html","searchKeys":["value","val value: String","org.http4k.security.openid.IdToken.value"]},{"name":"val value: String","description":"org.http4k.security.openid.RequestJwtContainer.value","location":"http4k-security-oauth/org.http4k.security.openid/-request-jwt-container/value.html","searchKeys":["value","val value: String","org.http4k.security.openid.RequestJwtContainer.value"]},{"name":"val value: String? = null","description":"org.http4k.security.oauth.server.request.Claim.value","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claim/value.html","searchKeys":["value","val value: String? = null","org.http4k.security.oauth.server.request.Claim.value"]},{"name":"val values: List<String>? = null","description":"org.http4k.security.oauth.server.request.Claim.values","location":"http4k-security-oauth/org.http4k.security.oauth.server.request/-claim/values.html","searchKeys":["values","val values: List<String>? = null","org.http4k.security.oauth.server.request.Claim.values"]},{"name":"Ansi","description":"org.http4k.routing.inspect.EscapeMode.Ansi","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/-ansi/index.html","searchKeys":["Ansi","Ansi","org.http4k.routing.inspect.EscapeMode.Ansi"]},{"name":"Black","description":"org.http4k.routing.inspect.BackgroundColour.Black","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-black/index.html","searchKeys":["Black","Black","org.http4k.routing.inspect.BackgroundColour.Black"]},{"name":"Black","description":"org.http4k.routing.inspect.ForegroundColour.Black","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-black/index.html","searchKeys":["Black","Black","org.http4k.routing.inspect.ForegroundColour.Black"]},{"name":"Blue","description":"org.http4k.routing.inspect.BackgroundColour.Blue","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-blue/index.html","searchKeys":["Blue","Blue","org.http4k.routing.inspect.BackgroundColour.Blue"]},{"name":"Blue","description":"org.http4k.routing.inspect.ForegroundColour.Blue","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-blue/index.html","searchKeys":["Blue","Blue","org.http4k.routing.inspect.ForegroundColour.Blue"]},{"name":"Bold","description":"org.http4k.routing.inspect.Variation.Bold","location":"http4k-core/org.http4k.routing.inspect/-variation/-bold/index.html","searchKeys":["Bold","Bold","org.http4k.routing.inspect.Variation.Bold"]},{"name":"BoldItalic","description":"org.http4k.routing.inspect.Variation.BoldItalic","location":"http4k-core/org.http4k.routing.inspect/-variation/-bold-italic/index.html","searchKeys":["BoldItalic","BoldItalic","org.http4k.routing.inspect.Variation.BoldItalic"]},{"name":"Cyan","description":"org.http4k.routing.inspect.BackgroundColour.Cyan","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-cyan/index.html","searchKeys":["Cyan","Cyan","org.http4k.routing.inspect.BackgroundColour.Cyan"]},{"name":"Cyan","description":"org.http4k.routing.inspect.ForegroundColour.Cyan","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-cyan/index.html","searchKeys":["Cyan","Cyan","org.http4k.routing.inspect.ForegroundColour.Cyan"]},{"name":"DELETE","description":"org.http4k.core.Method.DELETE","location":"http4k-core/org.http4k.core/-method/-d-e-l-e-t-e/index.html","searchKeys":["DELETE","DELETE","org.http4k.core.Method.DELETE"]},{"name":"Default","description":"org.http4k.routing.inspect.BackgroundColour.Default","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-default/index.html","searchKeys":["Default","Default","org.http4k.routing.inspect.BackgroundColour.Default"]},{"name":"Default","description":"org.http4k.routing.inspect.ForegroundColour.Default","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-default/index.html","searchKeys":["Default","Default","org.http4k.routing.inspect.ForegroundColour.Default"]},{"name":"Default","description":"org.http4k.routing.inspect.Variation.Default","location":"http4k-core/org.http4k.routing.inspect/-variation/-default/index.html","searchKeys":["Default","Default","org.http4k.routing.inspect.Variation.Default"]},{"name":"Feedback","description":"org.http4k.lens.Validator.Feedback","location":"http4k-core/org.http4k.lens/-validator/-feedback/index.html","searchKeys":["Feedback","Feedback","org.http4k.lens.Validator.Feedback"]},{"name":"GET","description":"org.http4k.core.Method.GET","location":"http4k-core/org.http4k.core/-method/-g-e-t/index.html","searchKeys":["GET","GET","org.http4k.core.Method.GET"]},{"name":"Green","description":"org.http4k.routing.inspect.BackgroundColour.Green","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-green/index.html","searchKeys":["Green","Green","org.http4k.routing.inspect.BackgroundColour.Green"]},{"name":"Green","description":"org.http4k.routing.inspect.ForegroundColour.Green","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-green/index.html","searchKeys":["Green","Green","org.http4k.routing.inspect.ForegroundColour.Green"]},{"name":"HEAD","description":"org.http4k.core.Method.HEAD","location":"http4k-core/org.http4k.core/-method/-h-e-a-d/index.html","searchKeys":["HEAD","HEAD","org.http4k.core.Method.HEAD"]},{"name":"Http","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.Http","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/-http/index.html","searchKeys":["Http","Http","org.http4k.filter.RequestFilters.ProxyProtocolMode.Http"]},{"name":"Https","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.Https","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/-https/index.html","searchKeys":["Https","Https","org.http4k.filter.RequestFilters.ProxyProtocolMode.Https"]},{"name":"Ignore","description":"org.http4k.lens.Validator.Ignore","location":"http4k-core/org.http4k.lens/-validator/-ignore/index.html","searchKeys":["Ignore","Ignore","org.http4k.lens.Validator.Ignore"]},{"name":"Invalid","description":"org.http4k.lens.Failure.Type.Invalid","location":"http4k-core/org.http4k.lens/-failure/-type/-invalid/index.html","searchKeys":["Invalid","Invalid","org.http4k.lens.Failure.Type.Invalid"]},{"name":"Italic","description":"org.http4k.routing.inspect.Variation.Italic","location":"http4k-core/org.http4k.routing.inspect/-variation/-italic/index.html","searchKeys":["Italic","Italic","org.http4k.routing.inspect.Variation.Italic"]},{"name":"Lax","description":"org.http4k.core.cookie.SameSite.Lax","location":"http4k-core/org.http4k.core.cookie/-same-site/-lax/index.html","searchKeys":["Lax","Lax","org.http4k.core.cookie.SameSite.Lax"]},{"name":"Missing","description":"org.http4k.lens.Failure.Type.Missing","location":"http4k-core/org.http4k.lens/-failure/-type/-missing/index.html","searchKeys":["Missing","Missing","org.http4k.lens.Failure.Type.Missing"]},{"name":"None","description":"org.http4k.core.cookie.SameSite.None","location":"http4k-core/org.http4k.core.cookie/-same-site/-none/index.html","searchKeys":["None","None","org.http4k.core.cookie.SameSite.None"]},{"name":"None","description":"org.http4k.routing.inspect.EscapeMode.None","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/-none/index.html","searchKeys":["None","None","org.http4k.routing.inspect.EscapeMode.None"]},{"name":"OPTIONS","description":"org.http4k.core.Method.OPTIONS","location":"http4k-core/org.http4k.core/-method/-o-p-t-i-o-n-s/index.html","searchKeys":["OPTIONS","OPTIONS","org.http4k.core.Method.OPTIONS"]},{"name":"PATCH","description":"org.http4k.core.Method.PATCH","location":"http4k-core/org.http4k.core/-method/-p-a-t-c-h/index.html","searchKeys":["PATCH","PATCH","org.http4k.core.Method.PATCH"]},{"name":"POST","description":"org.http4k.core.Method.POST","location":"http4k-core/org.http4k.core/-method/-p-o-s-t/index.html","searchKeys":["POST","POST","org.http4k.core.Method.POST"]},{"name":"PURGE","description":"org.http4k.core.Method.PURGE","location":"http4k-core/org.http4k.core/-method/-p-u-r-g-e/index.html","searchKeys":["PURGE","PURGE","org.http4k.core.Method.PURGE"]},{"name":"PUT","description":"org.http4k.core.Method.PUT","location":"http4k-core/org.http4k.core/-method/-p-u-t/index.html","searchKeys":["PUT","PUT","org.http4k.core.Method.PUT"]},{"name":"Port","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.Port","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/-port/index.html","searchKeys":["Port","Port","org.http4k.filter.RequestFilters.ProxyProtocolMode.Port"]},{"name":"Pseudo","description":"org.http4k.routing.inspect.EscapeMode.Pseudo","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/-pseudo/index.html","searchKeys":["Pseudo","Pseudo","org.http4k.routing.inspect.EscapeMode.Pseudo"]},{"name":"Purple","description":"org.http4k.routing.inspect.BackgroundColour.Purple","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-purple/index.html","searchKeys":["Purple","Purple","org.http4k.routing.inspect.BackgroundColour.Purple"]},{"name":"Purple","description":"org.http4k.routing.inspect.ForegroundColour.Purple","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-purple/index.html","searchKeys":["Purple","Purple","org.http4k.routing.inspect.ForegroundColour.Purple"]},{"name":"Red","description":"org.http4k.routing.inspect.BackgroundColour.Red","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-red/index.html","searchKeys":["Red","Red","org.http4k.routing.inspect.BackgroundColour.Red"]},{"name":"Red","description":"org.http4k.routing.inspect.ForegroundColour.Red","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-red/index.html","searchKeys":["Red","Red","org.http4k.routing.inspect.ForegroundColour.Red"]},{"name":"Strict","description":"org.http4k.core.cookie.SameSite.Strict","location":"http4k-core/org.http4k.core.cookie/-same-site/-strict/index.html","searchKeys":["Strict","Strict","org.http4k.core.cookie.SameSite.Strict"]},{"name":"Strict","description":"org.http4k.lens.Validator.Strict","location":"http4k-core/org.http4k.lens/-validator/-strict/index.html","searchKeys":["Strict","Strict","org.http4k.lens.Validator.Strict"]},{"name":"Strikethrough","description":"org.http4k.routing.inspect.Variation.Strikethrough","location":"http4k-core/org.http4k.routing.inspect/-variation/-strikethrough/index.html","searchKeys":["Strikethrough","Strikethrough","org.http4k.routing.inspect.Variation.Strikethrough"]},{"name":"TRACE","description":"org.http4k.core.Method.TRACE","location":"http4k-core/org.http4k.core/-method/-t-r-a-c-e/index.html","searchKeys":["TRACE","TRACE","org.http4k.core.Method.TRACE"]},{"name":"Underline","description":"org.http4k.routing.inspect.Variation.Underline","location":"http4k-core/org.http4k.routing.inspect/-variation/-underline/index.html","searchKeys":["Underline","Underline","org.http4k.routing.inspect.Variation.Underline"]},{"name":"Unsupported","description":"org.http4k.lens.Failure.Type.Unsupported","location":"http4k-core/org.http4k.lens/-failure/-type/-unsupported/index.html","searchKeys":["Unsupported","Unsupported","org.http4k.lens.Failure.Type.Unsupported"]},{"name":"White","description":"org.http4k.routing.inspect.BackgroundColour.White","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-white/index.html","searchKeys":["White","White","org.http4k.routing.inspect.BackgroundColour.White"]},{"name":"White","description":"org.http4k.routing.inspect.ForegroundColour.White","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-white/index.html","searchKeys":["White","White","org.http4k.routing.inspect.ForegroundColour.White"]},{"name":"Yellow","description":"org.http4k.routing.inspect.BackgroundColour.Yellow","location":"http4k-core/org.http4k.routing.inspect/-background-colour/-yellow/index.html","searchKeys":["Yellow","Yellow","org.http4k.routing.inspect.BackgroundColour.Yellow"]},{"name":"Yellow","description":"org.http4k.routing.inspect.ForegroundColour.Yellow","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/-yellow/index.html","searchKeys":["Yellow","Yellow","org.http4k.routing.inspect.ForegroundColour.Yellow"]},{"name":"abstract fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","description":"org.http4k.routing.RouterMatch.aggregatedBy","location":"http4k-core/org.http4k.routing/-router-match/aggregated-by.html","searchKeys":["aggregatedBy","abstract fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","org.http4k.routing.RouterMatch.aggregatedBy"]},{"name":"abstract fun body(body: Body): HttpMessage","description":"org.http4k.core.HttpMessage.body","location":"http4k-core/org.http4k.core/-http-message/body.html","searchKeys":["body","abstract fun body(body: Body): HttpMessage","org.http4k.core.HttpMessage.body"]},{"name":"abstract fun body(body: InputStream, length: Long? = null): HttpMessage","description":"org.http4k.core.HttpMessage.body","location":"http4k-core/org.http4k.core/-http-message/body.html","searchKeys":["body","abstract fun body(body: InputStream, length: Long? = null): HttpMessage","org.http4k.core.HttpMessage.body"]},{"name":"abstract fun body(body: String): HttpMessage","description":"org.http4k.core.HttpMessage.body","location":"http4k-core/org.http4k.core/-http-message/body.html","searchKeys":["body","abstract fun body(body: String): HttpMessage","org.http4k.core.HttpMessage.body"]},{"name":"abstract fun defaulted(default: OUT): Prop<Req>","description":"org.http4k.lens.DelegatedPropertyLensSpec.defaulted","location":"http4k-core/org.http4k.lens/-delegated-property-lens-spec/defaulted.html","searchKeys":["defaulted","abstract fun defaulted(default: OUT): Prop<Req>","org.http4k.lens.DelegatedPropertyLensSpec.defaulted"]},{"name":"abstract fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","description":"org.http4k.lens.LensBuilder.defaulted","location":"http4k-core/org.http4k.lens/-lens-builder/defaulted.html","searchKeys":["defaulted","abstract fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","org.http4k.lens.LensBuilder.defaulted"]},{"name":"abstract fun defaulted(name: String, default: OUT, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","description":"org.http4k.lens.LensBuilder.defaulted","location":"http4k-core/org.http4k.lens/-lens-builder/defaulted.html","searchKeys":["defaulted","abstract fun defaulted(name: String, default: OUT, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","org.http4k.lens.LensBuilder.defaulted"]},{"name":"abstract fun forCurrentThread(): ZipkinTraces","description":"org.http4k.filter.ZipkinTracesStorage.forCurrentThread","location":"http4k-core/org.http4k.filter/-zipkin-traces-storage/for-current-thread.html","searchKeys":["forCurrentThread","abstract fun forCurrentThread(): ZipkinTraces","org.http4k.filter.ZipkinTracesStorage.forCurrentThread"]},{"name":"abstract fun header(name: String, value: String?): HttpMessage","description":"org.http4k.core.HttpMessage.header","location":"http4k-core/org.http4k.core/-http-message/header.html","searchKeys":["header","abstract fun header(name: String, value: String?): HttpMessage","org.http4k.core.HttpMessage.header"]},{"name":"abstract fun headers(headers: Headers): HttpMessage","description":"org.http4k.core.HttpMessage.headers","location":"http4k-core/org.http4k.core/-http-message/headers.html","searchKeys":["headers","abstract fun headers(headers: Headers): HttpMessage","org.http4k.core.HttpMessage.headers"]},{"name":"abstract fun load(path: String): URL?","description":"org.http4k.routing.ResourceLoader.load","location":"http4k-core/org.http4k.routing/-resource-loader/load.html","searchKeys":["load","abstract fun load(path: String): URL?","org.http4k.routing.ResourceLoader.load"]},{"name":"abstract fun match(request: Request): RouterMatch","description":"org.http4k.routing.Router.match","location":"http4k-core/org.http4k.routing/-router/match.html","searchKeys":["match","abstract fun match(request: Request): RouterMatch","org.http4k.routing.Router.match"]},{"name":"abstract fun method(method: Method): Request","description":"org.http4k.core.Request.method","location":"http4k-core/org.http4k.core/-request/method.html","searchKeys":["method","abstract fun method(method: Method): Request","org.http4k.core.Request.method"]},{"name":"abstract fun optional(): Prop<Opt>","description":"org.http4k.lens.DelegatedPropertyLensSpec.optional","location":"http4k-core/org.http4k.lens/-delegated-property-lens-spec/optional.html","searchKeys":["optional","abstract fun optional(): Prop<Opt>","org.http4k.lens.DelegatedPropertyLensSpec.optional"]},{"name":"abstract fun optional(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT?>","description":"org.http4k.lens.LensBuilder.optional","location":"http4k-core/org.http4k.lens/-lens-builder/optional.html","searchKeys":["optional","abstract fun optional(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT?>","org.http4k.lens.LensBuilder.optional"]},{"name":"abstract fun port(): Int","description":"org.http4k.server.Http4kServer.port","location":"http4k-core/org.http4k.server/-http4k-server/port.html","searchKeys":["port","abstract fun port(): Int","org.http4k.server.Http4kServer.port"]},{"name":"abstract fun queries(name: String): List<String?>","description":"org.http4k.core.Request.queries","location":"http4k-core/org.http4k.core/-request/queries.html","searchKeys":["queries","abstract fun queries(name: String): List<String?>","org.http4k.core.Request.queries"]},{"name":"abstract fun query(name: String): String?","description":"org.http4k.core.Request.query","location":"http4k-core/org.http4k.core/-request/query.html","searchKeys":["query","abstract fun query(name: String): String?","org.http4k.core.Request.query"]},{"name":"abstract fun query(name: String, value: String?): Request","description":"org.http4k.core.Request.query","location":"http4k-core/org.http4k.core/-request/query.html","searchKeys":["query","abstract fun query(name: String, value: String?): Request","org.http4k.core.Request.query"]},{"name":"abstract fun remove(name: String)","description":"org.http4k.filter.cookie.CookieStorage.remove","location":"http4k-core/org.http4k.filter.cookie/-cookie-storage/remove.html","searchKeys":["remove","abstract fun remove(name: String)","org.http4k.filter.cookie.CookieStorage.remove"]},{"name":"abstract fun remove(value: OUT): OUT?","description":"org.http4k.core.Store.remove","location":"http4k-core/org.http4k.core/-store/remove.html","searchKeys":["remove","abstract fun remove(value: OUT): OUT?","org.http4k.core.Store.remove"]},{"name":"abstract fun removeHeader(name: String): HttpMessage","description":"org.http4k.core.HttpMessage.removeHeader","location":"http4k-core/org.http4k.core/-http-message/remove-header.html","searchKeys":["removeHeader","abstract fun removeHeader(name: String): HttpMessage","org.http4k.core.HttpMessage.removeHeader"]},{"name":"abstract fun removeHeaders(prefix: String = \"\"): HttpMessage","description":"org.http4k.core.HttpMessage.removeHeaders","location":"http4k-core/org.http4k.core/-http-message/remove-headers.html","searchKeys":["removeHeaders","abstract fun removeHeaders(prefix: String = \"\"): HttpMessage","org.http4k.core.HttpMessage.removeHeaders"]},{"name":"abstract fun removeQueries(prefix: String = \"\"): Request","description":"org.http4k.core.Request.removeQueries","location":"http4k-core/org.http4k.core/-request/remove-queries.html","searchKeys":["removeQueries","abstract fun removeQueries(prefix: String = \"\"): Request","org.http4k.core.Request.removeQueries"]},{"name":"abstract fun removeQuery(name: String): Request","description":"org.http4k.core.Request.removeQuery","location":"http4k-core/org.http4k.core/-request/remove-query.html","searchKeys":["removeQuery","abstract fun removeQuery(name: String): Request","org.http4k.core.Request.removeQuery"]},{"name":"abstract fun replaceHeader(name: String, value: String?): HttpMessage","description":"org.http4k.core.HttpMessage.replaceHeader","location":"http4k-core/org.http4k.core/-http-message/replace-header.html","searchKeys":["replaceHeader","abstract fun replaceHeader(name: String, value: String?): HttpMessage","org.http4k.core.HttpMessage.replaceHeader"]},{"name":"abstract fun replaceHeaders(source: Headers): HttpMessage","description":"org.http4k.core.HttpMessage.replaceHeaders","location":"http4k-core/org.http4k.core/-http-message/replace-headers.html","searchKeys":["replaceHeaders","abstract fun replaceHeaders(source: Headers): HttpMessage","org.http4k.core.HttpMessage.replaceHeaders"]},{"name":"abstract fun requests(): Sequence<Request>","description":"org.http4k.traffic.Replay.requests","location":"http4k-core/org.http4k.traffic/-replay/requests.html","searchKeys":["requests","abstract fun requests(): Sequence<Request>","org.http4k.traffic.Replay.requests"]},{"name":"abstract fun required(): Prop<Req>","description":"org.http4k.lens.DelegatedPropertyLensSpec.required","location":"http4k-core/org.http4k.lens/-delegated-property-lens-spec/required.html","searchKeys":["required","abstract fun required(): Prop<Req>","org.http4k.lens.DelegatedPropertyLensSpec.required"]},{"name":"abstract fun required(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","description":"org.http4k.lens.LensBuilder.required","location":"http4k-core/org.http4k.lens/-lens-builder/required.html","searchKeys":["required","abstract fun required(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): Lens<IN, OUT>","org.http4k.lens.LensBuilder.required"]},{"name":"abstract fun responses(): Sequence<Response>","description":"org.http4k.traffic.Replay.responses","location":"http4k-core/org.http4k.traffic/-replay/responses.html","searchKeys":["responses","abstract fun responses(): Sequence<Response>","org.http4k.traffic.Replay.responses"]},{"name":"abstract fun retrieve(): List<LocalCookie>","description":"org.http4k.filter.cookie.CookieStorage.retrieve","location":"http4k-core/org.http4k.filter.cookie/-cookie-storage/retrieve.html","searchKeys":["retrieve","abstract fun retrieve(): List<LocalCookie>","org.http4k.filter.cookie.CookieStorage.retrieve"]},{"name":"abstract fun setForCurrentThread(zipkinTraces: ZipkinTraces)","description":"org.http4k.filter.ZipkinTracesStorage.setForCurrentThread","location":"http4k-core/org.http4k.filter/-zipkin-traces-storage/set-for-current-thread.html","searchKeys":["setForCurrentThread","abstract fun setForCurrentThread(zipkinTraces: ZipkinTraces)","org.http4k.filter.ZipkinTracesStorage.setForCurrentThread"]},{"name":"abstract fun source(source: RequestSource): Request","description":"org.http4k.core.Request.source","location":"http4k-core/org.http4k.core/-request/source.html","searchKeys":["source","abstract fun source(source: RequestSource): Request","org.http4k.core.Request.source"]},{"name":"abstract fun start(): Http4kServer","description":"org.http4k.server.Http4kServer.start","location":"http4k-core/org.http4k.server/-http4k-server/start.html","searchKeys":["start","abstract fun start(): Http4kServer","org.http4k.server.Http4kServer.start"]},{"name":"abstract fun status(new: Status): Response","description":"org.http4k.core.Response.status","location":"http4k-core/org.http4k.core/-response/status.html","searchKeys":["status","abstract fun status(new: Status): Response","org.http4k.core.Response.status"]},{"name":"abstract fun stop(): Http4kServer","description":"org.http4k.server.Http4kServer.stop","location":"http4k-core/org.http4k.server/-http4k-server/stop.html","searchKeys":["stop","abstract fun stop(): Http4kServer","org.http4k.server.Http4kServer.stop"]},{"name":"abstract fun store(cookies: List<LocalCookie>)","description":"org.http4k.filter.cookie.CookieStorage.store","location":"http4k-core/org.http4k.filter.cookie/-cookie-storage/store.html","searchKeys":["store","abstract fun store(cookies: List<LocalCookie>)","org.http4k.filter.cookie.CookieStorage.store"]},{"name":"abstract fun toMessage(): String","description":"org.http4k.core.HttpMessage.toMessage","location":"http4k-core/org.http4k.core/-http-message/to-message.html","searchKeys":["toMessage","abstract fun toMessage(): String","org.http4k.core.HttpMessage.toMessage"]},{"name":"abstract fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.ServerConfig.toServer","location":"http4k-core/org.http4k.server/-server-config/to-server.html","searchKeys":["toServer","abstract fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.ServerConfig.toServer"]},{"name":"abstract fun uri(uri: Uri): Request","description":"org.http4k.core.Request.uri","location":"http4k-core/org.http4k.core/-request/uri.html","searchKeys":["uri","abstract fun uri(uri: Uri): Request","org.http4k.core.Request.uri"]},{"name":"abstract operator fun <R : OUT> invoke(value: IN, target: R): R","description":"org.http4k.lens.LensInjector.invoke","location":"http4k-core/org.http4k.lens/-lens-injector/invoke.html","searchKeys":["invoke","abstract operator fun <R : OUT> invoke(value: IN, target: R): R","org.http4k.lens.LensInjector.invoke"]},{"name":"abstract operator fun get(request: Request): Response?","description":"org.http4k.traffic.Source.get","location":"http4k-core/org.http4k.traffic/-source/get.html","searchKeys":["get","abstract operator fun get(request: Request): Response?","org.http4k.traffic.Source.get"]},{"name":"abstract operator fun invoke(expected: ContentType, actual: ContentType?)","description":"org.http4k.lens.ContentNegotiation.invoke","location":"http4k-core/org.http4k.lens/-content-negotiation/invoke.html","searchKeys":["invoke","abstract operator fun invoke(expected: ContentType, actual: ContentType?)","org.http4k.lens.ContentNegotiation.invoke"]},{"name":"abstract operator fun invoke(request: Request, fn: (Response) -> Unit)","description":"org.http4k.client.AsyncHttpHandler.invoke","location":"http4k-core/org.http4k.client/-async-http-handler/invoke.html","searchKeys":["invoke","abstract operator fun invoke(request: Request, fn: (Response) -> Unit)","org.http4k.client.AsyncHttpHandler.invoke"]},{"name":"abstract operator fun set(request: Request, response: Response)","description":"org.http4k.traffic.Sink.set","location":"http4k-core/org.http4k.traffic/-sink/set.html","searchKeys":["set","abstract operator fun set(request: Request, response: Response)","org.http4k.traffic.Sink.set"]},{"name":"abstract operator override fun invoke(target: IN): OUT","description":"org.http4k.lens.LensExtractor.invoke","location":"http4k-core/org.http4k.lens/-lens-extractor/invoke.html","searchKeys":["invoke","abstract operator override fun invoke(target: IN): OUT","org.http4k.lens.LensExtractor.invoke"]},{"name":"abstract override fun body(body: Body): Request","description":"org.http4k.core.Request.body","location":"http4k-core/org.http4k.core/-request/body.html","searchKeys":["body","abstract override fun body(body: Body): Request","org.http4k.core.Request.body"]},{"name":"abstract override fun body(body: Body): Response","description":"org.http4k.core.Response.body","location":"http4k-core/org.http4k.core/-response/body.html","searchKeys":["body","abstract override fun body(body: Body): Response","org.http4k.core.Response.body"]},{"name":"abstract override fun body(body: InputStream, length: Long?): Request","description":"org.http4k.core.Request.body","location":"http4k-core/org.http4k.core/-request/body.html","searchKeys":["body","abstract override fun body(body: InputStream, length: Long?): Request","org.http4k.core.Request.body"]},{"name":"abstract override fun body(body: InputStream, length: Long?): Response","description":"org.http4k.core.Response.body","location":"http4k-core/org.http4k.core/-response/body.html","searchKeys":["body","abstract override fun body(body: InputStream, length: Long?): Response","org.http4k.core.Response.body"]},{"name":"abstract override fun body(body: String): Request","description":"org.http4k.core.Request.body","location":"http4k-core/org.http4k.core/-request/body.html","searchKeys":["body","abstract override fun body(body: String): Request","org.http4k.core.Request.body"]},{"name":"abstract override fun body(body: String): Response","description":"org.http4k.core.Response.body","location":"http4k-core/org.http4k.core/-response/body.html","searchKeys":["body","abstract override fun body(body: String): Response","org.http4k.core.Response.body"]},{"name":"abstract override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensBuilder.defaulted","location":"http4k-core/org.http4k.lens/-bi-di-lens-builder/defaulted.html","searchKeys":["defaulted","abstract override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensBuilder.defaulted"]},{"name":"abstract override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensBuilder.defaulted","location":"http4k-core/org.http4k.lens/-bi-di-lens-builder/defaulted.html","searchKeys":["defaulted","abstract override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensBuilder.defaulted"]},{"name":"abstract override fun header(name: String, value: String?): Request","description":"org.http4k.core.Request.header","location":"http4k-core/org.http4k.core/-request/header.html","searchKeys":["header","abstract override fun header(name: String, value: String?): Request","org.http4k.core.Request.header"]},{"name":"abstract override fun header(name: String, value: String?): Response","description":"org.http4k.core.Response.header","location":"http4k-core/org.http4k.core/-response/header.html","searchKeys":["header","abstract override fun header(name: String, value: String?): Response","org.http4k.core.Response.header"]},{"name":"abstract override fun headers(headers: Headers): Request","description":"org.http4k.core.Request.headers","location":"http4k-core/org.http4k.core/-request/headers.html","searchKeys":["headers","abstract override fun headers(headers: Headers): Request","org.http4k.core.Request.headers"]},{"name":"abstract override fun headers(headers: Headers): Response","description":"org.http4k.core.Response.headers","location":"http4k-core/org.http4k.core/-response/headers.html","searchKeys":["headers","abstract override fun headers(headers: Headers): Response","org.http4k.core.Response.headers"]},{"name":"abstract override fun optional(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT?>","description":"org.http4k.lens.BiDiLensBuilder.optional","location":"http4k-core/org.http4k.lens/-bi-di-lens-builder/optional.html","searchKeys":["optional","abstract override fun optional(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT?>","org.http4k.lens.BiDiLensBuilder.optional"]},{"name":"abstract override fun removeHeader(name: String): Request","description":"org.http4k.core.Request.removeHeader","location":"http4k-core/org.http4k.core/-request/remove-header.html","searchKeys":["removeHeader","abstract override fun removeHeader(name: String): Request","org.http4k.core.Request.removeHeader"]},{"name":"abstract override fun removeHeader(name: String): Response","description":"org.http4k.core.Response.removeHeader","location":"http4k-core/org.http4k.core/-response/remove-header.html","searchKeys":["removeHeader","abstract override fun removeHeader(name: String): Response","org.http4k.core.Response.removeHeader"]},{"name":"abstract override fun removeHeaders(prefix: String): Request","description":"org.http4k.core.Request.removeHeaders","location":"http4k-core/org.http4k.core/-request/remove-headers.html","searchKeys":["removeHeaders","abstract override fun removeHeaders(prefix: String): Request","org.http4k.core.Request.removeHeaders"]},{"name":"abstract override fun removeHeaders(prefix: String): Response","description":"org.http4k.core.Response.removeHeaders","location":"http4k-core/org.http4k.core/-response/remove-headers.html","searchKeys":["removeHeaders","abstract override fun removeHeaders(prefix: String): Response","org.http4k.core.Response.removeHeaders"]},{"name":"abstract override fun replaceHeader(name: String, value: String?): Request","description":"org.http4k.core.Request.replaceHeader","location":"http4k-core/org.http4k.core/-request/replace-header.html","searchKeys":["replaceHeader","abstract override fun replaceHeader(name: String, value: String?): Request","org.http4k.core.Request.replaceHeader"]},{"name":"abstract override fun replaceHeader(name: String, value: String?): Response","description":"org.http4k.core.Response.replaceHeader","location":"http4k-core/org.http4k.core/-response/replace-header.html","searchKeys":["replaceHeader","abstract override fun replaceHeader(name: String, value: String?): Response","org.http4k.core.Response.replaceHeader"]},{"name":"abstract override fun replaceHeaders(source: Headers): Request","description":"org.http4k.core.Request.replaceHeaders","location":"http4k-core/org.http4k.core/-request/replace-headers.html","searchKeys":["replaceHeaders","abstract override fun replaceHeaders(source: Headers): Request","org.http4k.core.Request.replaceHeaders"]},{"name":"abstract override fun replaceHeaders(source: Headers): Response","description":"org.http4k.core.Response.replaceHeaders","location":"http4k-core/org.http4k.core/-response/replace-headers.html","searchKeys":["replaceHeaders","abstract override fun replaceHeaders(source: Headers): Response","org.http4k.core.Response.replaceHeaders"]},{"name":"abstract override fun required(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensBuilder.required","location":"http4k-core/org.http4k.lens/-bi-di-lens-builder/required.html","searchKeys":["required","abstract override fun required(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensBuilder.required"]},{"name":"abstract override fun withBasePath(new: String): RoutingHttpHandler","description":"org.http4k.routing.RoutingHttpHandler.withBasePath","location":"http4k-core/org.http4k.routing/-routing-http-handler/with-base-path.html","searchKeys":["withBasePath","abstract override fun withBasePath(new: String): RoutingHttpHandler","org.http4k.routing.RoutingHttpHandler.withBasePath"]},{"name":"abstract override fun withFilter(new: Filter): RoutingHttpHandler","description":"org.http4k.routing.RoutingHttpHandler.withFilter","location":"http4k-core/org.http4k.routing/-routing-http-handler/with-filter.html","searchKeys":["withFilter","abstract override fun withFilter(new: Filter): RoutingHttpHandler","org.http4k.routing.RoutingHttpHandler.withFilter"]},{"name":"abstract val body: Body","description":"org.http4k.core.HttpMessage.body","location":"http4k-core/org.http4k.core/-http-message/body.html","searchKeys":["body","abstract val body: Body","org.http4k.core.HttpMessage.body"]},{"name":"abstract val headers: Headers","description":"org.http4k.core.HttpMessage.headers","location":"http4k-core/org.http4k.core/-http-message/headers.html","searchKeys":["headers","abstract val headers: Headers","org.http4k.core.HttpMessage.headers"]},{"name":"abstract val length: Long?","description":"org.http4k.core.Body.length","location":"http4k-core/org.http4k.core/-body/length.html","searchKeys":["length","abstract val length: Long?","org.http4k.core.Body.length"]},{"name":"abstract val meta: Meta","description":"org.http4k.lens.Failure.meta","location":"http4k-core/org.http4k.lens/-failure/meta.html","searchKeys":["meta","abstract val meta: Meta","org.http4k.lens.Failure.meta"]},{"name":"abstract val method: Method","description":"org.http4k.core.Request.method","location":"http4k-core/org.http4k.core/-request/method.html","searchKeys":["method","abstract val method: Method","org.http4k.core.Request.method"]},{"name":"abstract val payload: ByteBuffer","description":"org.http4k.core.Body.payload","location":"http4k-core/org.http4k.core/-body/payload.html","searchKeys":["payload","abstract val payload: ByteBuffer","org.http4k.core.Body.payload"]},{"name":"abstract val source: RequestSource?","description":"org.http4k.core.Request.source","location":"http4k-core/org.http4k.core/-request/source.html","searchKeys":["source","abstract val source: RequestSource?","org.http4k.core.Request.source"]},{"name":"abstract val status: Status","description":"org.http4k.core.Response.status","location":"http4k-core/org.http4k.core/-response/status.html","searchKeys":["status","abstract val status: Status","org.http4k.core.Response.status"]},{"name":"abstract val stream: InputStream","description":"org.http4k.core.Body.stream","location":"http4k-core/org.http4k.core/-body/stream.html","searchKeys":["stream","abstract val stream: InputStream","org.http4k.core.Body.stream"]},{"name":"abstract val uri: Uri","description":"org.http4k.core.Request.uri","location":"http4k-core/org.http4k.core/-request/uri.html","searchKeys":["uri","abstract val uri: Uri","org.http4k.core.Request.uri"]},{"name":"abstract val version: String","description":"org.http4k.core.HttpMessage.version","location":"http4k-core/org.http4k.core/-http-message/version.html","searchKeys":["version","abstract val version: String","org.http4k.core.HttpMessage.version"]},{"name":"abstract val xUriTemplate: UriTemplate","description":"org.http4k.routing.RequestWithRoute.xUriTemplate","location":"http4k-core/org.http4k.routing/-request-with-route/x-uri-template.html","searchKeys":["xUriTemplate","abstract val xUriTemplate: UriTemplate","org.http4k.routing.RequestWithRoute.xUriTemplate"]},{"name":"abstract val xUriTemplate: UriTemplate","description":"org.http4k.routing.ResponseWithRoute.xUriTemplate","location":"http4k-core/org.http4k.routing/-response-with-route/x-uri-template.html","searchKeys":["xUriTemplate","abstract val xUriTemplate: UriTemplate","org.http4k.routing.ResponseWithRoute.xUriTemplate"]},{"name":"class BasicCookieStorage : CookieStorage","description":"org.http4k.filter.cookie.BasicCookieStorage","location":"http4k-core/org.http4k.filter.cookie/-basic-cookie-storage/index.html","searchKeys":["BasicCookieStorage","class BasicCookieStorage : CookieStorage","org.http4k.filter.cookie.BasicCookieStorage"]},{"name":"class BiDiBodyLens<FINAL>(metas: List<Meta>, contentType: ContentType, get: (HttpMessage) -> FINAL, setLens: (FINAL, HttpMessage) -> HttpMessage) : BodyLens<FINAL> , LensInjectorExtractor<HttpMessage, FINAL> ","description":"org.http4k.lens.BiDiBodyLens","location":"http4k-core/org.http4k.lens/-bi-di-body-lens/index.html","searchKeys":["BiDiBodyLens","class BiDiBodyLens<FINAL>(metas: List<Meta>, contentType: ContentType, get: (HttpMessage) -> FINAL, setLens: (FINAL, HttpMessage) -> HttpMessage) : BodyLens<FINAL> , LensInjectorExtractor<HttpMessage, FINAL> ","org.http4k.lens.BiDiBodyLens"]},{"name":"class BiDiLens<in IN : Any, FINAL>(meta: Meta, get: (IN) -> FINAL, lensSet: (FINAL, IN) -> IN) : Lens<IN, FINAL> , LensInjectorExtractor<IN, FINAL> ","description":"org.http4k.lens.BiDiLens","location":"http4k-core/org.http4k.lens/-bi-di-lens/index.html","searchKeys":["BiDiLens","class BiDiLens<in IN : Any, FINAL>(meta: Meta, get: (IN) -> FINAL, lensSet: (FINAL, IN) -> IN) : Lens<IN, FINAL> , LensInjectorExtractor<IN, FINAL> ","org.http4k.lens.BiDiLens"]},{"name":"class BiDiPathLens<FINAL>(meta: Meta, get: (String) -> FINAL, set: (FINAL, Request) -> Request) : PathLens<FINAL> , LensInjectorExtractor<Request, FINAL> ","description":"org.http4k.lens.BiDiPathLens","location":"http4k-core/org.http4k.lens/-bi-di-path-lens/index.html","searchKeys":["BiDiPathLens","class BiDiPathLens<FINAL>(meta: Meta, get: (String) -> FINAL, set: (FINAL, Request) -> Request) : PathLens<FINAL> , LensInjectorExtractor<Request, FINAL> ","org.http4k.lens.BiDiPathLens"]},{"name":"class ETagValidationRequestParser","description":"org.http4k.core.etag.ETagValidationRequestParser","location":"http4k-core/org.http4k.core.etag/-e-tag-validation-request-parser/index.html","searchKeys":["ETagValidationRequestParser","class ETagValidationRequestParser","org.http4k.core.etag.ETagValidationRequestParser"]},{"name":"class EnumParam<T : Enum<T>>(val clz: KClass<T>) : ParamMeta","description":"org.http4k.lens.ParamMeta.EnumParam","location":"http4k-core/org.http4k.lens/-param-meta/-enum-param/index.html","searchKeys":["EnumParam","class EnumParam<T : Enum<T>>(val clz: KClass<T>) : ParamMeta","org.http4k.lens.ParamMeta.EnumParam"]},{"name":"class EtagSupport : Filter","description":"org.http4k.filter.ResponseFilters.EtagSupport","location":"http4k-core/org.http4k.filter/-response-filters/-etag-support/index.html","searchKeys":["EtagSupport","class EtagSupport : Filter","org.http4k.filter.ResponseFilters.EtagSupport"]},{"name":"class FollowRedirects : Filter","description":"org.http4k.filter.ClientFilters.FollowRedirects","location":"http4k-core/org.http4k.filter/-client-filters/-follow-redirects/index.html","searchKeys":["FollowRedirects","class FollowRedirects : Filter","org.http4k.filter.ClientFilters.FollowRedirects"]},{"name":"class GZipContentTypes(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory()) : Filter","description":"org.http4k.filter.ResponseFilters.GZipContentTypes","location":"http4k-core/org.http4k.filter/-response-filters/-g-zip-content-types/index.html","searchKeys":["GZipContentTypes","class GZipContentTypes(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory()) : Filter","org.http4k.filter.ResponseFilters.GZipContentTypes"]},{"name":"class GZipContentTypes(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory()) : Filter","description":"org.http4k.filter.ServerFilters.GZipContentTypes","location":"http4k-core/org.http4k.filter/-server-filters/-g-zip-content-types/index.html","searchKeys":["GZipContentTypes","class GZipContentTypes(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory()) : Filter","org.http4k.filter.ServerFilters.GZipContentTypes"]},{"name":"class Http4kJakartaServletAdapter(handler: HttpHandler)","description":"org.http4k.servlet.jakarta.Http4kJakartaServletAdapter","location":"http4k-core/org.http4k.servlet.jakarta/-http4k-jakarta-servlet-adapter/index.html","searchKeys":["Http4kJakartaServletAdapter","class Http4kJakartaServletAdapter(handler: HttpHandler)","org.http4k.servlet.jakarta.Http4kJakartaServletAdapter"]},{"name":"class Http4kServletAdapter(handler: HttpHandler)","description":"org.http4k.servlet.Http4kServletAdapter","location":"http4k-core/org.http4k.servlet/-http4k-servlet-adapter/index.html","searchKeys":["Http4kServletAdapter","class Http4kServletAdapter(handler: HttpHandler)","org.http4k.servlet.Http4kServletAdapter"]},{"name":"class HttpExchangeHandler(handler: HttpHandler) : HttpHandler","description":"org.http4k.server.HttpExchangeHandler","location":"http4k-core/org.http4k.server/-http-exchange-handler/index.html","searchKeys":["HttpExchangeHandler","class HttpExchangeHandler(handler: HttpHandler) : HttpHandler","org.http4k.server.HttpExchangeHandler"]},{"name":"class HttpHandlerServlet(handler: HttpHandler) : HttpServlet","description":"org.http4k.servlet.HttpHandlerServlet","location":"http4k-core/org.http4k.servlet/-http-handler-servlet/index.html","searchKeys":["HttpHandlerServlet","class HttpHandlerServlet(handler: HttpHandler) : HttpServlet","org.http4k.servlet.HttpHandlerServlet"]},{"name":"class HttpHandlerServlet(handler: HttpHandler) : HttpServlet","description":"org.http4k.servlet.jakarta.HttpHandlerServlet","location":"http4k-core/org.http4k.servlet.jakarta/-http-handler-servlet/index.html","searchKeys":["HttpHandlerServlet","class HttpHandlerServlet(handler: HttpHandler) : HttpServlet","org.http4k.servlet.jakarta.HttpHandlerServlet"]},{"name":"class Incoming(val uri: Uri, val method: Method, val status: Status, val latency: Long, val xUriTemplate: String) : HttpEvent","description":"org.http4k.events.HttpEvent.Incoming","location":"http4k-core/org.http4k.events/-http-event/-incoming/index.html","searchKeys":["Incoming","class Incoming(val uri: Uri, val method: Method, val status: Status, val latency: Long, val xUriTemplate: String) : HttpEvent","org.http4k.events.HttpEvent.Incoming"]},{"name":"class LensFailure(val failures: List<Failure>, val cause: Exception? = null, val target: Any? = null, message: String = failures.joinToString { it.toString() }) : Exception","description":"org.http4k.lens.LensFailure","location":"http4k-core/org.http4k.lens/-lens-failure/index.html","searchKeys":["LensFailure","class LensFailure(val failures: List<Failure>, val cause: Exception? = null, val target: Any? = null, message: String = failures.joinToString { it.toString() }) : Exception","org.http4k.lens.LensFailure"]},{"name":"class LensGet<in IN, out OUT>","description":"org.http4k.lens.LensGet","location":"http4k-core/org.http4k.lens/-lens-get/index.html","searchKeys":["LensGet","class LensGet<in IN, out OUT>","org.http4k.lens.LensGet"]},{"name":"class LensSet<IN, in OUT>","description":"org.http4k.lens.LensSet","location":"http4k-core/org.http4k.lens/-lens-set/index.html","searchKeys":["LensSet","class LensSet<IN, in OUT>","org.http4k.lens.LensSet"]},{"name":"class Memory(compressionLevel: Int = DEFAULT_COMPRESSION) : GzipCompressionMode","description":"org.http4k.filter.GzipCompressionMode.Memory","location":"http4k-core/org.http4k.filter/-gzip-compression-mode/-memory/index.html","searchKeys":["Memory","class Memory(compressionLevel: Int = DEFAULT_COMPRESSION) : GzipCompressionMode","org.http4k.filter.GzipCompressionMode.Memory"]},{"name":"class MimeTypes","description":"org.http4k.core.MimeTypes","location":"http4k-core/org.http4k.core/-mime-types/index.html","searchKeys":["MimeTypes","class MimeTypes","org.http4k.core.MimeTypes"]},{"name":"class Outgoing(val uri: Uri, val method: Method, val status: Status, val latency: Long, val xUriTemplate: String) : HttpEvent","description":"org.http4k.events.HttpEvent.Outgoing","location":"http4k-core/org.http4k.events/-http-event/-outgoing/index.html","searchKeys":["Outgoing","class Outgoing(val uri: Uri, val method: Method, val status: Status, val latency: Long, val xUriTemplate: String) : HttpEvent","org.http4k.events.HttpEvent.Outgoing"]},{"name":"class PathMethod(path: String, method: Method)","description":"org.http4k.routing.PathMethod","location":"http4k-core/org.http4k.routing/-path-method/index.html","searchKeys":["PathMethod","class PathMethod(path: String, method: Method)","org.http4k.routing.PathMethod"]},{"name":"class RecordingEvents : Function1<Event, Unit> , Iterable<Event> ","description":"org.http4k.testing.RecordingEvents","location":"http4k-core/org.http4k.testing/-recording-events/index.html","searchKeys":["RecordingEvents","class RecordingEvents : Function1<Event, Unit> , Iterable<Event> ","org.http4k.testing.RecordingEvents"]},{"name":"class RequestContext(val id: UUID = UUID.randomUUID())","description":"org.http4k.core.RequestContext","location":"http4k-core/org.http4k.core/-request-context/index.html","searchKeys":["RequestContext","class RequestContext(val id: UUID = UUID.randomUUID())","org.http4k.core.RequestContext"]},{"name":"class RequestContexts(storeId: String? = null) : Store<RequestContext> ","description":"org.http4k.core.RequestContexts","location":"http4k-core/org.http4k.core/-request-contexts/index.html","searchKeys":["RequestContexts","class RequestContexts(storeId: String? = null) : Store<RequestContext> ","org.http4k.core.RequestContexts"]},{"name":"class RoutedResponse(delegate: Response, val xUriTemplate: UriTemplate) : Response, ResponseWithRoute","description":"org.http4k.routing.RoutedResponse","location":"http4k-core/org.http4k.routing/-routed-response/index.html","searchKeys":["RoutedResponse","class RoutedResponse(delegate: Response, val xUriTemplate: UriTemplate) : Response, ResponseWithRoute","org.http4k.routing.RoutedResponse"]},{"name":"class Status","description":"org.http4k.core.Status","location":"http4k-core/org.http4k.core/-status/index.html","searchKeys":["Status","class Status","org.http4k.core.Status"]},{"name":"class StreamBody(val stream: InputStream, val length: Long? = null) : Body","description":"org.http4k.core.StreamBody","location":"http4k-core/org.http4k.core/-stream-body/index.html","searchKeys":["StreamBody","class StreamBody(val stream: InputStream, val length: Long? = null) : Body","org.http4k.core.StreamBody"]},{"name":"class Streaming(compressionLevel: Int = DEFAULT_COMPRESSION) : GzipCompressionMode","description":"org.http4k.filter.GzipCompressionMode.Streaming","location":"http4k-core/org.http4k.filter/-gzip-compression-mode/-streaming/index.html","searchKeys":["Streaming","class Streaming(compressionLevel: Int = DEFAULT_COMPRESSION) : GzipCompressionMode","org.http4k.filter.GzipCompressionMode.Streaming"]},{"name":"class SunHttp(val port: Int = 8000, val stopMode: ServerConfig.StopMode = Immediate) : ServerConfig","description":"org.http4k.server.SunHttp","location":"http4k-core/org.http4k.server/-sun-http/index.html","searchKeys":["SunHttp","class SunHttp(val port: Int = 8000, val stopMode: ServerConfig.StopMode = Immediate) : ServerConfig","org.http4k.server.SunHttp"]},{"name":"class SunHttpLoom(val port: Int = 8000, val stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate) : ServerConfig","description":"org.http4k.server.SunHttpLoom","location":"http4k-core/org.http4k.server/-sun-http-loom/index.html","searchKeys":["SunHttpLoom","class SunHttpLoom(val port: Int = 8000, val stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate) : ServerConfig","org.http4k.server.SunHttpLoom"]},{"name":"class UnsupportedStopMode(stopMode: ServerConfig.StopMode) : IllegalArgumentException","description":"org.http4k.server.ServerConfig.UnsupportedStopMode","location":"http4k-core/org.http4k.server/-server-config/-unsupported-stop-mode/index.html","searchKeys":["UnsupportedStopMode","class UnsupportedStopMode(stopMode: ServerConfig.StopMode) : IllegalArgumentException","org.http4k.server.ServerConfig.UnsupportedStopMode"]},{"name":"const val FLASH_COOKIE: String","description":"org.http4k.filter.FLASH_COOKIE","location":"http4k-core/org.http4k.filter/-f-l-a-s-h_-c-o-o-k-i-e.html","searchKeys":["FLASH_COOKIE","const val FLASH_COOKIE: String","org.http4k.filter.FLASH_COOKIE"]},{"name":"const val HTTP_1_1: String","description":"org.http4k.core.HttpMessage.Companion.HTTP_1_1","location":"http4k-core/org.http4k.core/-http-message/-companion/-h-t-t-p_1_1.html","searchKeys":["HTTP_1_1","const val HTTP_1_1: String","org.http4k.core.HttpMessage.Companion.HTTP_1_1"]},{"name":"const val HTTP_2: String","description":"org.http4k.core.HttpMessage.Companion.HTTP_2","location":"http4k-core/org.http4k.core/-http-message/-companion/-h-t-t-p_2.html","searchKeys":["HTTP_2","const val HTTP_2: String","org.http4k.core.HttpMessage.Companion.HTTP_2"]},{"name":"constructor()","description":"org.http4k.core.etag.ETagValidationRequestParser.ETagValidationRequestParser","location":"http4k-core/org.http4k.core.etag/-e-tag-validation-request-parser/-e-tag-validation-request-parser.html","searchKeys":["ETagValidationRequestParser","constructor()","org.http4k.core.etag.ETagValidationRequestParser.ETagValidationRequestParser"]},{"name":"constructor()","description":"org.http4k.filter.ClientFilters.FollowRedirects.FollowRedirects","location":"http4k-core/org.http4k.filter/-client-filters/-follow-redirects/-follow-redirects.html","searchKeys":["FollowRedirects","constructor()","org.http4k.filter.ClientFilters.FollowRedirects.FollowRedirects"]},{"name":"constructor()","description":"org.http4k.filter.ResponseFilters.EtagSupport.EtagSupport","location":"http4k-core/org.http4k.filter/-response-filters/-etag-support/-etag-support.html","searchKeys":["EtagSupport","constructor()","org.http4k.filter.ResponseFilters.EtagSupport.EtagSupport"]},{"name":"constructor()","description":"org.http4k.filter.cookie.BasicCookieStorage.BasicCookieStorage","location":"http4k-core/org.http4k.filter.cookie/-basic-cookie-storage/-basic-cookie-storage.html","searchKeys":["BasicCookieStorage","constructor()","org.http4k.filter.cookie.BasicCookieStorage.BasicCookieStorage"]},{"name":"constructor()","description":"org.http4k.testing.RecordingEvents.RecordingEvents","location":"http4k-core/org.http4k.testing/-recording-events/-recording-events.html","searchKeys":["RecordingEvents","constructor()","org.http4k.testing.RecordingEvents.RecordingEvents"]},{"name":"constructor(address: String, port: Int? = 0, scheme: String? = null)","description":"org.http4k.core.RequestSource.RequestSource","location":"http4k-core/org.http4k.core/-request-source/-request-source.html","searchKeys":["RequestSource","constructor(address: String, port: Int? = 0, scheme: String? = null)","org.http4k.core.RequestSource.RequestSource"]},{"name":"constructor(body: Body, contentEncoding: String?)","description":"org.http4k.filter.CompressionResult.CompressionResult","location":"http4k-core/org.http4k.filter/-compression-result/-compression-result.html","searchKeys":["CompressionResult","constructor(body: Body, contentEncoding: String?)","org.http4k.filter.CompressionResult.CompressionResult"]},{"name":"constructor(causes: List<LensFailure>)","description":"org.http4k.lens.LensFailures.LensFailures","location":"http4k-core/org.http4k.lens/-lens-failures/-lens-failures.html","searchKeys":["LensFailures","constructor(causes: List<LensFailure>)","org.http4k.lens.LensFailures.LensFailures"]},{"name":"constructor(clazz: Class<OUT>, asOut: (IN) -> OUT, asIn: (OUT) -> IN)","description":"org.http4k.lens.BiDiMapping.BiDiMapping","location":"http4k-core/org.http4k.lens/-bi-di-mapping/-bi-di-mapping.html","searchKeys":["BiDiMapping","constructor(clazz: Class<OUT>, asOut: (IN) -> OUT, asIn: (OUT) -> IN)","org.http4k.lens.BiDiMapping.BiDiMapping"]},{"name":"constructor(clz: KClass<T>)","description":"org.http4k.lens.ParamMeta.EnumParam.EnumParam","location":"http4k-core/org.http4k.lens/-param-meta/-enum-param/-enum-param.html","searchKeys":["EnumParam","constructor(clz: KClass<T>)","org.http4k.lens.ParamMeta.EnumParam.EnumParam"]},{"name":"constructor(code: Int, description: String?)","description":"org.http4k.core.Status.Status","location":"http4k-core/org.http4k.core/-status/-status.html","searchKeys":["Status","constructor(code: Int, description: String?)","org.http4k.core.Status.Status"]},{"name":"constructor(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory())","description":"org.http4k.filter.ResponseFilters.GZipContentTypes.GZipContentTypes","location":"http4k-core/org.http4k.filter/-response-filters/-g-zip-content-types/-g-zip-content-types.html","searchKeys":["GZipContentTypes","constructor(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory())","org.http4k.filter.ResponseFilters.GZipContentTypes.GZipContentTypes"]},{"name":"constructor(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory())","description":"org.http4k.filter.ServerFilters.GZipContentTypes.GZipContentTypes","location":"http4k-core/org.http4k.filter/-server-filters/-g-zip-content-types/-g-zip-content-types.html","searchKeys":["GZipContentTypes","constructor(compressibleContentTypes: Set<ContentType>, compressionMode: GzipCompressionMode = Memory())","org.http4k.filter.ServerFilters.GZipContentTypes.GZipContentTypes"]},{"name":"constructor(compressionLevel: Int = DEFAULT_COMPRESSION)","description":"org.http4k.filter.GzipCompressionMode.Memory.Memory","location":"http4k-core/org.http4k.filter/-gzip-compression-mode/-memory/-memory.html","searchKeys":["Memory","constructor(compressionLevel: Int = DEFAULT_COMPRESSION)","org.http4k.filter.GzipCompressionMode.Memory.Memory"]},{"name":"constructor(compressionLevel: Int = DEFAULT_COMPRESSION)","description":"org.http4k.filter.GzipCompressionMode.Streaming.Streaming","location":"http4k-core/org.http4k.filter/-gzip-compression-mode/-streaming/-streaming.html","searchKeys":["Streaming","constructor(compressionLevel: Int = DEFAULT_COMPRESSION)","org.http4k.filter.GzipCompressionMode.Streaming.Streaming"]},{"name":"constructor(contentTypes: List<ContentType>, directives: Parameters)","description":"org.http4k.core.Accept.Accept","location":"http4k-core/org.http4k.core/-accept/-accept.html","searchKeys":["Accept","constructor(contentTypes: List<ContentType>, directives: Parameters)","org.http4k.core.Accept.Accept"]},{"name":"constructor(cookie: Cookie, created: Instant)","description":"org.http4k.filter.cookie.LocalCookie.LocalCookie","location":"http4k-core/org.http4k.filter.cookie/-local-cookie/-local-cookie.html","searchKeys":["LocalCookie","constructor(cookie: Cookie, created: Instant)","org.http4k.filter.cookie.LocalCookie.LocalCookie"]},{"name":"constructor(counterDescription: Pair<String, String>, timerDescription: Pair<String, String>, labeler: HttpTransactionLabeler)","description":"org.http4k.metrics.MetricsDefaults.MetricsDefaults","location":"http4k-core/org.http4k.metrics/-metrics-defaults/-metrics-defaults.html","searchKeys":["MetricsDefaults","constructor(counterDescription: Pair<String, String>, timerDescription: Pair<String, String>, labeler: HttpTransactionLabeler)","org.http4k.metrics.MetricsDefaults.MetricsDefaults"]},{"name":"constructor(credentials: T, expiry: Instant)","description":"org.http4k.security.ExpiringCredentials.ExpiringCredentials","location":"http4k-core/org.http4k.security/-expiring-credentials/-expiring-credentials.html","searchKeys":["ExpiringCredentials","constructor(credentials: T, expiry: Instant)","org.http4k.security.ExpiringCredentials.ExpiringCredentials"]},{"name":"constructor(delegate: Request, xUriTemplate: UriTemplate)","description":"org.http4k.routing.RoutedRequest.RoutedRequest","location":"http4k-core/org.http4k.routing/-routed-request/-routed-request.html","searchKeys":["RoutedRequest","constructor(delegate: Request, xUriTemplate: UriTemplate)","org.http4k.routing.RoutedRequest.RoutedRequest"]},{"name":"constructor(delegate: Response, xUriTemplate: UriTemplate)","description":"org.http4k.routing.RoutedResponse.RoutedResponse","location":"http4k-core/org.http4k.routing/-routed-response/-routed-response.html","searchKeys":["RoutedResponse","constructor(delegate: Response, xUriTemplate: UriTemplate)","org.http4k.routing.RoutedResponse.RoutedResponse"]},{"name":"constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","description":"org.http4k.routing.RouterMatch.MatchedWithoutHandler.MatchedWithoutHandler","location":"http4k-core/org.http4k.routing/-router-match/-matched-without-handler/-matched-without-handler.html","searchKeys":["MatchedWithoutHandler","constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","org.http4k.routing.RouterMatch.MatchedWithoutHandler.MatchedWithoutHandler"]},{"name":"constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","description":"org.http4k.routing.RouterMatch.MethodNotMatched.MethodNotMatched","location":"http4k-core/org.http4k.routing/-router-match/-method-not-matched/-method-not-matched.html","searchKeys":["MethodNotMatched","constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","org.http4k.routing.RouterMatch.MethodNotMatched.MethodNotMatched"]},{"name":"constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","description":"org.http4k.routing.RouterMatch.Unmatched.Unmatched","location":"http4k-core/org.http4k.routing/-router-match/-unmatched/-unmatched.html","searchKeys":["Unmatched","constructor(description: RouterDescription, subMatches: List<RouterMatch> = listOf())","org.http4k.routing.RouterMatch.Unmatched.Unmatched"]},{"name":"constructor(description: String, children: List<RouterDescription> = listOf())","description":"org.http4k.routing.RouterDescription.RouterDescription","location":"http4k-core/org.http4k.routing/-router-description/-router-description.html","searchKeys":["RouterDescription","constructor(description: String, children: List<RouterDescription> = listOf())","org.http4k.routing.RouterDescription.RouterDescription"]},{"name":"constructor(event: Event, metadata: Map<String, Any> = emptyMap())","description":"org.http4k.events.MetadataEvent.MetadataEvent","location":"http4k-core/org.http4k.events/-metadata-event/-metadata-event.html","searchKeys":["MetadataEvent","constructor(event: Event, metadata: Map<String, Any> = emptyMap())","org.http4k.events.MetadataEvent.MetadataEvent"]},{"name":"constructor(failures: List<Failure>, cause: Exception? = null, target: Any? = null, message: String = failures.joinToString { it.toString() })","description":"org.http4k.lens.LensFailure.LensFailure","location":"http4k-core/org.http4k.lens/-lens-failure/-lens-failure.html","searchKeys":["LensFailure","constructor(failures: List<Failure>, cause: Exception? = null, target: Any? = null, message: String = failures.joinToString { it.toString() })","org.http4k.lens.LensFailure.LensFailure"]},{"name":"constructor(fields: Map<String, List<String>> = emptyMap(), errors: List<Failure> = emptyList())","description":"org.http4k.lens.WebForm.WebForm","location":"http4k-core/org.http4k.lens/-web-form/-web-form.html","searchKeys":["WebForm","constructor(fields: Map<String, List<String>> = emptyMap(), errors: List<Failure> = emptyList())","org.http4k.lens.WebForm.WebForm"]},{"name":"constructor(fn: (Uri) -> DOMAIN, validation: Validation<Uri>? = null)","description":"org.http4k.core.UriValueFactory.UriValueFactory","location":"http4k-core/org.http4k.core/-uri-value-factory/-uri-value-factory.html","searchKeys":["UriValueFactory","constructor(fn: (Uri) -> DOMAIN, validation: Validation<Uri>? = null)","org.http4k.core.UriValueFactory.UriValueFactory"]},{"name":"constructor(foregroundColour: ForegroundColour = Default, backgroundColour: BackgroundColour = BackgroundColour.Default, variation: Variation = Variation.Default)","description":"org.http4k.routing.inspect.TextStyle.TextStyle","location":"http4k-core/org.http4k.routing.inspect/-text-style/-text-style.html","searchKeys":["TextStyle","constructor(foregroundColour: ForegroundColour = Default, backgroundColour: BackgroundColour = BackgroundColour.Default, variation: Variation = Variation.Default)","org.http4k.routing.inspect.TextStyle.TextStyle"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.HttpExchangeHandler.HttpExchangeHandler","location":"http4k-core/org.http4k.server/-http-exchange-handler/-http-exchange-handler.html","searchKeys":["HttpExchangeHandler","constructor(handler: HttpHandler)","org.http4k.server.HttpExchangeHandler.HttpExchangeHandler"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.servlet.Http4kServletAdapter.Http4kServletAdapter","location":"http4k-core/org.http4k.servlet/-http4k-servlet-adapter/-http4k-servlet-adapter.html","searchKeys":["Http4kServletAdapter","constructor(handler: HttpHandler)","org.http4k.servlet.Http4kServletAdapter.Http4kServletAdapter"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.servlet.HttpHandlerServlet.HttpHandlerServlet","location":"http4k-core/org.http4k.servlet/-http-handler-servlet/-http-handler-servlet.html","searchKeys":["HttpHandlerServlet","constructor(handler: HttpHandler)","org.http4k.servlet.HttpHandlerServlet.HttpHandlerServlet"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.servlet.jakarta.Http4kJakartaServletAdapter.Http4kJakartaServletAdapter","location":"http4k-core/org.http4k.servlet.jakarta/-http4k-jakarta-servlet-adapter/-http4k-jakarta-servlet-adapter.html","searchKeys":["Http4kJakartaServletAdapter","constructor(handler: HttpHandler)","org.http4k.servlet.jakarta.Http4kJakartaServletAdapter.Http4kJakartaServletAdapter"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.servlet.jakarta.HttpHandlerServlet.HttpHandlerServlet","location":"http4k-core/org.http4k.servlet.jakarta/-http-handler-servlet/-http-handler-servlet.html","searchKeys":["HttpHandlerServlet","constructor(handler: HttpHandler)","org.http4k.servlet.jakarta.HttpHandlerServlet.HttpHandlerServlet"]},{"name":"constructor(httpHandler: HttpHandler, description: RouterDescription, subMatches: List<RouterMatch> = listOf())","description":"org.http4k.routing.RouterMatch.MatchingHandler.MatchingHandler","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/-matching-handler.html","searchKeys":["MatchingHandler","constructor(httpHandler: HttpHandler, description: RouterDescription, subMatches: List<RouterMatch> = listOf())","org.http4k.routing.RouterMatch.MatchingHandler.MatchingHandler"]},{"name":"constructor(id: UUID = UUID.randomUUID())","description":"org.http4k.core.RequestContext.RequestContext","location":"http4k-core/org.http4k.core/-request-context/-request-context.html","searchKeys":["RequestContext","constructor(id: UUID = UUID.randomUUID())","org.http4k.core.RequestContext.RequestContext"]},{"name":"constructor(itemType: ParamMeta)","description":"org.http4k.lens.ParamMeta.ArrayParam.ArrayParam","location":"http4k-core/org.http4k.lens/-param-meta/-array-param/-array-param.html","searchKeys":["ArrayParam","constructor(itemType: ParamMeta)","org.http4k.lens.ParamMeta.ArrayParam.ArrayParam"]},{"name":"constructor(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>)","description":"org.http4k.lens.LensSpec.LensSpec","location":"http4k-core/org.http4k.lens/-lens-spec/-lens-spec.html","searchKeys":["LensSpec","constructor(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>)","org.http4k.lens.LensSpec.LensSpec"]},{"name":"constructor(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>, set: LensSet<IN, OUT>)","description":"org.http4k.lens.BiDiLensSpec.BiDiLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/-bi-di-lens-spec.html","searchKeys":["BiDiLensSpec","constructor(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>, set: LensSet<IN, OUT>)","org.http4k.lens.BiDiLensSpec.BiDiLensSpec"]},{"name":"constructor(maxAge: MaxAgeTtl, staleIfErrorTtl: StaleIfErrorTtl, staleWhenRevalidateTtl: StaleWhenRevalidateTtl)","description":"org.http4k.filter.DefaultCacheTimings.DefaultCacheTimings","location":"http4k-core/org.http4k.filter/-default-cache-timings/-default-cache-timings.html","searchKeys":["DefaultCacheTimings","constructor(maxAge: MaxAgeTtl, staleIfErrorTtl: StaleIfErrorTtl, staleWhenRevalidateTtl: StaleWhenRevalidateTtl)","org.http4k.filter.DefaultCacheTimings.DefaultCacheTimings"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"org.http4k.events.Event.Companion.Error.Error","location":"http4k-core/org.http4k.events/-event/-companion/-error/-error.html","searchKeys":["Error","constructor(message: String, cause: Throwable? = null)","org.http4k.events.Event.Companion.Error.Error"]},{"name":"constructor(meta: Meta)","description":"org.http4k.lens.Invalid.Invalid","location":"http4k-core/org.http4k.lens/-invalid/-invalid.html","searchKeys":["Invalid","constructor(meta: Meta)","org.http4k.lens.Invalid.Invalid"]},{"name":"constructor(meta: Meta)","description":"org.http4k.lens.Missing.Missing","location":"http4k-core/org.http4k.lens/-missing/-missing.html","searchKeys":["Missing","constructor(meta: Meta)","org.http4k.lens.Missing.Missing"]},{"name":"constructor(meta: Meta)","description":"org.http4k.lens.Unsupported.Unsupported","location":"http4k-core/org.http4k.lens/-unsupported/-unsupported.html","searchKeys":["Unsupported","constructor(meta: Meta)","org.http4k.lens.Unsupported.Unsupported"]},{"name":"constructor(meta: Meta, get: (IN) -> FINAL, lensSet: (FINAL, IN) -> IN)","description":"org.http4k.lens.BiDiLens.BiDiLens","location":"http4k-core/org.http4k.lens/-bi-di-lens/-bi-di-lens.html","searchKeys":["BiDiLens","constructor(meta: Meta, get: (IN) -> FINAL, lensSet: (FINAL, IN) -> IN)","org.http4k.lens.BiDiLens.BiDiLens"]},{"name":"constructor(meta: Meta, get: (String) -> FINAL)","description":"org.http4k.lens.PathLens.PathLens","location":"http4k-core/org.http4k.lens/-path-lens/-path-lens.html","searchKeys":["PathLens","constructor(meta: Meta, get: (String) -> FINAL)","org.http4k.lens.PathLens.PathLens"]},{"name":"constructor(meta: Meta, get: (String) -> FINAL, set: (FINAL, Request) -> Request)","description":"org.http4k.lens.BiDiPathLens.BiDiPathLens","location":"http4k-core/org.http4k.lens/-bi-di-path-lens/-bi-di-path-lens.html","searchKeys":["BiDiPathLens","constructor(meta: Meta, get: (String) -> FINAL, set: (FINAL, Request) -> Request)","org.http4k.lens.BiDiPathLens.BiDiPathLens"]},{"name":"constructor(meta: Meta, lensGet: (IN) -> FINAL)","description":"org.http4k.lens.Lens.Lens","location":"http4k-core/org.http4k.lens/-lens/-lens.html","searchKeys":["Lens","constructor(meta: Meta, lensGet: (IN) -> FINAL)","org.http4k.lens.Lens.Lens"]},{"name":"constructor(metas: List<Meta>, contentType: ContentType, get: (HttpMessage) -> FINAL, setLens: (FINAL, HttpMessage) -> HttpMessage)","description":"org.http4k.lens.BiDiBodyLens.BiDiBodyLens","location":"http4k-core/org.http4k.lens/-bi-di-body-lens/-bi-di-body-lens.html","searchKeys":["BiDiBodyLens","constructor(metas: List<Meta>, contentType: ContentType, get: (HttpMessage) -> FINAL, setLens: (FINAL, HttpMessage) -> HttpMessage)","org.http4k.lens.BiDiBodyLens.BiDiBodyLens"]},{"name":"constructor(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>)","description":"org.http4k.lens.BodyLensSpec.BodyLensSpec","location":"http4k-core/org.http4k.lens/-body-lens-spec/-body-lens-spec.html","searchKeys":["BodyLensSpec","constructor(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>)","org.http4k.lens.BodyLensSpec.BodyLensSpec"]},{"name":"constructor(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>, set: LensSet<HttpMessage, OUT>)","description":"org.http4k.lens.BiDiBodyLensSpec.BiDiBodyLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-body-lens-spec/-bi-di-body-lens-spec.html","searchKeys":["BiDiBodyLensSpec","constructor(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>, set: LensSet<HttpMessage, OUT>)","org.http4k.lens.BiDiBodyLensSpec.BiDiBodyLensSpec"]},{"name":"constructor(metas: List<Meta>, contentType: ContentType, getLens: (HttpMessage) -> FINAL)","description":"org.http4k.lens.BodyLens.BodyLens","location":"http4k-core/org.http4k.lens/-body-lens/-body-lens.html","searchKeys":["BodyLens","constructor(metas: List<Meta>, contentType: ContentType, getLens: (HttpMessage) -> FINAL)","org.http4k.lens.BodyLens.BodyLens"]},{"name":"constructor(method: Method, uri: Uri, headers: Headers = listOf(), body: Body = EMPTY, version: String = HTTP_1_1, source: RequestSource? = null)","description":"org.http4k.core.MemoryRequest.MemoryRequest","location":"http4k-core/org.http4k.core/-memory-request/-memory-request.html","searchKeys":["MemoryRequest","constructor(method: Method, uri: Uri, headers: Headers = listOf(), body: Body = EMPTY, version: String = HTTP_1_1, source: RequestSource? = null)","org.http4k.core.MemoryRequest.MemoryRequest"]},{"name":"constructor(name: String)","description":"org.http4k.events.EventCategory.EventCategory","location":"http4k-core/org.http4k.events/-event-category/-event-category.html","searchKeys":["EventCategory","constructor(name: String)","org.http4k.events.EventCategory.EventCategory"]},{"name":"constructor(name: String, value: Duration)","description":"org.http4k.filter.CacheControlHeaderPart.CacheControlHeaderPart","location":"http4k-core/org.http4k.filter/-cache-control-header-part/-cache-control-header-part.html","searchKeys":["CacheControlHeaderPart","constructor(name: String, value: Duration)","org.http4k.filter.CacheControlHeaderPart.CacheControlHeaderPart"]},{"name":"constructor(name: String, value: String, maxAge: Long? = null, expires: Instant? = null, domain: String? = null, path: String? = null, secure: Boolean = false, httpOnly: Boolean = false, sameSite: SameSite? = null)","description":"org.http4k.core.cookie.Cookie.Cookie","location":"http4k-core/org.http4k.core.cookie/-cookie/-cookie.html","searchKeys":["Cookie","constructor(name: String, value: String, maxAge: Long? = null, expires: Instant? = null, domain: String? = null, path: String? = null, secure: Boolean = false, httpOnly: Boolean = false, sameSite: SameSite? = null)","org.http4k.core.cookie.Cookie.Cookie"]},{"name":"constructor(originPolicy: OriginPolicy, headers: List<String>, methods: List<Method>, credentials: Boolean = false, exposedHeaders: List<String> = emptyList(), maxAge: Int? = null)","description":"org.http4k.filter.CorsPolicy.CorsPolicy","location":"http4k-core/org.http4k.filter/-cors-policy/-cors-policy.html","searchKeys":["CorsPolicy","constructor(originPolicy: OriginPolicy, headers: List<String>, methods: List<Method>, credentials: Boolean = false, exposedHeaders: List<String> = emptyList(), maxAge: Int? = null)","org.http4k.filter.CorsPolicy.CorsPolicy"]},{"name":"constructor(paramMeta: ParamMeta, get: LensGet<String, OUT>)","description":"org.http4k.lens.PathLensSpec.PathLensSpec","location":"http4k-core/org.http4k.lens/-path-lens-spec/-path-lens-spec.html","searchKeys":["PathLensSpec","constructor(paramMeta: ParamMeta, get: LensGet<String, OUT>)","org.http4k.lens.PathLensSpec.PathLensSpec"]},{"name":"constructor(paramMeta: ParamMeta, get: LensGet<String, OUT>, set: LensSet<Request, OUT>)","description":"org.http4k.lens.BiDiPathLensSpec.BiDiPathLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-path-lens-spec/-bi-di-path-lens-spec.html","searchKeys":["BiDiPathLensSpec","constructor(paramMeta: ParamMeta, get: LensGet<String, OUT>, set: LensSet<Request, OUT>)","org.http4k.lens.BiDiPathLensSpec.BiDiPathLensSpec"]},{"name":"constructor(path: String, method: Method)","description":"org.http4k.routing.PathMethod.PathMethod","location":"http4k-core/org.http4k.routing/-path-method/-path-method.html","searchKeys":["PathMethod","constructor(path: String, method: Method)","org.http4k.routing.PathMethod.PathMethod"]},{"name":"constructor(pathSegments: String, resourceLoader: ResourceLoader, extraFileExtensionToContentTypes: Map<String, ContentType>, filter: Filter = Filter.NoOp)","description":"org.http4k.routing.StaticRoutingHttpHandler.StaticRoutingHttpHandler","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/-static-routing-http-handler.html","searchKeys":["StaticRoutingHttpHandler","constructor(pathSegments: String, resourceLoader: ResourceLoader, extraFileExtensionToContentTypes: Map<String, ContentType>, filter: Filter = Filter.NoOp)","org.http4k.routing.StaticRoutingHttpHandler.StaticRoutingHttpHandler"]},{"name":"constructor(payload: ByteArray)","description":"org.http4k.core.MemoryBody.MemoryBody","location":"http4k-core/org.http4k.core/-memory-body/-memory-body.html","searchKeys":["MemoryBody","constructor(payload: ByteArray)","org.http4k.core.MemoryBody.MemoryBody"]},{"name":"constructor(payload: ByteBuffer)","description":"org.http4k.core.MemoryBody.MemoryBody","location":"http4k-core/org.http4k.core/-memory-body/-memory-body.html","searchKeys":["MemoryBody","constructor(payload: ByteBuffer)","org.http4k.core.MemoryBody.MemoryBody"]},{"name":"constructor(payload: String)","description":"org.http4k.core.MemoryBody.MemoryBody","location":"http4k-core/org.http4k.core/-memory-body/-memory-body.html","searchKeys":["MemoryBody","constructor(payload: String)","org.http4k.core.MemoryBody.MemoryBody"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.SunHttp.SunHttp","location":"http4k-core/org.http4k.server/-sun-http/-sun-http.html","searchKeys":["SunHttp","constructor(port: Int = 8000)","org.http4k.server.SunHttp.SunHttp"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.SunHttpLoom.SunHttpLoom","location":"http4k-core/org.http4k.server/-sun-http-loom/-sun-http-loom.html","searchKeys":["SunHttpLoom","constructor(port: Int = 8000)","org.http4k.server.SunHttpLoom.SunHttpLoom"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode = Immediate)","description":"org.http4k.server.SunHttp.SunHttp","location":"http4k-core/org.http4k.server/-sun-http/-sun-http.html","searchKeys":["SunHttp","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode = Immediate)","org.http4k.server.SunHttp.SunHttp"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate)","description":"org.http4k.server.SunHttpLoom.SunHttpLoom","location":"http4k-core/org.http4k.server/-sun-http-loom/-sun-http-loom.html","searchKeys":["SunHttpLoom","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode = ServerConfig.StopMode.Immediate)","org.http4k.server.SunHttpLoom.SunHttpLoom"]},{"name":"constructor(request: Request, response: Response, duration: Duration, labels: Map<String, String> = when {\n        response is ResponseWithRoute -> mapOf(ROUTING_GROUP_LABEL to response.xUriTemplate.toString())\n        request is RequestWithRoute -> mapOf(ROUTING_GROUP_LABEL to request.xUriTemplate.toString())\n        else -> emptyMap()\n    })","description":"org.http4k.core.HttpTransaction.HttpTransaction","location":"http4k-core/org.http4k.core/-http-transaction/-http-transaction.html","searchKeys":["HttpTransaction","constructor(request: Request, response: Response, duration: Duration, labels: Map<String, String> = when {\n        response is ResponseWithRoute -> mapOf(ROUTING_GROUP_LABEL to response.xUriTemplate.toString())\n        request is RequestWithRoute -> mapOf(ROUTING_GROUP_LABEL to request.xUriTemplate.toString())\n        else -> emptyMap()\n    })","org.http4k.core.HttpTransaction.HttpTransaction"]},{"name":"constructor(required: Boolean, location: String, paramMeta: ParamMeta, name: String, description: String?, metadata: Map<String, Any>)","description":"org.http4k.lens.Meta.Meta","location":"http4k-core/org.http4k.lens/-meta/-meta.html","searchKeys":["Meta","constructor(required: Boolean, location: String, paramMeta: ParamMeta, name: String, description: String?, metadata: Map<String, Any>)","org.http4k.lens.Meta.Meta"]},{"name":"constructor(scheme: String, userInfo: String, host: String, port: Int?, path: String, query: String, fragment: String)","description":"org.http4k.core.Uri.Uri","location":"http4k-core/org.http4k.core/-uri/-uri.html","searchKeys":["Uri","constructor(scheme: String, userInfo: String, host: String, port: Int?, path: String, query: String, fragment: String)","org.http4k.core.Uri.Uri"]},{"name":"constructor(status: Status, headers: Headers = listOf(), body: Body = EMPTY, version: String = HTTP_1_1)","description":"org.http4k.core.MemoryResponse.MemoryResponse","location":"http4k-core/org.http4k.core/-memory-response/-memory-response.html","searchKeys":["MemoryResponse","constructor(status: Status, headers: Headers = listOf(), body: Body = EMPTY, version: String = HTTP_1_1)","org.http4k.core.MemoryResponse.MemoryResponse"]},{"name":"constructor(stopMode: ServerConfig.StopMode)","description":"org.http4k.server.ServerConfig.UnsupportedStopMode.UnsupportedStopMode","location":"http4k-core/org.http4k.server/-server-config/-unsupported-stop-mode/-unsupported-stop-mode.html","searchKeys":["UnsupportedStopMode","constructor(stopMode: ServerConfig.StopMode)","org.http4k.server.ServerConfig.UnsupportedStopMode.UnsupportedStopMode"]},{"name":"constructor(storeId: String? = null)","description":"org.http4k.core.RequestContexts.RequestContexts","location":"http4k-core/org.http4k.core/-request-contexts/-request-contexts.html","searchKeys":["RequestContexts","constructor(storeId: String? = null)","org.http4k.core.RequestContexts.RequestContexts"]},{"name":"constructor(stream: InputStream, length: Long? = null)","description":"org.http4k.core.StreamBody.StreamBody","location":"http4k-core/org.http4k.core/-stream-body/-stream-body.html","searchKeys":["StreamBody","constructor(stream: InputStream, length: Long? = null)","org.http4k.core.StreamBody.StreamBody"]},{"name":"constructor(timeout: Duration)","description":"org.http4k.server.ServerConfig.StopMode.Graceful.Graceful","location":"http4k-core/org.http4k.server/-server-config/-stop-mode/-graceful/-graceful.html","searchKeys":["Graceful","constructor(timeout: Duration)","org.http4k.server.ServerConfig.StopMode.Graceful.Graceful"]},{"name":"constructor(traceId: TraceId, spanId: TraceId, parentSpanId: TraceId?, samplingDecision: SamplingDecision = SAMPLE)","description":"org.http4k.filter.ZipkinTraces.ZipkinTraces","location":"http4k-core/org.http4k.filter/-zipkin-traces/-zipkin-traces.html","searchKeys":["ZipkinTraces","constructor(traceId: TraceId, spanId: TraceId, parentSpanId: TraceId?, samplingDecision: SamplingDecision = SAMPLE)","org.http4k.filter.ZipkinTraces.ZipkinTraces"]},{"name":"constructor(tx: HttpTransaction)","description":"org.http4k.events.HttpEvent.Incoming.Incoming","location":"http4k-core/org.http4k.events/-http-event/-incoming/-incoming.html","searchKeys":["Incoming","constructor(tx: HttpTransaction)","org.http4k.events.HttpEvent.Incoming.Incoming"]},{"name":"constructor(tx: HttpTransaction)","description":"org.http4k.events.HttpEvent.Outgoing.Outgoing","location":"http4k-core/org.http4k.events/-http-event/-outgoing/-outgoing.html","searchKeys":["Outgoing","constructor(tx: HttpTransaction)","org.http4k.events.HttpEvent.Outgoing.Outgoing"]},{"name":"constructor(uri: Uri, method: Method, status: Status, latency: Long, xUriTemplate: String)","description":"org.http4k.events.HttpEvent.Incoming.Incoming","location":"http4k-core/org.http4k.events/-http-event/-incoming/-incoming.html","searchKeys":["Incoming","constructor(uri: Uri, method: Method, status: Status, latency: Long, xUriTemplate: String)","org.http4k.events.HttpEvent.Incoming.Incoming"]},{"name":"constructor(uri: Uri, method: Method, status: Status, latency: Long, xUriTemplate: String)","description":"org.http4k.events.HttpEvent.Outgoing.Outgoing","location":"http4k-core/org.http4k.events/-http-event/-outgoing/-outgoing.html","searchKeys":["Outgoing","constructor(uri: Uri, method: Method, status: Status, latency: Long, xUriTemplate: String)","org.http4k.events.HttpEvent.Outgoing.Outgoing"]},{"name":"constructor(user: String, password: String)","description":"org.http4k.core.Credentials.Credentials","location":"http4k-core/org.http4k.core/-credentials/-credentials.html","searchKeys":["Credentials","constructor(user: String, password: String)","org.http4k.core.Credentials.Credentials"]},{"name":"constructor(value: List<ETag>)","description":"org.http4k.core.etag.FieldValue.ETags.ETags","location":"http4k-core/org.http4k.core.etag/-field-value/-e-tags/-e-tags.html","searchKeys":["ETags","constructor(value: List<ETag>)","org.http4k.core.etag.FieldValue.ETags.ETags"]},{"name":"constructor(value: String)","description":"org.http4k.filter.SamplingDecision.SamplingDecision","location":"http4k-core/org.http4k.filter/-sampling-decision/-sampling-decision.html","searchKeys":["SamplingDecision","constructor(value: String)","org.http4k.filter.SamplingDecision.SamplingDecision"]},{"name":"constructor(value: String)","description":"org.http4k.filter.TraceId.TraceId","location":"http4k-core/org.http4k.filter/-trace-id/-trace-id.html","searchKeys":["TraceId","constructor(value: String)","org.http4k.filter.TraceId.TraceId"]},{"name":"constructor(value: String, directives: Parameters = emptyList())","description":"org.http4k.core.ContentType.ContentType","location":"http4k-core/org.http4k.core/-content-type/-content-type.html","searchKeys":["ContentType","constructor(value: String, directives: Parameters = emptyList())","org.http4k.core.ContentType.ContentType"]},{"name":"constructor(value: String, weak: Boolean = false)","description":"org.http4k.core.etag.ETag.ETag","location":"http4k-core/org.http4k.core.etag/-e-tag/-e-tag.html","searchKeys":["ETag","constructor(value: String, weak: Boolean = false)","org.http4k.core.etag.ETag.ETag"]},{"name":"constructor(valueD: Duration)","description":"org.http4k.filter.MaxAgeTtl.MaxAgeTtl","location":"http4k-core/org.http4k.filter/-max-age-ttl/-max-age-ttl.html","searchKeys":["MaxAgeTtl","constructor(valueD: Duration)","org.http4k.filter.MaxAgeTtl.MaxAgeTtl"]},{"name":"constructor(valueD: Duration)","description":"org.http4k.filter.StaleIfErrorTtl.StaleIfErrorTtl","location":"http4k-core/org.http4k.filter/-stale-if-error-ttl/-stale-if-error-ttl.html","searchKeys":["StaleIfErrorTtl","constructor(valueD: Duration)","org.http4k.filter.StaleIfErrorTtl.StaleIfErrorTtl"]},{"name":"constructor(valueD: Duration)","description":"org.http4k.filter.StaleWhenRevalidateTtl.StaleWhenRevalidateTtl","location":"http4k-core/org.http4k.filter/-stale-when-revalidate-ttl/-stale-when-revalidate-ttl.html","searchKeys":["StaleWhenRevalidateTtl","constructor(valueD: Duration)","org.http4k.filter.StaleWhenRevalidateTtl.StaleWhenRevalidateTtl"]},{"name":"constructor(vararg eTags: ETag)","description":"org.http4k.core.etag.FieldValue.ETags.ETags","location":"http4k-core/org.http4k.core.etag/-field-value/-e-tags/-e-tags.html","searchKeys":["ETags","constructor(vararg eTags: ETag)","org.http4k.core.etag.FieldValue.ETags.ETags"]},{"name":"constructor(vararg failures: Failure, cause: Exception? = null, target: Any? = null, message: String = failures.joinToString { it.toString() })","description":"org.http4k.lens.LensFailure.LensFailure","location":"http4k-core/org.http4k.lens/-lens-failure/-lens-failure.html","searchKeys":["LensFailure","constructor(vararg failures: Failure, cause: Exception? = null, target: Any? = null, message: String = failures.joinToString { it.toString() })","org.http4k.lens.LensFailure.LensFailure"]},{"name":"data class Accept(val contentTypes: List<ContentType>, val directives: Parameters)","description":"org.http4k.core.Accept","location":"http4k-core/org.http4k.core/-accept/index.html","searchKeys":["Accept","data class Accept(val contentTypes: List<ContentType>, val directives: Parameters)","org.http4k.core.Accept"]},{"name":"data class ArrayParam(itemType: ParamMeta) : ParamMeta","description":"org.http4k.lens.ParamMeta.ArrayParam","location":"http4k-core/org.http4k.lens/-param-meta/-array-param/index.html","searchKeys":["ArrayParam","data class ArrayParam(itemType: ParamMeta) : ParamMeta","org.http4k.lens.ParamMeta.ArrayParam"]},{"name":"data class CompressionResult(val body: Body, val contentEncoding: String?)","description":"org.http4k.filter.CompressionResult","location":"http4k-core/org.http4k.filter/-compression-result/index.html","searchKeys":["CompressionResult","data class CompressionResult(val body: Body, val contentEncoding: String?)","org.http4k.filter.CompressionResult"]},{"name":"data class ContentType(val value: String, val directives: Parameters = emptyList())","description":"org.http4k.core.ContentType","location":"http4k-core/org.http4k.core/-content-type/index.html","searchKeys":["ContentType","data class ContentType(val value: String, val directives: Parameters = emptyList())","org.http4k.core.ContentType"]},{"name":"data class Cookie(val name: String, val value: String, val maxAge: Long? = null, val expires: Instant? = null, val domain: String? = null, val path: String? = null, val secure: Boolean = false, val httpOnly: Boolean = false, val sameSite: SameSite? = null)","description":"org.http4k.core.cookie.Cookie","location":"http4k-core/org.http4k.core.cookie/-cookie/index.html","searchKeys":["Cookie","data class Cookie(val name: String, val value: String, val maxAge: Long? = null, val expires: Instant? = null, val domain: String? = null, val path: String? = null, val secure: Boolean = false, val httpOnly: Boolean = false, val sameSite: SameSite? = null)","org.http4k.core.cookie.Cookie"]},{"name":"data class CorsPolicy(val originPolicy: OriginPolicy, val headers: List<String>, val methods: List<Method>, val credentials: Boolean = false, val exposedHeaders: List<String> = emptyList(), val maxAge: Int? = null)","description":"org.http4k.filter.CorsPolicy","location":"http4k-core/org.http4k.filter/-cors-policy/index.html","searchKeys":["CorsPolicy","data class CorsPolicy(val originPolicy: OriginPolicy, val headers: List<String>, val methods: List<Method>, val credentials: Boolean = false, val exposedHeaders: List<String> = emptyList(), val maxAge: Int? = null)","org.http4k.filter.CorsPolicy"]},{"name":"data class Credentials(val user: String, val password: String)","description":"org.http4k.core.Credentials","location":"http4k-core/org.http4k.core/-credentials/index.html","searchKeys":["Credentials","data class Credentials(val user: String, val password: String)","org.http4k.core.Credentials"]},{"name":"data class DefaultCacheTimings(val maxAge: MaxAgeTtl, val staleIfErrorTtl: StaleIfErrorTtl, val staleWhenRevalidateTtl: StaleWhenRevalidateTtl)","description":"org.http4k.filter.DefaultCacheTimings","location":"http4k-core/org.http4k.filter/-default-cache-timings/index.html","searchKeys":["DefaultCacheTimings","data class DefaultCacheTimings(val maxAge: MaxAgeTtl, val staleIfErrorTtl: StaleIfErrorTtl, val staleWhenRevalidateTtl: StaleWhenRevalidateTtl)","org.http4k.filter.DefaultCacheTimings"]},{"name":"data class ETag(val value: String, val weak: Boolean = false)","description":"org.http4k.core.etag.ETag","location":"http4k-core/org.http4k.core.etag/-e-tag/index.html","searchKeys":["ETag","data class ETag(val value: String, val weak: Boolean = false)","org.http4k.core.etag.ETag"]},{"name":"data class ETags(val value: List<ETag>) : FieldValue","description":"org.http4k.core.etag.FieldValue.ETags","location":"http4k-core/org.http4k.core.etag/-field-value/-e-tags/index.html","searchKeys":["ETags","data class ETags(val value: List<ETag>) : FieldValue","org.http4k.core.etag.FieldValue.ETags"]},{"name":"data class Error(val message: String, val cause: Throwable? = null) : Event","description":"org.http4k.events.Event.Companion.Error","location":"http4k-core/org.http4k.events/-event/-companion/-error/index.html","searchKeys":["Error","data class Error(val message: String, val cause: Throwable? = null) : Event","org.http4k.events.Event.Companion.Error"]},{"name":"data class EventCategory(name: String)","description":"org.http4k.events.EventCategory","location":"http4k-core/org.http4k.events/-event-category/index.html","searchKeys":["EventCategory","data class EventCategory(name: String)","org.http4k.events.EventCategory"]},{"name":"data class ExpiringCredentials<T>(val credentials: T, val expiry: Instant)","description":"org.http4k.security.ExpiringCredentials","location":"http4k-core/org.http4k.security/-expiring-credentials/index.html","searchKeys":["ExpiringCredentials","data class ExpiringCredentials<T>(val credentials: T, val expiry: Instant)","org.http4k.security.ExpiringCredentials"]},{"name":"data class Graceful(val timeout: Duration) : ServerConfig.StopMode","description":"org.http4k.server.ServerConfig.StopMode.Graceful","location":"http4k-core/org.http4k.server/-server-config/-stop-mode/-graceful/index.html","searchKeys":["Graceful","data class Graceful(val timeout: Duration) : ServerConfig.StopMode","org.http4k.server.ServerConfig.StopMode.Graceful"]},{"name":"data class HttpTransaction(val request: Request, val response: Response, val duration: Duration, val labels: Map<String, String> = when {\n        response is ResponseWithRoute -> mapOf(ROUTING_GROUP_LABEL to response.xUriTemplate.toString())\n        request is RequestWithRoute -> mapOf(ROUTING_GROUP_LABEL to request.xUriTemplate.toString())\n        else -> emptyMap()\n    })","description":"org.http4k.core.HttpTransaction","location":"http4k-core/org.http4k.core/-http-transaction/index.html","searchKeys":["HttpTransaction","data class HttpTransaction(val request: Request, val response: Response, val duration: Duration, val labels: Map<String, String> = when {\n        response is ResponseWithRoute -> mapOf(ROUTING_GROUP_LABEL to response.xUriTemplate.toString())\n        request is RequestWithRoute -> mapOf(ROUTING_GROUP_LABEL to request.xUriTemplate.toString())\n        else -> emptyMap()\n    })","org.http4k.core.HttpTransaction"]},{"name":"data class Invalid(val meta: Meta) : Failure","description":"org.http4k.lens.Invalid","location":"http4k-core/org.http4k.lens/-invalid/index.html","searchKeys":["Invalid","data class Invalid(val meta: Meta) : Failure","org.http4k.lens.Invalid"]},{"name":"data class LensFailures(val causes: List<LensFailure>) : RuntimeException","description":"org.http4k.lens.LensFailures","location":"http4k-core/org.http4k.lens/-lens-failures/index.html","searchKeys":["LensFailures","data class LensFailures(val causes: List<LensFailure>) : RuntimeException","org.http4k.lens.LensFailures"]},{"name":"data class LocalCookie(val cookie: Cookie, created: Instant)","description":"org.http4k.filter.cookie.LocalCookie","location":"http4k-core/org.http4k.filter.cookie/-local-cookie/index.html","searchKeys":["LocalCookie","data class LocalCookie(val cookie: Cookie, created: Instant)","org.http4k.filter.cookie.LocalCookie"]},{"name":"data class MatchedWithoutHandler(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","description":"org.http4k.routing.RouterMatch.MatchedWithoutHandler","location":"http4k-core/org.http4k.routing/-router-match/-matched-without-handler/index.html","searchKeys":["MatchedWithoutHandler","data class MatchedWithoutHandler(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","org.http4k.routing.RouterMatch.MatchedWithoutHandler"]},{"name":"data class MatchingHandler(httpHandler: HttpHandler, val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch, Function1<request: Request, Response> ","description":"org.http4k.routing.RouterMatch.MatchingHandler","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/index.html","searchKeys":["MatchingHandler","data class MatchingHandler(httpHandler: HttpHandler, val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch, Function1<request: Request, Response> ","org.http4k.routing.RouterMatch.MatchingHandler"]},{"name":"data class MaxAgeTtl(valueD: Duration) : CacheControlHeaderPart","description":"org.http4k.filter.MaxAgeTtl","location":"http4k-core/org.http4k.filter/-max-age-ttl/index.html","searchKeys":["MaxAgeTtl","data class MaxAgeTtl(valueD: Duration) : CacheControlHeaderPart","org.http4k.filter.MaxAgeTtl"]},{"name":"data class MemoryBody(val payload: ByteBuffer) : Body","description":"org.http4k.core.MemoryBody","location":"http4k-core/org.http4k.core/-memory-body/index.html","searchKeys":["MemoryBody","data class MemoryBody(val payload: ByteBuffer) : Body","org.http4k.core.MemoryBody"]},{"name":"data class MemoryRequest(val method: Method, val uri: Uri, val headers: Headers = listOf(), val body: Body = EMPTY, val version: String = HTTP_1_1, val source: RequestSource? = null) : Request","description":"org.http4k.core.MemoryRequest","location":"http4k-core/org.http4k.core/-memory-request/index.html","searchKeys":["MemoryRequest","data class MemoryRequest(val method: Method, val uri: Uri, val headers: Headers = listOf(), val body: Body = EMPTY, val version: String = HTTP_1_1, val source: RequestSource? = null) : Request","org.http4k.core.MemoryRequest"]},{"name":"data class MemoryResponse(val status: Status, val headers: Headers = listOf(), val body: Body = EMPTY, val version: String = HTTP_1_1) : Response","description":"org.http4k.core.MemoryResponse","location":"http4k-core/org.http4k.core/-memory-response/index.html","searchKeys":["MemoryResponse","data class MemoryResponse(val status: Status, val headers: Headers = listOf(), val body: Body = EMPTY, val version: String = HTTP_1_1) : Response","org.http4k.core.MemoryResponse"]},{"name":"data class Meta(val required: Boolean, val location: String, val paramMeta: ParamMeta, val name: String, val description: String?, val metadata: Map<String, Any>)","description":"org.http4k.lens.Meta","location":"http4k-core/org.http4k.lens/-meta/index.html","searchKeys":["Meta","data class Meta(val required: Boolean, val location: String, val paramMeta: ParamMeta, val name: String, val description: String?, val metadata: Map<String, Any>)","org.http4k.lens.Meta"]},{"name":"data class MetadataEvent(val event: Event, val metadata: Map<String, Any> = emptyMap()) : Event","description":"org.http4k.events.MetadataEvent","location":"http4k-core/org.http4k.events/-metadata-event/index.html","searchKeys":["MetadataEvent","data class MetadataEvent(val event: Event, val metadata: Map<String, Any> = emptyMap()) : Event","org.http4k.events.MetadataEvent"]},{"name":"data class MethodNotMatched(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","description":"org.http4k.routing.RouterMatch.MethodNotMatched","location":"http4k-core/org.http4k.routing/-router-match/-method-not-matched/index.html","searchKeys":["MethodNotMatched","data class MethodNotMatched(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","org.http4k.routing.RouterMatch.MethodNotMatched"]},{"name":"data class MetricsDefaults(val counterDescription: Pair<String, String>, val timerDescription: Pair<String, String>, val labeler: HttpTransactionLabeler)","description":"org.http4k.metrics.MetricsDefaults","location":"http4k-core/org.http4k.metrics/-metrics-defaults/index.html","searchKeys":["MetricsDefaults","data class MetricsDefaults(val counterDescription: Pair<String, String>, val timerDescription: Pair<String, String>, val labeler: HttpTransactionLabeler)","org.http4k.metrics.MetricsDefaults"]},{"name":"data class Missing(val meta: Meta) : Failure","description":"org.http4k.lens.Missing","location":"http4k-core/org.http4k.lens/-missing/index.html","searchKeys":["Missing","data class Missing(val meta: Meta) : Failure","org.http4k.lens.Missing"]},{"name":"data class RequestSource(val address: String, val port: Int? = 0, val scheme: String? = null)","description":"org.http4k.core.RequestSource","location":"http4k-core/org.http4k.core/-request-source/index.html","searchKeys":["RequestSource","data class RequestSource(val address: String, val port: Int? = 0, val scheme: String? = null)","org.http4k.core.RequestSource"]},{"name":"data class RoutedRequest(delegate: Request, val xUriTemplate: UriTemplate) : Request, RequestWithRoute","description":"org.http4k.routing.RoutedRequest","location":"http4k-core/org.http4k.routing/-routed-request/index.html","searchKeys":["RoutedRequest","data class RoutedRequest(delegate: Request, val xUriTemplate: UriTemplate) : Request, RequestWithRoute","org.http4k.routing.RoutedRequest"]},{"name":"data class RouterDescription(val description: String, val children: List<RouterDescription> = listOf())","description":"org.http4k.routing.RouterDescription","location":"http4k-core/org.http4k.routing/-router-description/index.html","searchKeys":["RouterDescription","data class RouterDescription(val description: String, val children: List<RouterDescription> = listOf())","org.http4k.routing.RouterDescription"]},{"name":"data class SamplingDecision(val value: String)","description":"org.http4k.filter.SamplingDecision","location":"http4k-core/org.http4k.filter/-sampling-decision/index.html","searchKeys":["SamplingDecision","data class SamplingDecision(val value: String)","org.http4k.filter.SamplingDecision"]},{"name":"data class StaleIfErrorTtl(valueD: Duration) : CacheControlHeaderPart","description":"org.http4k.filter.StaleIfErrorTtl","location":"http4k-core/org.http4k.filter/-stale-if-error-ttl/index.html","searchKeys":["StaleIfErrorTtl","data class StaleIfErrorTtl(valueD: Duration) : CacheControlHeaderPart","org.http4k.filter.StaleIfErrorTtl"]},{"name":"data class StaleWhenRevalidateTtl(valueD: Duration) : CacheControlHeaderPart","description":"org.http4k.filter.StaleWhenRevalidateTtl","location":"http4k-core/org.http4k.filter/-stale-when-revalidate-ttl/index.html","searchKeys":["StaleWhenRevalidateTtl","data class StaleWhenRevalidateTtl(valueD: Duration) : CacheControlHeaderPart","org.http4k.filter.StaleWhenRevalidateTtl"]},{"name":"data class StaticRoutingHttpHandler(pathSegments: String, resourceLoader: ResourceLoader, extraFileExtensionToContentTypes: Map<String, ContentType>, filter: Filter = Filter.NoOp) : RoutingHttpHandler","description":"org.http4k.routing.StaticRoutingHttpHandler","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/index.html","searchKeys":["StaticRoutingHttpHandler","data class StaticRoutingHttpHandler(pathSegments: String, resourceLoader: ResourceLoader, extraFileExtensionToContentTypes: Map<String, ContentType>, filter: Filter = Filter.NoOp) : RoutingHttpHandler","org.http4k.routing.StaticRoutingHttpHandler"]},{"name":"data class TextStyle(val foregroundColour: ForegroundColour = Default, val backgroundColour: BackgroundColour = BackgroundColour.Default, val variation: Variation = Variation.Default)","description":"org.http4k.routing.inspect.TextStyle","location":"http4k-core/org.http4k.routing.inspect/-text-style/index.html","searchKeys":["TextStyle","data class TextStyle(val foregroundColour: ForegroundColour = Default, val backgroundColour: BackgroundColour = BackgroundColour.Default, val variation: Variation = Variation.Default)","org.http4k.routing.inspect.TextStyle"]},{"name":"data class TraceId(val value: String)","description":"org.http4k.filter.TraceId","location":"http4k-core/org.http4k.filter/-trace-id/index.html","searchKeys":["TraceId","data class TraceId(val value: String)","org.http4k.filter.TraceId"]},{"name":"data class Unmatched(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","description":"org.http4k.routing.RouterMatch.Unmatched","location":"http4k-core/org.http4k.routing/-router-match/-unmatched/index.html","searchKeys":["Unmatched","data class Unmatched(val description: RouterDescription, val subMatches: List<RouterMatch> = listOf()) : RouterMatch","org.http4k.routing.RouterMatch.Unmatched"]},{"name":"data class Unsupported(val meta: Meta) : Failure","description":"org.http4k.lens.Unsupported","location":"http4k-core/org.http4k.lens/-unsupported/index.html","searchKeys":["Unsupported","data class Unsupported(val meta: Meta) : Failure","org.http4k.lens.Unsupported"]},{"name":"data class Uri(val scheme: String, val userInfo: String, val host: String, val port: Int?, val path: String, val query: String, val fragment: String) : Comparable<Uri> ","description":"org.http4k.core.Uri","location":"http4k-core/org.http4k.core/-uri/index.html","searchKeys":["Uri","data class Uri(val scheme: String, val userInfo: String, val host: String, val port: Int?, val path: String, val query: String, val fragment: String) : Comparable<Uri> ","org.http4k.core.Uri"]},{"name":"data class UriTemplate","description":"org.http4k.core.UriTemplate","location":"http4k-core/org.http4k.core/-uri-template/index.html","searchKeys":["UriTemplate","data class UriTemplate","org.http4k.core.UriTemplate"]},{"name":"data class WebForm(val fields: Map<String, List<String>> = emptyMap(), val errors: List<Failure> = emptyList())","description":"org.http4k.lens.WebForm","location":"http4k-core/org.http4k.lens/-web-form/index.html","searchKeys":["WebForm","data class WebForm(val fields: Map<String, List<String>> = emptyMap(), val errors: List<Failure> = emptyList())","org.http4k.lens.WebForm"]},{"name":"data class ZipkinTraces(val traceId: TraceId, val spanId: TraceId, val parentSpanId: TraceId?, val samplingDecision: SamplingDecision = SAMPLE)","description":"org.http4k.filter.ZipkinTraces","location":"http4k-core/org.http4k.filter/-zipkin-traces/index.html","searchKeys":["ZipkinTraces","data class ZipkinTraces(val traceId: TraceId, val spanId: TraceId, val parentSpanId: TraceId?, val samplingDecision: SamplingDecision = SAMPLE)","org.http4k.filter.ZipkinTraces"]},{"name":"data object BooleanParam : ParamMeta","description":"org.http4k.lens.ParamMeta.BooleanParam","location":"http4k-core/org.http4k.lens/-param-meta/-boolean-param/index.html","searchKeys":["BooleanParam","data object BooleanParam : ParamMeta","org.http4k.lens.ParamMeta.BooleanParam"]},{"name":"data object FileParam : ParamMeta","description":"org.http4k.lens.ParamMeta.FileParam","location":"http4k-core/org.http4k.lens/-param-meta/-file-param/index.html","searchKeys":["FileParam","data object FileParam : ParamMeta","org.http4k.lens.ParamMeta.FileParam"]},{"name":"data object Immediate : ServerConfig.StopMode","description":"org.http4k.server.ServerConfig.StopMode.Immediate","location":"http4k-core/org.http4k.server/-server-config/-stop-mode/-immediate/index.html","searchKeys":["Immediate","data object Immediate : ServerConfig.StopMode","org.http4k.server.ServerConfig.StopMode.Immediate"]},{"name":"data object IntegerParam : ParamMeta","description":"org.http4k.lens.ParamMeta.IntegerParam","location":"http4k-core/org.http4k.lens/-param-meta/-integer-param/index.html","searchKeys":["IntegerParam","data object IntegerParam : ParamMeta","org.http4k.lens.ParamMeta.IntegerParam"]},{"name":"data object Memory : BodyMode","description":"org.http4k.core.BodyMode.Memory","location":"http4k-core/org.http4k.core/-body-mode/-memory/index.html","searchKeys":["Memory","data object Memory : BodyMode","org.http4k.core.BodyMode.Memory"]},{"name":"data object NullParam : ParamMeta","description":"org.http4k.lens.ParamMeta.NullParam","location":"http4k-core/org.http4k.lens/-param-meta/-null-param/index.html","searchKeys":["NullParam","data object NullParam : ParamMeta","org.http4k.lens.ParamMeta.NullParam"]},{"name":"data object NumberParam : ParamMeta","description":"org.http4k.lens.ParamMeta.NumberParam","location":"http4k-core/org.http4k.lens/-param-meta/-number-param/index.html","searchKeys":["NumberParam","data object NumberParam : ParamMeta","org.http4k.lens.ParamMeta.NumberParam"]},{"name":"data object ObjectParam : ParamMeta","description":"org.http4k.lens.ParamMeta.ObjectParam","location":"http4k-core/org.http4k.lens/-param-meta/-object-param/index.html","searchKeys":["ObjectParam","data object ObjectParam : ParamMeta","org.http4k.lens.ParamMeta.ObjectParam"]},{"name":"data object Stream : BodyMode","description":"org.http4k.core.BodyMode.Stream","location":"http4k-core/org.http4k.core/-body-mode/-stream/index.html","searchKeys":["Stream","data object Stream : BodyMode","org.http4k.core.BodyMode.Stream"]},{"name":"data object StringParam : ParamMeta","description":"org.http4k.lens.ParamMeta.StringParam","location":"http4k-core/org.http4k.lens/-param-meta/-string-param/index.html","searchKeys":["StringParam","data object StringParam : ParamMeta","org.http4k.lens.ParamMeta.StringParam"]},{"name":"data object Wildcard : FieldValue","description":"org.http4k.core.etag.FieldValue.Wildcard","location":"http4k-core/org.http4k.core.etag/-field-value/-wildcard/index.html","searchKeys":["Wildcard","data object Wildcard : FieldValue","org.http4k.core.etag.FieldValue.Wildcard"]},{"name":"enum BackgroundColour : Enum<BackgroundColour> ","description":"org.http4k.routing.inspect.BackgroundColour","location":"http4k-core/org.http4k.routing.inspect/-background-colour/index.html","searchKeys":["BackgroundColour","enum BackgroundColour : Enum<BackgroundColour> ","org.http4k.routing.inspect.BackgroundColour"]},{"name":"enum EscapeMode : Enum<EscapeMode> ","description":"org.http4k.routing.inspect.EscapeMode","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/index.html","searchKeys":["EscapeMode","enum EscapeMode : Enum<EscapeMode> ","org.http4k.routing.inspect.EscapeMode"]},{"name":"enum ForegroundColour : Enum<ForegroundColour> ","description":"org.http4k.routing.inspect.ForegroundColour","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/index.html","searchKeys":["ForegroundColour","enum ForegroundColour : Enum<ForegroundColour> ","org.http4k.routing.inspect.ForegroundColour"]},{"name":"enum Method : Enum<Method> ","description":"org.http4k.core.Method","location":"http4k-core/org.http4k.core/-method/index.html","searchKeys":["Method","enum Method : Enum<Method> ","org.http4k.core.Method"]},{"name":"enum ProxyProtocolMode : Enum<RequestFilters.ProxyProtocolMode> ","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/index.html","searchKeys":["ProxyProtocolMode","enum ProxyProtocolMode : Enum<RequestFilters.ProxyProtocolMode> ","org.http4k.filter.RequestFilters.ProxyProtocolMode"]},{"name":"enum SameSite : Enum<SameSite> ","description":"org.http4k.core.cookie.SameSite","location":"http4k-core/org.http4k.core.cookie/-same-site/index.html","searchKeys":["SameSite","enum SameSite : Enum<SameSite> ","org.http4k.core.cookie.SameSite"]},{"name":"enum Type : Enum<Failure.Type> ","description":"org.http4k.lens.Failure.Type","location":"http4k-core/org.http4k.lens/-failure/-type/index.html","searchKeys":["Type","enum Type : Enum<Failure.Type> ","org.http4k.lens.Failure.Type"]},{"name":"enum Validator : Enum<Validator> ","description":"org.http4k.lens.Validator","location":"http4k-core/org.http4k.lens/-validator/index.html","searchKeys":["Validator","enum Validator : Enum<Validator> ","org.http4k.lens.Validator"]},{"name":"enum Variation : Enum<Variation> ","description":"org.http4k.routing.inspect.Variation","location":"http4k-core/org.http4k.routing.inspect/-variation/index.html","searchKeys":["Variation","enum Variation : Enum<Variation> ","org.http4k.routing.inspect.Variation"]},{"name":"fun (Request) -> Boolean.asRouter(description: String = unavailable.description): Router","description":"org.http4k.routing.asRouter","location":"http4k-core/org.http4k.routing/as-router.html","searchKeys":["asRouter","fun (Request) -> Boolean.asRouter(description: String = unavailable.description): Router","org.http4k.routing.asRouter"]},{"name":"fun <IN : Any, OUT, L : BiDiLensBuilder<IN, List<OUT>>> L.of(): DelegatedPropertyLensSpec<BiDiLens<IN, List<OUT>>, List<OUT>, BiDiLens<IN, List<OUT>?>>","description":"org.http4k.lens.of","location":"http4k-core/org.http4k.lens/of.html","searchKeys":["of","fun <IN : Any, OUT, L : BiDiLensBuilder<IN, List<OUT>>> L.of(): DelegatedPropertyLensSpec<BiDiLens<IN, List<OUT>>, List<OUT>, BiDiLens<IN, List<OUT>?>>","org.http4k.lens.of"]},{"name":"fun <IN : Any, OUT, L : BiDiLensBuilder<IN, OUT>> L.of(): DelegatedPropertyLensSpec<BiDiLens<IN, OUT>, OUT, BiDiLens<IN, OUT?>>","description":"org.http4k.lens.of","location":"http4k-core/org.http4k.lens/of.html","searchKeys":["of","fun <IN : Any, OUT, L : BiDiLensBuilder<IN, OUT>> L.of(): DelegatedPropertyLensSpec<BiDiLens<IN, OUT>, OUT, BiDiLens<IN, OUT?>>","org.http4k.lens.of"]},{"name":"fun <IN : Any, OUT, L : LensBuilder<IN, List<OUT>>> L.of(): DelegatedPropertyLensSpec<Lens<IN, List<OUT>>, List<OUT>, Lens<IN, List<OUT>?>>","description":"org.http4k.lens.of","location":"http4k-core/org.http4k.lens/of.html","searchKeys":["of","fun <IN : Any, OUT, L : LensBuilder<IN, List<OUT>>> L.of(): DelegatedPropertyLensSpec<Lens<IN, List<OUT>>, List<OUT>, Lens<IN, List<OUT>?>>","org.http4k.lens.of"]},{"name":"fun <IN : Any, OUT, L : LensBuilder<IN, OUT>> L.of(): DelegatedPropertyLensSpec<Lens<IN, OUT>, OUT, Lens<IN, OUT?>>","description":"org.http4k.lens.of","location":"http4k-core/org.http4k.lens/of.html","searchKeys":["of","fun <IN : Any, OUT, L : LensBuilder<IN, OUT>> L.of(): DelegatedPropertyLensSpec<Lens<IN, OUT>, OUT, Lens<IN, OUT?>>","org.http4k.lens.of"]},{"name":"fun <IN : Any, T : Any> BiDiLensSpec<IN, String>.csv(delimiter: String = \",\", mapElement: BiDiMapping<String, T>): BiDiLensSpec<IN, List<T>>","description":"org.http4k.lens.csv","location":"http4k-core/org.http4k.lens/csv.html","searchKeys":["csv","fun <IN : Any, T : Any> BiDiLensSpec<IN, String>.csv(delimiter: String = \",\", mapElement: BiDiMapping<String, T>): BiDiLensSpec<IN, List<T>>","org.http4k.lens.csv"]},{"name":"fun <IN : Any, VALUE : Value<T>, T : Any> Lens<IN, String>.ofOrLensFailure(vf: ValueFactory<VALUE, T>, value: String): VALUE","description":"org.http4k.lens.ofOrLensFailure","location":"http4k-core/org.http4k.lens/of-or-lens-failure.html","searchKeys":["ofOrLensFailure","fun <IN : Any, VALUE : Value<T>, T : Any> Lens<IN, String>.ofOrLensFailure(vf: ValueFactory<VALUE, T>, value: String): VALUE","org.http4k.lens.ofOrLensFailure"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.base64(): BiDiLensSpec<IN, String>","description":"org.http4k.lens.base64","location":"http4k-core/org.http4k.lens/base64.html","searchKeys":["base64","fun <IN : Any> BiDiLensSpec<IN, String>.base64(): BiDiLensSpec<IN, String>","org.http4k.lens.base64"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.basicCredentials(): BiDiLensSpec<IN, Credentials>","description":"org.http4k.lens.basicCredentials","location":"http4k-core/org.http4k.lens/basic-credentials.html","searchKeys":["basicCredentials","fun <IN : Any> BiDiLensSpec<IN, String>.basicCredentials(): BiDiLensSpec<IN, Credentials>","org.http4k.lens.basicCredentials"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.bigDecimal(): BiDiLensSpec<IN, BigDecimal>","description":"org.http4k.lens.bigDecimal","location":"http4k-core/org.http4k.lens/big-decimal.html","searchKeys":["bigDecimal","fun <IN : Any> BiDiLensSpec<IN, String>.bigDecimal(): BiDiLensSpec<IN, BigDecimal>","org.http4k.lens.bigDecimal"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.bigInteger(): BiDiLensSpec<IN, BigInteger>","description":"org.http4k.lens.bigInteger","location":"http4k-core/org.http4k.lens/big-integer.html","searchKeys":["bigInteger","fun <IN : Any> BiDiLensSpec<IN, String>.bigInteger(): BiDiLensSpec<IN, BigInteger>","org.http4k.lens.bigInteger"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.boolean(): BiDiLensSpec<IN, Boolean>","description":"org.http4k.lens.boolean","location":"http4k-core/org.http4k.lens/boolean.html","searchKeys":["boolean","fun <IN : Any> BiDiLensSpec<IN, String>.boolean(): BiDiLensSpec<IN, Boolean>","org.http4k.lens.boolean"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.bytes(): LensSpec<IN, ByteArray>","description":"org.http4k.lens.bytes","location":"http4k-core/org.http4k.lens/bytes.html","searchKeys":["bytes","fun <IN : Any> BiDiLensSpec<IN, String>.bytes(): LensSpec<IN, ByteArray>","org.http4k.lens.bytes"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.csv(delimiter: String = \",\"): BiDiLensSpec<IN, List<String>>","description":"org.http4k.lens.csv","location":"http4k-core/org.http4k.lens/csv.html","searchKeys":["csv","fun <IN : Any> BiDiLensSpec<IN, String>.csv(delimiter: String = \",\"): BiDiLensSpec<IN, List<String>>","org.http4k.lens.csv"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.dateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiLensSpec<IN, LocalDateTime>","description":"org.http4k.lens.dateTime","location":"http4k-core/org.http4k.lens/date-time.html","searchKeys":["dateTime","fun <IN : Any> BiDiLensSpec<IN, String>.dateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiLensSpec<IN, LocalDateTime>","org.http4k.lens.dateTime"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.double(): BiDiLensSpec<IN, Double>","description":"org.http4k.lens.double","location":"http4k-core/org.http4k.lens/double.html","searchKeys":["double","fun <IN : Any> BiDiLensSpec<IN, String>.double(): BiDiLensSpec<IN, Double>","org.http4k.lens.double"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.duration(): BiDiLensSpec<IN, Duration>","description":"org.http4k.lens.duration","location":"http4k-core/org.http4k.lens/duration.html","searchKeys":["duration","fun <IN : Any> BiDiLensSpec<IN, String>.duration(): BiDiLensSpec<IN, Duration>","org.http4k.lens.duration"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.float(): BiDiLensSpec<IN, Float>","description":"org.http4k.lens.float","location":"http4k-core/org.http4k.lens/float.html","searchKeys":["float","fun <IN : Any> BiDiLensSpec<IN, String>.float(): BiDiLensSpec<IN, Float>","org.http4k.lens.float"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.instant(): BiDiLensSpec<IN, Instant>","description":"org.http4k.lens.instant","location":"http4k-core/org.http4k.lens/instant.html","searchKeys":["instant","fun <IN : Any> BiDiLensSpec<IN, String>.instant(): BiDiLensSpec<IN, Instant>","org.http4k.lens.instant"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.int(): BiDiLensSpec<IN, Int>","description":"org.http4k.lens.int","location":"http4k-core/org.http4k.lens/int.html","searchKeys":["int","fun <IN : Any> BiDiLensSpec<IN, String>.int(): BiDiLensSpec<IN, Int>","org.http4k.lens.int"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiLensSpec<IN, LocalDate>","description":"org.http4k.lens.localDate","location":"http4k-core/org.http4k.lens/local-date.html","searchKeys":["localDate","fun <IN : Any> BiDiLensSpec<IN, String>.localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiLensSpec<IN, LocalDate>","org.http4k.lens.localDate"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiLensSpec<IN, LocalTime>","description":"org.http4k.lens.localTime","location":"http4k-core/org.http4k.lens/local-time.html","searchKeys":["localTime","fun <IN : Any> BiDiLensSpec<IN, String>.localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiLensSpec<IN, LocalTime>","org.http4k.lens.localTime"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.locale(): BiDiLensSpec<IN, Locale>","description":"org.http4k.lens.locale","location":"http4k-core/org.http4k.lens/locale.html","searchKeys":["locale","fun <IN : Any> BiDiLensSpec<IN, String>.locale(): BiDiLensSpec<IN, Locale>","org.http4k.lens.locale"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.long(): BiDiLensSpec<IN, Long>","description":"org.http4k.lens.long","location":"http4k-core/org.http4k.lens/long.html","searchKeys":["long","fun <IN : Any> BiDiLensSpec<IN, String>.long(): BiDiLensSpec<IN, Long>","org.http4k.lens.long"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.nonBlankString(): BiDiLensSpec<IN, String>","description":"org.http4k.lens.nonBlankString","location":"http4k-core/org.http4k.lens/non-blank-string.html","searchKeys":["nonBlankString","fun <IN : Any> BiDiLensSpec<IN, String>.nonBlankString(): BiDiLensSpec<IN, String>","org.http4k.lens.nonBlankString"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.nonEmptyString(): BiDiLensSpec<IN, String>","description":"org.http4k.lens.nonEmptyString","location":"http4k-core/org.http4k.lens/non-empty-string.html","searchKeys":["nonEmptyString","fun <IN : Any> BiDiLensSpec<IN, String>.nonEmptyString(): BiDiLensSpec<IN, String>","org.http4k.lens.nonEmptyString"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.offsetDateTime(formatter: DateTimeFormatter = ISO_OFFSET_DATE_TIME): BiDiLensSpec<IN, OffsetDateTime>","description":"org.http4k.lens.offsetDateTime","location":"http4k-core/org.http4k.lens/offset-date-time.html","searchKeys":["offsetDateTime","fun <IN : Any> BiDiLensSpec<IN, String>.offsetDateTime(formatter: DateTimeFormatter = ISO_OFFSET_DATE_TIME): BiDiLensSpec<IN, OffsetDateTime>","org.http4k.lens.offsetDateTime"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.offsetTime(formatter: DateTimeFormatter = ISO_OFFSET_TIME): BiDiLensSpec<IN, OffsetTime>","description":"org.http4k.lens.offsetTime","location":"http4k-core/org.http4k.lens/offset-time.html","searchKeys":["offsetTime","fun <IN : Any> BiDiLensSpec<IN, String>.offsetTime(formatter: DateTimeFormatter = ISO_OFFSET_TIME): BiDiLensSpec<IN, OffsetTime>","org.http4k.lens.offsetTime"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.regex(pattern: String, group: Int = 1): BiDiLensSpec<IN, String>","description":"org.http4k.lens.regex","location":"http4k-core/org.http4k.lens/regex.html","searchKeys":["regex","fun <IN : Any> BiDiLensSpec<IN, String>.regex(pattern: String, group: Int = 1): BiDiLensSpec<IN, String>","org.http4k.lens.regex"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.regexObject(): BiDiLensSpec<IN, Regex>","description":"org.http4k.lens.regexObject","location":"http4k-core/org.http4k.lens/regex-object.html","searchKeys":["regexObject","fun <IN : Any> BiDiLensSpec<IN, String>.regexObject(): BiDiLensSpec<IN, Regex>","org.http4k.lens.regexObject"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.string(): BiDiLensSpec<IN, String>","description":"org.http4k.lens.string","location":"http4k-core/org.http4k.lens/string.html","searchKeys":["string","fun <IN : Any> BiDiLensSpec<IN, String>.string(): BiDiLensSpec<IN, String>","org.http4k.lens.string"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.uri(): BiDiLensSpec<IN, Uri>","description":"org.http4k.lens.uri","location":"http4k-core/org.http4k.lens/uri.html","searchKeys":["uri","fun <IN : Any> BiDiLensSpec<IN, String>.uri(): BiDiLensSpec<IN, Uri>","org.http4k.lens.uri"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.urlEncoded(): BiDiLensSpec<IN, String>","description":"org.http4k.lens.urlEncoded","location":"http4k-core/org.http4k.lens/url-encoded.html","searchKeys":["urlEncoded","fun <IN : Any> BiDiLensSpec<IN, String>.urlEncoded(): BiDiLensSpec<IN, String>","org.http4k.lens.urlEncoded"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.uuid(): BiDiLensSpec<IN, UUID>","description":"org.http4k.lens.uuid","location":"http4k-core/org.http4k.lens/uuid.html","searchKeys":["uuid","fun <IN : Any> BiDiLensSpec<IN, String>.uuid(): BiDiLensSpec<IN, UUID>","org.http4k.lens.uuid"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.yearMonth(): BiDiLensSpec<IN, YearMonth>","description":"org.http4k.lens.yearMonth","location":"http4k-core/org.http4k.lens/year-month.html","searchKeys":["yearMonth","fun <IN : Any> BiDiLensSpec<IN, String>.yearMonth(): BiDiLensSpec<IN, YearMonth>","org.http4k.lens.yearMonth"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.zoneId(): BiDiLensSpec<IN, ZoneId>","description":"org.http4k.lens.zoneId","location":"http4k-core/org.http4k.lens/zone-id.html","searchKeys":["zoneId","fun <IN : Any> BiDiLensSpec<IN, String>.zoneId(): BiDiLensSpec<IN, ZoneId>","org.http4k.lens.zoneId"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.zoneOffset(): BiDiLensSpec<IN, ZoneOffset>","description":"org.http4k.lens.zoneOffset","location":"http4k-core/org.http4k.lens/zone-offset.html","searchKeys":["zoneOffset","fun <IN : Any> BiDiLensSpec<IN, String>.zoneOffset(): BiDiLensSpec<IN, ZoneOffset>","org.http4k.lens.zoneOffset"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiLensSpec<IN, ZonedDateTime>","description":"org.http4k.lens.zonedDateTime","location":"http4k-core/org.http4k.lens/zoned-date-time.html","searchKeys":["zonedDateTime","fun <IN : Any> BiDiLensSpec<IN, String>.zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiLensSpec<IN, ZonedDateTime>","org.http4k.lens.zonedDateTime"]},{"name":"fun <IN, NEXT> BiDiPathLensSpec<IN>.mapWithNewMeta(mapping: BiDiMapping<IN, NEXT>, paramMeta: ParamMeta): BiDiPathLensSpec<NEXT>","description":"org.http4k.lens.mapWithNewMeta","location":"http4k-core/org.http4k.lens/map-with-new-meta.html","searchKeys":["mapWithNewMeta","fun <IN, NEXT> BiDiPathLensSpec<IN>.mapWithNewMeta(mapping: BiDiMapping<IN, NEXT>, paramMeta: ParamMeta): BiDiPathLensSpec<NEXT>","org.http4k.lens.mapWithNewMeta"]},{"name":"fun <IN, OUT> LensExtractor<IN, OUT>.asResult(): LensExtractor<IN, Result<OUT, LensFailure>>","description":"org.http4k.lens.asResult","location":"http4k-core/org.http4k.lens/as-result.html","searchKeys":["asResult","fun <IN, OUT> LensExtractor<IN, OUT>.asResult(): LensExtractor<IN, Result<OUT, LensFailure>>","org.http4k.lens.asResult"]},{"name":"fun <K, V> Map<K, List<V>>.getFirst(key: K): V?","description":"org.http4k.core.getFirst","location":"http4k-core/org.http4k.core/get-first.html","searchKeys":["getFirst","fun <K, V> Map<K, List<V>>.getFirst(key: K): V?","org.http4k.core.getFirst"]},{"name":"fun <M : Any, VALUE : Value<T>, T : Any> BiDiLensSpec<M, String>.value(vf: ValueFactory<VALUE, T>): BiDiLensSpec<M, VALUE>","description":"org.http4k.lens.value","location":"http4k-core/org.http4k.lens/value.html","searchKeys":["value","fun <M : Any, VALUE : Value<T>, T : Any> BiDiLensSpec<M, String>.value(vf: ValueFactory<VALUE, T>): BiDiLensSpec<M, VALUE>","org.http4k.lens.value"]},{"name":"fun <NEXT, IN : Any, OUT> BiDiLensSpec<IN, OUT>.map(mapping: BiDiMapping<OUT, NEXT>): BiDiLensSpec<IN, NEXT>","description":"org.http4k.lens.map","location":"http4k-core/org.http4k.lens/map.html","searchKeys":["map","fun <NEXT, IN : Any, OUT> BiDiLensSpec<IN, OUT>.map(mapping: BiDiMapping<OUT, NEXT>): BiDiLensSpec<IN, NEXT>","org.http4k.lens.map"]},{"name":"fun <NEXT, IN : Any, OUT> BiDiLensSpec<IN, OUT>.mapWithNewMeta(mapping: BiDiMapping<OUT, NEXT>, paramMeta: ParamMeta): BiDiLensSpec<IN, NEXT>","description":"org.http4k.lens.mapWithNewMeta","location":"http4k-core/org.http4k.lens/map-with-new-meta.html","searchKeys":["mapWithNewMeta","fun <NEXT, IN : Any, OUT> BiDiLensSpec<IN, OUT>.mapWithNewMeta(mapping: BiDiMapping<OUT, NEXT>, paramMeta: ParamMeta): BiDiLensSpec<IN, NEXT>","org.http4k.lens.mapWithNewMeta"]},{"name":"fun <NEXT> map(nextFn: (NEXT) -> OUT): LensSet<IN, NEXT>","description":"org.http4k.lens.LensSet.map","location":"http4k-core/org.http4k.lens/-lens-set/map.html","searchKeys":["map","fun <NEXT> map(nextFn: (NEXT) -> OUT): LensSet<IN, NEXT>","org.http4k.lens.LensSet.map"]},{"name":"fun <NEXT> map(nextFn: (OUT) -> NEXT): LensGet<IN, NEXT>","description":"org.http4k.lens.LensGet.map","location":"http4k-core/org.http4k.lens/-lens-get/map.html","searchKeys":["map","fun <NEXT> map(nextFn: (OUT) -> NEXT): LensGet<IN, NEXT>","org.http4k.lens.LensGet.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT): BodyLensSpec<NEXT>","description":"org.http4k.lens.BodyLensSpec.map","location":"http4k-core/org.http4k.lens/-body-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT): BodyLensSpec<NEXT>","org.http4k.lens.BodyLensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT): LensSpec<IN, NEXT>","description":"org.http4k.lens.LensSpec.map","location":"http4k-core/org.http4k.lens/-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT): LensSpec<IN, NEXT>","org.http4k.lens.LensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT): PathLensSpec<NEXT>","description":"org.http4k.lens.PathLensSpec.map","location":"http4k-core/org.http4k.lens/-path-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT): PathLensSpec<NEXT>","org.http4k.lens.PathLensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiBodyLensSpec<NEXT>","description":"org.http4k.lens.BiDiBodyLensSpec.map","location":"http4k-core/org.http4k.lens/-bi-di-body-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiBodyLensSpec<NEXT>","org.http4k.lens.BiDiBodyLensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiLensSpec<IN, NEXT>","description":"org.http4k.lens.BiDiLensSpec.map","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiLensSpec<IN, NEXT>","org.http4k.lens.BiDiLensSpec.map"]},{"name":"fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiPathLensSpec<NEXT>","description":"org.http4k.lens.BiDiPathLensSpec.map","location":"http4k-core/org.http4k.lens/-bi-di-path-lens-spec/map.html","searchKeys":["map","fun <NEXT> map(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT): BiDiPathLensSpec<NEXT>","org.http4k.lens.BiDiPathLensSpec.map"]},{"name":"fun <NEXT> mapWithNewMeta(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT, paramMeta: ParamMeta): BiDiLensSpec<IN, NEXT>","description":"org.http4k.lens.BiDiLensSpec.mapWithNewMeta","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/map-with-new-meta.html","searchKeys":["mapWithNewMeta","fun <NEXT> mapWithNewMeta(nextIn: (OUT) -> NEXT, nextOut: (NEXT) -> OUT, paramMeta: ParamMeta): BiDiLensSpec<IN, NEXT>","org.http4k.lens.BiDiLensSpec.mapWithNewMeta"]},{"name":"fun <R : HttpMessage> R.webForm(t: WebForm): R","description":"org.http4k.lens.webForm","location":"http4k-core/org.http4k.lens/web-form.html","searchKeys":["webForm","fun <R : HttpMessage> R.webForm(t: WebForm): R","org.http4k.lens.webForm"]},{"name":"fun <T : HttpMessage> T.contentType(contentType: ContentType): T","description":"org.http4k.lens.contentType","location":"http4k-core/org.http4k.lens/content-type.html","searchKeys":["contentType","fun <T : HttpMessage> T.contentType(contentType: ContentType): T","org.http4k.lens.contentType"]},{"name":"fun <T : HttpMessage> T.with(vararg modifiers: (T) -> T): T","description":"org.http4k.core.with","location":"http4k-core/org.http4k.core/with.html","searchKeys":["with","fun <T : HttpMessage> T.with(vararg modifiers: (T) -> T): T","org.http4k.core.with"]},{"name":"fun <T> CredentialsProvider.Companion.Refreshing(gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), refreshFn: RefreshCredentials<T>): CredentialsProvider<T>","description":"org.http4k.security.Refreshing","location":"http4k-core/org.http4k.security/-refreshing.html","searchKeys":["Refreshing","fun <T> CredentialsProvider.Companion.Refreshing(gracePeriod: Duration = Duration.ofSeconds(10), clock: Clock = Clock.systemUTC(), refreshFn: RefreshCredentials<T>): CredentialsProvider<T>","org.http4k.security.Refreshing"]},{"name":"fun <T> CredentialsProvider.Companion.Refreshing(gracePeriod: Duration = Duration.ofSeconds(10), timeSource: () -> Instant, refreshFn: RefreshCredentials<T>): CredentialsProvider<T>","description":"org.http4k.security.Refreshing","location":"http4k-core/org.http4k.security/-refreshing.html","searchKeys":["Refreshing","fun <T> CredentialsProvider.Companion.Refreshing(gracePeriod: Duration = Duration.ofSeconds(10), timeSource: () -> Instant, refreshFn: RefreshCredentials<T>): CredentialsProvider<T>","org.http4k.security.Refreshing"]},{"name":"fun <T> Lens<Request, T>.matches(fn: (T) -> Boolean): Router","description":"org.http4k.lens.matches","location":"http4k-core/org.http4k.lens/matches.html","searchKeys":["matches","fun <T> Lens<Request, T>.matches(fn: (T) -> Boolean): Router","org.http4k.lens.matches"]},{"name":"fun <T> ZipkinTracesStorage.ensureCurrentSpan(fn: (ZipkinTraces) -> T): T","description":"org.http4k.filter.ensureCurrentSpan","location":"http4k-core/org.http4k.filter/ensure-current-span.html","searchKeys":["ensureCurrentSpan","fun <T> ZipkinTracesStorage.ensureCurrentSpan(fn: (ZipkinTraces) -> T): T","org.http4k.filter.ensureCurrentSpan"]},{"name":"fun <T> ZipkinTracesStorage.inChildSpan(fn: (ZipkinTraces) -> T): T","description":"org.http4k.filter.inChildSpan","location":"http4k-core/org.http4k.filter/in-child-span.html","searchKeys":["inChildSpan","fun <T> ZipkinTracesStorage.inChildSpan(fn: (ZipkinTraces) -> T): T","org.http4k.filter.inChildSpan"]},{"name":"fun <T> csv(delimiter: String = \",\", mapElement: BiDiMapping<String, T>): BiDiMapping<String, List<T>>","description":"org.http4k.lens.StringBiDiMappings.csv","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/csv.html","searchKeys":["csv","fun <T> csv(delimiter: String = \",\", mapElement: BiDiMapping<String, T>): BiDiMapping<String, List<T>>","org.http4k.lens.StringBiDiMappings.csv"]},{"name":"fun <T> defaulted(store: Store<RequestContext>, default: T, name: String = UUID.randomUUID().toString()): BiDiLens<Request, T>","description":"org.http4k.lens.RequestContextKey.defaulted","location":"http4k-core/org.http4k.lens/-request-context-key/defaulted.html","searchKeys":["defaulted","fun <T> defaulted(store: Store<RequestContext>, default: T, name: String = UUID.randomUUID().toString()): BiDiLens<Request, T>","org.http4k.lens.RequestContextKey.defaulted"]},{"name":"fun <T> optional(store: Store<RequestContext>, name: String = UUID.randomUUID().toString()): BiDiLens<Request, T?>","description":"org.http4k.lens.RequestContextKey.optional","location":"http4k-core/org.http4k.lens/-request-context-key/optional.html","searchKeys":["optional","fun <T> optional(store: Store<RequestContext>, name: String = UUID.randomUUID().toString()): BiDiLens<Request, T?>","org.http4k.lens.RequestContextKey.optional"]},{"name":"fun <T> required(store: Store<RequestContext>, name: String = UUID.randomUUID().toString()): RequestContextLens<T>","description":"org.http4k.lens.RequestContextKey.required","location":"http4k-core/org.http4k.lens/-request-context-key/required.html","searchKeys":["required","fun <T> required(store: Store<RequestContext>, name: String = UUID.randomUUID().toString()): RequestContextLens<T>","org.http4k.lens.RequestContextKey.required"]},{"name":"fun <VALUE : Value<T>, T : Any> BiDiPathLensSpec<String>.value(vf: ValueFactory<VALUE, T>): BiDiPathLensSpec<VALUE>","description":"org.http4k.lens.value","location":"http4k-core/org.http4k.lens/value.html","searchKeys":["value","fun <VALUE : Value<T>, T : Any> BiDiPathLensSpec<String>.value(vf: ValueFactory<VALUE, T>): BiDiPathLensSpec<VALUE>","org.http4k.lens.value"]},{"name":"fun AcceptGZip(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.ClientFilters.AcceptGZip","location":"http4k-core/org.http4k.filter/-client-filters/-accept-g-zip.html","searchKeys":["AcceptGZip","fun AcceptGZip(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.ClientFilters.AcceptGZip"]},{"name":"fun AddEventName(): EventFilter","description":"org.http4k.events.EventFilters.AddEventName","location":"http4k-core/org.http4k.events/-event-filters/-add-event-name.html","searchKeys":["AddEventName","fun AddEventName(): EventFilter","org.http4k.events.EventFilters.AddEventName"]},{"name":"fun AddIfModifiedSince(clock: Clock, maxAge: Duration): Filter","description":"org.http4k.filter.CachingFilters.CacheRequest.AddIfModifiedSince","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-request/-add-if-modified-since.html","searchKeys":["AddIfModifiedSince","fun AddIfModifiedSince(clock: Clock, maxAge: Duration): Filter","org.http4k.filter.CachingFilters.CacheRequest.AddIfModifiedSince"]},{"name":"fun AddServiceName(name: String): EventFilter","description":"org.http4k.events.EventFilters.AddServiceName","location":"http4k-core/org.http4k.events/-event-filters/-add-service-name.html","searchKeys":["AddServiceName","fun AddServiceName(name: String): EventFilter","org.http4k.events.EventFilters.AddServiceName"]},{"name":"fun AddTimestamp(clock: Clock = Clock.systemUTC()): EventFilter","description":"org.http4k.events.EventFilters.AddTimestamp","location":"http4k-core/org.http4k.events/-event-filters/-add-timestamp.html","searchKeys":["AddTimestamp","fun AddTimestamp(clock: Clock = Clock.systemUTC()): EventFilter","org.http4k.events.EventFilters.AddTimestamp"]},{"name":"fun AddTimestamp(timeSource: () -> Instant): EventFilter","description":"org.http4k.events.EventFilters.AddTimestamp","location":"http4k-core/org.http4k.events/-event-filters/-add-timestamp.html","searchKeys":["AddTimestamp","fun AddTimestamp(timeSource: () -> Instant): EventFilter","org.http4k.events.EventFilters.AddTimestamp"]},{"name":"fun AddZipkinTraces(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): EventFilter","description":"org.http4k.events.EventFilters.AddZipkinTraces","location":"http4k-core/org.http4k.events/-event-filters/-add-zipkin-traces.html","searchKeys":["AddZipkinTraces","fun AddZipkinTraces(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): EventFilter","org.http4k.events.EventFilters.AddZipkinTraces"]},{"name":"fun ApiKeyAuth(set: (Request) -> Request): Filter","description":"org.http4k.filter.ClientFilters.ApiKeyAuth","location":"http4k-core/org.http4k.filter/-client-filters/-api-key-auth.html","searchKeys":["ApiKeyAuth","fun ApiKeyAuth(set: (Request) -> Request): Filter","org.http4k.filter.ClientFilters.ApiKeyAuth"]},{"name":"fun Base64DecodeBody(): Filter","description":"org.http4k.filter.RequestFilters.Base64DecodeBody","location":"http4k-core/org.http4k.filter/-request-filters/-base64-decode-body.html","searchKeys":["Base64DecodeBody","fun Base64DecodeBody(): Filter","org.http4k.filter.RequestFilters.Base64DecodeBody"]},{"name":"fun Base64EncodeBody(): Filter","description":"org.http4k.filter.ResponseFilters.Base64EncodeBody","location":"http4k-core/org.http4k.filter/-response-filters/-base64-encode-body.html","searchKeys":["Base64EncodeBody","fun Base64EncodeBody(): Filter","org.http4k.filter.ResponseFilters.Base64EncodeBody"]},{"name":"fun Body.Companion.binary(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<InputStream>","description":"org.http4k.lens.binary","location":"http4k-core/org.http4k.lens/binary.html","searchKeys":["binary","fun Body.Companion.binary(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<InputStream>","org.http4k.lens.binary"]},{"name":"fun Body.Companion.nonBlankString(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","description":"org.http4k.lens.nonBlankString","location":"http4k-core/org.http4k.lens/non-blank-string.html","searchKeys":["nonBlankString","fun Body.Companion.nonBlankString(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","org.http4k.lens.nonBlankString"]},{"name":"fun Body.Companion.nonEmptyString(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","description":"org.http4k.lens.nonEmptyString","location":"http4k-core/org.http4k.lens/non-empty-string.html","searchKeys":["nonEmptyString","fun Body.Companion.nonEmptyString(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","org.http4k.lens.nonEmptyString"]},{"name":"fun Body.Companion.regex(pattern: String, group: Int = 1, contentType: ContentType = ContentType.TEXT_PLAIN, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","description":"org.http4k.lens.regex","location":"http4k-core/org.http4k.lens/regex.html","searchKeys":["regex","fun Body.Companion.regex(pattern: String, group: Int = 1, contentType: ContentType = ContentType.TEXT_PLAIN, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","org.http4k.lens.regex"]},{"name":"fun Body.Companion.string(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","description":"org.http4k.lens.string","location":"http4k-core/org.http4k.lens/string.html","searchKeys":["string","fun Body.Companion.string(contentType: ContentType, description: String? = null, contentNegotiation: ContentNegotiation = None): BiDiBodyLensSpec<String>","org.http4k.lens.string"]},{"name":"fun Body.Companion.webForm(validator: Validator, vararg formFields: Lens<WebForm, *>): BiDiBodyLensSpec<WebForm>","description":"org.http4k.lens.webForm","location":"http4k-core/org.http4k.lens/web-form.html","searchKeys":["webForm","fun Body.Companion.webForm(validator: Validator, vararg formFields: Lens<WebForm, *>): BiDiBodyLensSpec<WebForm>","org.http4k.lens.webForm"]},{"name":"fun Body.gunzipped(): Body","description":"org.http4k.filter.gunzipped","location":"http4k-core/org.http4k.filter/gunzipped.html","searchKeys":["gunzipped","fun Body.gunzipped(): Body","org.http4k.filter.gunzipped"]},{"name":"fun Body.gunzippedStream(): Body","description":"org.http4k.filter.gunzippedStream","location":"http4k-core/org.http4k.filter/gunzipped-stream.html","searchKeys":["gunzippedStream","fun Body.gunzippedStream(): Body","org.http4k.filter.gunzippedStream"]},{"name":"fun Body.gzipped(compressionLevel: Int = DEFAULT_COMPRESSION): CompressionResult","description":"org.http4k.filter.gzipped","location":"http4k-core/org.http4k.filter/gzipped.html","searchKeys":["gzipped","fun Body.gzipped(compressionLevel: Int = DEFAULT_COMPRESSION): CompressionResult","org.http4k.filter.gzipped"]},{"name":"fun Body.gzippedStream(compressionLevel: Int = DEFAULT_COMPRESSION): CompressionResult","description":"org.http4k.filter.gzippedStream","location":"http4k-core/org.http4k.filter/gzipped-stream.html","searchKeys":["gzippedStream","fun Body.gzippedStream(compressionLevel: Int = DEFAULT_COMPRESSION): CompressionResult","org.http4k.filter.gzippedStream"]},{"name":"fun ByteArray.asByteBuffer(): ByteBuffer","description":"org.http4k.asByteBuffer","location":"http4k-core/org.http4k/as-byte-buffer.html","searchKeys":["asByteBuffer","fun ByteArray.asByteBuffer(): ByteBuffer","org.http4k.asByteBuffer"]},{"name":"fun ByteArray.base64Encode(): String","description":"org.http4k.base64Encode","location":"http4k-core/org.http4k/base64-encode.html","searchKeys":["base64Encode","fun ByteArray.base64Encode(): String","org.http4k.base64Encode"]},{"name":"fun ByteArray.base64EncodeArray(): ByteArray","description":"org.http4k.base64EncodeArray","location":"http4k-core/org.http4k/base64-encode-array.html","searchKeys":["base64EncodeArray","fun ByteArray.base64EncodeArray(): ByteArray","org.http4k.base64EncodeArray"]},{"name":"fun ByteBuffer.asString(): String","description":"org.http4k.asString","location":"http4k-core/org.http4k/as-string.html","searchKeys":["asString","fun ByteBuffer.asString(): String","org.http4k.asString"]},{"name":"fun ByteBuffer.base64Decoded(): ByteArray","description":"org.http4k.base64Decoded","location":"http4k-core/org.http4k/base64-decoded.html","searchKeys":["base64Decoded","fun ByteBuffer.base64Decoded(): ByteArray","org.http4k.base64Decoded"]},{"name":"fun ByteBuffer.base64DecodedByteBuffer(): ByteBuffer","description":"org.http4k.base64DecodedByteBuffer","location":"http4k-core/org.http4k/base64-decoded-byte-buffer.html","searchKeys":["base64DecodedByteBuffer","fun ByteBuffer.base64DecodedByteBuffer(): ByteBuffer","org.http4k.base64DecodedByteBuffer"]},{"name":"fun ByteBuffer.base64Encode(): String","description":"org.http4k.base64Encode","location":"http4k-core/org.http4k/base64-encode.html","searchKeys":["base64Encode","fun ByteBuffer.base64Encode(): String","org.http4k.base64Encode"]},{"name":"fun ByteBuffer.length(): Int","description":"org.http4k.length","location":"http4k-core/org.http4k/length.html","searchKeys":["length","fun ByteBuffer.length(): Int","org.http4k.length"]},{"name":"fun CatchLensFailure(failResponseFn: (LensFailure) -> Response): Filter","description":"org.http4k.filter.ServerFilters.CatchLensFailure","location":"http4k-core/org.http4k.filter/-server-filters/-catch-lens-failure.html","searchKeys":["CatchLensFailure","fun CatchLensFailure(failResponseFn: (LensFailure) -> Response): Filter","org.http4k.filter.ServerFilters.CatchLensFailure"]},{"name":"fun CatchLensFailure(failResponseFn: (Request, LensFailure) -> Response = { _, lensFailure ->\n            Response(BAD_REQUEST.description(lensFailure.failures.joinToString(\"; \")))\n        }): Filter","description":"org.http4k.filter.ServerFilters.CatchLensFailure","location":"http4k-core/org.http4k.filter/-server-filters/-catch-lens-failure.html","searchKeys":["CatchLensFailure","fun CatchLensFailure(failResponseFn: (Request, LensFailure) -> Response = { _, lensFailure ->\n            Response(BAD_REQUEST.description(lensFailure.failures.joinToString(\"; \")))\n        }): Filter","org.http4k.filter.ServerFilters.CatchLensFailure"]},{"name":"fun Classpath(basePackagePath: String = \"/\", muteWarning: Boolean = false): ResourceLoader","description":"org.http4k.routing.ResourceLoader.Companion.Classpath","location":"http4k-core/org.http4k.routing/-resource-loader/-companion/-classpath.html","searchKeys":["Classpath","fun Classpath(basePackagePath: String = \"/\", muteWarning: Boolean = false): ResourceLoader","org.http4k.routing.ResourceLoader.Companion.Classpath"]},{"name":"fun CleanProxy(): Filter","description":"org.http4k.filter.ClientFilters.CleanProxy","location":"http4k-core/org.http4k.filter/-client-filters/-clean-proxy.html","searchKeys":["CleanProxy","fun CleanProxy(): Filter","org.http4k.filter.ClientFilters.CleanProxy"]},{"name":"fun Cookie.invalidate(): Cookie","description":"org.http4k.core.cookie.invalidate","location":"http4k-core/org.http4k.core.cookie/invalidate.html","searchKeys":["invalidate","fun Cookie.invalidate(): Cookie","org.http4k.core.cookie.invalidate"]},{"name":"fun Directory(baseDir: String = \".\"): ResourceLoader","description":"org.http4k.routing.ResourceLoader.Companion.Directory","location":"http4k-core/org.http4k.routing/-resource-loader/-companion/-directory.html","searchKeys":["Directory","fun Directory(baseDir: String = \".\"): ResourceLoader","org.http4k.routing.ResourceLoader.Companion.Directory"]},{"name":"fun Disk(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteCache","description":"org.http4k.traffic.ReadWriteCache.Companion.Disk","location":"http4k-core/org.http4k.traffic/-read-write-cache/-companion/-disk.html","searchKeys":["Disk","fun Disk(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteCache","org.http4k.traffic.ReadWriteCache.Companion.Disk"]},{"name":"fun Disk(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteStream","description":"org.http4k.traffic.ReadWriteStream.Companion.Disk","location":"http4k-core/org.http4k.traffic/-read-write-stream/-companion/-disk.html","searchKeys":["Disk","fun Disk(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteStream","org.http4k.traffic.ReadWriteStream.Companion.Disk"]},{"name":"fun DiskStream(baseDir: String = \".\"): Replay","description":"org.http4k.traffic.Replay.Companion.DiskStream","location":"http4k-core/org.http4k.traffic/-replay/-companion/-disk-stream.html","searchKeys":["DiskStream","fun DiskStream(baseDir: String = \".\"): Replay","org.http4k.traffic.Replay.Companion.DiskStream"]},{"name":"fun DiskStream(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }, id: () -> String = { System.nanoTime().toString() + UUID.randomUUID().toString() }): Sink","description":"org.http4k.traffic.Sink.Companion.DiskStream","location":"http4k-core/org.http4k.traffic/-sink/-companion/-disk-stream.html","searchKeys":["DiskStream","fun DiskStream(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }, id: () -> String = { System.nanoTime().toString() + UUID.randomUUID().toString() }): Sink","org.http4k.traffic.Sink.Companion.DiskStream"]},{"name":"fun DiskTree(baseDir: String = \".\"): Source","description":"org.http4k.traffic.Source.Companion.DiskTree","location":"http4k-core/org.http4k.traffic/-source/-companion/-disk-tree.html","searchKeys":["DiskTree","fun DiskTree(baseDir: String = \".\"): Source","org.http4k.traffic.Source.Companion.DiskTree"]},{"name":"fun DiskTree(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): Sink","description":"org.http4k.traffic.Sink.Companion.DiskTree","location":"http4k-core/org.http4k.traffic/-sink/-companion/-disk-tree.html","searchKeys":["DiskTree","fun DiskTree(baseDir: String = \".\", shouldStore: (HttpMessage) -> Boolean = { true }): Sink","org.http4k.traffic.Sink.Companion.DiskTree"]},{"name":"fun EventFilter.then(next: EventFilter): EventFilter","description":"org.http4k.events.then","location":"http4k-core/org.http4k.events/then.html","searchKeys":["then","fun EventFilter.then(next: EventFilter): EventFilter","org.http4k.events.then"]},{"name":"fun EventFilter.then(next: Events): Events","description":"org.http4k.events.then","location":"http4k-core/org.http4k.events/then.html","searchKeys":["then","fun EventFilter.then(next: Events): Events","org.http4k.events.then"]},{"name":"fun Events.and(next: Events): Events","description":"org.http4k.events.and","location":"http4k-core/org.http4k.events/and.html","searchKeys":["and","fun Events.and(next: Events): Events","org.http4k.events.and"]},{"name":"fun Events.then(next: Events): (Event) -> Unit","description":"org.http4k.events.then","location":"http4k-core/org.http4k.events/then.html","searchKeys":["then","fun Events.then(next: Events): (Event) -> Unit","org.http4k.events.then"]},{"name":"fun ExecutorService.withRequestTracing(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): ExecutorService","description":"org.http4k.util.withRequestTracing","location":"http4k-core/org.http4k.util/with-request-tracing.html","searchKeys":["withRequestTracing","fun ExecutorService.withRequestTracing(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): ExecutorService","org.http4k.util.withRequestTracing"]},{"name":"fun Filter.inIntelliJOnly(): Filter","description":"org.http4k.filter.inIntelliJOnly","location":"http4k-core/org.http4k.filter/in-intelli-j-only.html","searchKeys":["inIntelliJOnly","fun Filter.inIntelliJOnly(): Filter","org.http4k.filter.inIntelliJOnly"]},{"name":"fun Filter.then(next: Filter): Filter","description":"org.http4k.core.then","location":"http4k-core/org.http4k.core/then.html","searchKeys":["then","fun Filter.then(next: Filter): Filter","org.http4k.core.then"]},{"name":"fun Filter.then(next: HttpHandler): HttpHandler","description":"org.http4k.core.then","location":"http4k-core/org.http4k.core/then.html","searchKeys":["then","fun Filter.then(next: HttpHandler): HttpHandler","org.http4k.core.then"]},{"name":"fun Filter.then(next: RoutingHttpHandler): RoutingHttpHandler","description":"org.http4k.core.then","location":"http4k-core/org.http4k.core/then.html","searchKeys":["then","fun Filter.then(next: RoutingHttpHandler): RoutingHttpHandler","org.http4k.core.then"]},{"name":"fun Filter.thenIf(predicate: RequestPredicate, filter: Filter): Filter","description":"org.http4k.filter.thenIf","location":"http4k-core/org.http4k.filter/then-if.html","searchKeys":["thenIf","fun Filter.thenIf(predicate: RequestPredicate, filter: Filter): Filter","org.http4k.filter.thenIf"]},{"name":"fun Filter.thenIfNot(predicate: RequestPredicate, filter: Filter): Filter","description":"org.http4k.filter.thenIfNot","location":"http4k-core/org.http4k.filter/then-if-not.html","searchKeys":["thenIfNot","fun Filter.thenIfNot(predicate: RequestPredicate, filter: Filter): Filter","org.http4k.filter.thenIfNot"]},{"name":"fun Form.toBody(): Body","description":"org.http4k.core.body.toBody","location":"http4k-core/org.http4k.core.body/to-body.html","searchKeys":["toBody","fun Form.toBody(): Body","org.http4k.core.body.toBody"]},{"name":"fun GZip(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.ClientFilters.GZip","location":"http4k-core/org.http4k.filter/-client-filters/-g-zip.html","searchKeys":["GZip","fun GZip(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.ClientFilters.GZip"]},{"name":"fun HttpHandler.asServer(config: ServerConfig): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-core/org.http4k.server/as-server.html","searchKeys":["asServer","fun HttpHandler.asServer(config: ServerConfig): Http4kServer","org.http4k.server.asServer"]},{"name":"fun HttpHandler.asServlet(): HttpHandlerServlet","description":"org.http4k.servlet.asServlet","location":"http4k-core/org.http4k.servlet/as-servlet.html","searchKeys":["asServlet","fun HttpHandler.asServlet(): HttpHandlerServlet","org.http4k.servlet.asServlet"]},{"name":"fun HttpHandler.asServlet(): HttpHandlerServlet","description":"org.http4k.servlet.jakarta.asServlet","location":"http4k-core/org.http4k.servlet.jakarta/as-servlet.html","searchKeys":["asServlet","fun HttpHandler.asServlet(): HttpHandlerServlet","org.http4k.servlet.jakarta.asServlet"]},{"name":"fun HttpHandler.debug(out: PrintStream = System.out, debugStream: Boolean = false): (request: Request) -> Response","description":"org.http4k.filter.debug","location":"http4k-core/org.http4k.filter/debug.html","searchKeys":["debug","fun HttpHandler.debug(out: PrintStream = System.out, debugStream: Boolean = false): (request: Request) -> Response","org.http4k.filter.debug"]},{"name":"fun HttpHandler.withAsyncApi(): AsyncHttpHandler","description":"org.http4k.client.withAsyncApi","location":"http4k-core/org.http4k.client/with-async-api.html","searchKeys":["withAsyncApi","fun HttpHandler.withAsyncApi(): AsyncHttpHandler","org.http4k.client.withAsyncApi"]},{"name":"fun HttpMessage.contentType(): ContentType?","description":"org.http4k.lens.contentType","location":"http4k-core/org.http4k.lens/content-type.html","searchKeys":["contentType","fun HttpMessage.contentType(): ContentType?","org.http4k.lens.contentType"]},{"name":"fun HttpServletRequest.asHttp4kRequest(): Request","description":"org.http4k.servlet.asHttp4kRequest","location":"http4k-core/org.http4k.servlet/as-http4k-request.html","searchKeys":["asHttp4kRequest","fun HttpServletRequest.asHttp4kRequest(): Request","org.http4k.servlet.asHttp4kRequest"]},{"name":"fun HttpServletRequest.asHttp4kRequest(): Request?","description":"org.http4k.servlet.jakarta.asHttp4kRequest","location":"http4k-core/org.http4k.servlet.jakarta/as-http4k-request.html","searchKeys":["asHttp4kRequest","fun HttpServletRequest.asHttp4kRequest(): Request?","org.http4k.servlet.jakarta.asHttp4kRequest"]},{"name":"fun Memory(cache: MutableMap<Request, Response> = mutableMapOf(), shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteCache","description":"org.http4k.traffic.ReadWriteCache.Companion.Memory","location":"http4k-core/org.http4k.traffic/-read-write-cache/-companion/-memory.html","searchKeys":["Memory","fun Memory(cache: MutableMap<Request, Response> = mutableMapOf(), shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteCache","org.http4k.traffic.ReadWriteCache.Companion.Memory"]},{"name":"fun Memory(stream: MutableList<Pair<Request, Response>> = mutableListOf(), shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteStream","description":"org.http4k.traffic.ReadWriteStream.Companion.Memory","location":"http4k-core/org.http4k.traffic/-read-write-stream/-companion/-memory.html","searchKeys":["Memory","fun Memory(stream: MutableList<Pair<Request, Response>> = mutableListOf(), shouldStore: (HttpMessage) -> Boolean = { true }): ReadWriteStream","org.http4k.traffic.ReadWriteStream.Companion.Memory"]},{"name":"fun MemoryMap(cache: MutableMap<Request, Response>): Source","description":"org.http4k.traffic.Source.Companion.MemoryMap","location":"http4k-core/org.http4k.traffic/-source/-companion/-memory-map.html","searchKeys":["MemoryMap","fun MemoryMap(cache: MutableMap<Request, Response>): Source","org.http4k.traffic.Source.Companion.MemoryMap"]},{"name":"fun MemoryMap(cache: MutableMap<Request, Response>, shouldStore: (HttpMessage) -> Boolean = { true }): Sink","description":"org.http4k.traffic.Sink.Companion.MemoryMap","location":"http4k-core/org.http4k.traffic/-sink/-companion/-memory-map.html","searchKeys":["MemoryMap","fun MemoryMap(cache: MutableMap<Request, Response>, shouldStore: (HttpMessage) -> Boolean = { true }): Sink","org.http4k.traffic.Sink.Companion.MemoryMap"]},{"name":"fun MemoryStream(stream: List<Pair<Request, Response>>): Replay","description":"org.http4k.traffic.Replay.Companion.MemoryStream","location":"http4k-core/org.http4k.traffic/-replay/-companion/-memory-stream.html","searchKeys":["MemoryStream","fun MemoryStream(stream: List<Pair<Request, Response>>): Replay","org.http4k.traffic.Replay.Companion.MemoryStream"]},{"name":"fun MemoryStream(stream: MutableList<Pair<Request, Response>>, shouldStore: (HttpMessage) -> Boolean = { true }): Sink","description":"org.http4k.traffic.Sink.Companion.MemoryStream","location":"http4k-core/org.http4k.traffic/-sink/-companion/-memory-stream.html","searchKeys":["MemoryStream","fun MemoryStream(stream: MutableList<Pair<Request, Response>>, shouldStore: (HttpMessage) -> Boolean = { true }): Sink","org.http4k.traffic.Sink.Companion.MemoryStream"]},{"name":"fun Method.Companion.supportedOrNull(method: String): Method?","description":"org.http4k.server.supportedOrNull","location":"http4k-core/org.http4k.server/supported-or-null.html","searchKeys":["supportedOrNull","fun Method.Companion.supportedOrNull(method: String): Method?","org.http4k.server.supportedOrNull"]},{"name":"fun Method.and(that: Router): Router","description":"org.http4k.routing.and","location":"http4k-core/org.http4k.routing/and.html","searchKeys":["and","fun Method.and(that: Router): Router","org.http4k.routing.and"]},{"name":"fun Method.asRouter(): Router","description":"org.http4k.routing.asRouter","location":"http4k-core/org.http4k.routing/as-router.html","searchKeys":["asRouter","fun Method.asRouter(): Router","org.http4k.routing.asRouter"]},{"name":"fun Modify(vararg modifiers: (Request) -> Request): Filter","description":"org.http4k.filter.RequestFilters.Modify","location":"http4k-core/org.http4k.filter/-request-filters/-modify.html","searchKeys":["Modify","fun Modify(vararg modifiers: (Request) -> Request): Filter","org.http4k.filter.RequestFilters.Modify"]},{"name":"fun Modify(vararg modifiers: (Response) -> Response): Filter","description":"org.http4k.filter.ResponseFilters.Modify","location":"http4k-core/org.http4k.filter/-response-filters/-modify.html","searchKeys":["Modify","fun Modify(vararg modifiers: (Response) -> Response): Filter","org.http4k.filter.ResponseFilters.Modify"]},{"name":"fun MultipartFormWithBoundary(boundary: String): ContentType","description":"org.http4k.core.ContentType.Companion.MultipartFormWithBoundary","location":"http4k-core/org.http4k.core/-content-type/-companion/-multipart-form-with-boundary.html","searchKeys":["MultipartFormWithBoundary","fun MultipartFormWithBoundary(boundary: String): ContentType","org.http4k.core.ContentType.Companion.MultipartFormWithBoundary"]},{"name":"fun MultipartMixedWithBoundary(boundary: String): ContentType","description":"org.http4k.core.ContentType.Companion.MultipartMixedWithBoundary","location":"http4k-core/org.http4k.core/-content-type/-companion/-multipart-mixed-with-boundary.html","searchKeys":["MultipartMixedWithBoundary","fun MultipartMixedWithBoundary(boundary: String): ContentType","org.http4k.core.ContentType.Companion.MultipartMixedWithBoundary"]},{"name":"fun OriginPolicy.Companion.AllowAll(): AllowAllOriginPolicy","description":"org.http4k.filter.AllowAll","location":"http4k-core/org.http4k.filter/-allow-all.html","searchKeys":["AllowAll","fun OriginPolicy.Companion.AllowAll(): AllowAllOriginPolicy","org.http4k.filter.AllowAll"]},{"name":"fun OriginPolicy.Companion.AnyOf(allowedOrigins: List<String>): OriginPolicy","description":"org.http4k.filter.AnyOf","location":"http4k-core/org.http4k.filter/-any-of.html","searchKeys":["AnyOf","fun OriginPolicy.Companion.AnyOf(allowedOrigins: List<String>): OriginPolicy","org.http4k.filter.AnyOf"]},{"name":"fun OriginPolicy.Companion.AnyOf(vararg allowedOrigins: String): OriginPolicy","description":"org.http4k.filter.AnyOf","location":"http4k-core/org.http4k.filter/-any-of.html","searchKeys":["AnyOf","fun OriginPolicy.Companion.AnyOf(vararg allowedOrigins: String): OriginPolicy","org.http4k.filter.AnyOf"]},{"name":"fun OriginPolicy.Companion.Only(allowedOrigin: String): OriginPolicy","description":"org.http4k.filter.Only","location":"http4k-core/org.http4k.filter/-only.html","searchKeys":["Only","fun OriginPolicy.Companion.Only(allowedOrigin: String): OriginPolicy","org.http4k.filter.Only"]},{"name":"fun OriginPolicy.Companion.Pattern(originRegex: Regex): OriginPolicy","description":"org.http4k.filter.Pattern","location":"http4k-core/org.http4k.filter/-pattern.html","searchKeys":["Pattern","fun OriginPolicy.Companion.Pattern(originRegex: Regex): OriginPolicy","org.http4k.filter.Pattern"]},{"name":"fun Parameters.findMultiple(name: String): List<String?>","description":"org.http4k.core.findMultiple","location":"http4k-core/org.http4k.core/find-multiple.html","searchKeys":["findMultiple","fun Parameters.findMultiple(name: String): List<String?>","org.http4k.core.findMultiple"]},{"name":"fun Parameters.findSingle(name: String): String?","description":"org.http4k.core.findSingle","location":"http4k-core/org.http4k.core/find-single.html","searchKeys":["findSingle","fun Parameters.findSingle(name: String): String?","org.http4k.core.findSingle"]},{"name":"fun Parameters.toParametersMap(): Map<String, List<String?>>","description":"org.http4k.core.toParametersMap","location":"http4k-core/org.http4k.core/to-parameters-map.html","searchKeys":["toParametersMap","fun Parameters.toParametersMap(): Map<String, List<String?>>","org.http4k.core.toParametersMap"]},{"name":"fun Parameters.toUrlFormEncoded(): String","description":"org.http4k.core.toUrlFormEncoded","location":"http4k-core/org.http4k.core/to-url-form-encoded.html","searchKeys":["toUrlFormEncoded","fun Parameters.toUrlFormEncoded(): String","org.http4k.core.toUrlFormEncoded"]},{"name":"fun Path.base64(): BiDiPathLensSpec<String>","description":"org.http4k.lens.base64","location":"http4k-core/org.http4k.lens/base64.html","searchKeys":["base64","fun Path.base64(): BiDiPathLensSpec<String>","org.http4k.lens.base64"]},{"name":"fun Path.bigDecimal(): BiDiPathLensSpec<BigDecimal>","description":"org.http4k.lens.bigDecimal","location":"http4k-core/org.http4k.lens/big-decimal.html","searchKeys":["bigDecimal","fun Path.bigDecimal(): BiDiPathLensSpec<BigDecimal>","org.http4k.lens.bigDecimal"]},{"name":"fun Path.bigInteger(): BiDiPathLensSpec<BigInteger>","description":"org.http4k.lens.bigInteger","location":"http4k-core/org.http4k.lens/big-integer.html","searchKeys":["bigInteger","fun Path.bigInteger(): BiDiPathLensSpec<BigInteger>","org.http4k.lens.bigInteger"]},{"name":"fun Path.boolean(): BiDiPathLensSpec<Boolean>","description":"org.http4k.lens.boolean","location":"http4k-core/org.http4k.lens/boolean.html","searchKeys":["boolean","fun Path.boolean(): BiDiPathLensSpec<Boolean>","org.http4k.lens.boolean"]},{"name":"fun Path.dateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiPathLensSpec<LocalDateTime>","description":"org.http4k.lens.dateTime","location":"http4k-core/org.http4k.lens/date-time.html","searchKeys":["dateTime","fun Path.dateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiPathLensSpec<LocalDateTime>","org.http4k.lens.dateTime"]},{"name":"fun Path.double(): BiDiPathLensSpec<Double>","description":"org.http4k.lens.double","location":"http4k-core/org.http4k.lens/double.html","searchKeys":["double","fun Path.double(): BiDiPathLensSpec<Double>","org.http4k.lens.double"]},{"name":"fun Path.duration(): BiDiPathLensSpec<Duration>","description":"org.http4k.lens.duration","location":"http4k-core/org.http4k.lens/duration.html","searchKeys":["duration","fun Path.duration(): BiDiPathLensSpec<Duration>","org.http4k.lens.duration"]},{"name":"fun Path.float(): BiDiPathLensSpec<Float>","description":"org.http4k.lens.float","location":"http4k-core/org.http4k.lens/float.html","searchKeys":["float","fun Path.float(): BiDiPathLensSpec<Float>","org.http4k.lens.float"]},{"name":"fun Path.instant(): BiDiPathLensSpec<Instant>","description":"org.http4k.lens.instant","location":"http4k-core/org.http4k.lens/instant.html","searchKeys":["instant","fun Path.instant(): BiDiPathLensSpec<Instant>","org.http4k.lens.instant"]},{"name":"fun Path.int(): BiDiPathLensSpec<Int>","description":"org.http4k.lens.int","location":"http4k-core/org.http4k.lens/int.html","searchKeys":["int","fun Path.int(): BiDiPathLensSpec<Int>","org.http4k.lens.int"]},{"name":"fun Path.localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiPathLensSpec<LocalDate>","description":"org.http4k.lens.localDate","location":"http4k-core/org.http4k.lens/local-date.html","searchKeys":["localDate","fun Path.localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiPathLensSpec<LocalDate>","org.http4k.lens.localDate"]},{"name":"fun Path.localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiPathLensSpec<LocalTime>","description":"org.http4k.lens.localTime","location":"http4k-core/org.http4k.lens/local-time.html","searchKeys":["localTime","fun Path.localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiPathLensSpec<LocalTime>","org.http4k.lens.localTime"]},{"name":"fun Path.long(): BiDiPathLensSpec<Long>","description":"org.http4k.lens.long","location":"http4k-core/org.http4k.lens/long.html","searchKeys":["long","fun Path.long(): BiDiPathLensSpec<Long>","org.http4k.lens.long"]},{"name":"fun Path.nonBlankString(): BiDiPathLensSpec<String>","description":"org.http4k.lens.nonBlankString","location":"http4k-core/org.http4k.lens/non-blank-string.html","searchKeys":["nonBlankString","fun Path.nonBlankString(): BiDiPathLensSpec<String>","org.http4k.lens.nonBlankString"]},{"name":"fun Path.nonEmptyString(): BiDiPathLensSpec<String>","description":"org.http4k.lens.nonEmptyString","location":"http4k-core/org.http4k.lens/non-empty-string.html","searchKeys":["nonEmptyString","fun Path.nonEmptyString(): BiDiPathLensSpec<String>","org.http4k.lens.nonEmptyString"]},{"name":"fun Path.regex(pattern: String, group: Int = 1): BiDiPathLensSpec<String>","description":"org.http4k.lens.regex","location":"http4k-core/org.http4k.lens/regex.html","searchKeys":["regex","fun Path.regex(pattern: String, group: Int = 1): BiDiPathLensSpec<String>","org.http4k.lens.regex"]},{"name":"fun Path.regexObject(): BiDiPathLensSpec<Regex>","description":"org.http4k.lens.regexObject","location":"http4k-core/org.http4k.lens/regex-object.html","searchKeys":["regexObject","fun Path.regexObject(): BiDiPathLensSpec<Regex>","org.http4k.lens.regexObject"]},{"name":"fun Path.string(): Path","description":"org.http4k.lens.string","location":"http4k-core/org.http4k.lens/string.html","searchKeys":["string","fun Path.string(): Path","org.http4k.lens.string"]},{"name":"fun Path.uri(): BiDiPathLensSpec<Uri>","description":"org.http4k.lens.uri","location":"http4k-core/org.http4k.lens/uri.html","searchKeys":["uri","fun Path.uri(): BiDiPathLensSpec<Uri>","org.http4k.lens.uri"]},{"name":"fun Path.urlEncoded(): BiDiPathLensSpec<String>","description":"org.http4k.lens.urlEncoded","location":"http4k-core/org.http4k.lens/url-encoded.html","searchKeys":["urlEncoded","fun Path.urlEncoded(): BiDiPathLensSpec<String>","org.http4k.lens.urlEncoded"]},{"name":"fun Path.uuid(): BiDiPathLensSpec<UUID>","description":"org.http4k.lens.uuid","location":"http4k-core/org.http4k.lens/uuid.html","searchKeys":["uuid","fun Path.uuid(): BiDiPathLensSpec<UUID>","org.http4k.lens.uuid"]},{"name":"fun Path.yearMonth(): BiDiPathLensSpec<YearMonth>","description":"org.http4k.lens.yearMonth","location":"http4k-core/org.http4k.lens/year-month.html","searchKeys":["yearMonth","fun Path.yearMonth(): BiDiPathLensSpec<YearMonth>","org.http4k.lens.yearMonth"]},{"name":"fun Path.zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiPathLensSpec<ZonedDateTime>","description":"org.http4k.lens.zonedDateTime","location":"http4k-core/org.http4k.lens/zoned-date-time.html","searchKeys":["zonedDateTime","fun Path.zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiPathLensSpec<ZonedDateTime>","org.http4k.lens.zonedDateTime"]},{"name":"fun Request.Companion.parse(request: String, lineBreak: String = \"\"): Request","description":"org.http4k.core.parse","location":"http4k-core/org.http4k.core/parse.html","searchKeys":["parse","fun Request.Companion.parse(request: String, lineBreak: String = \"\"): Request","org.http4k.core.parse"]},{"name":"fun Request.accept(): Accept?","description":"org.http4k.lens.accept","location":"http4k-core/org.http4k.lens/accept.html","searchKeys":["accept","fun Request.accept(): Accept?","org.http4k.lens.accept"]},{"name":"fun Request.accept(accept: Accept): Request","description":"org.http4k.lens.accept","location":"http4k-core/org.http4k.lens/accept.html","searchKeys":["accept","fun Request.accept(accept: Accept): Request","org.http4k.lens.accept"]},{"name":"fun Request.basicAuthentication(): Credentials?","description":"org.http4k.lens.basicAuthentication","location":"http4k-core/org.http4k.lens/basic-authentication.html","searchKeys":["basicAuthentication","fun Request.basicAuthentication(): Credentials?","org.http4k.lens.basicAuthentication"]},{"name":"fun Request.basicAuthentication(credentials: Credentials): Request","description":"org.http4k.lens.basicAuthentication","location":"http4k-core/org.http4k.lens/basic-authentication.html","searchKeys":["basicAuthentication","fun Request.basicAuthentication(credentials: Credentials): Request","org.http4k.lens.basicAuthentication"]},{"name":"fun Request.bearerAuth(token: String, scheme: String = \"Bearer\"): Request","description":"org.http4k.lens.bearerAuth","location":"http4k-core/org.http4k.lens/bearer-auth.html","searchKeys":["bearerAuth","fun Request.bearerAuth(token: String, scheme: String = \"Bearer\"): Request","org.http4k.lens.bearerAuth"]},{"name":"fun Request.bearerToken(): String?","description":"org.http4k.lens.bearerToken","location":"http4k-core/org.http4k.lens/bearer-token.html","searchKeys":["bearerToken","fun Request.bearerToken(): String?","org.http4k.lens.bearerToken"]},{"name":"fun Request.cookie(name: String): Cookie?","description":"org.http4k.core.cookie.cookie","location":"http4k-core/org.http4k.core.cookie/cookie.html","searchKeys":["cookie","fun Request.cookie(name: String): Cookie?","org.http4k.core.cookie.cookie"]},{"name":"fun Request.cookie(name: String, value: String): Request","description":"org.http4k.core.cookie.cookie","location":"http4k-core/org.http4k.core.cookie/cookie.html","searchKeys":["cookie","fun Request.cookie(name: String, value: String): Request","org.http4k.core.cookie.cookie"]},{"name":"fun Request.cookie(new: Cookie): Request","description":"org.http4k.core.cookie.cookie","location":"http4k-core/org.http4k.core.cookie/cookie.html","searchKeys":["cookie","fun Request.cookie(new: Cookie): Request","org.http4k.core.cookie.cookie"]},{"name":"fun Request.cookies(): List<Cookie>","description":"org.http4k.core.cookie.cookies","location":"http4k-core/org.http4k.core.cookie/cookies.html","searchKeys":["cookies","fun Request.cookies(): List<Cookie>","org.http4k.core.cookie.cookies"]},{"name":"fun Request.flash(): String?","description":"org.http4k.filter.flash","location":"http4k-core/org.http4k.filter/flash.html","searchKeys":["flash","fun Request.flash(): String?","org.http4k.filter.flash"]},{"name":"fun Request.form(): Form","description":"org.http4k.core.body.form","location":"http4k-core/org.http4k.core.body/form.html","searchKeys":["form","fun Request.form(): Form","org.http4k.core.body.form"]},{"name":"fun Request.form(name: String): String?","description":"org.http4k.core.body.form","location":"http4k-core/org.http4k.core.body/form.html","searchKeys":["form","fun Request.form(name: String): String?","org.http4k.core.body.form"]},{"name":"fun Request.form(name: String, value: String?): Request","description":"org.http4k.core.body.form","location":"http4k-core/org.http4k.core.body/form.html","searchKeys":["form","fun Request.form(name: String, value: String?): Request","org.http4k.core.body.form"]},{"name":"fun Request.form(vararg formData: Pair<String, String?>): Request","description":"org.http4k.core.body.form","location":"http4k-core/org.http4k.core.body/form.html","searchKeys":["form","fun Request.form(vararg formData: Pair<String, String?>): Request","org.http4k.core.body.form"]},{"name":"fun Request.formAsMap(): Map<String, List<String?>>","description":"org.http4k.core.body.formAsMap","location":"http4k-core/org.http4k.core.body/form-as-map.html","searchKeys":["formAsMap","fun Request.formAsMap(): Map<String, List<String?>>","org.http4k.core.body.formAsMap"]},{"name":"fun Request.path(name: String): String?","description":"org.http4k.routing.path","location":"http4k-core/org.http4k.routing/path.html","searchKeys":["path","fun Request.path(name: String): String?","org.http4k.routing.path"]},{"name":"fun Request.removeCookie(name: String): Request","description":"org.http4k.core.cookie.removeCookie","location":"http4k-core/org.http4k.core.cookie/remove-cookie.html","searchKeys":["removeCookie","fun Request.removeCookie(name: String): Request","org.http4k.core.cookie.removeCookie"]},{"name":"fun Request.toCurl(truncateBodyLength: Int = 256): String","description":"org.http4k.core.toCurl","location":"http4k-core/org.http4k.core/to-curl.html","searchKeys":["toCurl","fun Request.toCurl(truncateBodyLength: Int = 256): String","org.http4k.core.toCurl"]},{"name":"fun Request.withBasicAuth(credentials: Credentials, header: String = \"Authorization\"): Request","description":"org.http4k.filter.ClientFilters.CustomBasicAuth.withBasicAuth","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/with-basic-auth.html","searchKeys":["withBasicAuth","fun Request.withBasicAuth(credentials: Credentials, header: String = \"Authorization\"): Request","org.http4k.filter.ClientFilters.CustomBasicAuth.withBasicAuth"]},{"name":"fun Request.withFlash(value: String): Request","description":"org.http4k.filter.withFlash","location":"http4k-core/org.http4k.filter/with-flash.html","searchKeys":["withFlash","fun Request.withFlash(value: String): Request","org.http4k.filter.withFlash"]},{"name":"fun RequestTracing(startReportFn: (Request, ZipkinTraces) -> Unit = { _, _ -> }, endReportFn: (Request, Response, ZipkinTraces) -> Unit = { _, _, _ -> }, storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","description":"org.http4k.filter.ClientFilters.RequestTracing","location":"http4k-core/org.http4k.filter/-client-filters/-request-tracing.html","searchKeys":["RequestTracing","fun RequestTracing(startReportFn: (Request, ZipkinTraces) -> Unit = { _, _ -> }, endReportFn: (Request, Response, ZipkinTraces) -> Unit = { _, _, _ -> }, storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","org.http4k.filter.ClientFilters.RequestTracing"]},{"name":"fun ResetRequestTracing(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","description":"org.http4k.filter.ClientFilters.ResetRequestTracing","location":"http4k-core/org.http4k.filter/-client-filters/-reset-request-tracing.html","searchKeys":["ResetRequestTracing","fun ResetRequestTracing(storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","org.http4k.filter.ClientFilters.ResetRequestTracing"]},{"name":"fun Response.Companion.parse(response: String, lineBreak: String = \"\"): Response","description":"org.http4k.core.parse","location":"http4k-core/org.http4k.core/parse.html","searchKeys":["parse","fun Response.Companion.parse(response: String, lineBreak: String = \"\"): Response","org.http4k.core.parse"]},{"name":"fun Response.cookie(cookie: Cookie): Response","description":"org.http4k.core.cookie.cookie","location":"http4k-core/org.http4k.core.cookie/cookie.html","searchKeys":["cookie","fun Response.cookie(cookie: Cookie): Response","org.http4k.core.cookie.cookie"]},{"name":"fun Response.cookies(): List<Cookie>","description":"org.http4k.core.cookie.cookies","location":"http4k-core/org.http4k.core.cookie/cookies.html","searchKeys":["cookies","fun Response.cookies(): List<Cookie>","org.http4k.core.cookie.cookies"]},{"name":"fun Response.flash(): String?","description":"org.http4k.filter.flash","location":"http4k-core/org.http4k.filter/flash.html","searchKeys":["flash","fun Response.flash(): String?","org.http4k.filter.flash"]},{"name":"fun Response.immutable(): Response","description":"org.http4k.core.immutable","location":"http4k-core/org.http4k.core/immutable.html","searchKeys":["immutable","fun Response.immutable(): Response","org.http4k.core.immutable"]},{"name":"fun Response.invalidateCookie(name: String, domain: String? = null): Response","description":"org.http4k.core.cookie.invalidateCookie","location":"http4k-core/org.http4k.core.cookie/invalidate-cookie.html","searchKeys":["invalidateCookie","fun Response.invalidateCookie(name: String, domain: String? = null): Response","org.http4k.core.cookie.invalidateCookie"]},{"name":"fun Response.location(): Uri","description":"org.http4k.lens.location","location":"http4k-core/org.http4k.lens/location.html","searchKeys":["location","fun Response.location(): Uri","org.http4k.lens.location"]},{"name":"fun Response.location(uri: Uri): Response","description":"org.http4k.lens.location","location":"http4k-core/org.http4k.lens/location.html","searchKeys":["location","fun Response.location(uri: Uri): Response","org.http4k.lens.location"]},{"name":"fun Response.maxAge(): Long?","description":"org.http4k.core.maxAge","location":"http4k-core/org.http4k.core/max-age.html","searchKeys":["maxAge","fun Response.maxAge(): Long?","org.http4k.core.maxAge"]},{"name":"fun Response.maxAge(duration: Duration): Response","description":"org.http4k.core.maxAge","location":"http4k-core/org.http4k.core/max-age.html","searchKeys":["maxAge","fun Response.maxAge(duration: Duration): Response","org.http4k.core.maxAge"]},{"name":"fun Response.maxAge(duration: Duration): Response","description":"org.http4k.core.maxAge","location":"http4k-core/org.http4k.core/max-age.html","searchKeys":["maxAge","fun Response.maxAge(duration: Duration): Response","org.http4k.core.maxAge"]},{"name":"fun Response.mustRevalidate(): Response","description":"org.http4k.core.mustRevalidate","location":"http4k-core/org.http4k.core/must-revalidate.html","searchKeys":["mustRevalidate","fun Response.mustRevalidate(): Response","org.http4k.core.mustRevalidate"]},{"name":"fun Response.noCache(): Response","description":"org.http4k.core.noCache","location":"http4k-core/org.http4k.core/no-cache.html","searchKeys":["noCache","fun Response.noCache(): Response","org.http4k.core.noCache"]},{"name":"fun Response.noStore(): Response","description":"org.http4k.core.noStore","location":"http4k-core/org.http4k.core/no-store.html","searchKeys":["noStore","fun Response.noStore(): Response","org.http4k.core.noStore"]},{"name":"fun Response.onlyIfCached(): Response","description":"org.http4k.core.onlyIfCached","location":"http4k-core/org.http4k.core/only-if-cached.html","searchKeys":["onlyIfCached","fun Response.onlyIfCached(): Response","org.http4k.core.onlyIfCached"]},{"name":"fun Response.private(): Response","description":"org.http4k.core.private","location":"http4k-core/org.http4k.core/private.html","searchKeys":["private","fun Response.private(): Response","org.http4k.core.private"]},{"name":"fun Response.public(): Response","description":"org.http4k.core.public","location":"http4k-core/org.http4k.core/public.html","searchKeys":["public","fun Response.public(): Response","org.http4k.core.public"]},{"name":"fun Response.removeCookie(name: String): Response","description":"org.http4k.core.cookie.removeCookie","location":"http4k-core/org.http4k.core.cookie/remove-cookie.html","searchKeys":["removeCookie","fun Response.removeCookie(name: String): Response","org.http4k.core.cookie.removeCookie"]},{"name":"fun Response.removeFlash(): Response","description":"org.http4k.filter.removeFlash","location":"http4k-core/org.http4k.filter/remove-flash.html","searchKeys":["removeFlash","fun Response.removeFlash(): Response","org.http4k.filter.removeFlash"]},{"name":"fun Response.replaceCookie(cookie: Cookie): Response","description":"org.http4k.core.cookie.replaceCookie","location":"http4k-core/org.http4k.core.cookie/replace-cookie.html","searchKeys":["replaceCookie","fun Response.replaceCookie(cookie: Cookie): Response","org.http4k.core.cookie.replaceCookie"]},{"name":"fun Response.staleIfError(): Long?","description":"org.http4k.core.staleIfError","location":"http4k-core/org.http4k.core/stale-if-error.html","searchKeys":["staleIfError","fun Response.staleIfError(): Long?","org.http4k.core.staleIfError"]},{"name":"fun Response.staleIfError(duration: Duration): Response","description":"org.http4k.core.staleIfError","location":"http4k-core/org.http4k.core/stale-if-error.html","searchKeys":["staleIfError","fun Response.staleIfError(duration: Duration): Response","org.http4k.core.staleIfError"]},{"name":"fun Response.staleIfError(duration: Duration): Response","description":"org.http4k.core.staleIfError","location":"http4k-core/org.http4k.core/stale-if-error.html","searchKeys":["staleIfError","fun Response.staleIfError(duration: Duration): Response","org.http4k.core.staleIfError"]},{"name":"fun Response.staleWhileRevalidate(): Long?","description":"org.http4k.core.staleWhileRevalidate","location":"http4k-core/org.http4k.core/stale-while-revalidate.html","searchKeys":["staleWhileRevalidate","fun Response.staleWhileRevalidate(): Long?","org.http4k.core.staleWhileRevalidate"]},{"name":"fun Response.staleWhileRevalidate(duration: Duration): Response","description":"org.http4k.core.staleWhileRevalidate","location":"http4k-core/org.http4k.core/stale-while-revalidate.html","searchKeys":["staleWhileRevalidate","fun Response.staleWhileRevalidate(duration: Duration): Response","org.http4k.core.staleWhileRevalidate"]},{"name":"fun Response.staleWhileRevalidate(duration: Duration): Response","description":"org.http4k.core.staleWhileRevalidate","location":"http4k-core/org.http4k.core/stale-while-revalidate.html","searchKeys":["staleWhileRevalidate","fun Response.staleWhileRevalidate(duration: Duration): Response","org.http4k.core.staleWhileRevalidate"]},{"name":"fun Response.transferTo(destination: HttpServletResponse)","description":"org.http4k.servlet.jakarta.transferTo","location":"http4k-core/org.http4k.servlet.jakarta/transfer-to.html","searchKeys":["transferTo","fun Response.transferTo(destination: HttpServletResponse)","org.http4k.servlet.jakarta.transferTo"]},{"name":"fun Response.transferTo(destination: HttpServletResponse)","description":"org.http4k.servlet.transferTo","location":"http4k-core/org.http4k.servlet/transfer-to.html","searchKeys":["transferTo","fun Response.transferTo(destination: HttpServletResponse)","org.http4k.servlet.transferTo"]},{"name":"fun Response.withFlash(value: String): Response","description":"org.http4k.filter.withFlash","location":"http4k-core/org.http4k.filter/with-flash.html","searchKeys":["withFlash","fun Response.withFlash(value: String): Response","org.http4k.filter.withFlash"]},{"name":"fun RouterDescription.friendlyToString(indent: Int = 0): String","description":"org.http4k.routing.friendlyToString","location":"http4k-core/org.http4k.routing/friendly-to-string.html","searchKeys":["friendlyToString","fun RouterDescription.friendlyToString(indent: Int = 0): String","org.http4k.routing.friendlyToString"]},{"name":"fun RouterDescription.prettify(depth: Int = 0, escape: EscapeMode = Ansi): String","description":"org.http4k.routing.inspect.prettify","location":"http4k-core/org.http4k.routing.inspect/prettify.html","searchKeys":["prettify","fun RouterDescription.prettify(depth: Int = 0, escape: EscapeMode = Ansi): String","org.http4k.routing.inspect.prettify"]},{"name":"fun RouterMatch.prettify(depth: Int = 0, escape: EscapeMode = Ansi): String","description":"org.http4k.routing.inspect.prettify","location":"http4k-core/org.http4k.routing.inspect/prettify.html","searchKeys":["prettify","fun RouterMatch.prettify(depth: Int = 0, escape: EscapeMode = Ansi): String","org.http4k.routing.inspect.prettify"]},{"name":"fun RoutingHttpHandler.debug(out: PrintStream = System.out, debugStream: Boolean = false): RoutingHttpHandler","description":"org.http4k.filter.debug","location":"http4k-core/org.http4k.filter/debug.html","searchKeys":["debug","fun RoutingHttpHandler.debug(out: PrintStream = System.out, debugStream: Boolean = false): RoutingHttpHandler","org.http4k.filter.debug"]},{"name":"fun SetBaseUriFrom(uri: Uri): Filter","description":"org.http4k.filter.ClientFilters.SetBaseUriFrom","location":"http4k-core/org.http4k.filter/-client-filters/-set-base-uri-from.html","searchKeys":["SetBaseUriFrom","fun SetBaseUriFrom(uri: Uri): Filter","org.http4k.filter.ClientFilters.SetBaseUriFrom"]},{"name":"fun SetHeader(name: String, value: String?): Filter","description":"org.http4k.filter.RequestFilters.SetHeader","location":"http4k-core/org.http4k.filter/-request-filters/-set-header.html","searchKeys":["SetHeader","fun SetHeader(name: String, value: String?): Filter","org.http4k.filter.RequestFilters.SetHeader"]},{"name":"fun SetHeader(name: String, value: String?): Filter","description":"org.http4k.filter.ResponseFilters.SetHeader","location":"http4k-core/org.http4k.filter/-response-filters/-set-header.html","searchKeys":["SetHeader","fun SetHeader(name: String, value: String?): Filter","org.http4k.filter.ResponseFilters.SetHeader"]},{"name":"fun SetHostFrom(uri: Uri): Filter","description":"org.http4k.filter.ClientFilters.SetHostFrom","location":"http4k-core/org.http4k.filter/-client-filters/-set-host-from.html","searchKeys":["SetHostFrom","fun SetHostFrom(uri: Uri): Filter","org.http4k.filter.ClientFilters.SetHostFrom"]},{"name":"fun SetXForwardedHost(): Filter","description":"org.http4k.filter.ClientFilters.SetXForwardedHost","location":"http4k-core/org.http4k.filter/-client-filters/-set-x-forwarded-host.html","searchKeys":["SetXForwardedHost","fun SetXForwardedHost(): Filter","org.http4k.filter.ClientFilters.SetXForwardedHost"]},{"name":"fun Status.toClientStatus(e: Exception): Status","description":"org.http4k.client.toClientStatus","location":"http4k-core/org.http4k.client/to-client-status.html","searchKeys":["toClientStatus","fun Status.toClientStatus(e: Exception): Status","org.http4k.client.toClientStatus"]},{"name":"fun String.asByteBuffer(): ByteBuffer","description":"org.http4k.asByteBuffer","location":"http4k-core/org.http4k/as-byte-buffer.html","searchKeys":["asByteBuffer","fun String.asByteBuffer(): ByteBuffer","org.http4k.asByteBuffer"]},{"name":"fun String.base64Decoded(): String","description":"org.http4k.base64Decoded","location":"http4k-core/org.http4k/base64-decoded.html","searchKeys":["base64Decoded","fun String.base64Decoded(): String","org.http4k.base64Decoded"]},{"name":"fun String.base64DecodedArray(): ByteArray","description":"org.http4k.base64DecodedArray","location":"http4k-core/org.http4k/base64-decoded-array.html","searchKeys":["base64DecodedArray","fun String.base64DecodedArray(): ByteArray","org.http4k.base64DecodedArray"]},{"name":"fun String.base64DecodedByteBuffer(): ByteBuffer","description":"org.http4k.base64DecodedByteBuffer","location":"http4k-core/org.http4k/base64-decoded-byte-buffer.html","searchKeys":["base64DecodedByteBuffer","fun String.base64DecodedByteBuffer(): ByteBuffer","org.http4k.base64DecodedByteBuffer"]},{"name":"fun String.base64Encode(): String","description":"org.http4k.base64Encode","location":"http4k-core/org.http4k/base64-encode.html","searchKeys":["base64Encode","fun String.base64Encode(): String","org.http4k.base64Encode"]},{"name":"fun String.quoted(): String","description":"org.http4k.quoted","location":"http4k-core/org.http4k/quoted.html","searchKeys":["quoted","fun String.quoted(): String","org.http4k.quoted"]},{"name":"fun String.styled(style: TextStyle, escapeMode: EscapeMode = EscapeMode.Ansi): String","description":"org.http4k.routing.inspect.styled","location":"http4k-core/org.http4k.routing.inspect/styled.html","searchKeys":["styled","fun String.styled(style: TextStyle, escapeMode: EscapeMode = EscapeMode.Ansi): String","org.http4k.routing.inspect.styled"]},{"name":"fun String.toParameters(): List<Parameter>","description":"org.http4k.core.toParameters","location":"http4k-core/org.http4k.core/to-parameters.html","searchKeys":["toParameters","fun String.toParameters(): List<Parameter>","org.http4k.core.toParameters"]},{"name":"fun String.toPathSegmentDecoded(): String","description":"org.http4k.core.toPathSegmentDecoded","location":"http4k-core/org.http4k.core/to-path-segment-decoded.html","searchKeys":["toPathSegmentDecoded","fun String.toPathSegmentDecoded(): String","org.http4k.core.toPathSegmentDecoded"]},{"name":"fun String.toPathSegmentEncoded(): String","description":"org.http4k.core.toPathSegmentEncoded","location":"http4k-core/org.http4k.core/to-path-segment-encoded.html","searchKeys":["toPathSegmentEncoded","fun String.toPathSegmentEncoded(): String","org.http4k.core.toPathSegmentEncoded"]},{"name":"fun String.unquoted(): String","description":"org.http4k.unquoted","location":"http4k-core/org.http4k/unquoted.html","searchKeys":["unquoted","fun String.unquoted(): String","org.http4k.unquoted"]},{"name":"fun String.urlDecoded(): String","description":"org.http4k.urlDecoded","location":"http4k-core/org.http4k/url-decoded.html","searchKeys":["urlDecoded","fun String.urlDecoded(): String","org.http4k.urlDecoded"]},{"name":"fun String.urlEncoded(): String","description":"org.http4k.urlEncoded","location":"http4k-core/org.http4k/url-encoded.html","searchKeys":["urlEncoded","fun String.urlEncoded(): String","org.http4k.urlEncoded"]},{"name":"fun String?.safeLong(): Long?","description":"org.http4k.core.safeLong","location":"http4k-core/org.http4k.core/safe-long.html","searchKeys":["safeLong","fun String?.safeLong(): Long?","org.http4k.core.safeLong"]},{"name":"fun StringBuilder.appendIf(condition: () -> Boolean, vararg toAppend: String): StringBuilder","description":"org.http4k.appendIf","location":"http4k-core/org.http4k/append-if.html","searchKeys":["appendIf","fun StringBuilder.appendIf(condition: () -> Boolean, vararg toAppend: String): StringBuilder","org.http4k.appendIf"]},{"name":"fun StringBuilder.appendIfNotBlank(valueToCheck: String, vararg toAppend: String): StringBuilder","description":"org.http4k.appendIfNotBlank","location":"http4k-core/org.http4k/append-if-not-blank.html","searchKeys":["appendIfNotBlank","fun StringBuilder.appendIfNotBlank(valueToCheck: String, vararg toAppend: String): StringBuilder","org.http4k.appendIfNotBlank"]},{"name":"fun StringBuilder.appendIfNotEmpty(valueToCheck: List<Any>, vararg toAppend: String): StringBuilder","description":"org.http4k.appendIfNotEmpty","location":"http4k-core/org.http4k/append-if-not-empty.html","searchKeys":["appendIfNotEmpty","fun StringBuilder.appendIfNotEmpty(valueToCheck: List<Any>, vararg toAppend: String): StringBuilder","org.http4k.appendIfNotEmpty"]},{"name":"fun StringBuilder.appendIfPresent(valueToCheck: Any?, vararg toAppend: String): StringBuilder","description":"org.http4k.appendIfPresent","location":"http4k-core/org.http4k/append-if-present.html","searchKeys":["appendIfPresent","fun StringBuilder.appendIfPresent(valueToCheck: Any?, vararg toAppend: String): StringBuilder","org.http4k.appendIfPresent"]},{"name":"fun Text(value: String, charset: Charset? = UTF_8): ContentType","description":"org.http4k.core.ContentType.Companion.Text","location":"http4k-core/org.http4k.core/-content-type/-companion/-text.html","searchKeys":["Text","fun Text(value: String, charset: Charset? = UTF_8): ContentType","org.http4k.core.ContentType.Companion.Text"]},{"name":"fun Uri.appendToPath(pathToAppend: String?): Uri","description":"org.http4k.core.appendToPath","location":"http4k-core/org.http4k.core/append-to-path.html","searchKeys":["appendToPath","fun Uri.appendToPath(pathToAppend: String?): Uri","org.http4k.core.appendToPath"]},{"name":"fun Uri.extend(uri: Uri): Uri","description":"org.http4k.core.extend","location":"http4k-core/org.http4k.core/extend.html","searchKeys":["extend","fun Uri.extend(uri: Uri): Uri","org.http4k.core.extend"]},{"name":"fun Uri.queries(): Parameters","description":"org.http4k.core.queries","location":"http4k-core/org.http4k.core/queries.html","searchKeys":["queries","fun Uri.queries(): Parameters","org.http4k.core.queries"]},{"name":"fun Uri.query(name: String, value: String?): Uri","description":"org.http4k.core.query","location":"http4k-core/org.http4k.core/query.html","searchKeys":["query","fun Uri.query(name: String, value: String?): Uri","org.http4k.core.query"]},{"name":"fun Uri.queryParametersEncoded(): Uri","description":"org.http4k.core.queryParametersEncoded","location":"http4k-core/org.http4k.core/query-parameters-encoded.html","searchKeys":["queryParametersEncoded","fun Uri.queryParametersEncoded(): Uri","org.http4k.core.queryParametersEncoded"]},{"name":"fun Uri.relative(relative: String): Uri","description":"org.http4k.core.relative","location":"http4k-core/org.http4k.core/relative.html","searchKeys":["relative","fun Uri.relative(relative: String): Uri","org.http4k.core.relative"]},{"name":"fun Uri.relative(relative: Uri): Uri","description":"org.http4k.core.relative","location":"http4k-core/org.http4k.core/relative.html","searchKeys":["relative","fun Uri.relative(relative: Uri): Uri","org.http4k.core.relative"]},{"name":"fun Uri.removeQueries(prefix: String = \"\"): Uri","description":"org.http4k.core.removeQueries","location":"http4k-core/org.http4k.core/remove-queries.html","searchKeys":["removeQueries","fun Uri.removeQueries(prefix: String = \"\"): Uri","org.http4k.core.removeQueries"]},{"name":"fun Uri.removeQuery(name: String): Uri","description":"org.http4k.core.removeQuery","location":"http4k-core/org.http4k.core/remove-query.html","searchKeys":["removeQuery","fun Uri.removeQuery(name: String): Uri","org.http4k.core.removeQuery"]},{"name":"fun WebForm.with(vararg modifiers: (WebForm) -> WebForm): WebForm","description":"org.http4k.core.with","location":"http4k-core/org.http4k.core/with.html","searchKeys":["with","fun WebForm.with(vararg modifiers: (WebForm) -> WebForm): WebForm","org.http4k.core.with"]},{"name":"fun accepts(contentType: ContentType): Boolean","description":"org.http4k.core.Accept.accepts","location":"http4k-core/org.http4k.core/-accept/accepts.html","searchKeys":["accepts","fun accepts(contentType: ContentType): Boolean","org.http4k.core.Accept.accepts"]},{"name":"fun apply(request: Request): Request","description":"org.http4k.filter.CompressionResult.apply","location":"http4k-core/org.http4k.filter/-compression-result/apply.html","searchKeys":["apply","fun apply(request: Request): Request","org.http4k.filter.CompressionResult.apply"]},{"name":"fun apply(response: Response): Response","description":"org.http4k.filter.CompressionResult.apply","location":"http4k-core/org.http4k.filter/-compression-result/apply.html","searchKeys":["apply","fun apply(response: Response): Response","org.http4k.filter.CompressionResult.apply"]},{"name":"fun authority(authority: String): Uri","description":"org.http4k.core.Uri.authority","location":"http4k-core/org.http4k.core/-uri/authority.html","searchKeys":["authority","fun authority(authority: String): Uri","org.http4k.core.Uri.authority"]},{"name":"fun base64(): BiDiMapping<String, String>","description":"org.http4k.lens.StringBiDiMappings.base64","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/base64.html","searchKeys":["base64","fun base64(): BiDiMapping<String, String>","org.http4k.lens.StringBiDiMappings.base64"]},{"name":"fun basicCredentials(): BiDiMapping<String, Credentials>","description":"org.http4k.lens.StringBiDiMappings.basicCredentials","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/basic-credentials.html","searchKeys":["basicCredentials","fun basicCredentials(): BiDiMapping<String, Credentials>","org.http4k.lens.StringBiDiMappings.basicCredentials"]},{"name":"fun bigDecimal(): BiDiMapping<String, BigDecimal>","description":"org.http4k.lens.StringBiDiMappings.bigDecimal","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/big-decimal.html","searchKeys":["bigDecimal","fun bigDecimal(): BiDiMapping<String, BigDecimal>","org.http4k.lens.StringBiDiMappings.bigDecimal"]},{"name":"fun bigInteger(): BiDiMapping<String, BigInteger>","description":"org.http4k.lens.StringBiDiMappings.bigInteger","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/big-integer.html","searchKeys":["bigInteger","fun bigInteger(): BiDiMapping<String, BigInteger>","org.http4k.lens.StringBiDiMappings.bigInteger"]},{"name":"fun body(fn: (Body) -> Boolean): Router","description":"org.http4k.routing.body","location":"http4k-core/org.http4k.routing/body.html","searchKeys":["body","fun body(fn: (Body) -> Boolean): Router","org.http4k.routing.body"]},{"name":"fun body(fn: (String) -> Boolean): Router","description":"org.http4k.routing.body","location":"http4k-core/org.http4k.routing/body.html","searchKeys":["body","fun body(fn: (String) -> Boolean): Router","org.http4k.routing.body"]},{"name":"fun boolean(): BiDiMapping<String, Boolean>","description":"org.http4k.lens.StringBiDiMappings.boolean","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/boolean.html","searchKeys":["boolean","fun boolean(): BiDiMapping<String, Boolean>","org.http4k.lens.StringBiDiMappings.boolean"]},{"name":"fun defaultJavaHttpClient(): HttpClient","description":"org.http4k.client.PreCannedJavaHttpClients.defaultJavaHttpClient","location":"http4k-core/org.http4k.client/-pre-canned-java-http-clients/default-java-http-client.html","searchKeys":["defaultJavaHttpClient","fun defaultJavaHttpClient(): HttpClient","org.http4k.client.PreCannedJavaHttpClients.defaultJavaHttpClient"]},{"name":"fun description(newDescription: String): Status","description":"org.http4k.core.Status.description","location":"http4k-core/org.http4k.core/-status/description.html","searchKeys":["description","fun description(newDescription: String): Status","org.http4k.core.Status.description"]},{"name":"fun domain(domain: String): Cookie","description":"org.http4k.core.cookie.Cookie.domain","location":"http4k-core/org.http4k.core.cookie/-cookie/domain.html","searchKeys":["domain","fun domain(domain: String): Cookie","org.http4k.core.cookie.Cookie.domain"]},{"name":"fun double(): BiDiMapping<String, Double>","description":"org.http4k.lens.StringBiDiMappings.double","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/double.html","searchKeys":["double","fun double(): BiDiMapping<String, Double>","org.http4k.lens.StringBiDiMappings.double"]},{"name":"fun duration(): BiDiMapping<String, Duration>","description":"org.http4k.lens.StringBiDiMappings.duration","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/duration.html","searchKeys":["duration","fun duration(): BiDiMapping<String, Duration>","org.http4k.lens.StringBiDiMappings.duration"]},{"name":"fun equalsIgnoringDirectives(that: ContentType): Boolean","description":"org.http4k.core.ContentType.equalsIgnoringDirectives","location":"http4k-core/org.http4k.core/-content-type/equals-ignoring-directives.html","searchKeys":["equalsIgnoringDirectives","fun equalsIgnoringDirectives(that: ContentType): Boolean","org.http4k.core.ContentType.equalsIgnoringDirectives"]},{"name":"fun eventCategory(): BiDiMapping<String, EventCategory>","description":"org.http4k.lens.StringBiDiMappings.eventCategory","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/event-category.html","searchKeys":["eventCategory","fun eventCategory(): BiDiMapping<String, EventCategory>","org.http4k.lens.StringBiDiMappings.eventCategory"]},{"name":"fun expires(date: Instant): Cookie","description":"org.http4k.core.cookie.Cookie.expires","location":"http4k-core/org.http4k.core.cookie/-cookie/expires.html","searchKeys":["expires","fun expires(date: Instant): Cookie","org.http4k.core.cookie.Cookie.expires"]},{"name":"fun expires(date: ZonedDateTime): Cookie","description":"org.http4k.core.cookie.Cookie.expires","location":"http4k-core/org.http4k.core.cookie/-cookie/expires.html","searchKeys":["expires","fun expires(date: ZonedDateTime): Cookie","org.http4k.core.cookie.Cookie.expires"]},{"name":"fun extract(uri: String): Map<String, String>","description":"org.http4k.core.UriTemplate.extract","location":"http4k-core/org.http4k.core/-uri-template/extract.html","searchKeys":["extract","fun extract(uri: String): Map<String, String>","org.http4k.core.UriTemplate.extract"]},{"name":"fun fixed(name: String): PathLens<String>","description":"org.http4k.lens.Path.fixed","location":"http4k-core/org.http4k.lens/-path/fixed.html","searchKeys":["fixed","fun fixed(name: String): PathLens<String>","org.http4k.lens.Path.fixed"]},{"name":"fun float(): BiDiMapping<String, Float>","description":"org.http4k.lens.StringBiDiMappings.float","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/float.html","searchKeys":["float","fun float(): BiDiMapping<String, Float>","org.http4k.lens.StringBiDiMappings.float"]},{"name":"fun forFile(file: String): ContentType","description":"org.http4k.core.MimeTypes.forFile","location":"http4k-core/org.http4k.core/-mime-types/for-file.html","searchKeys":["forFile","fun forFile(file: String): ContentType","org.http4k.core.MimeTypes.forFile"]},{"name":"fun fragment(fragment: String): Uri","description":"org.http4k.core.Uri.fragment","location":"http4k-core/org.http4k.core/-uri/fragment.html","searchKeys":["fragment","fun fragment(fragment: String): Uri","org.http4k.core.Uri.fragment"]},{"name":"fun from(replay: Replay, shouldReplay: (HttpMessage) -> Boolean = { true }): HttpHandler","description":"org.http4k.traffic.Responder.from","location":"http4k-core/org.http4k.traffic/-responder/from.html","searchKeys":["from","fun from(replay: Replay, shouldReplay: (HttpMessage) -> Boolean = { true }): HttpHandler","org.http4k.traffic.Responder.from"]},{"name":"fun from(sampledHeaderValue: String?): SamplingDecision","description":"org.http4k.filter.SamplingDecision.Companion.from","location":"http4k-core/org.http4k.filter/-sampling-decision/-companion/from.html","searchKeys":["from","fun from(sampledHeaderValue: String?): SamplingDecision","org.http4k.filter.SamplingDecision.Companion.from"]},{"name":"fun from(source: Source): HttpHandler","description":"org.http4k.traffic.Responder.from","location":"http4k-core/org.http4k.traffic/-responder/from.html","searchKeys":["from","fun from(source: Source): HttpHandler","org.http4k.traffic.Responder.from"]},{"name":"fun from(template: String): UriTemplate","description":"org.http4k.core.UriTemplate.Companion.from","location":"http4k-core/org.http4k.core/-uri-template/-companion/from.html","searchKeys":["from","fun from(template: String): UriTemplate","org.http4k.core.UriTemplate.Companion.from"]},{"name":"fun fromCode(code: Int): Status?","description":"org.http4k.core.Status.Companion.fromCode","location":"http4k-core/org.http4k.core/-status/-companion/from-code.html","searchKeys":["fromCode","fun fromCode(code: Int): Status?","org.http4k.core.Status.Companion.fromCode"]},{"name":"fun fullCookieString(unquotedValue: Boolean = false): String","description":"org.http4k.core.cookie.Cookie.fullCookieString","location":"http4k-core/org.http4k.core.cookie/-cookie/full-cookie-string.html","searchKeys":["fullCookieString","fun fullCookieString(unquotedValue: Boolean = false): String","org.http4k.core.cookie.Cookie.fullCookieString"]},{"name":"fun generate(parameters: Map<String, String>): String","description":"org.http4k.core.UriTemplate.generate","location":"http4k-core/org.http4k.core/-uri-template/generate.html","searchKeys":["generate","fun generate(parameters: Map<String, String>): String","org.http4k.core.UriTemplate.generate"]},{"name":"fun handle(req: HttpServletRequest, resp: HttpServletResponse)","description":"org.http4k.servlet.Http4kServletAdapter.handle","location":"http4k-core/org.http4k.servlet/-http4k-servlet-adapter/handle.html","searchKeys":["handle","fun handle(req: HttpServletRequest, resp: HttpServletResponse)","org.http4k.servlet.Http4kServletAdapter.handle"]},{"name":"fun handle(req: HttpServletRequest, resp: HttpServletResponse)","description":"org.http4k.servlet.jakarta.Http4kJakartaServletAdapter.handle","location":"http4k-core/org.http4k.servlet.jakarta/-http4k-jakarta-servlet-adapter/handle.html","searchKeys":["handle","fun handle(req: HttpServletRequest, resp: HttpServletResponse)","org.http4k.servlet.jakarta.Http4kJakartaServletAdapter.handle"]},{"name":"fun hash(payload: ByteArray): String","description":"org.http4k.security.HmacSha256.hash","location":"http4k-core/org.http4k.security/-hmac-sha256/hash.html","searchKeys":["hash","fun hash(payload: ByteArray): String","org.http4k.security.HmacSha256.hash"]},{"name":"fun hash(payload: String): String","description":"org.http4k.security.HmacSha256.hash","location":"http4k-core/org.http4k.security/-hmac-sha256/hash.html","searchKeys":["hash","fun hash(payload: String): String","org.http4k.security.HmacSha256.hash"]},{"name":"fun header(name: String, fn: (String) -> Boolean): Router","description":"org.http4k.routing.header","location":"http4k-core/org.http4k.routing/header.html","searchKeys":["header","fun header(name: String, fn: (String) -> Boolean): Router","org.http4k.routing.header"]},{"name":"fun header(name: String, value: String): Router","description":"org.http4k.routing.header","location":"http4k-core/org.http4k.routing/header.html","searchKeys":["header","fun header(name: String, value: String): Router","org.http4k.routing.header"]},{"name":"fun headers(vararg names: String): Router","description":"org.http4k.routing.headers","location":"http4k-core/org.http4k.routing/headers.html","searchKeys":["headers","fun headers(vararg names: String): Router","org.http4k.routing.headers"]},{"name":"fun hex(data: ByteArray): String","description":"org.http4k.util.Hex.hex","location":"http4k-core/org.http4k.util/-hex/hex.html","searchKeys":["hex","fun hex(data: ByteArray): String","org.http4k.util.Hex.hex"]},{"name":"fun hmacSHA256(key: ByteArray, data: String): ByteArray","description":"org.http4k.security.HmacSha256.hmacSHA256","location":"http4k-core/org.http4k.security/-hmac-sha256/hmac-s-h-a256.html","searchKeys":["hmacSHA256","fun hmacSHA256(key: ByteArray, data: String): ByteArray","org.http4k.security.HmacSha256.hmacSHA256"]},{"name":"fun host(host: String): Uri","description":"org.http4k.core.Uri.host","location":"http4k-core/org.http4k.core/-uri/host.html","searchKeys":["host","fun host(host: String): Uri","org.http4k.core.Uri.host"]},{"name":"fun httpBodyRoot(metas: List<Meta>, acceptedContentType: ContentType, contentNegotiation: ContentNegotiation): BiDiBodyLensSpec<Body>","description":"org.http4k.lens.httpBodyRoot","location":"http4k-core/org.http4k.lens/http-body-root.html","searchKeys":["httpBodyRoot","fun httpBodyRoot(metas: List<Meta>, acceptedContentType: ContentType, contentNegotiation: ContentNegotiation): BiDiBodyLensSpec<Body>","org.http4k.lens.httpBodyRoot"]},{"name":"fun httpOnly(): Cookie","description":"org.http4k.core.cookie.Cookie.httpOnly","location":"http4k-core/org.http4k.core.cookie/-cookie/http-only.html","searchKeys":["httpOnly","fun httpOnly(): Cookie","org.http4k.core.cookie.Cookie.httpOnly"]},{"name":"fun instant(): BiDiMapping<String, Instant>","description":"org.http4k.lens.StringBiDiMappings.instant","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/instant.html","searchKeys":["instant","fun instant(): BiDiMapping<String, Instant>","org.http4k.lens.StringBiDiMappings.instant"]},{"name":"fun int(): BiDiMapping<String, Int>","description":"org.http4k.lens.StringBiDiMappings.int","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/int.html","searchKeys":["int","fun int(): BiDiMapping<String, Int>","org.http4k.lens.StringBiDiMappings.int"]},{"name":"fun interface ContentNegotiation","description":"org.http4k.lens.ContentNegotiation","location":"http4k-core/org.http4k.lens/-content-negotiation/index.html","searchKeys":["ContentNegotiation","fun interface ContentNegotiation","org.http4k.lens.ContentNegotiation"]},{"name":"fun interface CredentialsProvider<T> : Function0<T?> ","description":"org.http4k.security.CredentialsProvider","location":"http4k-core/org.http4k.security/-credentials-provider/index.html","searchKeys":["CredentialsProvider","fun interface CredentialsProvider<T> : Function0<T?> ","org.http4k.security.CredentialsProvider"]},{"name":"fun interface EventFilter : Function1<Events, Events> ","description":"org.http4k.events.EventFilter","location":"http4k-core/org.http4k.events/-event-filter/index.html","searchKeys":["EventFilter","fun interface EventFilter : Function1<Events, Events> ","org.http4k.events.EventFilter"]},{"name":"fun interface Filter : Function1<HttpHandler, HttpHandler> ","description":"org.http4k.core.Filter","location":"http4k-core/org.http4k.core/-filter/index.html","searchKeys":["Filter","fun interface Filter : Function1<HttpHandler, HttpHandler> ","org.http4k.core.Filter"]},{"name":"fun interface LensExtractor<in IN, out OUT> : Function1<IN, OUT> ","description":"org.http4k.lens.LensExtractor","location":"http4k-core/org.http4k.lens/-lens-extractor/index.html","searchKeys":["LensExtractor","fun interface LensExtractor<in IN, out OUT> : Function1<IN, OUT> ","org.http4k.lens.LensExtractor"]},{"name":"fun interface RefreshCredentials<T> : Function1<T?, ExpiringCredentials<T>?> ","description":"org.http4k.security.RefreshCredentials","location":"http4k-core/org.http4k.security/-refresh-credentials/index.html","searchKeys":["RefreshCredentials","fun interface RefreshCredentials<T> : Function1<T?, ExpiringCredentials<T>?> ","org.http4k.security.RefreshCredentials"]},{"name":"fun interface ResourceLoader","description":"org.http4k.routing.ResourceLoader","location":"http4k-core/org.http4k.routing/-resource-loader/index.html","searchKeys":["ResourceLoader","fun interface ResourceLoader","org.http4k.routing.ResourceLoader"]},{"name":"fun interface Sink","description":"org.http4k.traffic.Sink","location":"http4k-core/org.http4k.traffic/-sink/index.html","searchKeys":["Sink","fun interface Sink","org.http4k.traffic.Sink"]},{"name":"fun interface Source","description":"org.http4k.traffic.Source","location":"http4k-core/org.http4k.traffic/-source/index.html","searchKeys":["Source","fun interface Source","org.http4k.traffic.Source"]},{"name":"fun isExpired(now: Instant): Boolean","description":"org.http4k.filter.cookie.LocalCookie.isExpired","location":"http4k-core/org.http4k.filter.cookie/-local-cookie/is-expired.html","searchKeys":["isExpired","fun isExpired(now: Instant): Boolean","org.http4k.filter.cookie.LocalCookie.isExpired"]},{"name":"fun itemType(): ParamMeta","description":"org.http4k.lens.ParamMeta.ArrayParam.itemType","location":"http4k-core/org.http4k.lens/-param-meta/-array-param/item-type.html","searchKeys":["itemType","fun itemType(): ParamMeta","org.http4k.lens.ParamMeta.ArrayParam.itemType"]},{"name":"fun keyValueCookieString(unquotedValue: Boolean = false): String","description":"org.http4k.core.cookie.Cookie.keyValueCookieString","location":"http4k-core/org.http4k.core.cookie/-cookie/key-value-cookie-string.html","searchKeys":["keyValueCookieString","fun keyValueCookieString(unquotedValue: Boolean = false): String","org.http4k.core.cookie.Cookie.keyValueCookieString"]},{"name":"fun label(name: String): String?","description":"org.http4k.core.HttpTransaction.label","location":"http4k-core/org.http4k.core/-http-transaction/label.html","searchKeys":["label","fun label(name: String): String?","org.http4k.core.HttpTransaction.label"]},{"name":"fun label(name: String, value: String): HttpTransaction","description":"org.http4k.core.HttpTransaction.label","location":"http4k-core/org.http4k.core/-http-transaction/label.html","searchKeys":["label","fun label(name: String, value: String): HttpTransaction","org.http4k.core.HttpTransaction.label"]},{"name":"fun lensForStore(storeId: String?): LensInjectorExtractor<Request, UUID>","description":"org.http4k.core.RequestContext.Companion.lensForStore","location":"http4k-core/org.http4k.core/-request-context/-companion/lens-for-store.html","searchKeys":["lensForStore","fun lensForStore(storeId: String?): LensInjectorExtractor<Request, UUID>","org.http4k.core.RequestContext.Companion.lensForStore"]},{"name":"fun localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiMapping<String, LocalDate>","description":"org.http4k.lens.StringBiDiMappings.localDate","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/local-date.html","searchKeys":["localDate","fun localDate(formatter: DateTimeFormatter = ISO_LOCAL_DATE): BiDiMapping<String, LocalDate>","org.http4k.lens.StringBiDiMappings.localDate"]},{"name":"fun localDateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiMapping<String, LocalDateTime>","description":"org.http4k.lens.StringBiDiMappings.localDateTime","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/local-date-time.html","searchKeys":["localDateTime","fun localDateTime(formatter: DateTimeFormatter = ISO_LOCAL_DATE_TIME): BiDiMapping<String, LocalDateTime>","org.http4k.lens.StringBiDiMappings.localDateTime"]},{"name":"fun localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiMapping<String, LocalTime>","description":"org.http4k.lens.StringBiDiMappings.localTime","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/local-time.html","searchKeys":["localTime","fun localTime(formatter: DateTimeFormatter = ISO_LOCAL_TIME): BiDiMapping<String, LocalTime>","org.http4k.lens.StringBiDiMappings.localTime"]},{"name":"fun locale(): BiDiMapping<String, Locale>","description":"org.http4k.lens.StringBiDiMappings.locale","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/locale.html","searchKeys":["locale","fun locale(): BiDiMapping<String, Locale>","org.http4k.lens.StringBiDiMappings.locale"]},{"name":"fun long(): BiDiMapping<String, Long>","description":"org.http4k.lens.StringBiDiMappings.long","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/long.html","searchKeys":["long","fun long(): BiDiMapping<String, Long>","org.http4k.lens.StringBiDiMappings.long"]},{"name":"fun main()","description":"org.http4k.lens.main","location":"http4k-core/org.http4k.lens/main.html","searchKeys":["main","fun main()","org.http4k.lens.main"]},{"name":"fun matches(uri: String): Boolean","description":"org.http4k.core.UriTemplate.matches","location":"http4k-core/org.http4k.core/-uri-template/matches.html","searchKeys":["matches","fun matches(uri: String): Boolean","org.http4k.core.UriTemplate.matches"]},{"name":"fun maxAge(seconds: Long): Cookie","description":"org.http4k.core.cookie.Cookie.maxAge","location":"http4k-core/org.http4k.core.cookie/-cookie/max-age.html","searchKeys":["maxAge","fun maxAge(seconds: Long): Cookie","org.http4k.core.cookie.Cookie.maxAge"]},{"name":"fun new(random: Random = Random): TraceId","description":"org.http4k.filter.TraceId.Companion.new","location":"http4k-core/org.http4k.filter/-trace-id/-companion/new.html","searchKeys":["new","fun new(random: Random = Random): TraceId","org.http4k.filter.TraceId.Companion.new"]},{"name":"fun nonBlank(): BiDiMapping<String, String>","description":"org.http4k.lens.StringBiDiMappings.nonBlank","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/non-blank.html","searchKeys":["nonBlank","fun nonBlank(): BiDiMapping<String, String>","org.http4k.lens.StringBiDiMappings.nonBlank"]},{"name":"fun nonEmpty(): BiDiMapping<String, String>","description":"org.http4k.lens.StringBiDiMappings.nonEmpty","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/non-empty.html","searchKeys":["nonEmpty","fun nonEmpty(): BiDiMapping<String, String>","org.http4k.lens.StringBiDiMappings.nonEmpty"]},{"name":"fun of(value: String): Uri","description":"org.http4k.core.Uri.Companion.of","location":"http4k-core/org.http4k.core/-uri/-companion/of.html","searchKeys":["of","fun of(value: String): Uri","org.http4k.core.Uri.Companion.of"]},{"name":"fun offsetDateTime(formatter: DateTimeFormatter = ISO_OFFSET_DATE_TIME): BiDiMapping<String, OffsetDateTime>","description":"org.http4k.lens.StringBiDiMappings.offsetDateTime","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/offset-date-time.html","searchKeys":["offsetDateTime","fun offsetDateTime(formatter: DateTimeFormatter = ISO_OFFSET_DATE_TIME): BiDiMapping<String, OffsetDateTime>","org.http4k.lens.StringBiDiMappings.offsetDateTime"]},{"name":"fun offsetTime(formatter: DateTimeFormatter = ISO_OFFSET_TIME): BiDiMapping<String, OffsetTime>","description":"org.http4k.lens.StringBiDiMappings.offsetTime","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/offset-time.html","searchKeys":["offsetTime","fun offsetTime(formatter: DateTimeFormatter = ISO_OFFSET_TIME): BiDiMapping<String, OffsetTime>","org.http4k.lens.StringBiDiMappings.offsetTime"]},{"name":"fun originalBehaviour(e: Throwable): Response","description":"org.http4k.filter.ServerFilters.CatchAll.originalBehaviour","location":"http4k-core/org.http4k.filter/-server-filters/-catch-all/original-behaviour.html","searchKeys":["originalBehaviour","fun originalBehaviour(e: Throwable): Response","org.http4k.filter.ServerFilters.CatchAll.originalBehaviour"]},{"name":"fun overall(): Failure.Type","description":"org.http4k.lens.LensFailure.overall","location":"http4k-core/org.http4k.lens/-lens-failure/overall.html","searchKeys":["overall","fun overall(): Failure.Type","org.http4k.lens.LensFailure.overall"]},{"name":"fun parse(cookieValue: String): Cookie?","description":"org.http4k.core.cookie.Cookie.Companion.parse","location":"http4k-core/org.http4k.core.cookie/-cookie/-companion/parse.html","searchKeys":["parse","fun parse(cookieValue: String): Cookie?","org.http4k.core.cookie.Cookie.Companion.parse"]},{"name":"fun parse(headerValue: String): FieldValue","description":"org.http4k.core.etag.ETagValidationRequestParser.Companion.parse","location":"http4k-core/org.http4k.core.etag/-e-tag-validation-request-parser/-companion/parse.html","searchKeys":["parse","fun parse(headerValue: String): FieldValue","org.http4k.core.etag.ETagValidationRequestParser.Companion.parse"]},{"name":"fun path(path: String): Cookie","description":"org.http4k.core.cookie.Cookie.path","location":"http4k-core/org.http4k.core.cookie/-cookie/path.html","searchKeys":["path","fun path(path: String): Cookie","org.http4k.core.cookie.Cookie.path"]},{"name":"fun path(path: String): Uri","description":"org.http4k.core.Uri.path","location":"http4k-core/org.http4k.core/-uri/path.html","searchKeys":["path","fun path(path: String): Uri","org.http4k.core.Uri.path"]},{"name":"fun port(port: Int?): Uri","description":"org.http4k.core.Uri.port","location":"http4k-core/org.http4k.core/-uri/port.html","searchKeys":["port","fun port(port: Int?): Uri","org.http4k.core.Uri.port"]},{"name":"fun queries(vararg names: String): Router","description":"org.http4k.routing.queries","location":"http4k-core/org.http4k.routing/queries.html","searchKeys":["queries","fun queries(vararg names: String): Router","org.http4k.routing.queries"]},{"name":"fun query(name: String, fn: (String) -> Boolean): Router","description":"org.http4k.routing.query","location":"http4k-core/org.http4k.routing/query.html","searchKeys":["query","fun query(name: String, fn: (String) -> Boolean): Router","org.http4k.routing.query"]},{"name":"fun query(name: String, value: String): Router","description":"org.http4k.routing.query","location":"http4k-core/org.http4k.routing/query.html","searchKeys":["query","fun query(name: String, value: String): Router","org.http4k.routing.query"]},{"name":"fun query(query: String): Uri","description":"org.http4k.core.Uri.query","location":"http4k-core/org.http4k.core/-uri/query.html","searchKeys":["query","fun query(query: String): Uri","org.http4k.core.Uri.query"]},{"name":"fun regex(pattern: String, group: Int = 1): BiDiMapping<String, String>","description":"org.http4k.lens.StringBiDiMappings.regex","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/regex.html","searchKeys":["regex","fun regex(pattern: String, group: Int = 1): BiDiMapping<String, String>","org.http4k.lens.StringBiDiMappings.regex"]},{"name":"fun regexObject(): BiDiMapping<String, Regex>","description":"org.http4k.lens.StringBiDiMappings.regexObject","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/regex-object.html","searchKeys":["regexObject","fun regexObject(): BiDiMapping<String, Regex>","org.http4k.lens.StringBiDiMappings.regexObject"]},{"name":"fun replaceIn(header: String?): String","description":"org.http4k.filter.CacheControlHeaderPart.replaceIn","location":"http4k-core/org.http4k.filter/-cache-control-header-part/replace-in.html","searchKeys":["replaceIn","fun replaceIn(header: String?): String","org.http4k.filter.CacheControlHeaderPart.replaceIn"]},{"name":"fun reverseProxy(vararg hostToHandler: Pair<String, HttpHandler>): HttpHandler","description":"org.http4k.routing.reverseProxy","location":"http4k-core/org.http4k.routing/reverse-proxy.html","searchKeys":["reverseProxy","fun reverseProxy(vararg hostToHandler: Pair<String, HttpHandler>): HttpHandler","org.http4k.routing.reverseProxy"]},{"name":"fun reverseProxyRouting(vararg hostToHandler: Pair<String, HttpHandler>): RoutingHttpHandler","description":"org.http4k.routing.reverseProxyRouting","location":"http4k-core/org.http4k.routing/reverse-proxy-routing.html","searchKeys":["reverseProxyRouting","fun reverseProxyRouting(vararg hostToHandler: Pair<String, HttpHandler>): RoutingHttpHandler","org.http4k.routing.reverseProxyRouting"]},{"name":"fun routes(routers: List<RoutingHttpHandler>): RoutingHttpHandler","description":"org.http4k.routing.routes","location":"http4k-core/org.http4k.routing/routes.html","searchKeys":["routes","fun routes(routers: List<RoutingHttpHandler>): RoutingHttpHandler","org.http4k.routing.routes"]},{"name":"fun routes(vararg list: Pair<Method, HttpHandler>): RoutingHttpHandler","description":"org.http4k.routing.routes","location":"http4k-core/org.http4k.routing/routes.html","searchKeys":["routes","fun routes(vararg list: Pair<Method, HttpHandler>): RoutingHttpHandler","org.http4k.routing.routes"]},{"name":"fun routes(vararg list: RoutingHttpHandler): RoutingHttpHandler","description":"org.http4k.routing.routes","location":"http4k-core/org.http4k.routing/routes.html","searchKeys":["routes","fun routes(vararg list: RoutingHttpHandler): RoutingHttpHandler","org.http4k.routing.routes"]},{"name":"fun sameSite(sameSite: SameSite): Cookie","description":"org.http4k.core.cookie.Cookie.sameSite","location":"http4k-core/org.http4k.core.cookie/-cookie/same-site.html","searchKeys":["sameSite","fun sameSite(sameSite: SameSite): Cookie","org.http4k.core.cookie.Cookie.sameSite"]},{"name":"fun samplingDecision(): BiDiMapping<String, SamplingDecision>","description":"org.http4k.lens.StringBiDiMappings.samplingDecision","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/sampling-decision.html","searchKeys":["samplingDecision","fun samplingDecision(): BiDiMapping<String, SamplingDecision>","org.http4k.lens.StringBiDiMappings.samplingDecision"]},{"name":"fun scheme(scheme: String): Uri","description":"org.http4k.core.Uri.scheme","location":"http4k-core/org.http4k.core/-uri/scheme.html","searchKeys":["scheme","fun scheme(scheme: String): Uri","org.http4k.core.Uri.scheme"]},{"name":"fun secure(): Cookie","description":"org.http4k.core.cookie.Cookie.secure","location":"http4k-core/org.http4k.core.cookie/-cookie/secure.html","searchKeys":["secure","fun secure(): Cookie","org.http4k.core.cookie.Cookie.secure"]},{"name":"fun singlePageApp(resourceLoader: ResourceLoader = ResourceLoader.Classpath(\"/public\"), vararg extraFileExtensionToContentTypes: Pair<String, ContentType>): RoutingHttpHandler","description":"org.http4k.routing.singlePageApp","location":"http4k-core/org.http4k.routing/single-page-app.html","searchKeys":["singlePageApp","fun singlePageApp(resourceLoader: ResourceLoader = ResourceLoader.Classpath(\"/public\"), vararg extraFileExtensionToContentTypes: Pair<String, ContentType>): RoutingHttpHandler","org.http4k.routing.singlePageApp"]},{"name":"fun static(resourceLoader: ResourceLoader = Classpath(), vararg extraFileExtensionToContentTypes: Pair<String, ContentType>): RoutingHttpHandler","description":"org.http4k.routing.static","location":"http4k-core/org.http4k.routing/static.html","searchKeys":["static","fun static(resourceLoader: ResourceLoader = Classpath(), vararg extraFileExtensionToContentTypes: Pair<String, ContentType>): RoutingHttpHandler","org.http4k.routing.static"]},{"name":"fun then(router: RoutingHttpHandler): HttpHandler","description":"org.http4k.filter.ClientFilters.FollowRedirects.then","location":"http4k-core/org.http4k.filter/-client-filters/-follow-redirects/then.html","searchKeys":["then","fun then(router: RoutingHttpHandler): HttpHandler","org.http4k.filter.ClientFilters.FollowRedirects.then"]},{"name":"fun throwable(): BiDiMapping<String, Throwable>","description":"org.http4k.lens.StringBiDiMappings.throwable","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/throwable.html","searchKeys":["throwable","fun throwable(): BiDiMapping<String, Throwable>","org.http4k.lens.StringBiDiMappings.throwable"]},{"name":"fun toHeaderString(): String","description":"org.http4k.core.etag.ETag.toHeaderString","location":"http4k-core/org.http4k.core.etag/-e-tag/to-header-string.html","searchKeys":["toHeaderString","fun toHeaderString(): String","org.http4k.core.etag.ETag.toHeaderString"]},{"name":"fun toHeaderValue(): String","description":"org.http4k.core.ContentType.toHeaderValue","location":"http4k-core/org.http4k.core/-content-type/to-header-value.html","searchKeys":["toHeaderValue","fun toHeaderValue(): String","org.http4k.core.ContentType.toHeaderValue"]},{"name":"fun toHeaderValue(): String","description":"org.http4k.filter.CacheControlHeaderPart.toHeaderValue","location":"http4k-core/org.http4k.filter/-cache-control-header-part/to-header-value.html","searchKeys":["toHeaderValue","fun toHeaderValue(): String","org.http4k.filter.CacheControlHeaderPart.toHeaderValue"]},{"name":"fun traceId(): BiDiMapping<String, TraceId>","description":"org.http4k.lens.StringBiDiMappings.traceId","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/trace-id.html","searchKeys":["traceId","fun traceId(): BiDiMapping<String, TraceId>","org.http4k.lens.StringBiDiMappings.traceId"]},{"name":"fun unhex(data: String): ByteArray","description":"org.http4k.util.Hex.unhex","location":"http4k-core/org.http4k.util/-hex/unhex.html","searchKeys":["unhex","fun unhex(data: String): ByteArray","org.http4k.util.Hex.unhex"]},{"name":"fun uri(): BiDiMapping<String, Uri>","description":"org.http4k.lens.StringBiDiMappings.uri","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/uri.html","searchKeys":["uri","fun uri(): BiDiMapping<String, Uri>","org.http4k.lens.StringBiDiMappings.uri"]},{"name":"fun url(): BiDiMapping<String, URL>","description":"org.http4k.lens.StringBiDiMappings.url","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/url.html","searchKeys":["url","fun url(): BiDiMapping<String, URL>","org.http4k.lens.StringBiDiMappings.url"]},{"name":"fun urlEncoded(): BiDiMapping<String, String>","description":"org.http4k.lens.StringBiDiMappings.urlEncoded","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/url-encoded.html","searchKeys":["urlEncoded","fun urlEncoded(): BiDiMapping<String, String>","org.http4k.lens.StringBiDiMappings.urlEncoded"]},{"name":"fun userInfo(userInfo: String): Uri","description":"org.http4k.core.Uri.userInfo","location":"http4k-core/org.http4k.core/-uri/user-info.html","searchKeys":["userInfo","fun userInfo(userInfo: String): Uri","org.http4k.core.Uri.userInfo"]},{"name":"fun uuid(): BiDiMapping<String, UUID>","description":"org.http4k.lens.StringBiDiMappings.uuid","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/uuid.html","searchKeys":["uuid","fun uuid(): BiDiMapping<String, UUID>","org.http4k.lens.StringBiDiMappings.uuid"]},{"name":"fun valueOf(value: String): BackgroundColour","description":"org.http4k.routing.inspect.BackgroundColour.valueOf","location":"http4k-core/org.http4k.routing.inspect/-background-colour/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): BackgroundColour","org.http4k.routing.inspect.BackgroundColour.valueOf"]},{"name":"fun valueOf(value: String): EscapeMode","description":"org.http4k.routing.inspect.EscapeMode.valueOf","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EscapeMode","org.http4k.routing.inspect.EscapeMode.valueOf"]},{"name":"fun valueOf(value: String): Failure.Type","description":"org.http4k.lens.Failure.Type.valueOf","location":"http4k-core/org.http4k.lens/-failure/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Failure.Type","org.http4k.lens.Failure.Type.valueOf"]},{"name":"fun valueOf(value: String): ForegroundColour","description":"org.http4k.routing.inspect.ForegroundColour.valueOf","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ForegroundColour","org.http4k.routing.inspect.ForegroundColour.valueOf"]},{"name":"fun valueOf(value: String): Method","description":"org.http4k.core.Method.valueOf","location":"http4k-core/org.http4k.core/-method/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Method","org.http4k.core.Method.valueOf"]},{"name":"fun valueOf(value: String): RequestFilters.ProxyProtocolMode","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.valueOf","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RequestFilters.ProxyProtocolMode","org.http4k.filter.RequestFilters.ProxyProtocolMode.valueOf"]},{"name":"fun valueOf(value: String): SameSite","description":"org.http4k.core.cookie.SameSite.valueOf","location":"http4k-core/org.http4k.core.cookie/-same-site/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SameSite","org.http4k.core.cookie.SameSite.valueOf"]},{"name":"fun valueOf(value: String): Validator","description":"org.http4k.lens.Validator.valueOf","location":"http4k-core/org.http4k.lens/-validator/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Validator","org.http4k.lens.Validator.valueOf"]},{"name":"fun valueOf(value: String): Variation","description":"org.http4k.routing.inspect.Variation.valueOf","location":"http4k-core/org.http4k.routing.inspect/-variation/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Variation","org.http4k.routing.inspect.Variation.valueOf"]},{"name":"fun values(): Array<BackgroundColour>","description":"org.http4k.routing.inspect.BackgroundColour.values","location":"http4k-core/org.http4k.routing.inspect/-background-colour/values.html","searchKeys":["values","fun values(): Array<BackgroundColour>","org.http4k.routing.inspect.BackgroundColour.values"]},{"name":"fun values(): Array<EscapeMode>","description":"org.http4k.routing.inspect.EscapeMode.values","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/values.html","searchKeys":["values","fun values(): Array<EscapeMode>","org.http4k.routing.inspect.EscapeMode.values"]},{"name":"fun values(): Array<Failure.Type>","description":"org.http4k.lens.Failure.Type.values","location":"http4k-core/org.http4k.lens/-failure/-type/values.html","searchKeys":["values","fun values(): Array<Failure.Type>","org.http4k.lens.Failure.Type.values"]},{"name":"fun values(): Array<ForegroundColour>","description":"org.http4k.routing.inspect.ForegroundColour.values","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/values.html","searchKeys":["values","fun values(): Array<ForegroundColour>","org.http4k.routing.inspect.ForegroundColour.values"]},{"name":"fun values(): Array<Method>","description":"org.http4k.core.Method.values","location":"http4k-core/org.http4k.core/-method/values.html","searchKeys":["values","fun values(): Array<Method>","org.http4k.core.Method.values"]},{"name":"fun values(): Array<RequestFilters.ProxyProtocolMode>","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.values","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/values.html","searchKeys":["values","fun values(): Array<RequestFilters.ProxyProtocolMode>","org.http4k.filter.RequestFilters.ProxyProtocolMode.values"]},{"name":"fun values(): Array<SameSite>","description":"org.http4k.core.cookie.SameSite.values","location":"http4k-core/org.http4k.core.cookie/-same-site/values.html","searchKeys":["values","fun values(): Array<SameSite>","org.http4k.core.cookie.SameSite.values"]},{"name":"fun values(): Array<Validator>","description":"org.http4k.lens.Validator.values","location":"http4k-core/org.http4k.lens/-validator/values.html","searchKeys":["values","fun values(): Array<Validator>","org.http4k.lens.Validator.values"]},{"name":"fun values(): Array<Variation>","description":"org.http4k.routing.inspect.Variation.values","location":"http4k-core/org.http4k.routing.inspect/-variation/values.html","searchKeys":["values","fun values(): Array<Variation>","org.http4k.routing.inspect.Variation.values"]},{"name":"fun webJars(): RoutingHttpHandler","description":"org.http4k.routing.webJars","location":"http4k-core/org.http4k.routing/web-jars.html","searchKeys":["webJars","fun webJars(): RoutingHttpHandler","org.http4k.routing.webJars"]},{"name":"fun withNoDirectives(): ContentType","description":"org.http4k.core.ContentType.withNoDirectives","location":"http4k-core/org.http4k.core/-content-type/with-no-directives.html","searchKeys":["withNoDirectives","fun withNoDirectives(): ContentType","org.http4k.core.ContentType.withNoDirectives"]},{"name":"fun yearMonth(formatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM\")): BiDiMapping<String, YearMonth>","description":"org.http4k.lens.StringBiDiMappings.yearMonth","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/year-month.html","searchKeys":["yearMonth","fun yearMonth(formatter: DateTimeFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM\")): BiDiMapping<String, YearMonth>","org.http4k.lens.StringBiDiMappings.yearMonth"]},{"name":"fun zoneId(): BiDiMapping<String, ZoneId>","description":"org.http4k.lens.StringBiDiMappings.zoneId","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/zone-id.html","searchKeys":["zoneId","fun zoneId(): BiDiMapping<String, ZoneId>","org.http4k.lens.StringBiDiMappings.zoneId"]},{"name":"fun zoneOffset(): BiDiMapping<String, ZoneOffset>","description":"org.http4k.lens.StringBiDiMappings.zoneOffset","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/zone-offset.html","searchKeys":["zoneOffset","fun zoneOffset(): BiDiMapping<String, ZoneOffset>","org.http4k.lens.StringBiDiMappings.zoneOffset"]},{"name":"fun zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiMapping<String, ZonedDateTime>","description":"org.http4k.lens.StringBiDiMappings.zonedDateTime","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/zoned-date-time.html","searchKeys":["zonedDateTime","fun zonedDateTime(formatter: DateTimeFormatter = ISO_ZONED_DATE_TIME): BiDiMapping<String, ZonedDateTime>","org.http4k.lens.StringBiDiMappings.zonedDateTime"]},{"name":"infix fun Method.bind(httpHandler: HttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun Method.bind(httpHandler: HttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun Method.bind(routingHandler: RoutingHttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun Method.bind(routingHandler: RoutingHttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun Router.and(that: Router): Router","description":"org.http4k.routing.and","location":"http4k-core/org.http4k.routing/and.html","searchKeys":["and","infix fun Router.and(that: Router): Router","org.http4k.routing.and"]},{"name":"infix fun Router.bind(handler: HttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun Router.bind(handler: HttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun Router.bind(handler: RoutingHttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun Router.bind(handler: RoutingHttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun String.bind(action: HttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun String.bind(action: HttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun String.bind(httpHandler: RoutingHttpHandler): RoutingHttpHandler","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun String.bind(httpHandler: RoutingHttpHandler): RoutingHttpHandler","org.http4k.routing.bind"]},{"name":"infix fun String.bind(method: Method): PathMethod","description":"org.http4k.routing.bind","location":"http4k-core/org.http4k.routing/bind.html","searchKeys":["bind","infix fun String.bind(method: Method): PathMethod","org.http4k.routing.bind"]},{"name":"infix fun to(action: HttpHandler): RoutingHttpHandler","description":"org.http4k.routing.PathMethod.to","location":"http4k-core/org.http4k.routing/-path-method/to.html","searchKeys":["to","infix fun to(action: HttpHandler): RoutingHttpHandler","org.http4k.routing.PathMethod.to"]},{"name":"inline fun <IN : Any, T : Enum<T>> BiDiLensSpec<IN, String>.enum(): BiDiLensSpec<IN, T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <IN : Any, T : Enum<T>> BiDiLensSpec<IN, String>.enum(): BiDiLensSpec<IN, T>","org.http4k.lens.enum"]},{"name":"inline fun <IN : Any, T : Enum<T>> BiDiLensSpec<IN, String>.enum(noinline nextOut: (String) -> T, noinline nextIn: (T) -> String): BiDiLensSpec<IN, T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <IN : Any, T : Enum<T>> BiDiLensSpec<IN, String>.enum(noinline nextOut: (String) -> T, noinline nextIn: (T) -> String): BiDiLensSpec<IN, T>","org.http4k.lens.enum"]},{"name":"inline fun <NEXT> map(crossinline nextOut: (OUT) -> NEXT, crossinline nextIn: (NEXT) -> OUT): BiDiMapping<IN, NEXT>","description":"org.http4k.lens.BiDiMapping.map","location":"http4k-core/org.http4k.lens/-bi-di-mapping/map.html","searchKeys":["map","inline fun <NEXT> map(crossinline nextOut: (OUT) -> NEXT, crossinline nextIn: (NEXT) -> OUT): BiDiMapping<IN, NEXT>","org.http4k.lens.BiDiMapping.map"]},{"name":"inline fun <T : Enum<T>> BiDiLensSpec<WebForm, String>.enum(): BiDiLensSpec<WebForm, T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> BiDiLensSpec<WebForm, String>.enum(): BiDiLensSpec<WebForm, T>","org.http4k.lens.enum"]},{"name":"inline fun <T : Enum<T>> Header.enum(caseSensitive: Boolean = true): BiDiLensSpec<HttpMessage, T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> Header.enum(caseSensitive: Boolean = true): BiDiLensSpec<HttpMessage, T>","org.http4k.lens.enum"]},{"name":"inline fun <T : Enum<T>> Path.enum(caseSensitive: Boolean = true): BiDiPathLensSpec<T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> Path.enum(caseSensitive: Boolean = true): BiDiPathLensSpec<T>","org.http4k.lens.enum"]},{"name":"inline fun <T : Enum<T>> Path.enum(noinline nextOut: (String) -> T, noinline nextIn: (T) -> String): BiDiPathLensSpec<T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> Path.enum(noinline nextOut: (String) -> T, noinline nextIn: (T) -> String): BiDiPathLensSpec<T>","org.http4k.lens.enum"]},{"name":"inline fun <T : Enum<T>> Query.enum(caseSensitive: Boolean = true): BiDiLensSpec<Request, T>","description":"org.http4k.lens.enum","location":"http4k-core/org.http4k.lens/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> Query.enum(caseSensitive: Boolean = true): BiDiLensSpec<Request, T>","org.http4k.lens.enum"]},{"name":"inline fun <T : Enum<T>> caseInsensitiveEnum(): BiDiMapping<String, T>","description":"org.http4k.lens.StringBiDiMappings.caseInsensitiveEnum","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/case-insensitive-enum.html","searchKeys":["caseInsensitiveEnum","inline fun <T : Enum<T>> caseInsensitiveEnum(): BiDiMapping<String, T>","org.http4k.lens.StringBiDiMappings.caseInsensitiveEnum"]},{"name":"inline fun <T : Enum<T>> enum(): BiDiMapping<String, T>","description":"org.http4k.lens.StringBiDiMappings.enum","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> enum(): BiDiMapping<String, T>","org.http4k.lens.StringBiDiMappings.enum"]},{"name":"inline fun <TARGET : Any, T> BiDiLensSpec<TARGET, String>.composite(crossinline fn: BiDiLensSpec<TARGET, String>.(TARGET) -> T): Lens<TARGET, T>","description":"org.http4k.lens.composite","location":"http4k-core/org.http4k.lens/composite.html","searchKeys":["composite","inline fun <TARGET : Any, T> BiDiLensSpec<TARGET, String>.composite(crossinline fn: BiDiLensSpec<TARGET, String>.(TARGET) -> T): Lens<TARGET, T>","org.http4k.lens.composite"]},{"name":"inline fun <TARGET : Any, T> BiDiLensSpec<TARGET, String>.composite(crossinline getFn: BiDiLensSpec<TARGET, String>.(TARGET) -> T, crossinline setFn: T.(TARGET) -> TARGET): BiDiLens<TARGET, T>","description":"org.http4k.lens.composite","location":"http4k-core/org.http4k.lens/composite.html","searchKeys":["composite","inline fun <TARGET : Any, T> BiDiLensSpec<TARGET, String>.composite(crossinline getFn: BiDiLensSpec<TARGET, String>.(TARGET) -> T, crossinline setFn: T.(TARGET) -> TARGET): BiDiLens<TARGET, T>","org.http4k.lens.composite"]},{"name":"inline operator fun <IN, T> invoke(noinline asOut: (IN) -> T, noinline asIn: (T) -> IN): BiDiMapping<IN, T>","description":"org.http4k.lens.BiDiMapping.Companion.invoke","location":"http4k-core/org.http4k.lens/-bi-di-mapping/-companion/invoke.html","searchKeys":["invoke","inline operator fun <IN, T> invoke(noinline asOut: (IN) -> T, noinline asIn: (T) -> IN): BiDiMapping<IN, T>","org.http4k.lens.BiDiMapping.Companion.invoke"]},{"name":"interface AsyncHttpHandler : Closeable","description":"org.http4k.client.AsyncHttpHandler","location":"http4k-core/org.http4k.client/-async-http-handler/index.html","searchKeys":["AsyncHttpHandler","interface AsyncHttpHandler : Closeable","org.http4k.client.AsyncHttpHandler"]},{"name":"interface BiDiLensBuilder<IN : Any, OUT> : LensBuilder<IN, OUT> ","description":"org.http4k.lens.BiDiLensBuilder","location":"http4k-core/org.http4k.lens/-bi-di-lens-builder/index.html","searchKeys":["BiDiLensBuilder","interface BiDiLensBuilder<IN : Any, OUT> : LensBuilder<IN, OUT> ","org.http4k.lens.BiDiLensBuilder"]},{"name":"interface BiDiMultiLensSpec<IN : Any, OUT> : BiDiLensBuilder<IN, List<OUT>> ","description":"org.http4k.lens.BiDiMultiLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-multi-lens-spec/index.html","searchKeys":["BiDiMultiLensSpec","interface BiDiMultiLensSpec<IN : Any, OUT> : BiDiLensBuilder<IN, List<OUT>> ","org.http4k.lens.BiDiMultiLensSpec"]},{"name":"interface Body : Closeable","description":"org.http4k.core.Body","location":"http4k-core/org.http4k.core/-body/index.html","searchKeys":["Body","interface Body : Closeable","org.http4k.core.Body"]},{"name":"interface CookieStorage","description":"org.http4k.filter.cookie.CookieStorage","location":"http4k-core/org.http4k.filter.cookie/-cookie-storage/index.html","searchKeys":["CookieStorage","interface CookieStorage","org.http4k.filter.cookie.CookieStorage"]},{"name":"interface DelegatedPropertyLensSpec<Req, OUT, Opt>","description":"org.http4k.lens.DelegatedPropertyLensSpec","location":"http4k-core/org.http4k.lens/-delegated-property-lens-spec/index.html","searchKeys":["DelegatedPropertyLensSpec","interface DelegatedPropertyLensSpec<Req, OUT, Opt>","org.http4k.lens.DelegatedPropertyLensSpec"]},{"name":"interface DualSyncAsyncHttpHandler : Function1<request: Request, Response> , AsyncHttpHandler","description":"org.http4k.client.DualSyncAsyncHttpHandler","location":"http4k-core/org.http4k.client/-dual-sync-async-http-handler/index.html","searchKeys":["DualSyncAsyncHttpHandler","interface DualSyncAsyncHttpHandler : Function1<request: Request, Response> , AsyncHttpHandler","org.http4k.client.DualSyncAsyncHttpHandler"]},{"name":"interface Event","description":"org.http4k.events.Event","location":"http4k-core/org.http4k.events/-event/index.html","searchKeys":["Event","interface Event","org.http4k.events.Event"]},{"name":"interface Http4kServer : AutoCloseable","description":"org.http4k.server.Http4kServer","location":"http4k-core/org.http4k.server/-http4k-server/index.html","searchKeys":["Http4kServer","interface Http4kServer : AutoCloseable","org.http4k.server.Http4kServer"]},{"name":"interface HttpMessage : Closeable","description":"org.http4k.core.HttpMessage","location":"http4k-core/org.http4k.core/-http-message/index.html","searchKeys":["HttpMessage","interface HttpMessage : Closeable","org.http4k.core.HttpMessage"]},{"name":"interface LensBuilder<IN : Any, OUT>","description":"org.http4k.lens.LensBuilder","location":"http4k-core/org.http4k.lens/-lens-builder/index.html","searchKeys":["LensBuilder","interface LensBuilder<IN : Any, OUT>","org.http4k.lens.LensBuilder"]},{"name":"interface LensInjector<in IN, in OUT>","description":"org.http4k.lens.LensInjector","location":"http4k-core/org.http4k.lens/-lens-injector/index.html","searchKeys":["LensInjector","interface LensInjector<in IN, in OUT>","org.http4k.lens.LensInjector"]},{"name":"interface LensInjectorExtractor<in IN, OUT> : LensExtractor<IN, OUT> , LensInjector<OUT, IN> ","description":"org.http4k.lens.LensInjectorExtractor","location":"http4k-core/org.http4k.lens/-lens-injector-extractor/index.html","searchKeys":["LensInjectorExtractor","interface LensInjectorExtractor<in IN, OUT> : LensExtractor<IN, OUT> , LensInjector<OUT, IN> ","org.http4k.lens.LensInjectorExtractor"]},{"name":"interface OriginPolicy : Function1<String, Boolean> ","description":"org.http4k.filter.OriginPolicy","location":"http4k-core/org.http4k.filter/-origin-policy/index.html","searchKeys":["OriginPolicy","interface OriginPolicy : Function1<String, Boolean> ","org.http4k.filter.OriginPolicy"]},{"name":"interface ReadWriteCache : Sink, Source","description":"org.http4k.traffic.ReadWriteCache","location":"http4k-core/org.http4k.traffic/-read-write-cache/index.html","searchKeys":["ReadWriteCache","interface ReadWriteCache : Sink, Source","org.http4k.traffic.ReadWriteCache"]},{"name":"interface ReadWriteStream : Sink, Replay","description":"org.http4k.traffic.ReadWriteStream","location":"http4k-core/org.http4k.traffic/-read-write-stream/index.html","searchKeys":["ReadWriteStream","interface ReadWriteStream : Sink, Replay","org.http4k.traffic.ReadWriteStream"]},{"name":"interface Replay","description":"org.http4k.traffic.Replay","location":"http4k-core/org.http4k.traffic/-replay/index.html","searchKeys":["Replay","interface Replay","org.http4k.traffic.Replay"]},{"name":"interface Request : HttpMessage","description":"org.http4k.core.Request","location":"http4k-core/org.http4k.core/-request/index.html","searchKeys":["Request","interface Request : HttpMessage","org.http4k.core.Request"]},{"name":"interface RequestWithRoute : Request","description":"org.http4k.routing.RequestWithRoute","location":"http4k-core/org.http4k.routing/-request-with-route/index.html","searchKeys":["RequestWithRoute","interface RequestWithRoute : Request","org.http4k.routing.RequestWithRoute"]},{"name":"interface Response : HttpMessage","description":"org.http4k.core.Response","location":"http4k-core/org.http4k.core/-response/index.html","searchKeys":["Response","interface Response : HttpMessage","org.http4k.core.Response"]},{"name":"interface ResponseWithRoute : Response","description":"org.http4k.routing.ResponseWithRoute","location":"http4k-core/org.http4k.routing/-response-with-route/index.html","searchKeys":["ResponseWithRoute","interface ResponseWithRoute : Response","org.http4k.routing.ResponseWithRoute"]},{"name":"interface Router","description":"org.http4k.routing.Router","location":"http4k-core/org.http4k.routing/-router/index.html","searchKeys":["Router","interface Router","org.http4k.routing.Router"]},{"name":"interface RoutingHttpHandler : Router, Function1<request: Request, Response> ","description":"org.http4k.routing.RoutingHttpHandler","location":"http4k-core/org.http4k.routing/-routing-http-handler/index.html","searchKeys":["RoutingHttpHandler","interface RoutingHttpHandler : Router, Function1<request: Request, Response> ","org.http4k.routing.RoutingHttpHandler"]},{"name":"interface ServerConfig","description":"org.http4k.server.ServerConfig","location":"http4k-core/org.http4k.server/-server-config/index.html","searchKeys":["ServerConfig","interface ServerConfig","org.http4k.server.ServerConfig"]},{"name":"interface Store<OUT> : LensInjector<OUT, Request> , LensExtractor<Request, OUT> ","description":"org.http4k.core.Store","location":"http4k-core/org.http4k.core/-store/index.html","searchKeys":["Store","interface Store<OUT> : LensInjector<OUT, Request> , LensExtractor<Request, OUT> ","org.http4k.core.Store"]},{"name":"interface ZipkinTracesStorage","description":"org.http4k.filter.ZipkinTracesStorage","location":"http4k-core/org.http4k.filter/-zipkin-traces-storage/index.html","searchKeys":["ZipkinTracesStorage","interface ZipkinTracesStorage","org.http4k.filter.ZipkinTracesStorage"]},{"name":"object AllowAllOriginPolicy : OriginPolicy","description":"org.http4k.filter.AllowAllOriginPolicy","location":"http4k-core/org.http4k.filter/-allow-all-origin-policy/index.html","searchKeys":["AllowAllOriginPolicy","object AllowAllOriginPolicy : OriginPolicy","org.http4k.filter.AllowAllOriginPolicy"]},{"name":"object ApiKeyAuth","description":"org.http4k.filter.ServerFilters.ApiKeyAuth","location":"http4k-core/org.http4k.filter/-server-filters/-api-key-auth/index.html","searchKeys":["ApiKeyAuth","object ApiKeyAuth","org.http4k.filter.ServerFilters.ApiKeyAuth"]},{"name":"object BasicAuth","description":"org.http4k.filter.ClientFilters.BasicAuth","location":"http4k-core/org.http4k.filter/-client-filters/-basic-auth/index.html","searchKeys":["BasicAuth","object BasicAuth","org.http4k.filter.ClientFilters.BasicAuth"]},{"name":"object BasicAuth","description":"org.http4k.filter.ServerFilters.BasicAuth","location":"http4k-core/org.http4k.filter/-server-filters/-basic-auth/index.html","searchKeys":["BasicAuth","object BasicAuth","org.http4k.filter.ServerFilters.BasicAuth"]},{"name":"object BearerAuth","description":"org.http4k.filter.ClientFilters.BearerAuth","location":"http4k-core/org.http4k.filter/-client-filters/-bearer-auth/index.html","searchKeys":["BearerAuth","object BearerAuth","org.http4k.filter.ClientFilters.BearerAuth"]},{"name":"object BearerAuth","description":"org.http4k.filter.ServerFilters.BearerAuth","location":"http4k-core/org.http4k.filter/-server-filters/-bearer-auth/index.html","searchKeys":["BearerAuth","object BearerAuth","org.http4k.filter.ServerFilters.BearerAuth"]},{"name":"object CacheRequest","description":"org.http4k.filter.CachingFilters.CacheRequest","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-request/index.html","searchKeys":["CacheRequest","object CacheRequest","org.http4k.filter.CachingFilters.CacheRequest"]},{"name":"object CacheResponse","description":"org.http4k.filter.CachingFilters.CacheResponse","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/index.html","searchKeys":["CacheResponse","object CacheResponse","org.http4k.filter.CachingFilters.CacheResponse"]},{"name":"object CachingFilters","description":"org.http4k.filter.CachingFilters","location":"http4k-core/org.http4k.filter/-caching-filters/index.html","searchKeys":["CachingFilters","object CachingFilters","org.http4k.filter.CachingFilters"]},{"name":"object CatchAll","description":"org.http4k.filter.ServerFilters.CatchAll","location":"http4k-core/org.http4k.filter/-server-filters/-catch-all/index.html","searchKeys":["CatchAll","object CatchAll","org.http4k.filter.ServerFilters.CatchAll"]},{"name":"object ClientFilters","description":"org.http4k.filter.ClientFilters","location":"http4k-core/org.http4k.filter/-client-filters/index.html","searchKeys":["ClientFilters","object ClientFilters","org.http4k.filter.ClientFilters"]},{"name":"object Companion","description":"org.http4k.core.Body.Companion","location":"http4k-core/org.http4k.core/-body/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Body.Companion"]},{"name":"object Companion","description":"org.http4k.core.ContentType.Companion","location":"http4k-core/org.http4k.core/-content-type/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.ContentType.Companion"]},{"name":"object Companion","description":"org.http4k.core.Filter.Companion","location":"http4k-core/org.http4k.core/-filter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Filter.Companion"]},{"name":"object Companion","description":"org.http4k.core.HttpMessage.Companion","location":"http4k-core/org.http4k.core/-http-message/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.HttpMessage.Companion"]},{"name":"object Companion","description":"org.http4k.core.HttpTransaction.Companion","location":"http4k-core/org.http4k.core/-http-transaction/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.HttpTransaction.Companion"]},{"name":"object Companion","description":"org.http4k.core.Method.Companion","location":"http4k-core/org.http4k.core/-method/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Method.Companion"]},{"name":"object Companion","description":"org.http4k.core.MimeTypes.Companion","location":"http4k-core/org.http4k.core/-mime-types/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.MimeTypes.Companion"]},{"name":"object Companion","description":"org.http4k.core.Request.Companion","location":"http4k-core/org.http4k.core/-request/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Request.Companion"]},{"name":"object Companion","description":"org.http4k.core.RequestContext.Companion","location":"http4k-core/org.http4k.core/-request-context/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.RequestContext.Companion"]},{"name":"object Companion","description":"org.http4k.core.Response.Companion","location":"http4k-core/org.http4k.core/-response/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Response.Companion"]},{"name":"object Companion","description":"org.http4k.core.Status.Companion","location":"http4k-core/org.http4k.core/-status/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Status.Companion"]},{"name":"object Companion","description":"org.http4k.core.Uri.Companion","location":"http4k-core/org.http4k.core/-uri/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.Uri.Companion"]},{"name":"object Companion","description":"org.http4k.core.UriTemplate.Companion","location":"http4k-core/org.http4k.core/-uri-template/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.UriTemplate.Companion"]},{"name":"object Companion","description":"org.http4k.core.cookie.Cookie.Companion","location":"http4k-core/org.http4k.core.cookie/-cookie/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.cookie.Cookie.Companion"]},{"name":"object Companion","description":"org.http4k.core.etag.ETagValidationRequestParser.Companion","location":"http4k-core/org.http4k.core.etag/-e-tag-validation-request-parser/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.core.etag.ETagValidationRequestParser.Companion"]},{"name":"object Companion","description":"org.http4k.events.Event.Companion","location":"http4k-core/org.http4k.events/-event/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.events.Event.Companion"]},{"name":"object Companion","description":"org.http4k.events.EventFilter.Companion","location":"http4k-core/org.http4k.events/-event-filter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.events.EventFilter.Companion"]},{"name":"object Companion","description":"org.http4k.filter.CorsPolicy.Companion","location":"http4k-core/org.http4k.filter/-cors-policy/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.CorsPolicy.Companion"]},{"name":"object Companion","description":"org.http4k.filter.OriginPolicy.Companion","location":"http4k-core/org.http4k.filter/-origin-policy/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.OriginPolicy.Companion"]},{"name":"object Companion","description":"org.http4k.filter.ResponseFilters.EtagSupport.Companion","location":"http4k-core/org.http4k.filter/-response-filters/-etag-support/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.ResponseFilters.EtagSupport.Companion"]},{"name":"object Companion","description":"org.http4k.filter.SamplingDecision.Companion","location":"http4k-core/org.http4k.filter/-sampling-decision/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.SamplingDecision.Companion"]},{"name":"object Companion","description":"org.http4k.filter.TraceId.Companion","location":"http4k-core/org.http4k.filter/-trace-id/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.TraceId.Companion"]},{"name":"object Companion","description":"org.http4k.filter.ZipkinTraces.Companion","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.ZipkinTraces.Companion"]},{"name":"object Companion","description":"org.http4k.filter.ZipkinTracesStorage.Companion","location":"http4k-core/org.http4k.filter/-zipkin-traces-storage/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.filter.ZipkinTracesStorage.Companion"]},{"name":"object Companion","description":"org.http4k.lens.BiDiMapping.Companion","location":"http4k-core/org.http4k.lens/-bi-di-mapping/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.lens.BiDiMapping.Companion"]},{"name":"object Companion","description":"org.http4k.lens.ContentNegotiation.Companion","location":"http4k-core/org.http4k.lens/-content-negotiation/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.lens.ContentNegotiation.Companion"]},{"name":"object Companion","description":"org.http4k.lens.LensGet.Companion","location":"http4k-core/org.http4k.lens/-lens-get/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.lens.LensGet.Companion"]},{"name":"object Companion","description":"org.http4k.lens.LensSet.Companion","location":"http4k-core/org.http4k.lens/-lens-set/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.lens.LensSet.Companion"]},{"name":"object Companion","description":"org.http4k.metrics.MetricsDefaults.Companion","location":"http4k-core/org.http4k.metrics/-metrics-defaults/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.metrics.MetricsDefaults.Companion"]},{"name":"object Companion","description":"org.http4k.routing.ResourceLoader.Companion","location":"http4k-core/org.http4k.routing/-resource-loader/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.routing.ResourceLoader.Companion"]},{"name":"object Companion","description":"org.http4k.routing.Router.Companion","location":"http4k-core/org.http4k.routing/-router/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.routing.Router.Companion"]},{"name":"object Companion","description":"org.http4k.routing.RouterDescription.Companion","location":"http4k-core/org.http4k.routing/-router-description/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.routing.RouterDescription.Companion"]},{"name":"object Companion","description":"org.http4k.security.CredentialsProvider.Companion","location":"http4k-core/org.http4k.security/-credentials-provider/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.security.CredentialsProvider.Companion"]},{"name":"object Companion","description":"org.http4k.traffic.ReadWriteCache.Companion","location":"http4k-core/org.http4k.traffic/-read-write-cache/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.traffic.ReadWriteCache.Companion"]},{"name":"object Companion","description":"org.http4k.traffic.ReadWriteStream.Companion","location":"http4k-core/org.http4k.traffic/-read-write-stream/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.traffic.ReadWriteStream.Companion"]},{"name":"object Companion","description":"org.http4k.traffic.Replay.Companion","location":"http4k-core/org.http4k.traffic/-replay/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.traffic.Replay.Companion"]},{"name":"object Companion","description":"org.http4k.traffic.Sink.Companion","location":"http4k-core/org.http4k.traffic/-sink/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.traffic.Sink.Companion"]},{"name":"object Companion","description":"org.http4k.traffic.Source.Companion","location":"http4k-core/org.http4k.traffic/-source/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.traffic.Source.Companion"]},{"name":"object ContentDispositionAttachment","description":"org.http4k.filter.ServerFilters.ContentDispositionAttachment","location":"http4k-core/org.http4k.filter/-server-filters/-content-disposition-attachment/index.html","searchKeys":["ContentDispositionAttachment","object ContentDispositionAttachment","org.http4k.filter.ServerFilters.ContentDispositionAttachment"]},{"name":"object Cookies","description":"org.http4k.filter.ClientFilters.Cookies","location":"http4k-core/org.http4k.filter/-client-filters/-cookies/index.html","searchKeys":["Cookies","object Cookies","org.http4k.filter.ClientFilters.Cookies"]},{"name":"object Cookies : BiDiLensSpec<Request, Cookie> ","description":"org.http4k.lens.Cookies","location":"http4k-core/org.http4k.lens/-cookies/index.html","searchKeys":["Cookies","object Cookies : BiDiLensSpec<Request, Cookie> ","org.http4k.lens.Cookies"]},{"name":"object CopyHeaders","description":"org.http4k.filter.ServerFilters.CopyHeaders","location":"http4k-core/org.http4k.filter/-server-filters/-copy-headers/index.html","searchKeys":["CopyHeaders","object CopyHeaders","org.http4k.filter.ServerFilters.CopyHeaders"]},{"name":"object Cors","description":"org.http4k.filter.ServerFilters.Cors","location":"http4k-core/org.http4k.filter/-server-filters/-cors/index.html","searchKeys":["Cors","object Cors","org.http4k.filter.ServerFilters.Cors"]},{"name":"object CustomBasicAuth","description":"org.http4k.filter.ClientFilters.CustomBasicAuth","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/index.html","searchKeys":["CustomBasicAuth","object CustomBasicAuth","org.http4k.filter.ClientFilters.CustomBasicAuth"]},{"name":"object DebuggingFilters","description":"org.http4k.filter.DebuggingFilters","location":"http4k-core/org.http4k.filter/-debugging-filters/index.html","searchKeys":["DebuggingFilters","object DebuggingFilters","org.http4k.filter.DebuggingFilters"]},{"name":"object EventFilters","description":"org.http4k.events.EventFilters","location":"http4k-core/org.http4k.events/-event-filters/index.html","searchKeys":["EventFilters","object EventFilters","org.http4k.events.EventFilters"]},{"name":"object FallbackCacheControl","description":"org.http4k.filter.CachingFilters.CacheResponse.FallbackCacheControl","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-fallback-cache-control/index.html","searchKeys":["FallbackCacheControl","object FallbackCacheControl","org.http4k.filter.CachingFilters.CacheResponse.FallbackCacheControl"]},{"name":"object FlashAttributesFilter : Filter","description":"org.http4k.filter.FlashAttributesFilter","location":"http4k-core/org.http4k.filter/-flash-attributes-filter/index.html","searchKeys":["FlashAttributesFilter","object FlashAttributesFilter : Filter","org.http4k.filter.FlashAttributesFilter"]},{"name":"object FormField : BiDiLensSpec<WebForm, String> ","description":"org.http4k.lens.FormField","location":"http4k-core/org.http4k.lens/-form-field/index.html","searchKeys":["FormField","object FormField : BiDiLensSpec<WebForm, String> ","org.http4k.lens.FormField"]},{"name":"object GZip","description":"org.http4k.filter.RequestFilters.GZip","location":"http4k-core/org.http4k.filter/-request-filters/-g-zip/index.html","searchKeys":["GZip","object GZip","org.http4k.filter.RequestFilters.GZip"]},{"name":"object GZip","description":"org.http4k.filter.ResponseFilters.GZip","location":"http4k-core/org.http4k.filter/-response-filters/-g-zip/index.html","searchKeys":["GZip","object GZip","org.http4k.filter.ResponseFilters.GZip"]},{"name":"object GZip","description":"org.http4k.filter.ServerFilters.GZip","location":"http4k-core/org.http4k.filter/-server-filters/-g-zip/index.html","searchKeys":["GZip","object GZip","org.http4k.filter.ServerFilters.GZip"]},{"name":"object GunZip","description":"org.http4k.filter.RequestFilters.GunZip","location":"http4k-core/org.http4k.filter/-request-filters/-gun-zip/index.html","searchKeys":["GunZip","object GunZip","org.http4k.filter.RequestFilters.GunZip"]},{"name":"object GunZip","description":"org.http4k.filter.ResponseFilters.GunZip","location":"http4k-core/org.http4k.filter/-response-filters/-gun-zip/index.html","searchKeys":["GunZip","object GunZip","org.http4k.filter.ResponseFilters.GunZip"]},{"name":"object Header : BiDiLensSpec<HttpMessage, String> ","description":"org.http4k.lens.Header","location":"http4k-core/org.http4k.lens/-header/index.html","searchKeys":["Header","object Header : BiDiLensSpec<HttpMessage, String> ","org.http4k.lens.Header"]},{"name":"object Hex","description":"org.http4k.util.Hex","location":"http4k-core/org.http4k.util/-hex/index.html","searchKeys":["Hex","object Hex","org.http4k.util.Hex"]},{"name":"object HmacSha256","description":"org.http4k.security.HmacSha256","location":"http4k-core/org.http4k.security/-hmac-sha256/index.html","searchKeys":["HmacSha256","object HmacSha256","org.http4k.security.HmacSha256"]},{"name":"object InitialiseRequestContext","description":"org.http4k.filter.ServerFilters.InitialiseRequestContext","location":"http4k-core/org.http4k.filter/-server-filters/-initialise-request-context/index.html","searchKeys":["InitialiseRequestContext","object InitialiseRequestContext","org.http4k.filter.ServerFilters.InitialiseRequestContext"]},{"name":"object Java8HttpClient","description":"org.http4k.client.Java8HttpClient","location":"http4k-core/org.http4k.client/-java8-http-client/index.html","searchKeys":["Java8HttpClient","object Java8HttpClient","org.http4k.client.Java8HttpClient"]},{"name":"object JavaHttpClient","description":"org.http4k.client.JavaHttpClient","location":"http4k-core/org.http4k.client/-java-http-client/index.html","searchKeys":["JavaHttpClient","object JavaHttpClient","org.http4k.client.JavaHttpClient"]},{"name":"object MaxAge","description":"org.http4k.filter.CachingFilters.CacheResponse.MaxAge","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-max-age/index.html","searchKeys":["MaxAge","object MaxAge","org.http4k.filter.CachingFilters.CacheResponse.MaxAge"]},{"name":"object NoCache","description":"org.http4k.filter.CachingFilters.CacheResponse.NoCache","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-no-cache/index.html","searchKeys":["NoCache","object NoCache","org.http4k.filter.CachingFilters.CacheResponse.NoCache"]},{"name":"object Path : BiDiPathLensSpec<String> ","description":"org.http4k.lens.Path","location":"http4k-core/org.http4k.lens/-path/index.html","searchKeys":["Path","object Path : BiDiPathLensSpec<String> ","org.http4k.lens.Path"]},{"name":"object PreCannedJavaHttpClients","description":"org.http4k.client.PreCannedJavaHttpClients","location":"http4k-core/org.http4k.client/-pre-canned-java-http-clients/index.html","searchKeys":["PreCannedJavaHttpClients","object PreCannedJavaHttpClients","org.http4k.client.PreCannedJavaHttpClients"]},{"name":"object PrintRequest","description":"org.http4k.filter.DebuggingFilters.PrintRequest","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-request/index.html","searchKeys":["PrintRequest","object PrintRequest","org.http4k.filter.DebuggingFilters.PrintRequest"]},{"name":"object PrintRequestAndResponse","description":"org.http4k.filter.DebuggingFilters.PrintRequestAndResponse","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-request-and-response/index.html","searchKeys":["PrintRequestAndResponse","object PrintRequestAndResponse","org.http4k.filter.DebuggingFilters.PrintRequestAndResponse"]},{"name":"object PrintResponse","description":"org.http4k.filter.DebuggingFilters.PrintResponse","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-response/index.html","searchKeys":["PrintResponse","object PrintResponse","org.http4k.filter.DebuggingFilters.PrintResponse"]},{"name":"object ProxyBasicAuth","description":"org.http4k.filter.ClientFilters.ProxyBasicAuth","location":"http4k-core/org.http4k.filter/-client-filters/-proxy-basic-auth/index.html","searchKeys":["ProxyBasicAuth","object ProxyBasicAuth","org.http4k.filter.ClientFilters.ProxyBasicAuth"]},{"name":"object ProxyHost","description":"org.http4k.filter.RequestFilters.ProxyHost","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-host/index.html","searchKeys":["ProxyHost","object ProxyHost","org.http4k.filter.RequestFilters.ProxyHost"]},{"name":"object Query : BiDiLensSpec<Request, String> ","description":"org.http4k.lens.Query","location":"http4k-core/org.http4k.lens/-query/index.html","searchKeys":["Query","object Query : BiDiLensSpec<Request, String> ","org.http4k.lens.Query"]},{"name":"object RecordTo","description":"org.http4k.filter.TrafficFilters.RecordTo","location":"http4k-core/org.http4k.filter/-traffic-filters/-record-to/index.html","searchKeys":["RecordTo","object RecordTo","org.http4k.filter.TrafficFilters.RecordTo"]},{"name":"object ReplaceResponseContentsWithStaticFile","description":"org.http4k.filter.ServerFilters.ReplaceResponseContentsWithStaticFile","location":"http4k-core/org.http4k.filter/-server-filters/-replace-response-contents-with-static-file/index.html","searchKeys":["ReplaceResponseContentsWithStaticFile","object ReplaceResponseContentsWithStaticFile","org.http4k.filter.ServerFilters.ReplaceResponseContentsWithStaticFile"]},{"name":"object ReplayFrom","description":"org.http4k.filter.TrafficFilters.ReplayFrom","location":"http4k-core/org.http4k.filter/-traffic-filters/-replay-from/index.html","searchKeys":["ReplayFrom","object ReplayFrom","org.http4k.filter.TrafficFilters.ReplayFrom"]},{"name":"object ReportHttpTransaction","description":"org.http4k.filter.ResponseFilters.ReportHttpTransaction","location":"http4k-core/org.http4k.filter/-response-filters/-report-http-transaction/index.html","searchKeys":["ReportHttpTransaction","object ReportHttpTransaction","org.http4k.filter.ResponseFilters.ReportHttpTransaction"]},{"name":"object ReportRouteLatency","description":"org.http4k.filter.ResponseFilters.ReportRouteLatency","location":"http4k-core/org.http4k.filter/-response-filters/-report-route-latency/index.html","searchKeys":["ReportRouteLatency","object ReportRouteLatency","org.http4k.filter.ResponseFilters.ReportRouteLatency"]},{"name":"object RequestContextKey","description":"org.http4k.lens.RequestContextKey","location":"http4k-core/org.http4k.lens/-request-context-key/index.html","searchKeys":["RequestContextKey","object RequestContextKey","org.http4k.lens.RequestContextKey"]},{"name":"object RequestFilters","description":"org.http4k.filter.RequestFilters","location":"http4k-core/org.http4k.filter/-request-filters/index.html","searchKeys":["RequestFilters","object RequestFilters","org.http4k.filter.RequestFilters"]},{"name":"object RequestTracing","description":"org.http4k.filter.ServerFilters.RequestTracing","location":"http4k-core/org.http4k.filter/-server-filters/-request-tracing/index.html","searchKeys":["RequestTracing","object RequestTracing","org.http4k.filter.ServerFilters.RequestTracing"]},{"name":"object Responder","description":"org.http4k.traffic.Responder","location":"http4k-core/org.http4k.traffic/-responder/index.html","searchKeys":["Responder","object Responder","org.http4k.traffic.Responder"]},{"name":"object ResponseFilters","description":"org.http4k.filter.ResponseFilters","location":"http4k-core/org.http4k.filter/-response-filters/index.html","searchKeys":["ResponseFilters","object ResponseFilters","org.http4k.filter.ResponseFilters"]},{"name":"object ServeCachedFrom","description":"org.http4k.filter.TrafficFilters.ServeCachedFrom","location":"http4k-core/org.http4k.filter/-traffic-filters/-serve-cached-from/index.html","searchKeys":["ServeCachedFrom","object ServeCachedFrom","org.http4k.filter.TrafficFilters.ServeCachedFrom"]},{"name":"object ServerFilters","description":"org.http4k.filter.ServerFilters","location":"http4k-core/org.http4k.filter/-server-filters/index.html","searchKeys":["ServerFilters","object ServerFilters","org.http4k.filter.ServerFilters"]},{"name":"object SetContentType","description":"org.http4k.filter.ClientFilters.SetContentType","location":"http4k-core/org.http4k.filter/-client-filters/-set-content-type/index.html","searchKeys":["SetContentType","object SetContentType","org.http4k.filter.ClientFilters.SetContentType"]},{"name":"object SetContentType","description":"org.http4k.filter.ServerFilters.SetContentType","location":"http4k-core/org.http4k.filter/-server-filters/-set-content-type/index.html","searchKeys":["SetContentType","object SetContentType","org.http4k.filter.ServerFilters.SetContentType"]},{"name":"object StringBiDiMappings","description":"org.http4k.lens.StringBiDiMappings","location":"http4k-core/org.http4k.lens/-string-bi-di-mappings/index.html","searchKeys":["StringBiDiMappings","object StringBiDiMappings","org.http4k.lens.StringBiDiMappings"]},{"name":"object Tap","description":"org.http4k.filter.RequestFilters.Tap","location":"http4k-core/org.http4k.filter/-request-filters/-tap/index.html","searchKeys":["Tap","object Tap","org.http4k.filter.RequestFilters.Tap"]},{"name":"object Tap","description":"org.http4k.filter.ResponseFilters.Tap","location":"http4k-core/org.http4k.filter/-response-filters/-tap/index.html","searchKeys":["Tap","object Tap","org.http4k.filter.ResponseFilters.Tap"]},{"name":"object TrafficFilters","description":"org.http4k.filter.TrafficFilters","location":"http4k-core/org.http4k.filter/-traffic-filters/index.html","searchKeys":["TrafficFilters","object TrafficFilters","org.http4k.filter.TrafficFilters"]},{"name":"object ValidateRequestTracingHeaders","description":"org.http4k.filter.ServerFilters.ValidateRequestTracingHeaders","location":"http4k-core/org.http4k.filter/-server-filters/-validate-request-tracing-headers/index.html","searchKeys":["ValidateRequestTracingHeaders","object ValidateRequestTracingHeaders","org.http4k.filter.ServerFilters.ValidateRequestTracingHeaders"]},{"name":"open class BiDiBodyLensSpec<OUT>(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>, set: LensSet<HttpMessage, OUT>) : BodyLensSpec<OUT> ","description":"org.http4k.lens.BiDiBodyLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-body-lens-spec/index.html","searchKeys":["BiDiBodyLensSpec","open class BiDiBodyLensSpec<OUT>(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>, set: LensSet<HttpMessage, OUT>) : BodyLensSpec<OUT> ","org.http4k.lens.BiDiBodyLensSpec"]},{"name":"open class BiDiLensSpec<IN : Any, OUT>(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>, set: LensSet<IN, OUT>) : LensSpec<IN, OUT> , BiDiLensBuilder<IN, OUT> ","description":"org.http4k.lens.BiDiLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/index.html","searchKeys":["BiDiLensSpec","open class BiDiLensSpec<IN : Any, OUT>(location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>, set: LensSet<IN, OUT>) : LensSpec<IN, OUT> , BiDiLensBuilder<IN, OUT> ","org.http4k.lens.BiDiLensSpec"]},{"name":"open class BiDiMapping<IN, OUT>(val clazz: Class<OUT>, val asOut: (IN) -> OUT, val asIn: (OUT) -> IN)","description":"org.http4k.lens.BiDiMapping","location":"http4k-core/org.http4k.lens/-bi-di-mapping/index.html","searchKeys":["BiDiMapping","open class BiDiMapping<IN, OUT>(val clazz: Class<OUT>, val asOut: (IN) -> OUT, val asIn: (OUT) -> IN)","org.http4k.lens.BiDiMapping"]},{"name":"open class BiDiPathLensSpec<OUT>(paramMeta: ParamMeta, get: LensGet<String, OUT>, set: LensSet<Request, OUT>) : PathLensSpec<OUT> ","description":"org.http4k.lens.BiDiPathLensSpec","location":"http4k-core/org.http4k.lens/-bi-di-path-lens-spec/index.html","searchKeys":["BiDiPathLensSpec","open class BiDiPathLensSpec<OUT>(paramMeta: ParamMeta, get: LensGet<String, OUT>, set: LensSet<Request, OUT>) : PathLensSpec<OUT> ","org.http4k.lens.BiDiPathLensSpec"]},{"name":"open class BodyLens<out FINAL>(val metas: List<Meta>, val contentType: ContentType, getLens: (HttpMessage) -> FINAL) : LensExtractor<HttpMessage, FINAL> ","description":"org.http4k.lens.BodyLens","location":"http4k-core/org.http4k.lens/-body-lens/index.html","searchKeys":["BodyLens","open class BodyLens<out FINAL>(val metas: List<Meta>, val contentType: ContentType, getLens: (HttpMessage) -> FINAL) : LensExtractor<HttpMessage, FINAL> ","org.http4k.lens.BodyLens"]},{"name":"open class BodyLensSpec<out OUT>(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>)","description":"org.http4k.lens.BodyLensSpec","location":"http4k-core/org.http4k.lens/-body-lens-spec/index.html","searchKeys":["BodyLensSpec","open class BodyLensSpec<out OUT>(metas: List<Meta>, contentType: ContentType, get: LensGet<HttpMessage, OUT>)","org.http4k.lens.BodyLensSpec"]},{"name":"open class CacheControlHeaderPart(val name: String, val value: Duration)","description":"org.http4k.filter.CacheControlHeaderPart","location":"http4k-core/org.http4k.filter/-cache-control-header-part/index.html","searchKeys":["CacheControlHeaderPart","open class CacheControlHeaderPart(val name: String, val value: Duration)","org.http4k.filter.CacheControlHeaderPart"]},{"name":"open class Lens<in IN : Any, out FINAL>(val meta: Meta, lensGet: (IN) -> FINAL) : LensExtractor<IN, FINAL> , Iterable<Meta> ","description":"org.http4k.lens.Lens","location":"http4k-core/org.http4k.lens/-lens/index.html","searchKeys":["Lens","open class Lens<in IN : Any, out FINAL>(val meta: Meta, lensGet: (IN) -> FINAL) : LensExtractor<IN, FINAL> , Iterable<Meta> ","org.http4k.lens.Lens"]},{"name":"open class LensSpec<IN : Any, OUT>(val location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>) : LensBuilder<IN, OUT> ","description":"org.http4k.lens.LensSpec","location":"http4k-core/org.http4k.lens/-lens-spec/index.html","searchKeys":["LensSpec","open class LensSpec<IN : Any, OUT>(val location: String, paramMeta: ParamMeta, get: LensGet<IN, OUT>) : LensBuilder<IN, OUT> ","org.http4k.lens.LensSpec"]},{"name":"open class PathLens<out FINAL>(meta: Meta, get: (String) -> FINAL) : Lens<Request, FINAL> ","description":"org.http4k.lens.PathLens","location":"http4k-core/org.http4k.lens/-path-lens/index.html","searchKeys":["PathLens","open class PathLens<out FINAL>(meta: Meta, get: (String) -> FINAL) : Lens<Request, FINAL> ","org.http4k.lens.PathLens"]},{"name":"open class PathLensSpec<out OUT>(paramMeta: ParamMeta, get: LensGet<String, OUT>)","description":"org.http4k.lens.PathLensSpec","location":"http4k-core/org.http4k.lens/-path-lens-spec/index.html","searchKeys":["PathLensSpec","open class PathLensSpec<out OUT>(paramMeta: ParamMeta, get: LensGet<String, OUT>)","org.http4k.lens.PathLensSpec"]},{"name":"open class UriValueFactory<DOMAIN : Value<Uri>>(fn: (Uri) -> DOMAIN, validation: Validation<Uri>? = null) : ValueFactory<DOMAIN, Uri> ","description":"org.http4k.core.UriValueFactory","location":"http4k-core/org.http4k.core/-uri-value-factory/index.html","searchKeys":["UriValueFactory","open class UriValueFactory<DOMAIN : Value<Uri>>(fn: (Uri) -> DOMAIN, validation: Validation<Uri>? = null) : ValueFactory<DOMAIN, Uri> ","org.http4k.core.UriValueFactory"]},{"name":"open fun <NEXT : IN> restrictFrom(): LensExtractor<NEXT, OUT>","description":"org.http4k.lens.LensExtractor.restrictFrom","location":"http4k-core/org.http4k.lens/-lens-extractor/restrict-from.html","searchKeys":["restrictFrom","open fun <NEXT : IN> restrictFrom(): LensExtractor<NEXT, OUT>","org.http4k.lens.LensExtractor.restrictFrom"]},{"name":"open fun <NEXT : OUT> restrictInto(): LensInjector<IN, NEXT>","description":"org.http4k.lens.LensInjector.restrictInto","location":"http4k-core/org.http4k.lens/-lens-injector/restrict-into.html","searchKeys":["restrictInto","open fun <NEXT : OUT> restrictInto(): LensInjector<IN, NEXT>","org.http4k.lens.LensInjector.restrictInto"]},{"name":"open fun <R : OUT> inject(value: IN, target: R): R","description":"org.http4k.lens.LensInjector.inject","location":"http4k-core/org.http4k.lens/-lens-injector/inject.html","searchKeys":["inject","open fun <R : OUT> inject(value: IN, target: R): R","org.http4k.lens.LensInjector.inject"]},{"name":"open fun block()","description":"org.http4k.server.Http4kServer.block","location":"http4k-core/org.http4k.server/-http4k-server/block.html","searchKeys":["block","open fun block()","org.http4k.server.Http4kServer.block"]},{"name":"open fun bodyString(): String","description":"org.http4k.core.HttpMessage.bodyString","location":"http4k-core/org.http4k.core/-http-message/body-string.html","searchKeys":["bodyString","open fun bodyString(): String","org.http4k.core.HttpMessage.bodyString"]},{"name":"open fun extract(target: IN): OUT","description":"org.http4k.lens.LensExtractor.extract","location":"http4k-core/org.http4k.lens/-lens-extractor/extract.html","searchKeys":["extract","open fun extract(target: IN): OUT","org.http4k.lens.LensExtractor.extract"]},{"name":"open fun header(name: String): String?","description":"org.http4k.core.HttpMessage.header","location":"http4k-core/org.http4k.core/-http-message/header.html","searchKeys":["header","open fun header(name: String): String?","org.http4k.core.HttpMessage.header"]},{"name":"open fun headerValues(name: String): List<String?>","description":"org.http4k.core.HttpMessage.headerValues","location":"http4k-core/org.http4k.core/-http-message/header-values.html","searchKeys":["headerValues","open fun headerValues(name: String): List<String?>","org.http4k.core.HttpMessage.headerValues"]},{"name":"open fun of(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): PathLens<OUT>","description":"org.http4k.lens.PathLensSpec.of","location":"http4k-core/org.http4k.lens/-path-lens-spec/of.html","searchKeys":["of","open fun of(name: String, description: String? = null, metadata: Map<String, Any> = emptyMap()): PathLens<OUT>","org.http4k.lens.PathLensSpec.of"]},{"name":"open fun toLens(): BodyLens<OUT>","description":"org.http4k.lens.BodyLensSpec.toLens","location":"http4k-core/org.http4k.lens/-body-lens-spec/to-lens.html","searchKeys":["toLens","open fun toLens(): BodyLens<OUT>","org.http4k.lens.BodyLensSpec.toLens"]},{"name":"open fun withBasePath(new: String): Router","description":"org.http4k.routing.Router.withBasePath","location":"http4k-core/org.http4k.routing/-router/with-base-path.html","searchKeys":["withBasePath","open fun withBasePath(new: String): Router","org.http4k.routing.Router.withBasePath"]},{"name":"open fun withFilter(new: Filter): Router","description":"org.http4k.routing.Router.withFilter","location":"http4k-core/org.http4k.routing/-router/with-filter.html","searchKeys":["withFilter","open fun withFilter(new: Filter): Router","org.http4k.routing.Router.withFilter"]},{"name":"open infix fun <R : OUT> of(value: IN): (R) -> R","description":"org.http4k.lens.LensInjector.of","location":"http4k-core/org.http4k.lens/-lens-injector/of.html","searchKeys":["of","open infix fun <R : OUT> of(value: IN): (R) -> R","org.http4k.lens.LensInjector.of"]},{"name":"open operator fun <R : IN> get(target: R): OUT","description":"org.http4k.lens.LensExtractor.get","location":"http4k-core/org.http4k.lens/-lens-extractor/get.html","searchKeys":["get","open operator fun <R : IN> get(target: R): OUT","org.http4k.lens.LensExtractor.get"]},{"name":"open operator fun <R : OUT> set(target: R, value: IN): R","description":"org.http4k.lens.LensInjector.set","location":"http4k-core/org.http4k.lens/-lens-injector/set.html","searchKeys":["set","open operator fun <R : OUT> set(target: R, value: IN): R","org.http4k.lens.LensInjector.set"]},{"name":"open operator override fun <R : HttpMessage> invoke(value: FINAL, target: R): R","description":"org.http4k.lens.BiDiBodyLens.invoke","location":"http4k-core/org.http4k.lens/-bi-di-body-lens/invoke.html","searchKeys":["invoke","open operator override fun <R : HttpMessage> invoke(value: FINAL, target: R): R","org.http4k.lens.BiDiBodyLens.invoke"]},{"name":"open operator override fun <R : IN> invoke(value: FINAL, target: R): R","description":"org.http4k.lens.BiDiLens.invoke","location":"http4k-core/org.http4k.lens/-bi-di-lens/invoke.html","searchKeys":["invoke","open operator override fun <R : IN> invoke(value: FINAL, target: R): R","org.http4k.lens.BiDiLens.invoke"]},{"name":"open operator override fun <R : Request> invoke(value: FINAL, target: R): R","description":"org.http4k.lens.BiDiPathLens.invoke","location":"http4k-core/org.http4k.lens/-bi-di-path-lens/invoke.html","searchKeys":["invoke","open operator override fun <R : Request> invoke(value: FINAL, target: R): R","org.http4k.lens.BiDiPathLens.invoke"]},{"name":"open operator override fun <R : Request> invoke(value: RequestContext, target: R): R","description":"org.http4k.core.RequestContexts.invoke","location":"http4k-core/org.http4k.core/-request-contexts/invoke.html","searchKeys":["invoke","open operator override fun <R : Request> invoke(value: RequestContext, target: R): R","org.http4k.core.RequestContexts.invoke"]},{"name":"open operator override fun compareTo(other: RouterMatch): Int","description":"org.http4k.routing.RouterMatch.compareTo","location":"http4k-core/org.http4k.routing/-router-match/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: RouterMatch): Int","org.http4k.routing.RouterMatch.compareTo"]},{"name":"open operator override fun compareTo(other: Uri): Int","description":"org.http4k.core.Uri.compareTo","location":"http4k-core/org.http4k.core/-uri/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Uri): Int","org.http4k.core.Uri.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.core.MemoryRequest.equals","location":"http4k-core/org.http4k.core/-memory-request/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.core.MemoryRequest.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.core.MemoryResponse.equals","location":"http4k-core/org.http4k.core/-memory-response/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.core.MemoryResponse.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.core.Status.equals","location":"http4k-core/org.http4k.core/-status/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.core.Status.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.core.StreamBody.equals","location":"http4k-core/org.http4k.core/-stream-body/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.core.StreamBody.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.events.HttpEvent.equals","location":"http4k-core/org.http4k.events/-http-event/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.events.HttpEvent.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.routing.RoutedRequest.equals","location":"http4k-core/org.http4k.routing/-routed-request/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.routing.RoutedRequest.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.http4k.routing.RoutedResponse.equals","location":"http4k-core/org.http4k.routing/-routed-response/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.http4k.routing.RoutedResponse.equals"]},{"name":"open operator override fun invoke(handler: HttpHandler): (Request) -> Response","description":"org.http4k.filter.FlashAttributesFilter.invoke","location":"http4k-core/org.http4k.filter/-flash-attributes-filter/invoke.html","searchKeys":["invoke","open operator override fun invoke(handler: HttpHandler): (Request) -> Response","org.http4k.filter.FlashAttributesFilter.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): (request: Request) -> Response","description":"org.http4k.filter.ServerFilters.GZipContentTypes.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-g-zip-content-types/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): (request: Request) -> Response","org.http4k.filter.ServerFilters.GZipContentTypes.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.filter.ClientFilters.FollowRedirects.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-follow-redirects/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.filter.ClientFilters.FollowRedirects.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.filter.ResponseFilters.EtagSupport.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-etag-support/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.filter.ResponseFilters.EtagSupport.invoke"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.filter.ResponseFilters.GZipContentTypes.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-g-zip-content-types/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.filter.ResponseFilters.GZipContentTypes.invoke"]},{"name":"open operator override fun invoke(origin: String): Boolean","description":"org.http4k.filter.AllowAllOriginPolicy.invoke","location":"http4k-core/org.http4k.filter/-allow-all-origin-policy/invoke.html","searchKeys":["invoke","open operator override fun invoke(origin: String): Boolean","org.http4k.filter.AllowAllOriginPolicy.invoke"]},{"name":"open operator override fun invoke(p1: Event)","description":"org.http4k.testing.RecordingEvents.invoke","location":"http4k-core/org.http4k.testing/-recording-events/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: Event)","org.http4k.testing.RecordingEvents.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.routing.RouterMatch.MatchingHandler.invoke","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.routing.RouterMatch.MatchingHandler.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.routing.StaticRoutingHttpHandler.invoke","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.routing.StaticRoutingHttpHandler.invoke"]},{"name":"open operator override fun invoke(stream: InputStream): Body","description":"org.http4k.core.BodyMode.Memory.invoke","location":"http4k-core/org.http4k.core/-body-mode/-memory/invoke.html","searchKeys":["invoke","open operator override fun invoke(stream: InputStream): Body","org.http4k.core.BodyMode.Memory.invoke"]},{"name":"open operator override fun invoke(stream: InputStream): Body","description":"org.http4k.core.BodyMode.Stream.invoke","location":"http4k-core/org.http4k.core/-body-mode/-stream/invoke.html","searchKeys":["invoke","open operator override fun invoke(stream: InputStream): Body","org.http4k.core.BodyMode.Stream.invoke"]},{"name":"open operator override fun invoke(target: HttpMessage): FINAL","description":"org.http4k.lens.BodyLens.invoke","location":"http4k-core/org.http4k.lens/-body-lens/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: HttpMessage): FINAL","org.http4k.lens.BodyLens.invoke"]},{"name":"open operator override fun invoke(target: IN): FINAL","description":"org.http4k.lens.Lens.invoke","location":"http4k-core/org.http4k.lens/-lens/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: IN): FINAL","org.http4k.lens.Lens.invoke"]},{"name":"open operator override fun invoke(target: Request): RequestContext","description":"org.http4k.core.RequestContexts.invoke","location":"http4k-core/org.http4k.core/-request-contexts/invoke.html","searchKeys":["invoke","open operator override fun invoke(target: Request): RequestContext","org.http4k.core.RequestContexts.invoke"]},{"name":"open operator override fun iterator(): Iterator<Meta>","description":"org.http4k.lens.Lens.iterator","location":"http4k-core/org.http4k.lens/-lens/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Meta>","org.http4k.lens.Lens.iterator"]},{"name":"open operator override fun iterator(): MutableIterator<Event>","description":"org.http4k.testing.RecordingEvents.iterator","location":"http4k-core/org.http4k.testing/-recording-events/iterator.html","searchKeys":["iterator","open operator override fun iterator(): MutableIterator<Event>","org.http4k.testing.RecordingEvents.iterator"]},{"name":"open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","description":"org.http4k.routing.RouterMatch.MatchedWithoutHandler.aggregatedBy","location":"http4k-core/org.http4k.routing/-router-match/-matched-without-handler/aggregated-by.html","searchKeys":["aggregatedBy","open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","org.http4k.routing.RouterMatch.MatchedWithoutHandler.aggregatedBy"]},{"name":"open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","description":"org.http4k.routing.RouterMatch.MatchingHandler.aggregatedBy","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/aggregated-by.html","searchKeys":["aggregatedBy","open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","org.http4k.routing.RouterMatch.MatchingHandler.aggregatedBy"]},{"name":"open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","description":"org.http4k.routing.RouterMatch.MethodNotMatched.aggregatedBy","location":"http4k-core/org.http4k.routing/-router-match/-method-not-matched/aggregated-by.html","searchKeys":["aggregatedBy","open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","org.http4k.routing.RouterMatch.MethodNotMatched.aggregatedBy"]},{"name":"open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","description":"org.http4k.routing.RouterMatch.Unmatched.aggregatedBy","location":"http4k-core/org.http4k.routing/-router-match/-unmatched/aggregated-by.html","searchKeys":["aggregatedBy","open override fun aggregatedBy(description: RouterDescription, fromMatches: List<RouterMatch>): RouterMatch","org.http4k.routing.RouterMatch.Unmatched.aggregatedBy"]},{"name":"open override fun body(body: Body): MemoryRequest","description":"org.http4k.core.MemoryRequest.body","location":"http4k-core/org.http4k.core/-memory-request/body.html","searchKeys":["body","open override fun body(body: Body): MemoryRequest","org.http4k.core.MemoryRequest.body"]},{"name":"open override fun body(body: Body): MemoryResponse","description":"org.http4k.core.MemoryResponse.body","location":"http4k-core/org.http4k.core/-memory-response/body.html","searchKeys":["body","open override fun body(body: Body): MemoryResponse","org.http4k.core.MemoryResponse.body"]},{"name":"open override fun body(body: Body): Request","description":"org.http4k.routing.RoutedRequest.body","location":"http4k-core/org.http4k.routing/-routed-request/body.html","searchKeys":["body","open override fun body(body: Body): Request","org.http4k.routing.RoutedRequest.body"]},{"name":"open override fun body(body: Body): Response","description":"org.http4k.routing.RoutedResponse.body","location":"http4k-core/org.http4k.routing/-routed-response/body.html","searchKeys":["body","open override fun body(body: Body): Response","org.http4k.routing.RoutedResponse.body"]},{"name":"open override fun body(body: InputStream, length: Long?): MemoryRequest","description":"org.http4k.core.MemoryRequest.body","location":"http4k-core/org.http4k.core/-memory-request/body.html","searchKeys":["body","open override fun body(body: InputStream, length: Long?): MemoryRequest","org.http4k.core.MemoryRequest.body"]},{"name":"open override fun body(body: InputStream, length: Long?): MemoryResponse","description":"org.http4k.core.MemoryResponse.body","location":"http4k-core/org.http4k.core/-memory-response/body.html","searchKeys":["body","open override fun body(body: InputStream, length: Long?): MemoryResponse","org.http4k.core.MemoryResponse.body"]},{"name":"open override fun body(body: InputStream, length: Long?): Request","description":"org.http4k.routing.RoutedRequest.body","location":"http4k-core/org.http4k.routing/-routed-request/body.html","searchKeys":["body","open override fun body(body: InputStream, length: Long?): Request","org.http4k.routing.RoutedRequest.body"]},{"name":"open override fun body(body: InputStream, length: Long?): Response","description":"org.http4k.routing.RoutedResponse.body","location":"http4k-core/org.http4k.routing/-routed-response/body.html","searchKeys":["body","open override fun body(body: InputStream, length: Long?): Response","org.http4k.routing.RoutedResponse.body"]},{"name":"open override fun body(body: String): MemoryRequest","description":"org.http4k.core.MemoryRequest.body","location":"http4k-core/org.http4k.core/-memory-request/body.html","searchKeys":["body","open override fun body(body: String): MemoryRequest","org.http4k.core.MemoryRequest.body"]},{"name":"open override fun body(body: String): MemoryResponse","description":"org.http4k.core.MemoryResponse.body","location":"http4k-core/org.http4k.core/-memory-response/body.html","searchKeys":["body","open override fun body(body: String): MemoryResponse","org.http4k.core.MemoryResponse.body"]},{"name":"open override fun body(body: String): Request","description":"org.http4k.routing.RoutedRequest.body","location":"http4k-core/org.http4k.routing/-routed-request/body.html","searchKeys":["body","open override fun body(body: String): Request","org.http4k.routing.RoutedRequest.body"]},{"name":"open override fun body(body: String): Response","description":"org.http4k.routing.RoutedResponse.body","location":"http4k-core/org.http4k.routing/-routed-response/body.html","searchKeys":["body","open override fun body(body: String): Response","org.http4k.routing.RoutedResponse.body"]},{"name":"open override fun close()","description":"org.http4k.client.AsyncHttpHandler.close","location":"http4k-core/org.http4k.client/-async-http-handler/close.html","searchKeys":["close","open override fun close()","org.http4k.client.AsyncHttpHandler.close"]},{"name":"open override fun close()","description":"org.http4k.core.HttpMessage.close","location":"http4k-core/org.http4k.core/-http-message/close.html","searchKeys":["close","open override fun close()","org.http4k.core.HttpMessage.close"]},{"name":"open override fun close()","description":"org.http4k.core.MemoryBody.close","location":"http4k-core/org.http4k.core/-memory-body/close.html","searchKeys":["close","open override fun close()","org.http4k.core.MemoryBody.close"]},{"name":"open override fun close()","description":"org.http4k.core.StreamBody.close","location":"http4k-core/org.http4k.core/-stream-body/close.html","searchKeys":["close","open override fun close()","org.http4k.core.StreamBody.close"]},{"name":"open override fun close()","description":"org.http4k.server.Http4kServer.close","location":"http4k-core/org.http4k.server/-http4k-server/close.html","searchKeys":["close","open override fun close()","org.http4k.server.Http4kServer.close"]},{"name":"open override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensSpec.defaulted","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/defaulted.html","searchKeys":["defaulted","open override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensSpec.defaulted"]},{"name":"open override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","description":"org.http4k.lens.LensSpec.defaulted","location":"http4k-core/org.http4k.lens/-lens-spec/defaulted.html","searchKeys":["defaulted","open override fun defaulted(name: String, default: LensExtractor<IN, OUT>, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","org.http4k.lens.LensSpec.defaulted"]},{"name":"open override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensSpec.defaulted","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/defaulted.html","searchKeys":["defaulted","open override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensSpec.defaulted"]},{"name":"open override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","description":"org.http4k.lens.LensSpec.defaulted","location":"http4k-core/org.http4k.lens/-lens-spec/defaulted.html","searchKeys":["defaulted","open override fun defaulted(name: String, default: OUT, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","org.http4k.lens.LensSpec.defaulted"]},{"name":"open override fun handle(exchange: HttpExchange)","description":"org.http4k.server.HttpExchangeHandler.handle","location":"http4k-core/org.http4k.server/-http-exchange-handler/handle.html","searchKeys":["handle","open override fun handle(exchange: HttpExchange)","org.http4k.server.HttpExchangeHandler.handle"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.core.Status.hashCode","location":"http4k-core/org.http4k.core/-status/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.core.Status.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.core.StreamBody.hashCode","location":"http4k-core/org.http4k.core/-stream-body/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.core.StreamBody.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.events.HttpEvent.hashCode","location":"http4k-core/org.http4k.events/-http-event/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.events.HttpEvent.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.routing.RoutedRequest.hashCode","location":"http4k-core/org.http4k.routing/-routed-request/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.routing.RoutedRequest.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.http4k.routing.RoutedResponse.hashCode","location":"http4k-core/org.http4k.routing/-routed-response/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.http4k.routing.RoutedResponse.hashCode"]},{"name":"open override fun header(name: String, value: String?): MemoryRequest","description":"org.http4k.core.MemoryRequest.header","location":"http4k-core/org.http4k.core/-memory-request/header.html","searchKeys":["header","open override fun header(name: String, value: String?): MemoryRequest","org.http4k.core.MemoryRequest.header"]},{"name":"open override fun header(name: String, value: String?): MemoryResponse","description":"org.http4k.core.MemoryResponse.header","location":"http4k-core/org.http4k.core/-memory-response/header.html","searchKeys":["header","open override fun header(name: String, value: String?): MemoryResponse","org.http4k.core.MemoryResponse.header"]},{"name":"open override fun header(name: String, value: String?): Request","description":"org.http4k.routing.RoutedRequest.header","location":"http4k-core/org.http4k.routing/-routed-request/header.html","searchKeys":["header","open override fun header(name: String, value: String?): Request","org.http4k.routing.RoutedRequest.header"]},{"name":"open override fun header(name: String, value: String?): Response","description":"org.http4k.routing.RoutedResponse.header","location":"http4k-core/org.http4k.routing/-routed-response/header.html","searchKeys":["header","open override fun header(name: String, value: String?): Response","org.http4k.routing.RoutedResponse.header"]},{"name":"open override fun headers(headers: Headers): MemoryRequest","description":"org.http4k.core.MemoryRequest.headers","location":"http4k-core/org.http4k.core/-memory-request/headers.html","searchKeys":["headers","open override fun headers(headers: Headers): MemoryRequest","org.http4k.core.MemoryRequest.headers"]},{"name":"open override fun headers(headers: Headers): MemoryResponse","description":"org.http4k.core.MemoryResponse.headers","location":"http4k-core/org.http4k.core/-memory-response/headers.html","searchKeys":["headers","open override fun headers(headers: Headers): MemoryResponse","org.http4k.core.MemoryResponse.headers"]},{"name":"open override fun headers(headers: Headers): Request","description":"org.http4k.routing.RoutedRequest.headers","location":"http4k-core/org.http4k.routing/-routed-request/headers.html","searchKeys":["headers","open override fun headers(headers: Headers): Request","org.http4k.routing.RoutedRequest.headers"]},{"name":"open override fun headers(headers: Headers): Response","description":"org.http4k.routing.RoutedResponse.headers","location":"http4k-core/org.http4k.routing/-routed-response/headers.html","searchKeys":["headers","open override fun headers(headers: Headers): Response","org.http4k.routing.RoutedResponse.headers"]},{"name":"open override fun match(request: Request): RouterMatch","description":"org.http4k.routing.StaticRoutingHttpHandler.match","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/match.html","searchKeys":["match","open override fun match(request: Request): RouterMatch","org.http4k.routing.StaticRoutingHttpHandler.match"]},{"name":"open override fun method(method: Method): Request","description":"org.http4k.core.MemoryRequest.method","location":"http4k-core/org.http4k.core/-memory-request/method.html","searchKeys":["method","open override fun method(method: Method): Request","org.http4k.core.MemoryRequest.method"]},{"name":"open override fun method(method: Method): Request","description":"org.http4k.routing.RoutedRequest.method","location":"http4k-core/org.http4k.routing/-routed-request/method.html","searchKeys":["method","open override fun method(method: Method): Request","org.http4k.routing.RoutedRequest.method"]},{"name":"open override fun of(name: String, description: String?, metadata: Map<String, Any>): BiDiPathLens<OUT>","description":"org.http4k.lens.BiDiPathLensSpec.of","location":"http4k-core/org.http4k.lens/-bi-di-path-lens-spec/of.html","searchKeys":["of","open override fun of(name: String, description: String?, metadata: Map<String, Any>): BiDiPathLens<OUT>","org.http4k.lens.BiDiPathLensSpec.of"]},{"name":"open override fun optional(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT?>","description":"org.http4k.lens.BiDiLensSpec.optional","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/optional.html","searchKeys":["optional","open override fun optional(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT?>","org.http4k.lens.BiDiLensSpec.optional"]},{"name":"open override fun optional(name: String, description: String?, metadata: Map<String, Any>): Lens<IN, OUT?>","description":"org.http4k.lens.LensSpec.optional","location":"http4k-core/org.http4k.lens/-lens-spec/optional.html","searchKeys":["optional","open override fun optional(name: String, description: String?, metadata: Map<String, Any>): Lens<IN, OUT?>","org.http4k.lens.LensSpec.optional"]},{"name":"open override fun queries(name: String): List<String?>","description":"org.http4k.core.MemoryRequest.queries","location":"http4k-core/org.http4k.core/-memory-request/queries.html","searchKeys":["queries","open override fun queries(name: String): List<String?>","org.http4k.core.MemoryRequest.queries"]},{"name":"open override fun query(name: String): String?","description":"org.http4k.core.MemoryRequest.query","location":"http4k-core/org.http4k.core/-memory-request/query.html","searchKeys":["query","open override fun query(name: String): String?","org.http4k.core.MemoryRequest.query"]},{"name":"open override fun query(name: String, value: String?): MemoryRequest","description":"org.http4k.core.MemoryRequest.query","location":"http4k-core/org.http4k.core/-memory-request/query.html","searchKeys":["query","open override fun query(name: String, value: String?): MemoryRequest","org.http4k.core.MemoryRequest.query"]},{"name":"open override fun query(name: String, value: String?): Request","description":"org.http4k.routing.RoutedRequest.query","location":"http4k-core/org.http4k.routing/-routed-request/query.html","searchKeys":["query","open override fun query(name: String, value: String?): Request","org.http4k.routing.RoutedRequest.query"]},{"name":"open override fun remove(name: String)","description":"org.http4k.filter.cookie.BasicCookieStorage.remove","location":"http4k-core/org.http4k.filter.cookie/-basic-cookie-storage/remove.html","searchKeys":["remove","open override fun remove(name: String)","org.http4k.filter.cookie.BasicCookieStorage.remove"]},{"name":"open override fun remove(value: RequestContext): RequestContext?","description":"org.http4k.core.RequestContexts.remove","location":"http4k-core/org.http4k.core/-request-contexts/remove.html","searchKeys":["remove","open override fun remove(value: RequestContext): RequestContext?","org.http4k.core.RequestContexts.remove"]},{"name":"open override fun removeHeader(name: String): MemoryRequest","description":"org.http4k.core.MemoryRequest.removeHeader","location":"http4k-core/org.http4k.core/-memory-request/remove-header.html","searchKeys":["removeHeader","open override fun removeHeader(name: String): MemoryRequest","org.http4k.core.MemoryRequest.removeHeader"]},{"name":"open override fun removeHeader(name: String): MemoryResponse","description":"org.http4k.core.MemoryResponse.removeHeader","location":"http4k-core/org.http4k.core/-memory-response/remove-header.html","searchKeys":["removeHeader","open override fun removeHeader(name: String): MemoryResponse","org.http4k.core.MemoryResponse.removeHeader"]},{"name":"open override fun removeHeader(name: String): Request","description":"org.http4k.routing.RoutedRequest.removeHeader","location":"http4k-core/org.http4k.routing/-routed-request/remove-header.html","searchKeys":["removeHeader","open override fun removeHeader(name: String): Request","org.http4k.routing.RoutedRequest.removeHeader"]},{"name":"open override fun removeHeader(name: String): Response","description":"org.http4k.routing.RoutedResponse.removeHeader","location":"http4k-core/org.http4k.routing/-routed-response/remove-header.html","searchKeys":["removeHeader","open override fun removeHeader(name: String): Response","org.http4k.routing.RoutedResponse.removeHeader"]},{"name":"open override fun removeHeaders(prefix: String): MemoryRequest","description":"org.http4k.core.MemoryRequest.removeHeaders","location":"http4k-core/org.http4k.core/-memory-request/remove-headers.html","searchKeys":["removeHeaders","open override fun removeHeaders(prefix: String): MemoryRequest","org.http4k.core.MemoryRequest.removeHeaders"]},{"name":"open override fun removeHeaders(prefix: String): MemoryResponse","description":"org.http4k.core.MemoryResponse.removeHeaders","location":"http4k-core/org.http4k.core/-memory-response/remove-headers.html","searchKeys":["removeHeaders","open override fun removeHeaders(prefix: String): MemoryResponse","org.http4k.core.MemoryResponse.removeHeaders"]},{"name":"open override fun removeHeaders(prefix: String): Request","description":"org.http4k.routing.RoutedRequest.removeHeaders","location":"http4k-core/org.http4k.routing/-routed-request/remove-headers.html","searchKeys":["removeHeaders","open override fun removeHeaders(prefix: String): Request","org.http4k.routing.RoutedRequest.removeHeaders"]},{"name":"open override fun removeHeaders(prefix: String): Response","description":"org.http4k.routing.RoutedResponse.removeHeaders","location":"http4k-core/org.http4k.routing/-routed-response/remove-headers.html","searchKeys":["removeHeaders","open override fun removeHeaders(prefix: String): Response","org.http4k.routing.RoutedResponse.removeHeaders"]},{"name":"open override fun removeQueries(prefix: String): MemoryRequest","description":"org.http4k.core.MemoryRequest.removeQueries","location":"http4k-core/org.http4k.core/-memory-request/remove-queries.html","searchKeys":["removeQueries","open override fun removeQueries(prefix: String): MemoryRequest","org.http4k.core.MemoryRequest.removeQueries"]},{"name":"open override fun removeQueries(prefix: String): Request","description":"org.http4k.routing.RoutedRequest.removeQueries","location":"http4k-core/org.http4k.routing/-routed-request/remove-queries.html","searchKeys":["removeQueries","open override fun removeQueries(prefix: String): Request","org.http4k.routing.RoutedRequest.removeQueries"]},{"name":"open override fun removeQuery(name: String): MemoryRequest","description":"org.http4k.core.MemoryRequest.removeQuery","location":"http4k-core/org.http4k.core/-memory-request/remove-query.html","searchKeys":["removeQuery","open override fun removeQuery(name: String): MemoryRequest","org.http4k.core.MemoryRequest.removeQuery"]},{"name":"open override fun removeQuery(name: String): Request","description":"org.http4k.routing.RoutedRequest.removeQuery","location":"http4k-core/org.http4k.routing/-routed-request/remove-query.html","searchKeys":["removeQuery","open override fun removeQuery(name: String): Request","org.http4k.routing.RoutedRequest.removeQuery"]},{"name":"open override fun replaceHeader(name: String, value: String?): MemoryRequest","description":"org.http4k.core.MemoryRequest.replaceHeader","location":"http4k-core/org.http4k.core/-memory-request/replace-header.html","searchKeys":["replaceHeader","open override fun replaceHeader(name: String, value: String?): MemoryRequest","org.http4k.core.MemoryRequest.replaceHeader"]},{"name":"open override fun replaceHeader(name: String, value: String?): MemoryResponse","description":"org.http4k.core.MemoryResponse.replaceHeader","location":"http4k-core/org.http4k.core/-memory-response/replace-header.html","searchKeys":["replaceHeader","open override fun replaceHeader(name: String, value: String?): MemoryResponse","org.http4k.core.MemoryResponse.replaceHeader"]},{"name":"open override fun replaceHeader(name: String, value: String?): Request","description":"org.http4k.routing.RoutedRequest.replaceHeader","location":"http4k-core/org.http4k.routing/-routed-request/replace-header.html","searchKeys":["replaceHeader","open override fun replaceHeader(name: String, value: String?): Request","org.http4k.routing.RoutedRequest.replaceHeader"]},{"name":"open override fun replaceHeader(name: String, value: String?): Response","description":"org.http4k.routing.RoutedResponse.replaceHeader","location":"http4k-core/org.http4k.routing/-routed-response/replace-header.html","searchKeys":["replaceHeader","open override fun replaceHeader(name: String, value: String?): Response","org.http4k.routing.RoutedResponse.replaceHeader"]},{"name":"open override fun replaceHeaders(source: Headers): MemoryRequest","description":"org.http4k.core.MemoryRequest.replaceHeaders","location":"http4k-core/org.http4k.core/-memory-request/replace-headers.html","searchKeys":["replaceHeaders","open override fun replaceHeaders(source: Headers): MemoryRequest","org.http4k.core.MemoryRequest.replaceHeaders"]},{"name":"open override fun replaceHeaders(source: Headers): MemoryResponse","description":"org.http4k.core.MemoryResponse.replaceHeaders","location":"http4k-core/org.http4k.core/-memory-response/replace-headers.html","searchKeys":["replaceHeaders","open override fun replaceHeaders(source: Headers): MemoryResponse","org.http4k.core.MemoryResponse.replaceHeaders"]},{"name":"open override fun replaceHeaders(source: Headers): Request","description":"org.http4k.routing.RoutedRequest.replaceHeaders","location":"http4k-core/org.http4k.routing/-routed-request/replace-headers.html","searchKeys":["replaceHeaders","open override fun replaceHeaders(source: Headers): Request","org.http4k.routing.RoutedRequest.replaceHeaders"]},{"name":"open override fun replaceHeaders(source: Headers): Response","description":"org.http4k.routing.RoutedResponse.replaceHeaders","location":"http4k-core/org.http4k.routing/-routed-response/replace-headers.html","searchKeys":["replaceHeaders","open override fun replaceHeaders(source: Headers): Response","org.http4k.routing.RoutedResponse.replaceHeaders"]},{"name":"open override fun required(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","description":"org.http4k.lens.BiDiLensSpec.required","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/required.html","searchKeys":["required","open override fun required(name: String, description: String?, metadata: Map<String, Any>): BiDiLens<IN, OUT>","org.http4k.lens.BiDiLensSpec.required"]},{"name":"open override fun required(name: String, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","description":"org.http4k.lens.LensSpec.required","location":"http4k-core/org.http4k.lens/-lens-spec/required.html","searchKeys":["required","open override fun required(name: String, description: String?, metadata: Map<String, Any>): Lens<IN, OUT>","org.http4k.lens.LensSpec.required"]},{"name":"open override fun retrieve(): List<LocalCookie>","description":"org.http4k.filter.cookie.BasicCookieStorage.retrieve","location":"http4k-core/org.http4k.filter.cookie/-basic-cookie-storage/retrieve.html","searchKeys":["retrieve","open override fun retrieve(): List<LocalCookie>","org.http4k.filter.cookie.BasicCookieStorage.retrieve"]},{"name":"open override fun source(source: RequestSource): MemoryRequest","description":"org.http4k.core.MemoryRequest.source","location":"http4k-core/org.http4k.core/-memory-request/source.html","searchKeys":["source","open override fun source(source: RequestSource): MemoryRequest","org.http4k.core.MemoryRequest.source"]},{"name":"open override fun source(source: RequestSource): Request","description":"org.http4k.routing.RoutedRequest.source","location":"http4k-core/org.http4k.routing/-routed-request/source.html","searchKeys":["source","open override fun source(source: RequestSource): Request","org.http4k.routing.RoutedRequest.source"]},{"name":"open override fun status(new: Status): MemoryResponse","description":"org.http4k.core.MemoryResponse.status","location":"http4k-core/org.http4k.core/-memory-response/status.html","searchKeys":["status","open override fun status(new: Status): MemoryResponse","org.http4k.core.MemoryResponse.status"]},{"name":"open override fun status(new: Status): Response","description":"org.http4k.routing.RoutedResponse.status","location":"http4k-core/org.http4k.routing/-routed-response/status.html","searchKeys":["status","open override fun status(new: Status): Response","org.http4k.routing.RoutedResponse.status"]},{"name":"open override fun store(cookies: List<LocalCookie>)","description":"org.http4k.filter.cookie.BasicCookieStorage.store","location":"http4k-core/org.http4k.filter.cookie/-basic-cookie-storage/store.html","searchKeys":["store","open override fun store(cookies: List<LocalCookie>)","org.http4k.filter.cookie.BasicCookieStorage.store"]},{"name":"open override fun toLens(): BiDiBodyLens<OUT>","description":"org.http4k.lens.BiDiBodyLensSpec.toLens","location":"http4k-core/org.http4k.lens/-bi-di-body-lens-spec/to-lens.html","searchKeys":["toLens","open override fun toLens(): BiDiBodyLens<OUT>","org.http4k.lens.BiDiBodyLensSpec.toLens"]},{"name":"open override fun toMessage(): String","description":"org.http4k.core.Request.toMessage","location":"http4k-core/org.http4k.core/-request/to-message.html","searchKeys":["toMessage","open override fun toMessage(): String","org.http4k.core.Request.toMessage"]},{"name":"open override fun toMessage(): String","description":"org.http4k.core.Response.toMessage","location":"http4k-core/org.http4k.core/-response/to-message.html","searchKeys":["toMessage","open override fun toMessage(): String","org.http4k.core.Response.toMessage"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.SunHttp.toServer","location":"http4k-core/org.http4k.server/-sun-http/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.SunHttp.toServer"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.SunHttpLoom.toServer","location":"http4k-core/org.http4k.server/-sun-http-loom/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.SunHttpLoom.toServer"]},{"name":"open override fun toString(): String","description":"org.http4k.core.MemoryBody.toString","location":"http4k-core/org.http4k.core/-memory-body/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.MemoryBody.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.MemoryRequest.toString","location":"http4k-core/org.http4k.core/-memory-request/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.MemoryRequest.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.MemoryResponse.toString","location":"http4k-core/org.http4k.core/-memory-response/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.MemoryResponse.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.Status.toString","location":"http4k-core/org.http4k.core/-status/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.Status.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.StreamBody.toString","location":"http4k-core/org.http4k.core/-stream-body/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.StreamBody.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.Uri.toString","location":"http4k-core/org.http4k.core/-uri/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.Uri.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.UriTemplate.toString","location":"http4k-core/org.http4k.core/-uri-template/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.UriTemplate.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.core.cookie.Cookie.toString","location":"http4k-core/org.http4k.core.cookie/-cookie/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.core.cookie.Cookie.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.events.EventCategory.toString","location":"http4k-core/org.http4k.events/-event-category/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.events.EventCategory.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.events.HttpEvent.Incoming.toString","location":"http4k-core/org.http4k.events/-http-event/-incoming/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.events.HttpEvent.Incoming.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.events.HttpEvent.Outgoing.toString","location":"http4k-core/org.http4k.events/-http-event/-outgoing/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.events.HttpEvent.Outgoing.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.Invalid.toString","location":"http4k-core/org.http4k.lens/-invalid/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.Invalid.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.Lens.toString","location":"http4k-core/org.http4k.lens/-lens/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.Lens.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.Missing.toString","location":"http4k-core/org.http4k.lens/-missing/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.Missing.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.PathLens.toString","location":"http4k-core/org.http4k.lens/-path-lens/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.PathLens.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.lens.Unsupported.toString","location":"http4k-core/org.http4k.lens/-unsupported/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.lens.Unsupported.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.routing.RoutedRequest.toString","location":"http4k-core/org.http4k.routing/-routed-request/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.routing.RoutedRequest.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.routing.RoutedResponse.toString","location":"http4k-core/org.http4k.routing/-routed-response/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.routing.RoutedResponse.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.routing.RouterDescription.toString","location":"http4k-core/org.http4k.routing/-router-description/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.routing.RouterDescription.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.routing.StaticRoutingHttpHandler.toString","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.routing.StaticRoutingHttpHandler.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.testing.RecordingEvents.toString","location":"http4k-core/org.http4k.testing/-recording-events/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.testing.RecordingEvents.toString"]},{"name":"open override fun uri(uri: Uri): MemoryRequest","description":"org.http4k.core.MemoryRequest.uri","location":"http4k-core/org.http4k.core/-memory-request/uri.html","searchKeys":["uri","open override fun uri(uri: Uri): MemoryRequest","org.http4k.core.MemoryRequest.uri"]},{"name":"open override fun uri(uri: Uri): Request","description":"org.http4k.routing.RoutedRequest.uri","location":"http4k-core/org.http4k.routing/-routed-request/uri.html","searchKeys":["uri","open override fun uri(uri: Uri): Request","org.http4k.routing.RoutedRequest.uri"]},{"name":"open override fun withBasePath(new: String): RoutingHttpHandler","description":"org.http4k.routing.StaticRoutingHttpHandler.withBasePath","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/with-base-path.html","searchKeys":["withBasePath","open override fun withBasePath(new: String): RoutingHttpHandler","org.http4k.routing.StaticRoutingHttpHandler.withBasePath"]},{"name":"open override fun withFilter(new: Filter): RoutingHttpHandler","description":"org.http4k.routing.StaticRoutingHttpHandler.withFilter","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/with-filter.html","searchKeys":["withFilter","open override fun withFilter(new: Filter): RoutingHttpHandler","org.http4k.routing.StaticRoutingHttpHandler.withFilter"]},{"name":"open override val body: Body","description":"org.http4k.core.MemoryRequest.body","location":"http4k-core/org.http4k.core/-memory-request/body.html","searchKeys":["body","open override val body: Body","org.http4k.core.MemoryRequest.body"]},{"name":"open override val body: Body","description":"org.http4k.core.MemoryResponse.body","location":"http4k-core/org.http4k.core/-memory-response/body.html","searchKeys":["body","open override val body: Body","org.http4k.core.MemoryResponse.body"]},{"name":"open override val cause: Exception? = null","description":"org.http4k.lens.LensFailure.cause","location":"http4k-core/org.http4k.lens/-lens-failure/cause.html","searchKeys":["cause","open override val cause: Exception? = null","org.http4k.lens.LensFailure.cause"]},{"name":"open override val description: RouterDescription","description":"org.http4k.routing.RouterMatch.MatchedWithoutHandler.description","location":"http4k-core/org.http4k.routing/-router-match/-matched-without-handler/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.routing.RouterMatch.MatchedWithoutHandler.description"]},{"name":"open override val description: RouterDescription","description":"org.http4k.routing.RouterMatch.MatchingHandler.description","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.routing.RouterMatch.MatchingHandler.description"]},{"name":"open override val description: RouterDescription","description":"org.http4k.routing.RouterMatch.MethodNotMatched.description","location":"http4k-core/org.http4k.routing/-router-match/-method-not-matched/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.routing.RouterMatch.MethodNotMatched.description"]},{"name":"open override val description: RouterDescription","description":"org.http4k.routing.RouterMatch.Unmatched.description","location":"http4k-core/org.http4k.routing/-router-match/-unmatched/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.routing.RouterMatch.Unmatched.description"]},{"name":"open override val description: RouterDescription","description":"org.http4k.routing.StaticRoutingHttpHandler.description","location":"http4k-core/org.http4k.routing/-static-routing-http-handler/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.routing.StaticRoutingHttpHandler.description"]},{"name":"open override val headers: Headers","description":"org.http4k.core.MemoryRequest.headers","location":"http4k-core/org.http4k.core/-memory-request/headers.html","searchKeys":["headers","open override val headers: Headers","org.http4k.core.MemoryRequest.headers"]},{"name":"open override val headers: Headers","description":"org.http4k.core.MemoryResponse.headers","location":"http4k-core/org.http4k.core/-memory-response/headers.html","searchKeys":["headers","open override val headers: Headers","org.http4k.core.MemoryResponse.headers"]},{"name":"open override val length: Long","description":"org.http4k.core.MemoryBody.length","location":"http4k-core/org.http4k.core/-memory-body/length.html","searchKeys":["length","open override val length: Long","org.http4k.core.MemoryBody.length"]},{"name":"open override val length: Long? = null","description":"org.http4k.core.StreamBody.length","location":"http4k-core/org.http4k.core/-stream-body/length.html","searchKeys":["length","open override val length: Long? = null","org.http4k.core.StreamBody.length"]},{"name":"open override val meta: Meta","description":"org.http4k.lens.Invalid.meta","location":"http4k-core/org.http4k.lens/-invalid/meta.html","searchKeys":["meta","open override val meta: Meta","org.http4k.lens.Invalid.meta"]},{"name":"open override val meta: Meta","description":"org.http4k.lens.Missing.meta","location":"http4k-core/org.http4k.lens/-missing/meta.html","searchKeys":["meta","open override val meta: Meta","org.http4k.lens.Missing.meta"]},{"name":"open override val meta: Meta","description":"org.http4k.lens.Unsupported.meta","location":"http4k-core/org.http4k.lens/-unsupported/meta.html","searchKeys":["meta","open override val meta: Meta","org.http4k.lens.Unsupported.meta"]},{"name":"open override val method: Method","description":"org.http4k.core.MemoryRequest.method","location":"http4k-core/org.http4k.core/-memory-request/method.html","searchKeys":["method","open override val method: Method","org.http4k.core.MemoryRequest.method"]},{"name":"open override val multi: BiDiMultiLensSpec<IN, OUT>","description":"org.http4k.lens.BiDiLensSpec.multi","location":"http4k-core/org.http4k.lens/-bi-di-lens-spec/multi.html","searchKeys":["multi","open override val multi: BiDiMultiLensSpec<IN, OUT>","org.http4k.lens.BiDiLensSpec.multi"]},{"name":"open override val payload: ByteBuffer","description":"org.http4k.core.MemoryBody.payload","location":"http4k-core/org.http4k.core/-memory-body/payload.html","searchKeys":["payload","open override val payload: ByteBuffer","org.http4k.core.MemoryBody.payload"]},{"name":"open override val payload: ByteBuffer","description":"org.http4k.core.StreamBody.payload","location":"http4k-core/org.http4k.core/-stream-body/payload.html","searchKeys":["payload","open override val payload: ByteBuffer","org.http4k.core.StreamBody.payload"]},{"name":"open override val source: RequestSource? = null","description":"org.http4k.core.MemoryRequest.source","location":"http4k-core/org.http4k.core/-memory-request/source.html","searchKeys":["source","open override val source: RequestSource? = null","org.http4k.core.MemoryRequest.source"]},{"name":"open override val status: Status","description":"org.http4k.core.MemoryResponse.status","location":"http4k-core/org.http4k.core/-memory-response/status.html","searchKeys":["status","open override val status: Status","org.http4k.core.MemoryResponse.status"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.SunHttp.stopMode","location":"http4k-core/org.http4k.server/-sun-http/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.SunHttp.stopMode"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.SunHttpLoom.stopMode","location":"http4k-core/org.http4k.server/-sun-http-loom/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.SunHttpLoom.stopMode"]},{"name":"open override val stream: ByteArrayInputStream","description":"org.http4k.core.MemoryBody.stream","location":"http4k-core/org.http4k.core/-memory-body/stream.html","searchKeys":["stream","open override val stream: ByteArrayInputStream","org.http4k.core.MemoryBody.stream"]},{"name":"open override val stream: InputStream","description":"org.http4k.core.StreamBody.stream","location":"http4k-core/org.http4k.core/-stream-body/stream.html","searchKeys":["stream","open override val stream: InputStream","org.http4k.core.StreamBody.stream"]},{"name":"open override val subMatches: List<RouterMatch>","description":"org.http4k.routing.RouterMatch.MatchedWithoutHandler.subMatches","location":"http4k-core/org.http4k.routing/-router-match/-matched-without-handler/sub-matches.html","searchKeys":["subMatches","open override val subMatches: List<RouterMatch>","org.http4k.routing.RouterMatch.MatchedWithoutHandler.subMatches"]},{"name":"open override val subMatches: List<RouterMatch>","description":"org.http4k.routing.RouterMatch.MatchingHandler.subMatches","location":"http4k-core/org.http4k.routing/-router-match/-matching-handler/sub-matches.html","searchKeys":["subMatches","open override val subMatches: List<RouterMatch>","org.http4k.routing.RouterMatch.MatchingHandler.subMatches"]},{"name":"open override val subMatches: List<RouterMatch>","description":"org.http4k.routing.RouterMatch.MethodNotMatched.subMatches","location":"http4k-core/org.http4k.routing/-router-match/-method-not-matched/sub-matches.html","searchKeys":["subMatches","open override val subMatches: List<RouterMatch>","org.http4k.routing.RouterMatch.MethodNotMatched.subMatches"]},{"name":"open override val subMatches: List<RouterMatch>","description":"org.http4k.routing.RouterMatch.Unmatched.subMatches","location":"http4k-core/org.http4k.routing/-router-match/-unmatched/sub-matches.html","searchKeys":["subMatches","open override val subMatches: List<RouterMatch>","org.http4k.routing.RouterMatch.Unmatched.subMatches"]},{"name":"open override val uri: Uri","description":"org.http4k.core.MemoryRequest.uri","location":"http4k-core/org.http4k.core/-memory-request/uri.html","searchKeys":["uri","open override val uri: Uri","org.http4k.core.MemoryRequest.uri"]},{"name":"open override val version: String","description":"org.http4k.core.MemoryRequest.version","location":"http4k-core/org.http4k.core/-memory-request/version.html","searchKeys":["version","open override val version: String","org.http4k.core.MemoryRequest.version"]},{"name":"open override val version: String","description":"org.http4k.core.MemoryResponse.version","location":"http4k-core/org.http4k.core/-memory-response/version.html","searchKeys":["version","open override val version: String","org.http4k.core.MemoryResponse.version"]},{"name":"open override val xUriTemplate: UriTemplate","description":"org.http4k.routing.RoutedRequest.xUriTemplate","location":"http4k-core/org.http4k.routing/-routed-request/x-uri-template.html","searchKeys":["xUriTemplate","open override val xUriTemplate: UriTemplate","org.http4k.routing.RoutedRequest.xUriTemplate"]},{"name":"open override val xUriTemplate: UriTemplate","description":"org.http4k.routing.RoutedResponse.xUriTemplate","location":"http4k-core/org.http4k.routing/-routed-response/x-uri-template.html","searchKeys":["xUriTemplate","open override val xUriTemplate: UriTemplate","org.http4k.routing.RoutedResponse.xUriTemplate"]},{"name":"open val description: RouterDescription","description":"org.http4k.routing.Router.description","location":"http4k-core/org.http4k.routing/-router/description.html","searchKeys":["description","open val description: RouterDescription","org.http4k.routing.Router.description"]},{"name":"open val description: RouterDescription","description":"org.http4k.routing.RouterMatch.description","location":"http4k-core/org.http4k.routing/-router-match/description.html","searchKeys":["description","open val description: RouterDescription","org.http4k.routing.RouterMatch.description"]},{"name":"open val multi: LensBuilder<IN, List<OUT>>","description":"org.http4k.lens.LensSpec.multi","location":"http4k-core/org.http4k.lens/-lens-spec/multi.html","searchKeys":["multi","open val multi: LensBuilder<IN, List<OUT>>","org.http4k.lens.LensSpec.multi"]},{"name":"open val name: String","description":"org.http4k.filter.CacheControlHeaderPart.name","location":"http4k-core/org.http4k.filter/-cache-control-header-part/name.html","searchKeys":["name","open val name: String","org.http4k.filter.CacheControlHeaderPart.name"]},{"name":"open val stopMode: ServerConfig.StopMode","description":"org.http4k.server.ServerConfig.stopMode","location":"http4k-core/org.http4k.server/-server-config/stop-mode.html","searchKeys":["stopMode","open val stopMode: ServerConfig.StopMode","org.http4k.server.ServerConfig.stopMode"]},{"name":"open val subMatches: List<RouterMatch>","description":"org.http4k.routing.RouterMatch.subMatches","location":"http4k-core/org.http4k.routing/-router-match/sub-matches.html","searchKeys":["subMatches","open val subMatches: List<RouterMatch>","org.http4k.routing.RouterMatch.subMatches"]},{"name":"operator fun <IN, OUT> invoke(getFn: (String, IN) -> List<OUT>): LensGet<IN, OUT>","description":"org.http4k.lens.LensGet.Companion.invoke","location":"http4k-core/org.http4k.lens/-lens-get/-companion/invoke.html","searchKeys":["invoke","operator fun <IN, OUT> invoke(getFn: (String, IN) -> List<OUT>): LensGet<IN, OUT>","org.http4k.lens.LensGet.Companion.invoke"]},{"name":"operator fun <IN, OUT> invoke(setFn: (String, List<OUT>, IN) -> IN): LensSet<IN, OUT>","description":"org.http4k.lens.LensSet.Companion.invoke","location":"http4k-core/org.http4k.lens/-lens-set/-companion/invoke.html","searchKeys":["invoke","operator fun <IN, OUT> invoke(setFn: (String, List<OUT>, IN) -> IN): LensSet<IN, OUT>","org.http4k.lens.LensSet.Companion.invoke"]},{"name":"operator fun <T : Any> invoke(entity: T, lenses: List<LensExtractor<T, *>>): List<Failure>","description":"org.http4k.lens.Validator.invoke","location":"http4k-core/org.http4k.lens/-validator/invoke.html","searchKeys":["invoke","operator fun <T : Any> invoke(entity: T, lenses: List<LensExtractor<T, *>>): List<Failure>","org.http4k.lens.Validator.invoke"]},{"name":"operator fun <T : HttpMessage> invoke(value: ZipkinTraces, target: T): T","description":"org.http4k.filter.ZipkinTraces.Companion.invoke","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/invoke.html","searchKeys":["invoke","operator fun <T : HttpMessage> invoke(value: ZipkinTraces, target: T): T","org.http4k.filter.ZipkinTraces.Companion.invoke"]},{"name":"operator fun <T> get(key: String): T?","description":"org.http4k.core.RequestContext.get","location":"http4k-core/org.http4k.core/-request-context/get.html","searchKeys":["get","operator fun <T> get(key: String): T?","org.http4k.core.RequestContext.get"]},{"name":"operator fun <T> invoke(key: RequestContextLens<T>, lookup: (String) -> T?): Filter","description":"org.http4k.filter.ServerFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun <T> invoke(key: RequestContextLens<T>, lookup: (String) -> T?): Filter","org.http4k.filter.ServerFilters.BearerAuth.invoke"]},{"name":"operator fun <T> invoke(lens: Lens<Request, T>, validate: (T) -> Boolean): Filter","description":"org.http4k.filter.ServerFilters.ApiKeyAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-api-key-auth/invoke.html","searchKeys":["invoke","operator fun <T> invoke(lens: Lens<Request, T>, validate: (T) -> Boolean): Filter","org.http4k.filter.ServerFilters.ApiKeyAuth.invoke"]},{"name":"operator fun <T> invoke(realm: String, key: RequestContextLens<T>, lookup: (Credentials) -> T?): Filter","description":"org.http4k.filter.ServerFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun <T> invoke(realm: String, key: RequestContextLens<T>, lookup: (Credentials) -> T?): Filter","org.http4k.filter.ServerFilters.BasicAuth.invoke"]},{"name":"operator fun Event.plus(that: Pair<String, Any>): Event","description":"org.http4k.events.plus","location":"http4k-core/org.http4k.events/plus.html","searchKeys":["plus","operator fun Event.plus(that: Pair<String, Any>): Event","org.http4k.events.plus"]},{"name":"operator fun invoke(): HttpHandler","description":"org.http4k.client.Java8HttpClient.invoke","location":"http4k-core/org.http4k.client/-java8-http-client/invoke.html","searchKeys":["invoke","operator fun invoke(): HttpHandler","org.http4k.client.Java8HttpClient.invoke"]},{"name":"operator fun invoke(body: ByteBuffer): Body","description":"org.http4k.core.Body.Companion.invoke","location":"http4k-core/org.http4k.core/-body/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(body: ByteBuffer): Body","org.http4k.core.Body.Companion.invoke"]},{"name":"operator fun invoke(body: InputStream, length: Long? = null): Body","description":"org.http4k.core.Body.Companion.invoke","location":"http4k-core/org.http4k.core/-body/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(body: InputStream, length: Long? = null): Body","org.http4k.core.Body.Companion.invoke"]},{"name":"operator fun invoke(body: String): Body","description":"org.http4k.core.Body.Companion.invoke","location":"http4k-core/org.http4k.core/-body/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(body: String): Body","org.http4k.core.Body.Companion.invoke"]},{"name":"operator fun invoke(checkToken: (String) -> Boolean): Filter","description":"org.http4k.filter.ServerFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun invoke(checkToken: (String) -> Boolean): Filter","org.http4k.filter.ServerFilters.BearerAuth.invoke"]},{"name":"operator fun invoke(clock: Clock = Clock.systemDefaultZone(), storage: CookieStorage = BasicCookieStorage()): Filter","description":"org.http4k.filter.ClientFilters.Cookies.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-cookies/invoke.html","searchKeys":["invoke","operator fun invoke(clock: Clock = Clock.systemDefaultZone(), storage: CookieStorage = BasicCookieStorage()): Filter","org.http4k.filter.ClientFilters.Cookies.invoke"]},{"name":"operator fun invoke(clock: Clock = Clock.systemUTC(), recordFn: (String, Duration) -> Unit): Filter","description":"org.http4k.filter.ResponseFilters.ReportRouteLatency.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-report-route-latency/invoke.html","searchKeys":["invoke","operator fun invoke(clock: Clock = Clock.systemUTC(), recordFn: (String, Duration) -> Unit): Filter","org.http4k.filter.ResponseFilters.ReportRouteLatency.invoke"]},{"name":"operator fun invoke(clock: Clock = Clock.systemUTC(), transactionLabeler: HttpTransactionLabeler = { it }, recordFn: (HttpTransaction) -> Unit): Filter","description":"org.http4k.filter.ResponseFilters.ReportHttpTransaction.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-report-http-transaction/invoke.html","searchKeys":["invoke","operator fun invoke(clock: Clock = Clock.systemUTC(), transactionLabeler: HttpTransactionLabeler = { it }, recordFn: (HttpTransaction) -> Unit): Filter","org.http4k.filter.ResponseFilters.ReportHttpTransaction.invoke"]},{"name":"operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.RequestFilters.GZip.invoke","location":"http4k-core/org.http4k.filter/-request-filters/-g-zip/invoke.html","searchKeys":["invoke","operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.RequestFilters.GZip.invoke"]},{"name":"operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.RequestFilters.GunZip.invoke","location":"http4k-core/org.http4k.filter/-request-filters/-gun-zip/invoke.html","searchKeys":["invoke","operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.RequestFilters.GunZip.invoke"]},{"name":"operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.ResponseFilters.GZip.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-g-zip/invoke.html","searchKeys":["invoke","operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.ResponseFilters.GZip.invoke"]},{"name":"operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.ResponseFilters.GunZip.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-gun-zip/invoke.html","searchKeys":["invoke","operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.ResponseFilters.GunZip.invoke"]},{"name":"operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","description":"org.http4k.filter.ServerFilters.GZip.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-g-zip/invoke.html","searchKeys":["invoke","operator fun invoke(compressionMode: GzipCompressionMode = Memory()): Filter","org.http4k.filter.ServerFilters.GZip.invoke"]},{"name":"operator fun invoke(contentType: ContentType): Filter","description":"org.http4k.filter.ClientFilters.SetContentType.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-set-content-type/invoke.html","searchKeys":["invoke","operator fun invoke(contentType: ContentType): Filter","org.http4k.filter.ClientFilters.SetContentType.invoke"]},{"name":"operator fun invoke(contentType: ContentType): Filter","description":"org.http4k.filter.ServerFilters.SetContentType.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-set-content-type/invoke.html","searchKeys":["invoke","operator fun invoke(contentType: ContentType): Filter","org.http4k.filter.ServerFilters.SetContentType.invoke"]},{"name":"operator fun invoke(contexts: Store<RequestContext>): Filter","description":"org.http4k.filter.ServerFilters.InitialiseRequestContext.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-initialise-request-context/invoke.html","searchKeys":["invoke","operator fun invoke(contexts: Store<RequestContext>): Filter","org.http4k.filter.ServerFilters.InitialiseRequestContext.invoke"]},{"name":"operator fun invoke(credentials: Credentials): Filter","description":"org.http4k.filter.ClientFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(credentials: Credentials): Filter","org.http4k.filter.ClientFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(credentials: Credentials): Filter","description":"org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-proxy-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(credentials: Credentials): Filter","org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke"]},{"name":"operator fun invoke(defaultCacheTimings: DefaultCacheTimings, predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","description":"org.http4k.filter.CachingFilters.CacheResponse.FallbackCacheControl.invoke","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-fallback-cache-control/invoke.html","searchKeys":["invoke","operator fun invoke(defaultCacheTimings: DefaultCacheTimings, predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","org.http4k.filter.CachingFilters.CacheResponse.FallbackCacheControl.invoke"]},{"name":"operator fun invoke(extensions: Set<String> = ALL_EXTENSIONS): Filter","description":"org.http4k.filter.ServerFilters.ContentDispositionAttachment.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-content-disposition-attachment/invoke.html","searchKeys":["invoke","operator fun invoke(extensions: Set<String> = ALL_EXTENSIONS): Filter","org.http4k.filter.ServerFilters.ContentDispositionAttachment.invoke"]},{"name":"operator fun invoke(fn: (Request) -> Unit): Filter","description":"org.http4k.filter.RequestFilters.Tap.invoke","location":"http4k-core/org.http4k.filter/-request-filters/-tap/invoke.html","searchKeys":["invoke","operator fun invoke(fn: (Request) -> Unit): Filter","org.http4k.filter.RequestFilters.Tap.invoke"]},{"name":"operator fun invoke(fn: (Response) -> Unit): Filter","description":"org.http4k.filter.ResponseFilters.Tap.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-tap/invoke.html","searchKeys":["invoke","operator fun invoke(fn: (Response) -> Unit): Filter","org.http4k.filter.ResponseFilters.Tap.invoke"]},{"name":"operator fun invoke(header: String, credentials: Credentials): Filter","description":"org.http4k.filter.ClientFilters.CustomBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(header: String, credentials: Credentials): Filter","org.http4k.filter.ClientFilters.CustomBasicAuth.invoke"]},{"name":"operator fun invoke(header: String, provider: () -> Credentials?): Filter","description":"org.http4k.filter.ClientFilters.CustomBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(header: String, provider: () -> Credentials?): Filter","org.http4k.filter.ClientFilters.CustomBasicAuth.invoke"]},{"name":"operator fun invoke(header: String, provider: CredentialsProvider<Credentials>): Filter","description":"org.http4k.filter.ClientFilters.CustomBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(header: String, provider: CredentialsProvider<Credentials>): Filter","org.http4k.filter.ClientFilters.CustomBasicAuth.invoke"]},{"name":"operator fun invoke(header: String, user: String, password: String): Filter","description":"org.http4k.filter.ClientFilters.CustomBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-custom-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(header: String, user: String, password: String): Filter","org.http4k.filter.ClientFilters.CustomBasicAuth.invoke"]},{"name":"operator fun invoke(httpClient: HttpClient = defaultJavaHttpClient(), requestBodyMode: BodyMode = Memory, responseBodyMode: BodyMode = Memory, requestModifier: (HttpRequest.Builder) -> HttpRequest.Builder = { it }): (request: Request) -> Response","description":"org.http4k.client.JavaHttpClient.invoke","location":"http4k-core/org.http4k.client/-java-http-client/invoke.html","searchKeys":["invoke","operator fun invoke(httpClient: HttpClient = defaultJavaHttpClient(), requestBodyMode: BodyMode = Memory, responseBodyMode: BodyMode = Memory, requestModifier: (HttpRequest.Builder) -> HttpRequest.Builder = { it }): (request: Request) -> Response","org.http4k.client.JavaHttpClient.invoke"]},{"name":"operator fun invoke(loader: ResourceLoader = Classpath(), toResourceName: (Response) -> String? = { if (it.status.successful) null else it.status.code.toString() }): Filter","description":"org.http4k.filter.ServerFilters.ReplaceResponseContentsWithStaticFile.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-replace-response-contents-with-static-file/invoke.html","searchKeys":["invoke","operator fun invoke(loader: ResourceLoader = Classpath(), toResourceName: (Response) -> String? = { if (it.status.successful) null else it.status.code.toString() }): Filter","org.http4k.filter.ServerFilters.ReplaceResponseContentsWithStaticFile.invoke"]},{"name":"operator fun invoke(maxAge: Duration, predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","description":"org.http4k.filter.CachingFilters.CacheResponse.MaxAge.invoke","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-max-age/invoke.html","searchKeys":["invoke","operator fun invoke(maxAge: Duration, predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","org.http4k.filter.CachingFilters.CacheResponse.MaxAge.invoke"]},{"name":"operator fun invoke(method: Method, template: UriTemplate, version: String = HTTP_1_1): Request","description":"org.http4k.core.Request.Companion.invoke","location":"http4k-core/org.http4k.core/-request/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(method: Method, template: UriTemplate, version: String = HTTP_1_1): Request","org.http4k.core.Request.Companion.invoke"]},{"name":"operator fun invoke(method: Method, uri: String, version: String = HTTP_1_1): Request","description":"org.http4k.core.Request.Companion.invoke","location":"http4k-core/org.http4k.core/-request/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(method: Method, uri: String, version: String = HTTP_1_1): Request","org.http4k.core.Request.Companion.invoke"]},{"name":"operator fun invoke(method: Method, uri: Uri, version: String = HTTP_1_1): Request","description":"org.http4k.core.Request.Companion.invoke","location":"http4k-core/org.http4k.core/-request/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(method: Method, uri: Uri, version: String = HTTP_1_1): Request","org.http4k.core.Request.Companion.invoke"]},{"name":"operator fun invoke(mode: RequestFilters.ProxyProtocolMode = ProxyProtocolMode.Http): Filter","description":"org.http4k.filter.RequestFilters.ProxyHost.invoke","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-host/invoke.html","searchKeys":["invoke","operator fun invoke(mode: RequestFilters.ProxyProtocolMode = ProxyProtocolMode.Http): Filter","org.http4k.filter.RequestFilters.ProxyHost.invoke"]},{"name":"operator fun invoke(name: String): (IN) -> List<OUT>","description":"org.http4k.lens.LensGet.invoke","location":"http4k-core/org.http4k.lens/-lens-get/invoke.html","searchKeys":["invoke","operator fun invoke(name: String): (IN) -> List<OUT>","org.http4k.lens.LensGet.invoke"]},{"name":"operator fun invoke(name: String): (List<OUT>, IN) -> IN","description":"org.http4k.lens.LensSet.invoke","location":"http4k-core/org.http4k.lens/-lens-set/invoke.html","searchKeys":["invoke","operator fun invoke(name: String): (List<OUT>, IN) -> IN","org.http4k.lens.LensSet.invoke"]},{"name":"operator fun invoke(onError: (Throwable) -> Response = ::originalBehaviour): Filter","description":"org.http4k.filter.ServerFilters.CatchAll.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-catch-all/invoke.html","searchKeys":["invoke","operator fun invoke(onError: (Throwable) -> Response = ::originalBehaviour): Filter","org.http4k.filter.ServerFilters.CatchAll.invoke"]},{"name":"operator fun invoke(out: OUT): IN","description":"org.http4k.lens.BiDiMapping.invoke","location":"http4k-core/org.http4k.lens/-bi-di-mapping/invoke.html","searchKeys":["invoke","operator fun invoke(out: OUT): IN","org.http4k.lens.BiDiMapping.invoke"]},{"name":"operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","description":"org.http4k.filter.DebuggingFilters.PrintRequest.invoke","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-request/invoke.html","searchKeys":["invoke","operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","org.http4k.filter.DebuggingFilters.PrintRequest.invoke"]},{"name":"operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","description":"org.http4k.filter.DebuggingFilters.PrintRequestAndResponse.invoke","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-request-and-response/invoke.html","searchKeys":["invoke","operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","org.http4k.filter.DebuggingFilters.PrintRequestAndResponse.invoke"]},{"name":"operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","description":"org.http4k.filter.DebuggingFilters.PrintResponse.invoke","location":"http4k-core/org.http4k.filter/-debugging-filters/-print-response/invoke.html","searchKeys":["invoke","operator fun invoke(out: PrintStream = System.out, debugStream: Boolean = defaultDebugStream): Filter","org.http4k.filter.DebuggingFilters.PrintResponse.invoke"]},{"name":"operator fun invoke(overrides: Map<String, ContentType> = emptyMap()): MimeTypes","description":"org.http4k.core.MimeTypes.Companion.invoke","location":"http4k-core/org.http4k.core/-mime-types/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(overrides: Map<String, ContentType> = emptyMap()): MimeTypes","org.http4k.core.MimeTypes.Companion.invoke"]},{"name":"operator fun invoke(policy: CorsPolicy): Filter","description":"org.http4k.filter.ServerFilters.Cors.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-cors/invoke.html","searchKeys":["invoke","operator fun invoke(policy: CorsPolicy): Filter","org.http4k.filter.ServerFilters.Cors.invoke"]},{"name":"operator fun invoke(predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","description":"org.http4k.filter.CachingFilters.CacheResponse.NoCache.invoke","location":"http4k-core/org.http4k.filter/-caching-filters/-cache-response/-no-cache/invoke.html","searchKeys":["invoke","operator fun invoke(predicate: (Response) -> Boolean = { it.status.code < 400 }): Filter","org.http4k.filter.CachingFilters.CacheResponse.NoCache.invoke"]},{"name":"operator fun invoke(provider: () -> Credentials?): Filter","description":"org.http4k.filter.ClientFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: () -> Credentials?): Filter","org.http4k.filter.ClientFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(provider: () -> Credentials?): Filter","description":"org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-proxy-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: () -> Credentials?): Filter","org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke"]},{"name":"operator fun invoke(provider: () -> String?): Filter","description":"org.http4k.filter.ClientFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: () -> String?): Filter","org.http4k.filter.ClientFilters.BearerAuth.invoke"]},{"name":"operator fun invoke(provider: CredentialsProvider<Credentials>): Filter","description":"org.http4k.filter.ClientFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: CredentialsProvider<Credentials>): Filter","org.http4k.filter.ClientFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(provider: CredentialsProvider<Credentials>): Filter","description":"org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-proxy-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: CredentialsProvider<Credentials>): Filter","org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke"]},{"name":"operator fun invoke(provider: CredentialsProvider<String>): Filter","description":"org.http4k.filter.ClientFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun invoke(provider: CredentialsProvider<String>): Filter","org.http4k.filter.ClientFilters.BearerAuth.invoke"]},{"name":"operator fun invoke(readTimeout: Duration = ZERO, connectionTimeout: Duration = ZERO): HttpHandler","description":"org.http4k.client.Java8HttpClient.invoke","location":"http4k-core/org.http4k.client/-java8-http-client/invoke.html","searchKeys":["invoke","operator fun invoke(readTimeout: Duration = ZERO, connectionTimeout: Duration = ZERO): HttpHandler","org.http4k.client.Java8HttpClient.invoke"]},{"name":"operator fun invoke(realm: String, authorize: (Credentials) -> Boolean): Filter","description":"org.http4k.filter.ServerFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(realm: String, authorize: (Credentials) -> Boolean): Filter","org.http4k.filter.ServerFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(realm: String, credentials: Credentials): Filter","description":"org.http4k.filter.ServerFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(realm: String, credentials: Credentials): Filter","org.http4k.filter.ServerFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(realm: String, user: String, password: String): Filter","description":"org.http4k.filter.ServerFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(realm: String, user: String, password: String): Filter","org.http4k.filter.ServerFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(rejectStatus: Status? = null, tracePredicate: (TraceId) -> Boolean = X_B3_FORMAT): Filter","description":"org.http4k.filter.ServerFilters.ValidateRequestTracingHeaders.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-validate-request-tracing-headers/invoke.html","searchKeys":["invoke","operator fun invoke(rejectStatus: Status? = null, tracePredicate: (TraceId) -> Boolean = X_B3_FORMAT): Filter","org.http4k.filter.ServerFilters.ValidateRequestTracingHeaders.invoke"]},{"name":"operator fun invoke(replay: Replay, matchFn: (Request, Request) -> Boolean = { received, stored -> received.toString() != stored.toString() }): Filter","description":"org.http4k.filter.TrafficFilters.ReplayFrom.invoke","location":"http4k-core/org.http4k.filter/-traffic-filters/-replay-from/invoke.html","searchKeys":["invoke","operator fun invoke(replay: Replay, matchFn: (Request, Request) -> Boolean = { received, stored -> received.toString() != stored.toString() }): Filter","org.http4k.filter.TrafficFilters.ReplayFrom.invoke"]},{"name":"operator fun invoke(sink: Sink): Filter","description":"org.http4k.filter.TrafficFilters.RecordTo.invoke","location":"http4k-core/org.http4k.filter/-traffic-filters/-record-to/invoke.html","searchKeys":["invoke","operator fun invoke(sink: Sink): Filter","org.http4k.filter.TrafficFilters.RecordTo.invoke"]},{"name":"operator fun invoke(source: Source): Filter","description":"org.http4k.filter.TrafficFilters.ServeCachedFrom.invoke","location":"http4k-core/org.http4k.filter/-traffic-filters/-serve-cached-from/invoke.html","searchKeys":["invoke","operator fun invoke(source: Source): Filter","org.http4k.filter.TrafficFilters.ServeCachedFrom.invoke"]},{"name":"operator fun invoke(startReportFn: (Request, ZipkinTraces) -> Unit = { _, _ -> }, endReportFn: (Request, Response, ZipkinTraces) -> Unit = { _, _, _ -> }, storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","description":"org.http4k.filter.ServerFilters.RequestTracing.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-request-tracing/invoke.html","searchKeys":["invoke","operator fun invoke(startReportFn: (Request, ZipkinTraces) -> Unit = { _, _ -> }, endReportFn: (Request, Response, ZipkinTraces) -> Unit = { _, _, _ -> }, storage: ZipkinTracesStorage = ZipkinTracesStorage.THREAD_LOCAL): Filter","org.http4k.filter.ServerFilters.RequestTracing.invoke"]},{"name":"operator fun invoke(status: Status, version: String = HTTP_1_1): Response","description":"org.http4k.core.Response.Companion.invoke","location":"http4k-core/org.http4k.core/-response/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(status: Status, version: String = HTTP_1_1): Response","org.http4k.core.Response.Companion.invoke"]},{"name":"operator fun invoke(target: HttpMessage): ZipkinTraces","description":"org.http4k.filter.ZipkinTraces.Companion.invoke","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(target: HttpMessage): ZipkinTraces","org.http4k.filter.ZipkinTraces.Companion.invoke"]},{"name":"operator fun invoke(target: String): FINAL","description":"org.http4k.lens.PathLens.invoke","location":"http4k-core/org.http4k.lens/-path-lens/invoke.html","searchKeys":["invoke","operator fun invoke(target: String): FINAL","org.http4k.lens.PathLens.invoke"]},{"name":"operator fun invoke(text: String, style: TextStyle): String","description":"org.http4k.routing.inspect.EscapeMode.invoke","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/invoke.html","searchKeys":["invoke","operator fun invoke(text: String, style: TextStyle): String","org.http4k.routing.inspect.EscapeMode.invoke"]},{"name":"operator fun invoke(timeSource: () -> Instant, recordFn: (String, Duration) -> Unit): Filter","description":"org.http4k.filter.ResponseFilters.ReportRouteLatency.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-report-route-latency/invoke.html","searchKeys":["invoke","operator fun invoke(timeSource: () -> Instant, recordFn: (String, Duration) -> Unit): Filter","org.http4k.filter.ResponseFilters.ReportRouteLatency.invoke"]},{"name":"operator fun invoke(timeSource: () -> Instant, storage: CookieStorage = BasicCookieStorage()): Filter","description":"org.http4k.filter.ClientFilters.Cookies.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-cookies/invoke.html","searchKeys":["invoke","operator fun invoke(timeSource: () -> Instant, storage: CookieStorage = BasicCookieStorage()): Filter","org.http4k.filter.ClientFilters.Cookies.invoke"]},{"name":"operator fun invoke(timeSource: () -> Instant, transactionLabeler: HttpTransactionLabeler = { it }, recordFn: (HttpTransaction) -> Unit): Filter","description":"org.http4k.filter.ResponseFilters.ReportHttpTransaction.invoke","location":"http4k-core/org.http4k.filter/-response-filters/-report-http-transaction/invoke.html","searchKeys":["invoke","operator fun invoke(timeSource: () -> Instant, transactionLabeler: HttpTransactionLabeler = { it }, recordFn: (HttpTransaction) -> Unit): Filter","org.http4k.filter.ResponseFilters.ReportHttpTransaction.invoke"]},{"name":"operator fun invoke(token: String): Filter","description":"org.http4k.filter.ClientFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun invoke(token: String): Filter","org.http4k.filter.ClientFilters.BearerAuth.invoke"]},{"name":"operator fun invoke(token: String): Filter","description":"org.http4k.filter.ServerFilters.BearerAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-bearer-auth/invoke.html","searchKeys":["invoke","operator fun invoke(token: String): Filter","org.http4k.filter.ServerFilters.BearerAuth.invoke"]},{"name":"operator fun invoke(uri: Uri): Uri","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.invoke","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/invoke.html","searchKeys":["invoke","operator fun invoke(uri: Uri): Uri","org.http4k.filter.RequestFilters.ProxyProtocolMode.invoke"]},{"name":"operator fun invoke(user: String, password: String): Filter","description":"org.http4k.filter.ClientFilters.BasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(user: String, password: String): Filter","org.http4k.filter.ClientFilters.BasicAuth.invoke"]},{"name":"operator fun invoke(user: String, password: String): Filter","description":"org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke","location":"http4k-core/org.http4k.filter/-client-filters/-proxy-basic-auth/invoke.html","searchKeys":["invoke","operator fun invoke(user: String, password: String): Filter","org.http4k.filter.ClientFilters.ProxyBasicAuth.invoke"]},{"name":"operator fun invoke(validate: (Request) -> Boolean): Filter","description":"org.http4k.filter.ServerFilters.ApiKeyAuth.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-api-key-auth/invoke.html","searchKeys":["invoke","operator fun invoke(validate: (Request) -> Boolean): Filter","org.http4k.filter.ServerFilters.ApiKeyAuth.invoke"]},{"name":"operator fun invoke(vararg headers: String): Filter","description":"org.http4k.filter.ServerFilters.CopyHeaders.invoke","location":"http4k-core/org.http4k.filter/-server-filters/-copy-headers/invoke.html","searchKeys":["invoke","operator fun invoke(vararg headers: String): Filter","org.http4k.filter.ServerFilters.CopyHeaders.invoke"]},{"name":"operator fun minus(name: String): WebForm","description":"org.http4k.lens.WebForm.minus","location":"http4k-core/org.http4k.lens/-web-form/minus.html","searchKeys":["minus","operator fun minus(name: String): WebForm","org.http4k.lens.WebForm.minus"]},{"name":"operator fun plus(kv: Pair<String, String>): WebForm","description":"org.http4k.lens.WebForm.plus","location":"http4k-core/org.http4k.lens/-web-form/plus.html","searchKeys":["plus","operator fun plus(kv: Pair<String, String>): WebForm","org.http4k.lens.WebForm.plus"]},{"name":"operator fun set(key: String, value: Any?)","description":"org.http4k.core.RequestContext.set","location":"http4k-core/org.http4k.core/-request-context/set.html","searchKeys":["set","operator fun set(key: String, value: Any?)","org.http4k.core.RequestContext.set"]},{"name":"sealed class BodyMode : Function1<InputStream, Body> ","description":"org.http4k.core.BodyMode","location":"http4k-core/org.http4k.core/-body-mode/index.html","searchKeys":["BodyMode","sealed class BodyMode : Function1<InputStream, Body> ","org.http4k.core.BodyMode"]},{"name":"sealed class Failure","description":"org.http4k.lens.Failure","location":"http4k-core/org.http4k.lens/-failure/index.html","searchKeys":["Failure","sealed class Failure","org.http4k.lens.Failure"]},{"name":"sealed class FieldValue","description":"org.http4k.core.etag.FieldValue","location":"http4k-core/org.http4k.core.etag/-field-value/index.html","searchKeys":["FieldValue","sealed class FieldValue","org.http4k.core.etag.FieldValue"]},{"name":"sealed class GzipCompressionMode","description":"org.http4k.filter.GzipCompressionMode","location":"http4k-core/org.http4k.filter/-gzip-compression-mode/index.html","searchKeys":["GzipCompressionMode","sealed class GzipCompressionMode","org.http4k.filter.GzipCompressionMode"]},{"name":"sealed class HttpEvent : Event","description":"org.http4k.events.HttpEvent","location":"http4k-core/org.http4k.events/-http-event/index.html","searchKeys":["HttpEvent","sealed class HttpEvent : Event","org.http4k.events.HttpEvent"]},{"name":"sealed class ParamMeta","description":"org.http4k.lens.ParamMeta","location":"http4k-core/org.http4k.lens/-param-meta/index.html","searchKeys":["ParamMeta","sealed class ParamMeta","org.http4k.lens.ParamMeta"]},{"name":"sealed class RouterMatch : Comparable<RouterMatch> ","description":"org.http4k.routing.RouterMatch","location":"http4k-core/org.http4k.routing/-router-match/index.html","searchKeys":["RouterMatch","sealed class RouterMatch : Comparable<RouterMatch> ","org.http4k.routing.RouterMatch"]},{"name":"sealed interface StopMode","description":"org.http4k.server.ServerConfig.StopMode","location":"http4k-core/org.http4k.server/-server-config/-stop-mode/index.html","searchKeys":["StopMode","sealed interface StopMode","org.http4k.server.ServerConfig.StopMode"]},{"name":"typealias Events = (Event) -> Unit","description":"org.http4k.events.Events","location":"http4k-core/org.http4k.events/-events/index.html","searchKeys":["Events","typealias Events = (Event) -> Unit","org.http4k.events.Events"]},{"name":"typealias Form = Parameters","description":"org.http4k.core.body.Form","location":"http4k-core/org.http4k.core.body/-form/index.html","searchKeys":["Form","typealias Form = Parameters","org.http4k.core.body.Form"]},{"name":"typealias HeaderLens<T> = Lens<HttpMessage, T>","description":"org.http4k.lens.HeaderLens","location":"http4k-core/org.http4k.lens/-header-lens/index.html","searchKeys":["HeaderLens","typealias HeaderLens<T> = Lens<HttpMessage, T>","org.http4k.lens.HeaderLens"]},{"name":"typealias Headers = Parameters","description":"org.http4k.core.Headers","location":"http4k-core/org.http4k.core/-headers/index.html","searchKeys":["Headers","typealias Headers = Parameters","org.http4k.core.Headers"]},{"name":"typealias HttpHandler = (request: Request) -> Response","description":"org.http4k.core.HttpHandler","location":"http4k-core/org.http4k.core/-http-handler/index.html","searchKeys":["HttpHandler","typealias HttpHandler = (request: Request) -> Response","org.http4k.core.HttpHandler"]},{"name":"typealias HttpTransactionLabeler = (HttpTransaction) -> HttpTransaction","description":"org.http4k.filter.HttpTransactionLabeler","location":"http4k-core/org.http4k.filter/-http-transaction-labeler/index.html","searchKeys":["HttpTransactionLabeler","typealias HttpTransactionLabeler = (HttpTransaction) -> HttpTransaction","org.http4k.filter.HttpTransactionLabeler"]},{"name":"typealias Parameters = List<Parameter>","description":"org.http4k.core.Parameters","location":"http4k-core/org.http4k.core/-parameters/index.html","searchKeys":["Parameters","typealias Parameters = List<Parameter>","org.http4k.core.Parameters"]},{"name":"typealias Prop<OUT> = ReadOnlyProperty<Any?, OUT>","description":"org.http4k.lens.Prop","location":"http4k-core/org.http4k.lens/-prop/index.html","searchKeys":["Prop","typealias Prop<OUT> = ReadOnlyProperty<Any?, OUT>","org.http4k.lens.Prop"]},{"name":"typealias QueryLens<T> = Lens<Request, T>","description":"org.http4k.lens.QueryLens","location":"http4k-core/org.http4k.lens/-query-lens/index.html","searchKeys":["QueryLens","typealias QueryLens<T> = Lens<Request, T>","org.http4k.lens.QueryLens"]},{"name":"typealias RequestContextLens<T> = BiDiLens<Request, T>","description":"org.http4k.lens.RequestContextLens","location":"http4k-core/org.http4k.lens/-request-context-lens/index.html","searchKeys":["RequestContextLens","typealias RequestContextLens<T> = BiDiLens<Request, T>","org.http4k.lens.RequestContextLens"]},{"name":"typealias RequestPredicate = (Request) -> Boolean","description":"org.http4k.filter.RequestPredicate","location":"http4k-core/org.http4k.filter/-request-predicate/index.html","searchKeys":["RequestPredicate","typealias RequestPredicate = (Request) -> Boolean","org.http4k.filter.RequestPredicate"]},{"name":"typealias UriValue = AbstractValue<Uri>","description":"org.http4k.core.UriValue","location":"http4k-core/org.http4k.core/-uri-value/index.html","searchKeys":["UriValue","typealias UriValue = AbstractValue<Uri>","org.http4k.core.UriValue"]},{"name":"val ACCEPT: BiDiLens<HttpMessage, Accept?>","description":"org.http4k.lens.Header.ACCEPT","location":"http4k-core/org.http4k.lens/-header/-a-c-c-e-p-t.html","searchKeys":["ACCEPT","val ACCEPT: BiDiLens<HttpMessage, Accept?>","org.http4k.lens.Header.ACCEPT"]},{"name":"val ACCEPTED: Status","description":"org.http4k.core.Status.Companion.ACCEPTED","location":"http4k-core/org.http4k.core/-status/-companion/-a-c-c-e-p-t-e-d.html","searchKeys":["ACCEPTED","val ACCEPTED: Status","org.http4k.core.Status.Companion.ACCEPTED"]},{"name":"val APPLICATION_FORM_URLENCODED: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_FORM_URLENCODED","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-f-o-r-m_-u-r-l-e-n-c-o-d-e-d.html","searchKeys":["APPLICATION_FORM_URLENCODED","val APPLICATION_FORM_URLENCODED: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_FORM_URLENCODED"]},{"name":"val APPLICATION_JSON: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_JSON","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-j-s-o-n.html","searchKeys":["APPLICATION_JSON","val APPLICATION_JSON: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_JSON"]},{"name":"val APPLICATION_ND_JSON: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_ND_JSON","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-n-d_-j-s-o-n.html","searchKeys":["APPLICATION_ND_JSON","val APPLICATION_ND_JSON: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_ND_JSON"]},{"name":"val APPLICATION_PDF: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_PDF","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-p-d-f.html","searchKeys":["APPLICATION_PDF","val APPLICATION_PDF: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_PDF"]},{"name":"val APPLICATION_XML: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_XML","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-x-m-l.html","searchKeys":["APPLICATION_XML","val APPLICATION_XML: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_XML"]},{"name":"val APPLICATION_YAML: ContentType","description":"org.http4k.core.ContentType.Companion.APPLICATION_YAML","location":"http4k-core/org.http4k.core/-content-type/-companion/-a-p-p-l-i-c-a-t-i-o-n_-y-a-m-l.html","searchKeys":["APPLICATION_YAML","val APPLICATION_YAML: ContentType","org.http4k.core.ContentType.Companion.APPLICATION_YAML"]},{"name":"val AUTHORIZATION_BASIC: BiDiLens<HttpMessage, Credentials?>","description":"org.http4k.lens.Header.AUTHORIZATION_BASIC","location":"http4k-core/org.http4k.lens/-header/-a-u-t-h-o-r-i-z-a-t-i-o-n_-b-a-s-i-c.html","searchKeys":["AUTHORIZATION_BASIC","val AUTHORIZATION_BASIC: BiDiLens<HttpMessage, Credentials?>","org.http4k.lens.Header.AUTHORIZATION_BASIC"]},{"name":"val BAD_GATEWAY: Status","description":"org.http4k.core.Status.Companion.BAD_GATEWAY","location":"http4k-core/org.http4k.core/-status/-companion/-b-a-d_-g-a-t-e-w-a-y.html","searchKeys":["BAD_GATEWAY","val BAD_GATEWAY: Status","org.http4k.core.Status.Companion.BAD_GATEWAY"]},{"name":"val BAD_REQUEST: Status","description":"org.http4k.core.Status.Companion.BAD_REQUEST","location":"http4k-core/org.http4k.core/-status/-companion/-b-a-d_-r-e-q-u-e-s-t.html","searchKeys":["BAD_REQUEST","val BAD_REQUEST: Status","org.http4k.core.Status.Companion.BAD_REQUEST"]},{"name":"val CLIENT_TIMEOUT: Status","description":"org.http4k.core.Status.Companion.CLIENT_TIMEOUT","location":"http4k-core/org.http4k.core/-status/-companion/-c-l-i-e-n-t_-t-i-m-e-o-u-t.html","searchKeys":["CLIENT_TIMEOUT","val CLIENT_TIMEOUT: Status","org.http4k.core.Status.Companion.CLIENT_TIMEOUT"]},{"name":"val CONFLICT: Status","description":"org.http4k.core.Status.Companion.CONFLICT","location":"http4k-core/org.http4k.core/-status/-companion/-c-o-n-f-l-i-c-t.html","searchKeys":["CONFLICT","val CONFLICT: Status","org.http4k.core.Status.Companion.CONFLICT"]},{"name":"val CONNECTION_REFUSED: Status","description":"org.http4k.core.Status.Companion.CONNECTION_REFUSED","location":"http4k-core/org.http4k.core/-status/-companion/-c-o-n-n-e-c-t-i-o-n_-r-e-f-u-s-e-d.html","searchKeys":["CONNECTION_REFUSED","val CONNECTION_REFUSED: Status","org.http4k.core.Status.Companion.CONNECTION_REFUSED"]},{"name":"val CONTENT_TYPE: BiDiLens<HttpMessage, ContentType?>","description":"org.http4k.lens.Header.CONTENT_TYPE","location":"http4k-core/org.http4k.lens/-header/-c-o-n-t-e-n-t_-t-y-p-e.html","searchKeys":["CONTENT_TYPE","val CONTENT_TYPE: BiDiLens<HttpMessage, ContentType?>","org.http4k.lens.Header.CONTENT_TYPE"]},{"name":"val CONTINUE: Status","description":"org.http4k.core.Status.Companion.CONTINUE","location":"http4k-core/org.http4k.core/-status/-companion/-c-o-n-t-i-n-u-e.html","searchKeys":["CONTINUE","val CONTINUE: Status","org.http4k.core.Status.Companion.CONTINUE"]},{"name":"val CREATED: Status","description":"org.http4k.core.Status.Companion.CREATED","location":"http4k-core/org.http4k.core/-status/-companion/-c-r-e-a-t-e-d.html","searchKeys":["CREATED","val CREATED: Status","org.http4k.core.Status.Companion.CREATED"]},{"name":"val CatchLensFailure: Filter","description":"org.http4k.filter.ServerFilters.CatchLensFailure","location":"http4k-core/org.http4k.filter/-server-filters/-catch-lens-failure.html","searchKeys":["CatchLensFailure","val CatchLensFailure: Filter","org.http4k.filter.ServerFilters.CatchLensFailure"]},{"name":"val DO_NOT_SAMPLE: SamplingDecision","description":"org.http4k.filter.SamplingDecision.Companion.DO_NOT_SAMPLE","location":"http4k-core/org.http4k.filter/-sampling-decision/-companion/-d-o_-n-o-t_-s-a-m-p-l-e.html","searchKeys":["DO_NOT_SAMPLE","val DO_NOT_SAMPLE: SamplingDecision","org.http4k.filter.SamplingDecision.Companion.DO_NOT_SAMPLE"]},{"name":"val EMPTY: Body","description":"org.http4k.core.Body.Companion.EMPTY","location":"http4k-core/org.http4k.core/-body/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: Body","org.http4k.core.Body.Companion.EMPTY"]},{"name":"val EXPECTATION_FAILED: Status","description":"org.http4k.core.Status.Companion.EXPECTATION_FAILED","location":"http4k-core/org.http4k.core/-status/-companion/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d.html","searchKeys":["EXPECTATION_FAILED","val EXPECTATION_FAILED: Status","org.http4k.core.Status.Companion.EXPECTATION_FAILED"]},{"name":"val FAILED_DEPENDENCY: Status","description":"org.http4k.core.Status.Companion.FAILED_DEPENDENCY","location":"http4k-core/org.http4k.core/-status/-companion/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y.html","searchKeys":["FAILED_DEPENDENCY","val FAILED_DEPENDENCY: Status","org.http4k.core.Status.Companion.FAILED_DEPENDENCY"]},{"name":"val FORBIDDEN: Status","description":"org.http4k.core.Status.Companion.FORBIDDEN","location":"http4k-core/org.http4k.core/-status/-companion/-f-o-r-b-i-d-d-e-n.html","searchKeys":["FORBIDDEN","val FORBIDDEN: Status","org.http4k.core.Status.Companion.FORBIDDEN"]},{"name":"val FOUND: Status","description":"org.http4k.core.Status.Companion.FOUND","location":"http4k-core/org.http4k.core/-status/-companion/-f-o-u-n-d.html","searchKeys":["FOUND","val FOUND: Status","org.http4k.core.Status.Companion.FOUND"]},{"name":"val Fallback: Router","description":"org.http4k.routing.Fallback","location":"http4k-core/org.http4k.routing/-fallback.html","searchKeys":["Fallback","val Fallback: Router","org.http4k.routing.Fallback"]},{"name":"val Filter.Companion.NoOp: Filter","description":"org.http4k.core.NoOp","location":"http4k-core/org.http4k.core/-no-op.html","searchKeys":["NoOp","val Filter.Companion.NoOp: Filter","org.http4k.core.NoOp"]},{"name":"val GATEWAY_TIMEOUT: Status","description":"org.http4k.core.Status.Companion.GATEWAY_TIMEOUT","location":"http4k-core/org.http4k.core/-status/-companion/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t.html","searchKeys":["GATEWAY_TIMEOUT","val GATEWAY_TIMEOUT: Status","org.http4k.core.Status.Companion.GATEWAY_TIMEOUT"]},{"name":"val GONE: Status","description":"org.http4k.core.Status.Companion.GONE","location":"http4k-core/org.http4k.core/-status/-companion/-g-o-n-e.html","searchKeys":["GONE","val GONE: Status","org.http4k.core.Status.Companion.GONE"]},{"name":"val HTTP_VERSION_NOT_SUPPORTED: Status","description":"org.http4k.core.Status.Companion.HTTP_VERSION_NOT_SUPPORTED","location":"http4k-core/org.http4k.core/-status/-companion/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d.html","searchKeys":["HTTP_VERSION_NOT_SUPPORTED","val HTTP_VERSION_NOT_SUPPORTED: Status","org.http4k.core.Status.Companion.HTTP_VERSION_NOT_SUPPORTED"]},{"name":"val INTERNAL_SERVER_ERROR: Status","description":"org.http4k.core.Status.Companion.INTERNAL_SERVER_ERROR","location":"http4k-core/org.http4k.core/-status/-companion/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r.html","searchKeys":["INTERNAL_SERVER_ERROR","val INTERNAL_SERVER_ERROR: Status","org.http4k.core.Status.Companion.INTERNAL_SERVER_ERROR"]},{"name":"val I_M_A_TEAPOT: Status","description":"org.http4k.core.Status.Companion.I_M_A_TEAPOT","location":"http4k-core/org.http4k.core/-status/-companion/-i_-m_-a_-t-e-a-p-o-t.html","searchKeys":["I_M_A_TEAPOT","val I_M_A_TEAPOT: Status","org.http4k.core.Status.Companion.I_M_A_TEAPOT"]},{"name":"val LENGTH_REQUIRED: Status","description":"org.http4k.core.Status.Companion.LENGTH_REQUIRED","location":"http4k-core/org.http4k.core/-status/-companion/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d.html","searchKeys":["LENGTH_REQUIRED","val LENGTH_REQUIRED: Status","org.http4k.core.Status.Companion.LENGTH_REQUIRED"]},{"name":"val LINK: BiDiLens<HttpMessage, Map<String, Uri>>","description":"org.http4k.lens.Header.LINK","location":"http4k-core/org.http4k.lens/-header/-l-i-n-k.html","searchKeys":["LINK","val LINK: BiDiLens<HttpMessage, Map<String, Uri>>","org.http4k.lens.Header.LINK"]},{"name":"val LOCATION: BiDiLens<HttpMessage, Uri>","description":"org.http4k.lens.Header.LOCATION","location":"http4k-core/org.http4k.lens/-header/-l-o-c-a-t-i-o-n.html","searchKeys":["LOCATION","val LOCATION: BiDiLens<HttpMessage, Uri>","org.http4k.lens.Header.LOCATION"]},{"name":"val LOCKED: Status","description":"org.http4k.core.Status.Companion.LOCKED","location":"http4k-core/org.http4k.core/-status/-companion/-l-o-c-k-e-d.html","searchKeys":["LOCKED","val LOCKED: Status","org.http4k.core.Status.Companion.LOCKED"]},{"name":"val METHOD_NOT_ALLOWED: Status","description":"org.http4k.core.Status.Companion.METHOD_NOT_ALLOWED","location":"http4k-core/org.http4k.core/-status/-companion/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d.html","searchKeys":["METHOD_NOT_ALLOWED","val METHOD_NOT_ALLOWED: Status","org.http4k.core.Status.Companion.METHOD_NOT_ALLOWED"]},{"name":"val MOVED_PERMANENTLY: Status","description":"org.http4k.core.Status.Companion.MOVED_PERMANENTLY","location":"http4k-core/org.http4k.core/-status/-companion/-m-o-v-e-d_-p-e-r-m-a-n-e-n-t-l-y.html","searchKeys":["MOVED_PERMANENTLY","val MOVED_PERMANENTLY: Status","org.http4k.core.Status.Companion.MOVED_PERMANENTLY"]},{"name":"val MULTIPART_FORM_DATA: ContentType","description":"org.http4k.core.ContentType.Companion.MULTIPART_FORM_DATA","location":"http4k-core/org.http4k.core/-content-type/-companion/-m-u-l-t-i-p-a-r-t_-f-o-r-m_-d-a-t-a.html","searchKeys":["MULTIPART_FORM_DATA","val MULTIPART_FORM_DATA: ContentType","org.http4k.core.ContentType.Companion.MULTIPART_FORM_DATA"]},{"name":"val MULTIPART_MIXED: ContentType","description":"org.http4k.core.ContentType.Companion.MULTIPART_MIXED","location":"http4k-core/org.http4k.core/-content-type/-companion/-m-u-l-t-i-p-a-r-t_-m-i-x-e-d.html","searchKeys":["MULTIPART_MIXED","val MULTIPART_MIXED: ContentType","org.http4k.core.ContentType.Companion.MULTIPART_MIXED"]},{"name":"val MULTIPLE_CHOICES: Status","description":"org.http4k.core.Status.Companion.MULTIPLE_CHOICES","location":"http4k-core/org.http4k.core/-status/-companion/-m-u-l-t-i-p-l-e_-c-h-o-i-c-e-s.html","searchKeys":["MULTIPLE_CHOICES","val MULTIPLE_CHOICES: Status","org.http4k.core.Status.Companion.MULTIPLE_CHOICES"]},{"name":"val NON_AUTHORITATIVE_INFORMATION: Status","description":"org.http4k.core.Status.Companion.NON_AUTHORITATIVE_INFORMATION","location":"http4k-core/org.http4k.core/-status/-companion/-n-o-n_-a-u-t-h-o-r-i-t-a-t-i-v-e_-i-n-f-o-r-m-a-t-i-o-n.html","searchKeys":["NON_AUTHORITATIVE_INFORMATION","val NON_AUTHORITATIVE_INFORMATION: Status","org.http4k.core.Status.Companion.NON_AUTHORITATIVE_INFORMATION"]},{"name":"val NOT_ACCEPTABLE: Status","description":"org.http4k.core.Status.Companion.NOT_ACCEPTABLE","location":"http4k-core/org.http4k.core/-status/-companion/-n-o-t_-a-c-c-e-p-t-a-b-l-e.html","searchKeys":["NOT_ACCEPTABLE","val NOT_ACCEPTABLE: Status","org.http4k.core.Status.Companion.NOT_ACCEPTABLE"]},{"name":"val NOT_FOUND: Status","description":"org.http4k.core.Status.Companion.NOT_FOUND","location":"http4k-core/org.http4k.core/-status/-companion/-n-o-t_-f-o-u-n-d.html","searchKeys":["NOT_FOUND","val NOT_FOUND: Status","org.http4k.core.Status.Companion.NOT_FOUND"]},{"name":"val NOT_IMPLEMENTED: Status","description":"org.http4k.core.Status.Companion.NOT_IMPLEMENTED","location":"http4k-core/org.http4k.core/-status/-companion/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d.html","searchKeys":["NOT_IMPLEMENTED","val NOT_IMPLEMENTED: Status","org.http4k.core.Status.Companion.NOT_IMPLEMENTED"]},{"name":"val NOT_MODIFIED: Status","description":"org.http4k.core.Status.Companion.NOT_MODIFIED","location":"http4k-core/org.http4k.core/-status/-companion/-n-o-t_-m-o-d-i-f-i-e-d.html","searchKeys":["NOT_MODIFIED","val NOT_MODIFIED: Status","org.http4k.core.Status.Companion.NOT_MODIFIED"]},{"name":"val NO_CONTENT: Status","description":"org.http4k.core.Status.Companion.NO_CONTENT","location":"http4k-core/org.http4k.core/-status/-companion/-n-o_-c-o-n-t-e-n-t.html","searchKeys":["NO_CONTENT","val NO_CONTENT: Status","org.http4k.core.Status.Companion.NO_CONTENT"]},{"name":"val NonStrict: ContentNegotiation","description":"org.http4k.lens.ContentNegotiation.Companion.NonStrict","location":"http4k-core/org.http4k.lens/-content-negotiation/-companion/-non-strict.html","searchKeys":["NonStrict","val NonStrict: ContentNegotiation","org.http4k.lens.ContentNegotiation.Companion.NonStrict"]},{"name":"val None: ContentNegotiation","description":"org.http4k.lens.ContentNegotiation.Companion.None","location":"http4k-core/org.http4k.lens/-content-negotiation/-companion/-none.html","searchKeys":["None","val None: ContentNegotiation","org.http4k.lens.ContentNegotiation.Companion.None"]},{"name":"val OCTET_STREAM: ContentType","description":"org.http4k.core.ContentType.Companion.OCTET_STREAM","location":"http4k-core/org.http4k.core/-content-type/-companion/-o-c-t-e-t_-s-t-r-e-a-m.html","searchKeys":["OCTET_STREAM","val OCTET_STREAM: ContentType","org.http4k.core.ContentType.Companion.OCTET_STREAM"]},{"name":"val OK: Status","description":"org.http4k.core.Status.Companion.OK","location":"http4k-core/org.http4k.core/-status/-companion/-o-k.html","searchKeys":["OK","val OK: Status","org.http4k.core.Status.Companion.OK"]},{"name":"val PARTIAL_CONTENT: Status","description":"org.http4k.core.Status.Companion.PARTIAL_CONTENT","location":"http4k-core/org.http4k.core/-status/-companion/-p-a-r-t-i-a-l_-c-o-n-t-e-n-t.html","searchKeys":["PARTIAL_CONTENT","val PARTIAL_CONTENT: Status","org.http4k.core.Status.Companion.PARTIAL_CONTENT"]},{"name":"val PAYMENT_REQUIRED: Status","description":"org.http4k.core.Status.Companion.PAYMENT_REQUIRED","location":"http4k-core/org.http4k.core/-status/-companion/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d.html","searchKeys":["PAYMENT_REQUIRED","val PAYMENT_REQUIRED: Status","org.http4k.core.Status.Companion.PAYMENT_REQUIRED"]},{"name":"val PERMANENT_REDIRECT: Status","description":"org.http4k.core.Status.Companion.PERMANENT_REDIRECT","location":"http4k-core/org.http4k.core/-status/-companion/-p-e-r-m-a-n-e-n-t_-r-e-d-i-r-e-c-t.html","searchKeys":["PERMANENT_REDIRECT","val PERMANENT_REDIRECT: Status","org.http4k.core.Status.Companion.PERMANENT_REDIRECT"]},{"name":"val PRECONDITION_FAILED: Status","description":"org.http4k.core.Status.Companion.PRECONDITION_FAILED","location":"http4k-core/org.http4k.core/-status/-companion/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d.html","searchKeys":["PRECONDITION_FAILED","val PRECONDITION_FAILED: Status","org.http4k.core.Status.Companion.PRECONDITION_FAILED"]},{"name":"val PRECONDITION_REQUIRED: Status","description":"org.http4k.core.Status.Companion.PRECONDITION_REQUIRED","location":"http4k-core/org.http4k.core/-status/-companion/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d.html","searchKeys":["PRECONDITION_REQUIRED","val PRECONDITION_REQUIRED: Status","org.http4k.core.Status.Companion.PRECONDITION_REQUIRED"]},{"name":"val PROXY_AUTHENTICATION_REQUIRED: Status","description":"org.http4k.core.Status.Companion.PROXY_AUTHENTICATION_REQUIRED","location":"http4k-core/org.http4k.core/-status/-companion/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d.html","searchKeys":["PROXY_AUTHENTICATION_REQUIRED","val PROXY_AUTHENTICATION_REQUIRED: Status","org.http4k.core.Status.Companion.PROXY_AUTHENTICATION_REQUIRED"]},{"name":"val REQUESTED_RANGE_NOT_SATISFIABLE: Status","description":"org.http4k.core.Status.Companion.REQUESTED_RANGE_NOT_SATISFIABLE","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-q-u-e-s-t-e-d_-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e.html","searchKeys":["REQUESTED_RANGE_NOT_SATISFIABLE","val REQUESTED_RANGE_NOT_SATISFIABLE: Status","org.http4k.core.Status.Companion.REQUESTED_RANGE_NOT_SATISFIABLE"]},{"name":"val REQUEST_ENTITY_TOO_LARGE: Status","description":"org.http4k.core.Status.Companion.REQUEST_ENTITY_TOO_LARGE","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-q-u-e-s-t_-e-n-t-i-t-y_-t-o-o_-l-a-r-g-e.html","searchKeys":["REQUEST_ENTITY_TOO_LARGE","val REQUEST_ENTITY_TOO_LARGE: Status","org.http4k.core.Status.Companion.REQUEST_ENTITY_TOO_LARGE"]},{"name":"val REQUEST_HEADER_FIELDS_TOO_LARGE: Status","description":"org.http4k.core.Status.Companion.REQUEST_HEADER_FIELDS_TOO_LARGE","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e.html","searchKeys":["REQUEST_HEADER_FIELDS_TOO_LARGE","val REQUEST_HEADER_FIELDS_TOO_LARGE: Status","org.http4k.core.Status.Companion.REQUEST_HEADER_FIELDS_TOO_LARGE"]},{"name":"val REQUEST_TIMEOUT: Status","description":"org.http4k.core.Status.Companion.REQUEST_TIMEOUT","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t.html","searchKeys":["REQUEST_TIMEOUT","val REQUEST_TIMEOUT: Status","org.http4k.core.Status.Companion.REQUEST_TIMEOUT"]},{"name":"val REQUEST_URI_TOO_LONG: Status","description":"org.http4k.core.Status.Companion.REQUEST_URI_TOO_LONG","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-q-u-e-s-t_-u-r-i_-t-o-o_-l-o-n-g.html","searchKeys":["REQUEST_URI_TOO_LONG","val REQUEST_URI_TOO_LONG: Status","org.http4k.core.Status.Companion.REQUEST_URI_TOO_LONG"]},{"name":"val RESET_CONTENT: Status","description":"org.http4k.core.Status.Companion.RESET_CONTENT","location":"http4k-core/org.http4k.core/-status/-companion/-r-e-s-e-t_-c-o-n-t-e-n-t.html","searchKeys":["RESET_CONTENT","val RESET_CONTENT: Status","org.http4k.core.Status.Companion.RESET_CONTENT"]},{"name":"val Request: CachingFilters.CacheRequest","description":"org.http4k.filter.CachingFilters.Request","location":"http4k-core/org.http4k.filter/-caching-filters/-request.html","searchKeys":["Request","val Request: CachingFilters.CacheRequest","org.http4k.filter.CachingFilters.Request"]},{"name":"val Response: CachingFilters.CacheResponse","description":"org.http4k.filter.CachingFilters.Response","location":"http4k-core/org.http4k.filter/-caching-filters/-response.html","searchKeys":["Response","val Response: CachingFilters.CacheResponse","org.http4k.filter.CachingFilters.Response"]},{"name":"val SAMPLE: SamplingDecision","description":"org.http4k.filter.SamplingDecision.Companion.SAMPLE","location":"http4k-core/org.http4k.filter/-sampling-decision/-companion/-s-a-m-p-l-e.html","searchKeys":["SAMPLE","val SAMPLE: SamplingDecision","org.http4k.filter.SamplingDecision.Companion.SAMPLE"]},{"name":"val SEE_OTHER: Status","description":"org.http4k.core.Status.Companion.SEE_OTHER","location":"http4k-core/org.http4k.core/-status/-companion/-s-e-e_-o-t-h-e-r.html","searchKeys":["SEE_OTHER","val SEE_OTHER: Status","org.http4k.core.Status.Companion.SEE_OTHER"]},{"name":"val SERVICE_UNAVAILABLE: Status","description":"org.http4k.core.Status.Companion.SERVICE_UNAVAILABLE","location":"http4k-core/org.http4k.core/-status/-companion/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e.html","searchKeys":["SERVICE_UNAVAILABLE","val SERVICE_UNAVAILABLE: Status","org.http4k.core.Status.Companion.SERVICE_UNAVAILABLE"]},{"name":"val SWITCHING_PROTOCOLS: Status","description":"org.http4k.core.Status.Companion.SWITCHING_PROTOCOLS","location":"http4k-core/org.http4k.core/-status/-companion/-s-w-i-t-c-h-i-n-g_-p-r-o-t-o-c-o-l-s.html","searchKeys":["SWITCHING_PROTOCOLS","val SWITCHING_PROTOCOLS: Status","org.http4k.core.Status.Companion.SWITCHING_PROTOCOLS"]},{"name":"val Strict: ContentNegotiation","description":"org.http4k.lens.ContentNegotiation.Companion.Strict","location":"http4k-core/org.http4k.lens/-content-negotiation/-companion/-strict.html","searchKeys":["Strict","val Strict: ContentNegotiation","org.http4k.lens.ContentNegotiation.Companion.Strict"]},{"name":"val StrictNoDirective: ContentNegotiation","description":"org.http4k.lens.ContentNegotiation.Companion.StrictNoDirective","location":"http4k-core/org.http4k.lens/-content-negotiation/-companion/-strict-no-directive.html","searchKeys":["StrictNoDirective","val StrictNoDirective: ContentNegotiation","org.http4k.lens.ContentNegotiation.Companion.StrictNoDirective"]},{"name":"val TEMPORARY_REDIRECT: Status","description":"org.http4k.core.Status.Companion.TEMPORARY_REDIRECT","location":"http4k-core/org.http4k.core/-status/-companion/-t-e-m-p-o-r-a-r-y_-r-e-d-i-r-e-c-t.html","searchKeys":["TEMPORARY_REDIRECT","val TEMPORARY_REDIRECT: Status","org.http4k.core.Status.Companion.TEMPORARY_REDIRECT"]},{"name":"val TEXT_CSV: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_CSV","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-c-s-v.html","searchKeys":["TEXT_CSV","val TEXT_CSV: ContentType","org.http4k.core.ContentType.Companion.TEXT_CSV"]},{"name":"val TEXT_EVENT_STREAM: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_EVENT_STREAM","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-e-v-e-n-t_-s-t-r-e-a-m.html","searchKeys":["TEXT_EVENT_STREAM","val TEXT_EVENT_STREAM: ContentType","org.http4k.core.ContentType.Companion.TEXT_EVENT_STREAM"]},{"name":"val TEXT_HTML: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_HTML","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-h-t-m-l.html","searchKeys":["TEXT_HTML","val TEXT_HTML: ContentType","org.http4k.core.ContentType.Companion.TEXT_HTML"]},{"name":"val TEXT_PLAIN: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_PLAIN","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-p-l-a-i-n.html","searchKeys":["TEXT_PLAIN","val TEXT_PLAIN: ContentType","org.http4k.core.ContentType.Companion.TEXT_PLAIN"]},{"name":"val TEXT_XML: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_XML","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-x-m-l.html","searchKeys":["TEXT_XML","val TEXT_XML: ContentType","org.http4k.core.ContentType.Companion.TEXT_XML"]},{"name":"val TEXT_YAML: ContentType","description":"org.http4k.core.ContentType.Companion.TEXT_YAML","location":"http4k-core/org.http4k.core/-content-type/-companion/-t-e-x-t_-y-a-m-l.html","searchKeys":["TEXT_YAML","val TEXT_YAML: ContentType","org.http4k.core.ContentType.Companion.TEXT_YAML"]},{"name":"val THREAD_LOCAL: ZipkinTracesStorage","description":"org.http4k.filter.ZipkinTracesStorage.Companion.THREAD_LOCAL","location":"http4k-core/org.http4k.filter/-zipkin-traces-storage/-companion/-t-h-r-e-a-d_-l-o-c-a-l.html","searchKeys":["THREAD_LOCAL","val THREAD_LOCAL: ZipkinTracesStorage","org.http4k.filter.ZipkinTracesStorage.Companion.THREAD_LOCAL"]},{"name":"val TOO_EARLY: Status","description":"org.http4k.core.Status.Companion.TOO_EARLY","location":"http4k-core/org.http4k.core/-status/-companion/-t-o-o_-e-a-r-l-y.html","searchKeys":["TOO_EARLY","val TOO_EARLY: Status","org.http4k.core.Status.Companion.TOO_EARLY"]},{"name":"val TOO_MANY_REQUESTS: Status","description":"org.http4k.core.Status.Companion.TOO_MANY_REQUESTS","location":"http4k-core/org.http4k.core/-status/-companion/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s.html","searchKeys":["TOO_MANY_REQUESTS","val TOO_MANY_REQUESTS: Status","org.http4k.core.Status.Companion.TOO_MANY_REQUESTS"]},{"name":"val UNAUTHORIZED: Status","description":"org.http4k.core.Status.Companion.UNAUTHORIZED","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-a-u-t-h-o-r-i-z-e-d.html","searchKeys":["UNAUTHORIZED","val UNAUTHORIZED: Status","org.http4k.core.Status.Companion.UNAUTHORIZED"]},{"name":"val UNAVAILABLE_FOR_LEGAL_REASONS: Status","description":"org.http4k.core.Status.Companion.UNAVAILABLE_FOR_LEGAL_REASONS","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s.html","searchKeys":["UNAVAILABLE_FOR_LEGAL_REASONS","val UNAVAILABLE_FOR_LEGAL_REASONS: Status","org.http4k.core.Status.Companion.UNAVAILABLE_FOR_LEGAL_REASONS"]},{"name":"val UNKNOWN_HOST: Status","description":"org.http4k.core.Status.Companion.UNKNOWN_HOST","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-k-n-o-w-n_-h-o-s-t.html","searchKeys":["UNKNOWN_HOST","val UNKNOWN_HOST: Status","org.http4k.core.Status.Companion.UNKNOWN_HOST"]},{"name":"val UNPROCESSABLE_ENTITY: Status","description":"org.http4k.core.Status.Companion.UNPROCESSABLE_ENTITY","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y.html","searchKeys":["UNPROCESSABLE_ENTITY","val UNPROCESSABLE_ENTITY: Status","org.http4k.core.Status.Companion.UNPROCESSABLE_ENTITY"]},{"name":"val UNSATISFIABLE_PARAMETERS: Status","description":"org.http4k.core.Status.Companion.UNSATISFIABLE_PARAMETERS","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-s-a-t-i-s-f-i-a-b-l-e_-p-a-r-a-m-e-t-e-r-s.html","searchKeys":["UNSATISFIABLE_PARAMETERS","val UNSATISFIABLE_PARAMETERS: Status","org.http4k.core.Status.Companion.UNSATISFIABLE_PARAMETERS"]},{"name":"val UNSUPPORTED_MEDIA_TYPE: Status","description":"org.http4k.core.Status.Companion.UNSUPPORTED_MEDIA_TYPE","location":"http4k-core/org.http4k.core/-status/-companion/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e.html","searchKeys":["UNSUPPORTED_MEDIA_TYPE","val UNSUPPORTED_MEDIA_TYPE: Status","org.http4k.core.Status.Companion.UNSUPPORTED_MEDIA_TYPE"]},{"name":"val UPGRADE_REQUIRED: Status","description":"org.http4k.core.Status.Companion.UPGRADE_REQUIRED","location":"http4k-core/org.http4k.core/-status/-companion/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d.html","searchKeys":["UPGRADE_REQUIRED","val UPGRADE_REQUIRED: Status","org.http4k.core.Status.Companion.UPGRADE_REQUIRED"]},{"name":"val USE_PROXY: Status","description":"org.http4k.core.Status.Companion.USE_PROXY","location":"http4k-core/org.http4k.core/-status/-companion/-u-s-e_-p-r-o-x-y.html","searchKeys":["USE_PROXY","val USE_PROXY: Status","org.http4k.core.Status.Companion.USE_PROXY"]},{"name":"val UnsafeGlobalPermissive: CorsPolicy","description":"org.http4k.filter.CorsPolicy.Companion.UnsafeGlobalPermissive","location":"http4k-core/org.http4k.filter/-cors-policy/-companion/-unsafe-global-permissive.html","searchKeys":["UnsafeGlobalPermissive","val UnsafeGlobalPermissive: CorsPolicy","org.http4k.filter.CorsPolicy.Companion.UnsafeGlobalPermissive"]},{"name":"val X_B3_PARENTSPANID: BiDiLens<HttpMessage, TraceId?>","description":"org.http4k.filter.ZipkinTraces.Companion.X_B3_PARENTSPANID","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/-x_-b3_-p-a-r-e-n-t-s-p-a-n-i-d.html","searchKeys":["X_B3_PARENTSPANID","val X_B3_PARENTSPANID: BiDiLens<HttpMessage, TraceId?>","org.http4k.filter.ZipkinTraces.Companion.X_B3_PARENTSPANID"]},{"name":"val X_B3_SPANID: BiDiLens<HttpMessage, TraceId?>","description":"org.http4k.filter.ZipkinTraces.Companion.X_B3_SPANID","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/-x_-b3_-s-p-a-n-i-d.html","searchKeys":["X_B3_SPANID","val X_B3_SPANID: BiDiLens<HttpMessage, TraceId?>","org.http4k.filter.ZipkinTraces.Companion.X_B3_SPANID"]},{"name":"val X_B3_TRACEID: BiDiLens<HttpMessage, TraceId?>","description":"org.http4k.filter.ZipkinTraces.Companion.X_B3_TRACEID","location":"http4k-core/org.http4k.filter/-zipkin-traces/-companion/-x_-b3_-t-r-a-c-e-i-d.html","searchKeys":["X_B3_TRACEID","val X_B3_TRACEID: BiDiLens<HttpMessage, TraceId?>","org.http4k.filter.ZipkinTraces.Companion.X_B3_TRACEID"]},{"name":"val address: String","description":"org.http4k.core.RequestSource.address","location":"http4k-core/org.http4k.core/-request-source/address.html","searchKeys":["address","val address: String","org.http4k.core.RequestSource.address"]},{"name":"val ansi: String","description":"org.http4k.routing.inspect.BackgroundColour.ansi","location":"http4k-core/org.http4k.routing.inspect/-background-colour/ansi.html","searchKeys":["ansi","val ansi: String","org.http4k.routing.inspect.BackgroundColour.ansi"]},{"name":"val ansi: String","description":"org.http4k.routing.inspect.ForegroundColour.ansi","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/ansi.html","searchKeys":["ansi","val ansi: String","org.http4k.routing.inspect.ForegroundColour.ansi"]},{"name":"val ansi: String","description":"org.http4k.routing.inspect.Variation.ansi","location":"http4k-core/org.http4k.routing.inspect/-variation/ansi.html","searchKeys":["ansi","val ansi: String","org.http4k.routing.inspect.Variation.ansi"]},{"name":"val asIn: (OUT) -> IN","description":"org.http4k.lens.BiDiMapping.asIn","location":"http4k-core/org.http4k.lens/-bi-di-mapping/as-in.html","searchKeys":["asIn","val asIn: (OUT) -> IN","org.http4k.lens.BiDiMapping.asIn"]},{"name":"val asOut: (IN) -> OUT","description":"org.http4k.lens.BiDiMapping.asOut","location":"http4k-core/org.http4k.lens/-bi-di-mapping/as-out.html","searchKeys":["asOut","val asOut: (IN) -> OUT","org.http4k.lens.BiDiMapping.asOut"]},{"name":"val authority: String","description":"org.http4k.core.Uri.authority","location":"http4k-core/org.http4k.core/-uri/authority.html","searchKeys":["authority","val authority: String","org.http4k.core.Uri.authority"]},{"name":"val backgroundColour: BackgroundColour","description":"org.http4k.routing.inspect.TextStyle.backgroundColour","location":"http4k-core/org.http4k.routing.inspect/-text-style/background-colour.html","searchKeys":["backgroundColour","val backgroundColour: BackgroundColour","org.http4k.routing.inspect.TextStyle.backgroundColour"]},{"name":"val body: Body","description":"org.http4k.filter.CompressionResult.body","location":"http4k-core/org.http4k.filter/-compression-result/body.html","searchKeys":["body","val body: Body","org.http4k.filter.CompressionResult.body"]},{"name":"val category: EventCategory","description":"org.http4k.events.Event.Companion.Error.category","location":"http4k-core/org.http4k.events/-event/-companion/-error/category.html","searchKeys":["category","val category: EventCategory","org.http4k.events.Event.Companion.Error.category"]},{"name":"val cause: Throwable? = null","description":"org.http4k.events.Event.Companion.Error.cause","location":"http4k-core/org.http4k.events/-event/-companion/-error/cause.html","searchKeys":["cause","val cause: Throwable? = null","org.http4k.events.Event.Companion.Error.cause"]},{"name":"val causes: List<LensFailure>","description":"org.http4k.lens.LensFailures.causes","location":"http4k-core/org.http4k.lens/-lens-failures/causes.html","searchKeys":["causes","val causes: List<LensFailure>","org.http4k.lens.LensFailures.causes"]},{"name":"val children: List<RouterDescription>","description":"org.http4k.routing.RouterDescription.children","location":"http4k-core/org.http4k.routing/-router-description/children.html","searchKeys":["children","val children: List<RouterDescription>","org.http4k.routing.RouterDescription.children"]},{"name":"val clazz: Class<OUT>","description":"org.http4k.lens.BiDiMapping.clazz","location":"http4k-core/org.http4k.lens/-bi-di-mapping/clazz.html","searchKeys":["clazz","val clazz: Class<OUT>","org.http4k.lens.BiDiMapping.clazz"]},{"name":"val client: MetricsDefaults","description":"org.http4k.metrics.MetricsDefaults.Companion.client","location":"http4k-core/org.http4k.metrics/-metrics-defaults/-companion/client.html","searchKeys":["client","val client: MetricsDefaults","org.http4k.metrics.MetricsDefaults.Companion.client"]},{"name":"val clientError: Boolean","description":"org.http4k.core.Status.clientError","location":"http4k-core/org.http4k.core/-status/client-error.html","searchKeys":["clientError","val clientError: Boolean","org.http4k.core.Status.clientError"]},{"name":"val clz: KClass<T>","description":"org.http4k.lens.ParamMeta.EnumParam.clz","location":"http4k-core/org.http4k.lens/-param-meta/-enum-param/clz.html","searchKeys":["clz","val clz: KClass<T>","org.http4k.lens.ParamMeta.EnumParam.clz"]},{"name":"val code: Int","description":"org.http4k.core.Status.code","location":"http4k-core/org.http4k.core/-status/code.html","searchKeys":["code","val code: Int","org.http4k.core.Status.code"]},{"name":"val contentEncoding: String?","description":"org.http4k.filter.CompressionResult.contentEncoding","location":"http4k-core/org.http4k.filter/-compression-result/content-encoding.html","searchKeys":["contentEncoding","val contentEncoding: String?","org.http4k.filter.CompressionResult.contentEncoding"]},{"name":"val contentType: ContentType","description":"org.http4k.lens.BodyLens.contentType","location":"http4k-core/org.http4k.lens/-body-lens/content-type.html","searchKeys":["contentType","val contentType: ContentType","org.http4k.lens.BodyLens.contentType"]},{"name":"val contentTypes: List<ContentType>","description":"org.http4k.core.Accept.contentTypes","location":"http4k-core/org.http4k.core/-accept/content-types.html","searchKeys":["contentTypes","val contentTypes: List<ContentType>","org.http4k.core.Accept.contentTypes"]},{"name":"val cookie: Cookie","description":"org.http4k.filter.cookie.LocalCookie.cookie","location":"http4k-core/org.http4k.filter.cookie/-local-cookie/cookie.html","searchKeys":["cookie","val cookie: Cookie","org.http4k.filter.cookie.LocalCookie.cookie"]},{"name":"val counterDescription: Pair<String, String>","description":"org.http4k.metrics.MetricsDefaults.counterDescription","location":"http4k-core/org.http4k.metrics/-metrics-defaults/counter-description.html","searchKeys":["counterDescription","val counterDescription: Pair<String, String>","org.http4k.metrics.MetricsDefaults.counterDescription"]},{"name":"val credentials: Boolean = false","description":"org.http4k.filter.CorsPolicy.credentials","location":"http4k-core/org.http4k.filter/-cors-policy/credentials.html","searchKeys":["credentials","val credentials: Boolean = false","org.http4k.filter.CorsPolicy.credentials"]},{"name":"val credentials: T","description":"org.http4k.security.ExpiringCredentials.credentials","location":"http4k-core/org.http4k.security/-expiring-credentials/credentials.html","searchKeys":["credentials","val credentials: T","org.http4k.security.ExpiringCredentials.credentials"]},{"name":"val description: String","description":"org.http4k.core.Status.description","location":"http4k-core/org.http4k.core/-status/description.html","searchKeys":["description","val description: String","org.http4k.core.Status.description"]},{"name":"val description: String","description":"org.http4k.lens.ParamMeta.description","location":"http4k-core/org.http4k.lens/-param-meta/description.html","searchKeys":["description","val description: String","org.http4k.lens.ParamMeta.description"]},{"name":"val description: String","description":"org.http4k.routing.RouterDescription.description","location":"http4k-core/org.http4k.routing/-router-description/description.html","searchKeys":["description","val description: String","org.http4k.routing.RouterDescription.description"]},{"name":"val description: String?","description":"org.http4k.lens.Meta.description","location":"http4k-core/org.http4k.lens/-meta/description.html","searchKeys":["description","val description: String?","org.http4k.lens.Meta.description"]},{"name":"val directives: Parameters","description":"org.http4k.core.Accept.directives","location":"http4k-core/org.http4k.core/-accept/directives.html","searchKeys":["directives","val directives: Parameters","org.http4k.core.Accept.directives"]},{"name":"val directives: Parameters","description":"org.http4k.core.ContentType.directives","location":"http4k-core/org.http4k.core/-content-type/directives.html","searchKeys":["directives","val directives: Parameters","org.http4k.core.ContentType.directives"]},{"name":"val domain: String? = null","description":"org.http4k.core.cookie.Cookie.domain","location":"http4k-core/org.http4k.core.cookie/-cookie/domain.html","searchKeys":["domain","val domain: String? = null","org.http4k.core.cookie.Cookie.domain"]},{"name":"val duration: Duration","description":"org.http4k.core.HttpTransaction.duration","location":"http4k-core/org.http4k.core/-http-transaction/duration.html","searchKeys":["duration","val duration: Duration","org.http4k.core.HttpTransaction.duration"]},{"name":"val entries: EnumEntries<BackgroundColour>","description":"org.http4k.routing.inspect.BackgroundColour.entries","location":"http4k-core/org.http4k.routing.inspect/-background-colour/entries.html","searchKeys":["entries","val entries: EnumEntries<BackgroundColour>","org.http4k.routing.inspect.BackgroundColour.entries"]},{"name":"val entries: EnumEntries<EscapeMode>","description":"org.http4k.routing.inspect.EscapeMode.entries","location":"http4k-core/org.http4k.routing.inspect/-escape-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<EscapeMode>","org.http4k.routing.inspect.EscapeMode.entries"]},{"name":"val entries: EnumEntries<Failure.Type>","description":"org.http4k.lens.Failure.Type.entries","location":"http4k-core/org.http4k.lens/-failure/-type/entries.html","searchKeys":["entries","val entries: EnumEntries<Failure.Type>","org.http4k.lens.Failure.Type.entries"]},{"name":"val entries: EnumEntries<ForegroundColour>","description":"org.http4k.routing.inspect.ForegroundColour.entries","location":"http4k-core/org.http4k.routing.inspect/-foreground-colour/entries.html","searchKeys":["entries","val entries: EnumEntries<ForegroundColour>","org.http4k.routing.inspect.ForegroundColour.entries"]},{"name":"val entries: EnumEntries<Method>","description":"org.http4k.core.Method.entries","location":"http4k-core/org.http4k.core/-method/entries.html","searchKeys":["entries","val entries: EnumEntries<Method>","org.http4k.core.Method.entries"]},{"name":"val entries: EnumEntries<RequestFilters.ProxyProtocolMode>","description":"org.http4k.filter.RequestFilters.ProxyProtocolMode.entries","location":"http4k-core/org.http4k.filter/-request-filters/-proxy-protocol-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<RequestFilters.ProxyProtocolMode>","org.http4k.filter.RequestFilters.ProxyProtocolMode.entries"]},{"name":"val entries: EnumEntries<SameSite>","description":"org.http4k.core.cookie.SameSite.entries","location":"http4k-core/org.http4k.core.cookie/-same-site/entries.html","searchKeys":["entries","val entries: EnumEntries<SameSite>","org.http4k.core.cookie.SameSite.entries"]},{"name":"val entries: EnumEntries<Validator>","description":"org.http4k.lens.Validator.entries","location":"http4k-core/org.http4k.lens/-validator/entries.html","searchKeys":["entries","val entries: EnumEntries<Validator>","org.http4k.lens.Validator.entries"]},{"name":"val entries: EnumEntries<Variation>","description":"org.http4k.routing.inspect.Variation.entries","location":"http4k-core/org.http4k.routing.inspect/-variation/entries.html","searchKeys":["entries","val entries: EnumEntries<Variation>","org.http4k.routing.inspect.Variation.entries"]},{"name":"val errors: List<Failure>","description":"org.http4k.lens.WebForm.errors","location":"http4k-core/org.http4k.lens/-web-form/errors.html","searchKeys":["errors","val errors: List<Failure>","org.http4k.lens.WebForm.errors"]},{"name":"val event: Event","description":"org.http4k.events.MetadataEvent.event","location":"http4k-core/org.http4k.events/-metadata-event/event.html","searchKeys":["event","val event: Event","org.http4k.events.MetadataEvent.event"]},{"name":"val expires: Instant? = null","description":"org.http4k.core.cookie.Cookie.expires","location":"http4k-core/org.http4k.core.cookie/-cookie/expires.html","searchKeys":["expires","val expires: Instant? = null","org.http4k.core.cookie.Cookie.expires"]},{"name":"val expiry: Instant","description":"org.http4k.security.ExpiringCredentials.expiry","location":"http4k-core/org.http4k.security/-expiring-credentials/expiry.html","searchKeys":["expiry","val expiry: Instant","org.http4k.security.ExpiringCredentials.expiry"]},{"name":"val exposedHeaders: List<String>","description":"org.http4k.filter.CorsPolicy.exposedHeaders","location":"http4k-core/org.http4k.filter/-cors-policy/exposed-headers.html","searchKeys":["exposedHeaders","val exposedHeaders: List<String>","org.http4k.filter.CorsPolicy.exposedHeaders"]},{"name":"val failures: List<Failure>","description":"org.http4k.lens.LensFailure.failures","location":"http4k-core/org.http4k.lens/-lens-failure/failures.html","searchKeys":["failures","val failures: List<Failure>","org.http4k.lens.LensFailure.failures"]},{"name":"val fields: Map<String, List<String>>","description":"org.http4k.lens.WebForm.fields","location":"http4k-core/org.http4k.lens/-web-form/fields.html","searchKeys":["fields","val fields: Map<String, List<String>>","org.http4k.lens.WebForm.fields"]},{"name":"val foregroundColour: ForegroundColour","description":"org.http4k.routing.inspect.TextStyle.foregroundColour","location":"http4k-core/org.http4k.routing.inspect/-text-style/foreground-colour.html","searchKeys":["foregroundColour","val foregroundColour: ForegroundColour","org.http4k.routing.inspect.TextStyle.foregroundColour"]},{"name":"val fragment: String","description":"org.http4k.core.Uri.fragment","location":"http4k-core/org.http4k.core/-uri/fragment.html","searchKeys":["fragment","val fragment: String","org.http4k.core.Uri.fragment"]},{"name":"val headers: List<String>","description":"org.http4k.filter.CorsPolicy.headers","location":"http4k-core/org.http4k.filter/-cors-policy/headers.html","searchKeys":["headers","val headers: List<String>","org.http4k.filter.CorsPolicy.headers"]},{"name":"val host: String","description":"org.http4k.core.Uri.host","location":"http4k-core/org.http4k.core/-uri/host.html","searchKeys":["host","val host: String","org.http4k.core.Uri.host"]},{"name":"val id: UUID","description":"org.http4k.core.RequestContext.id","location":"http4k-core/org.http4k.core/-request-context/id.html","searchKeys":["id","val id: UUID","org.http4k.core.RequestContext.id"]},{"name":"val informational: Boolean","description":"org.http4k.core.Status.informational","location":"http4k-core/org.http4k.core/-status/informational.html","searchKeys":["informational","val informational: Boolean","org.http4k.core.Status.informational"]},{"name":"val labeler: HttpTransactionLabeler","description":"org.http4k.metrics.MetricsDefaults.labeler","location":"http4k-core/org.http4k.metrics/-metrics-defaults/labeler.html","searchKeys":["labeler","val labeler: HttpTransactionLabeler","org.http4k.metrics.MetricsDefaults.labeler"]},{"name":"val labels: Map<String, String>","description":"org.http4k.core.HttpTransaction.labels","location":"http4k-core/org.http4k.core/-http-transaction/labels.html","searchKeys":["labels","val labels: Map<String, String>","org.http4k.core.HttpTransaction.labels"]},{"name":"val latency: Long","description":"org.http4k.events.HttpEvent.latency","location":"http4k-core/org.http4k.events/-http-event/latency.html","searchKeys":["latency","val latency: Long","org.http4k.events.HttpEvent.latency"]},{"name":"val location: String","description":"org.http4k.lens.LensSpec.location","location":"http4k-core/org.http4k.lens/-lens-spec/location.html","searchKeys":["location","val location: String","org.http4k.lens.LensSpec.location"]},{"name":"val location: String","description":"org.http4k.lens.Meta.location","location":"http4k-core/org.http4k.lens/-meta/location.html","searchKeys":["location","val location: String","org.http4k.lens.Meta.location"]},{"name":"val maxAge: Int? = null","description":"org.http4k.filter.CorsPolicy.maxAge","location":"http4k-core/org.http4k.filter/-cors-policy/max-age.html","searchKeys":["maxAge","val maxAge: Int? = null","org.http4k.filter.CorsPolicy.maxAge"]},{"name":"val maxAge: Long? = null","description":"org.http4k.core.cookie.Cookie.maxAge","location":"http4k-core/org.http4k.core.cookie/-cookie/max-age.html","searchKeys":["maxAge","val maxAge: Long? = null","org.http4k.core.cookie.Cookie.maxAge"]},{"name":"val maxAge: MaxAgeTtl","description":"org.http4k.filter.DefaultCacheTimings.maxAge","location":"http4k-core/org.http4k.filter/-default-cache-timings/max-age.html","searchKeys":["maxAge","val maxAge: MaxAgeTtl","org.http4k.filter.DefaultCacheTimings.maxAge"]},{"name":"val message: String","description":"org.http4k.events.Event.Companion.Error.message","location":"http4k-core/org.http4k.events/-event/-companion/-error/message.html","searchKeys":["message","val message: String","org.http4k.events.Event.Companion.Error.message"]},{"name":"val meta: Meta","description":"org.http4k.lens.Lens.meta","location":"http4k-core/org.http4k.lens/-lens/meta.html","searchKeys":["meta","val meta: Meta","org.http4k.lens.Lens.meta"]},{"name":"val metadata: Map<String, Any>","description":"org.http4k.events.MetadataEvent.metadata","location":"http4k-core/org.http4k.events/-metadata-event/metadata.html","searchKeys":["metadata","val metadata: Map<String, Any>","org.http4k.events.MetadataEvent.metadata"]},{"name":"val metadata: Map<String, Any>","description":"org.http4k.lens.Meta.metadata","location":"http4k-core/org.http4k.lens/-meta/metadata.html","searchKeys":["metadata","val metadata: Map<String, Any>","org.http4k.lens.Meta.metadata"]},{"name":"val metas: List<Meta>","description":"org.http4k.lens.BodyLens.metas","location":"http4k-core/org.http4k.lens/-body-lens/metas.html","searchKeys":["metas","val metas: List<Meta>","org.http4k.lens.BodyLens.metas"]},{"name":"val method: Method","description":"org.http4k.events.HttpEvent.method","location":"http4k-core/org.http4k.events/-http-event/method.html","searchKeys":["method","val method: Method","org.http4k.events.HttpEvent.method"]},{"name":"val methods: List<Method>","description":"org.http4k.filter.CorsPolicy.methods","location":"http4k-core/org.http4k.filter/-cors-policy/methods.html","searchKeys":["methods","val methods: List<Method>","org.http4k.filter.CorsPolicy.methods"]},{"name":"val name: String","description":"org.http4k.core.cookie.Cookie.name","location":"http4k-core/org.http4k.core.cookie/-cookie/name.html","searchKeys":["name","val name: String","org.http4k.core.cookie.Cookie.name"]},{"name":"val name: String","description":"org.http4k.lens.Meta.name","location":"http4k-core/org.http4k.lens/-meta/name.html","searchKeys":["name","val name: String","org.http4k.lens.Meta.name"]},{"name":"val orElse: Router","description":"org.http4k.routing.Router.Companion.orElse","location":"http4k-core/org.http4k.routing/-router/-companion/or-else.html","searchKeys":["orElse","val orElse: Router","org.http4k.routing.Router.Companion.orElse"]},{"name":"val originPolicy: OriginPolicy","description":"org.http4k.filter.CorsPolicy.originPolicy","location":"http4k-core/org.http4k.filter/-cors-policy/origin-policy.html","searchKeys":["originPolicy","val originPolicy: OriginPolicy","org.http4k.filter.CorsPolicy.originPolicy"]},{"name":"val paramMeta: ParamMeta","description":"org.http4k.lens.Meta.paramMeta","location":"http4k-core/org.http4k.lens/-meta/param-meta.html","searchKeys":["paramMeta","val paramMeta: ParamMeta","org.http4k.lens.Meta.paramMeta"]},{"name":"val parentSpanId: TraceId?","description":"org.http4k.filter.ZipkinTraces.parentSpanId","location":"http4k-core/org.http4k.filter/-zipkin-traces/parent-span-id.html","searchKeys":["parentSpanId","val parentSpanId: TraceId?","org.http4k.filter.ZipkinTraces.parentSpanId"]},{"name":"val password: String","description":"org.http4k.core.Credentials.password","location":"http4k-core/org.http4k.core/-credentials/password.html","searchKeys":["password","val password: String","org.http4k.core.Credentials.password"]},{"name":"val path: String","description":"org.http4k.core.Uri.path","location":"http4k-core/org.http4k.core/-uri/path.html","searchKeys":["path","val path: String","org.http4k.core.Uri.path"]},{"name":"val path: String? = null","description":"org.http4k.core.cookie.Cookie.path","location":"http4k-core/org.http4k.core.cookie/-cookie/path.html","searchKeys":["path","val path: String? = null","org.http4k.core.cookie.Cookie.path"]},{"name":"val port: Int = 8000","description":"org.http4k.server.SunHttp.port","location":"http4k-core/org.http4k.server/-sun-http/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.SunHttp.port"]},{"name":"val port: Int = 8000","description":"org.http4k.server.SunHttpLoom.port","location":"http4k-core/org.http4k.server/-sun-http-loom/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.SunHttpLoom.port"]},{"name":"val port: Int?","description":"org.http4k.core.Uri.port","location":"http4k-core/org.http4k.core/-uri/port.html","searchKeys":["port","val port: Int?","org.http4k.core.Uri.port"]},{"name":"val port: Int? = 0","description":"org.http4k.core.RequestSource.port","location":"http4k-core/org.http4k.core/-request-source/port.html","searchKeys":["port","val port: Int? = 0","org.http4k.core.RequestSource.port"]},{"name":"val query: String","description":"org.http4k.core.Uri.query","location":"http4k-core/org.http4k.core/-uri/query.html","searchKeys":["query","val query: String","org.http4k.core.Uri.query"]},{"name":"val redirection: Boolean","description":"org.http4k.core.Status.redirection","location":"http4k-core/org.http4k.core/-status/redirection.html","searchKeys":["redirection","val redirection: Boolean","org.http4k.core.Status.redirection"]},{"name":"val request: Request","description":"org.http4k.core.HttpTransaction.request","location":"http4k-core/org.http4k.core/-http-transaction/request.html","searchKeys":["request","val request: Request","org.http4k.core.HttpTransaction.request"]},{"name":"val required: Boolean","description":"org.http4k.lens.Meta.required","location":"http4k-core/org.http4k.lens/-meta/required.html","searchKeys":["required","val required: Boolean","org.http4k.lens.Meta.required"]},{"name":"val response: Response","description":"org.http4k.core.HttpTransaction.response","location":"http4k-core/org.http4k.core/-http-transaction/response.html","searchKeys":["response","val response: Response","org.http4k.core.HttpTransaction.response"]},{"name":"val routingGroup: String","description":"org.http4k.core.HttpTransaction.routingGroup","location":"http4k-core/org.http4k.core/-http-transaction/routing-group.html","searchKeys":["routingGroup","val routingGroup: String","org.http4k.core.HttpTransaction.routingGroup"]},{"name":"val sameSite: SameSite? = null","description":"org.http4k.core.cookie.Cookie.sameSite","location":"http4k-core/org.http4k.core.cookie/-cookie/same-site.html","searchKeys":["sameSite","val sameSite: SameSite? = null","org.http4k.core.cookie.Cookie.sameSite"]},{"name":"val samplingDecision: SamplingDecision","description":"org.http4k.filter.ZipkinTraces.samplingDecision","location":"http4k-core/org.http4k.filter/-zipkin-traces/sampling-decision.html","searchKeys":["samplingDecision","val samplingDecision: SamplingDecision","org.http4k.filter.ZipkinTraces.samplingDecision"]},{"name":"val scheme: String","description":"org.http4k.core.Uri.scheme","location":"http4k-core/org.http4k.core/-uri/scheme.html","searchKeys":["scheme","val scheme: String","org.http4k.core.Uri.scheme"]},{"name":"val scheme: String? = null","description":"org.http4k.core.RequestSource.scheme","location":"http4k-core/org.http4k.core/-request-source/scheme.html","searchKeys":["scheme","val scheme: String? = null","org.http4k.core.RequestSource.scheme"]},{"name":"val server: MetricsDefaults","description":"org.http4k.metrics.MetricsDefaults.Companion.server","location":"http4k-core/org.http4k.metrics/-metrics-defaults/-companion/server.html","searchKeys":["server","val server: MetricsDefaults","org.http4k.metrics.MetricsDefaults.Companion.server"]},{"name":"val serverError: Boolean","description":"org.http4k.core.Status.serverError","location":"http4k-core/org.http4k.core/-status/server-error.html","searchKeys":["serverError","val serverError: Boolean","org.http4k.core.Status.serverError"]},{"name":"val serverValues: List<Status>","description":"org.http4k.core.Status.Companion.serverValues","location":"http4k-core/org.http4k.core/-status/-companion/server-values.html","searchKeys":["serverValues","val serverValues: List<Status>","org.http4k.core.Status.Companion.serverValues"]},{"name":"val spanId: TraceId","description":"org.http4k.filter.ZipkinTraces.spanId","location":"http4k-core/org.http4k.filter/-zipkin-traces/span-id.html","searchKeys":["spanId","val spanId: TraceId","org.http4k.filter.ZipkinTraces.spanId"]},{"name":"val staleIfErrorTtl: StaleIfErrorTtl","description":"org.http4k.filter.DefaultCacheTimings.staleIfErrorTtl","location":"http4k-core/org.http4k.filter/-default-cache-timings/stale-if-error-ttl.html","searchKeys":["staleIfErrorTtl","val staleIfErrorTtl: StaleIfErrorTtl","org.http4k.filter.DefaultCacheTimings.staleIfErrorTtl"]},{"name":"val staleWhenRevalidateTtl: StaleWhenRevalidateTtl","description":"org.http4k.filter.DefaultCacheTimings.staleWhenRevalidateTtl","location":"http4k-core/org.http4k.filter/-default-cache-timings/stale-when-revalidate-ttl.html","searchKeys":["staleWhenRevalidateTtl","val staleWhenRevalidateTtl: StaleWhenRevalidateTtl","org.http4k.filter.DefaultCacheTimings.staleWhenRevalidateTtl"]},{"name":"val status: Status","description":"org.http4k.events.HttpEvent.status","location":"http4k-core/org.http4k.events/-http-event/status.html","searchKeys":["status","val status: Status","org.http4k.events.HttpEvent.status"]},{"name":"val successful: Boolean","description":"org.http4k.core.Status.successful","location":"http4k-core/org.http4k.core/-status/successful.html","searchKeys":["successful","val successful: Boolean","org.http4k.core.Status.successful"]},{"name":"val target: Any? = null","description":"org.http4k.lens.LensFailure.target","location":"http4k-core/org.http4k.lens/-lens-failure/target.html","searchKeys":["target","val target: Any? = null","org.http4k.lens.LensFailure.target"]},{"name":"val timeout: Duration","description":"org.http4k.server.ServerConfig.StopMode.Graceful.timeout","location":"http4k-core/org.http4k.server/-server-config/-stop-mode/-graceful/timeout.html","searchKeys":["timeout","val timeout: Duration","org.http4k.server.ServerConfig.StopMode.Graceful.timeout"]},{"name":"val timerDescription: Pair<String, String>","description":"org.http4k.metrics.MetricsDefaults.timerDescription","location":"http4k-core/org.http4k.metrics/-metrics-defaults/timer-description.html","searchKeys":["timerDescription","val timerDescription: Pair<String, String>","org.http4k.metrics.MetricsDefaults.timerDescription"]},{"name":"val traceId: TraceId","description":"org.http4k.filter.ZipkinTraces.traceId","location":"http4k-core/org.http4k.filter/-zipkin-traces/trace-id.html","searchKeys":["traceId","val traceId: TraceId","org.http4k.filter.ZipkinTraces.traceId"]},{"name":"val type: Failure.Type","description":"org.http4k.lens.Failure.type","location":"http4k-core/org.http4k.lens/-failure/type.html","searchKeys":["type","val type: Failure.Type","org.http4k.lens.Failure.type"]},{"name":"val unavailable: RouterDescription","description":"org.http4k.routing.RouterDescription.Companion.unavailable","location":"http4k-core/org.http4k.routing/-router-description/-companion/unavailable.html","searchKeys":["unavailable","val unavailable: RouterDescription","org.http4k.routing.RouterDescription.Companion.unavailable"]},{"name":"val uri: Uri","description":"org.http4k.events.HttpEvent.uri","location":"http4k-core/org.http4k.events/-http-event/uri.html","searchKeys":["uri","val uri: Uri","org.http4k.events.HttpEvent.uri"]},{"name":"val user: String","description":"org.http4k.core.Credentials.user","location":"http4k-core/org.http4k.core/-credentials/user.html","searchKeys":["user","val user: String","org.http4k.core.Credentials.user"]},{"name":"val userInfo: String","description":"org.http4k.core.Uri.userInfo","location":"http4k-core/org.http4k.core/-uri/user-info.html","searchKeys":["userInfo","val userInfo: String","org.http4k.core.Uri.userInfo"]},{"name":"val value: Duration","description":"org.http4k.filter.CacheControlHeaderPart.value","location":"http4k-core/org.http4k.filter/-cache-control-header-part/value.html","searchKeys":["value","val value: Duration","org.http4k.filter.CacheControlHeaderPart.value"]},{"name":"val value: List<ETag>","description":"org.http4k.core.etag.FieldValue.ETags.value","location":"http4k-core/org.http4k.core.etag/-field-value/-e-tags/value.html","searchKeys":["value","val value: List<ETag>","org.http4k.core.etag.FieldValue.ETags.value"]},{"name":"val value: String","description":"org.http4k.core.ContentType.value","location":"http4k-core/org.http4k.core/-content-type/value.html","searchKeys":["value","val value: String","org.http4k.core.ContentType.value"]},{"name":"val value: String","description":"org.http4k.core.cookie.Cookie.value","location":"http4k-core/org.http4k.core.cookie/-cookie/value.html","searchKeys":["value","val value: String","org.http4k.core.cookie.Cookie.value"]},{"name":"val value: String","description":"org.http4k.core.etag.ETag.value","location":"http4k-core/org.http4k.core.etag/-e-tag/value.html","searchKeys":["value","val value: String","org.http4k.core.etag.ETag.value"]},{"name":"val value: String","description":"org.http4k.filter.SamplingDecision.value","location":"http4k-core/org.http4k.filter/-sampling-decision/value.html","searchKeys":["value","val value: String","org.http4k.filter.SamplingDecision.value"]},{"name":"val value: String","description":"org.http4k.filter.TraceId.value","location":"http4k-core/org.http4k.filter/-trace-id/value.html","searchKeys":["value","val value: String","org.http4k.filter.TraceId.value"]},{"name":"val variation: Variation","description":"org.http4k.routing.inspect.TextStyle.variation","location":"http4k-core/org.http4k.routing.inspect/-text-style/variation.html","searchKeys":["variation","val variation: Variation","org.http4k.routing.inspect.TextStyle.variation"]},{"name":"val weak: Boolean = false","description":"org.http4k.core.etag.ETag.weak","location":"http4k-core/org.http4k.core.etag/-e-tag/weak.html","searchKeys":["weak","val weak: Boolean = false","org.http4k.core.etag.ETag.weak"]},{"name":"val xUriTemplate: String","description":"org.http4k.events.HttpEvent.xUriTemplate","location":"http4k-core/org.http4k.events/-http-event/x-uri-template.html","searchKeys":["xUriTemplate","val xUriTemplate: String","org.http4k.events.HttpEvent.xUriTemplate"]},{"name":"constructor(mapper: ObjectMapper, defaultContentType: ContentType = APPLICATION_JSON)","description":"org.http4k.format.ConfigurableJackson.ConfigurableJackson","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/-configurable-jackson.html","searchKeys":["ConfigurableJackson","constructor(mapper: ObjectMapper, defaultContentType: ContentType = APPLICATION_JSON)","org.http4k.format.ConfigurableJackson.ConfigurableJackson"]},{"name":"fun <BUILDER> AutoMappingConfiguration<BUILDER>.prohibitUnknownValues(): AutoMappingConfiguration<BUILDER>","description":"org.http4k.format.prohibitUnknownValues","location":"http4k-format-jackson/org.http4k.format/prohibit-unknown-values.html","searchKeys":["prohibitUnknownValues","fun <BUILDER> AutoMappingConfiguration<BUILDER>.prohibitUnknownValues(): AutoMappingConfiguration<BUILDER>","org.http4k.format.prohibitUnknownValues"]},{"name":"fun <T : Any, V : Any> String.asUsingView(t: KClass<T>, v: KClass<V>): T","description":"org.http4k.format.ConfigurableJackson.asUsingView","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-using-view.html","searchKeys":["asUsingView","fun <T : Any, V : Any> String.asUsingView(t: KClass<T>, v: KClass<V>): T","org.http4k.format.ConfigurableJackson.asUsingView"]},{"name":"fun <T : Any, V : Any> T.asCompactJsonStringUsingView(v: KClass<V>): String","description":"org.http4k.format.ConfigurableJackson.asCompactJsonStringUsingView","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-compact-json-string-using-view.html","searchKeys":["asCompactJsonStringUsingView","fun <T : Any, V : Any> T.asCompactJsonStringUsingView(v: KClass<V>): String","org.http4k.format.ConfigurableJackson.asCompactJsonStringUsingView"]},{"name":"fun <T : Any> CloudEventBuilder.withData(t: T): CloudEventBuilder","description":"org.http4k.format.ConfigurableJackson.withData","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/with-data.html","searchKeys":["withData","fun <T : Any> CloudEventBuilder.withData(t: T): CloudEventBuilder","org.http4k.format.ConfigurableJackson.withData"]},{"name":"fun <T : JsonNodeDataContainer> Body.Companion.json(fn: (JsonNode) -> T, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<T>","description":"org.http4k.format.json","location":"http4k-format-jackson/org.http4k.format/json.html","searchKeys":["json","fun <T : JsonNodeDataContainer> Body.Companion.json(fn: (JsonNode) -> T, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<T>","org.http4k.format.json"]},{"name":"fun <T : ObjectMapper> KotlinModule.asConfigurable(mapper: T): AutoMappingConfiguration<T>","description":"org.http4k.format.asConfigurable","location":"http4k-format-jackson/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun <T : ObjectMapper> KotlinModule.asConfigurable(mapper: T): AutoMappingConfiguration<T>","org.http4k.format.asConfigurable"]},{"name":"fun KotlinModule.asConfigurable(): AutoMappingConfiguration<ObjectMapper>","description":"org.http4k.format.asConfigurable","location":"http4k-format-jackson/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun KotlinModule.asConfigurable(): AutoMappingConfiguration<ObjectMapper>","org.http4k.format.asConfigurable"]},{"name":"fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJackson","description":"org.http4k.format.Jackson.custom","location":"http4k-format-jackson/org.http4k.format/-jackson/custom.html","searchKeys":["custom","fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJackson","org.http4k.format.Jackson.custom"]},{"name":"inline fun <T : Any, R : HttpMessage> R.json(t: T): R","description":"org.http4k.format.ConfigurableJackson.json","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/json.html","searchKeys":["json","inline fun <T : Any, R : HttpMessage> R.json(t: T): R","org.http4k.format.ConfigurableJackson.json"]},{"name":"inline fun <T : Any, V : Any> Body.Companion.autoView(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = APPLICATION_JSON): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJackson.autoView","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/auto-view.html","searchKeys":["autoView","inline fun <T : Any, V : Any> Body.Companion.autoView(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = APPLICATION_JSON): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJackson.autoView"]},{"name":"inline fun <T : Any, V : Any> WsMessage.Companion.autoView(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableJackson.autoView","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/auto-view.html","searchKeys":["autoView","inline fun <T : Any, V : Any> WsMessage.Companion.autoView(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableJackson.autoView"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJackson.auto","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJackson.auto"]},{"name":"inline fun <T : Any> HttpMessage.json(): T","description":"org.http4k.format.ConfigurableJackson.json","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/json.html","searchKeys":["json","inline fun <T : Any> HttpMessage.json(): T","org.http4k.format.ConfigurableJackson.json"]},{"name":"inline fun <T : Any> JsonNode.asA(): T","description":"org.http4k.format.ConfigurableJackson.asA","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-a.html","searchKeys":["asA","inline fun <T : Any> JsonNode.asA(): T","org.http4k.format.ConfigurableJackson.asA"]},{"name":"inline fun <T : Any> ObjectMapper.read(): (String) -> T","description":"org.http4k.format.read","location":"http4k-format-jackson/org.http4k.format/read.html","searchKeys":["read","inline fun <T : Any> ObjectMapper.read(): (String) -> T","org.http4k.format.read"]},{"name":"inline fun <T : Any> ObjectMapper.write(): (T) -> String","description":"org.http4k.format.write","location":"http4k-format-jackson/org.http4k.format/write.html","searchKeys":["write","inline fun <T : Any> ObjectMapper.write(): (T) -> String","org.http4k.format.write"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableJackson.auto","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableJackson.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableJackson.autoBody","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableJackson.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableJackson.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-jackson/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableJackson.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableJackson.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-jackson/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableJackson.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object Jackson : ConfigurableJackson","description":"org.http4k.format.Jackson","location":"http4k-format-jackson/org.http4k.format/-jackson/index.html","searchKeys":["Jackson","object Jackson : ConfigurableJackson","org.http4k.format.Jackson"]},{"name":"open class ConfigurableJackson(val mapper: ObjectMapper, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonNode> ","description":"org.http4k.format.ConfigurableJackson","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/index.html","searchKeys":["ConfigurableJackson","open class ConfigurableJackson(val mapper: ObjectMapper, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonNode> ","org.http4k.format.ConfigurableJackson"]},{"name":"open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonObject","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonObject"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJackson.asA","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableJackson.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJackson.asA","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableJackson.asA"]},{"name":"open override fun <T : Any> asA(j: JsonNode, target: KClass<T>): T","description":"org.http4k.format.ConfigurableJackson.asA","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(j: JsonNode, target: KClass<T>): T","org.http4k.format.ConfigurableJackson.asA"]},{"name":"open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonArray","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun JsonNode.asCompactJsonString(): String","description":"org.http4k.format.ConfigurableJackson.asCompactJsonString","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun JsonNode.asCompactJsonString(): String","org.http4k.format.ConfigurableJackson.asCompactJsonString"]},{"name":"open override fun JsonNode.asPrettyJsonString(): String","description":"org.http4k.format.ConfigurableJackson.asPrettyJsonString","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun JsonNode.asPrettyJsonString(): String","org.http4k.format.ConfigurableJackson.asPrettyJsonString"]},{"name":"open override fun Long?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun String.asJsonObject(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonObject","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonValue","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): JsonNode","org.http4k.format.ConfigurableJackson.asJsonValue"]},{"name":"open override fun asInputStream(input: Any): InputStream","description":"org.http4k.format.ConfigurableJackson.asInputStream","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-input-stream.html","searchKeys":["asInputStream","open override fun asInputStream(input: Any): InputStream","org.http4k.format.ConfigurableJackson.asInputStream"]},{"name":"open override fun asJsonObject(input: Any): JsonNode","description":"org.http4k.format.ConfigurableJackson.asJsonObject","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/as-json-object.html","searchKeys":["asJsonObject","open override fun asJsonObject(input: Any): JsonNode","org.http4k.format.ConfigurableJackson.asJsonObject"]},{"name":"open override fun bool(value: JsonNode): Boolean","description":"org.http4k.format.ConfigurableJackson.bool","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/bool.html","searchKeys":["bool","open override fun bool(value: JsonNode): Boolean","org.http4k.format.ConfigurableJackson.bool"]},{"name":"open override fun decimal(value: JsonNode): BigDecimal","description":"org.http4k.format.ConfigurableJackson.decimal","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/decimal.html","searchKeys":["decimal","open override fun decimal(value: JsonNode): BigDecimal","org.http4k.format.ConfigurableJackson.decimal"]},{"name":"open override fun elements(value: JsonNode): Iterable<JsonNode>","description":"org.http4k.format.ConfigurableJackson.elements","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/elements.html","searchKeys":["elements","open override fun elements(value: JsonNode): Iterable<JsonNode>","org.http4k.format.ConfigurableJackson.elements"]},{"name":"open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","description":"org.http4k.format.ConfigurableJackson.fields","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/fields.html","searchKeys":["fields","open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","org.http4k.format.ConfigurableJackson.fields"]},{"name":"open override fun integer(value: JsonNode): Long","description":"org.http4k.format.ConfigurableJackson.integer","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/integer.html","searchKeys":["integer","open override fun integer(value: JsonNode): Long","org.http4k.format.ConfigurableJackson.integer"]},{"name":"open override fun text(value: JsonNode): String","description":"org.http4k.format.ConfigurableJackson.text","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/text.html","searchKeys":["text","open override fun text(value: JsonNode): String","org.http4k.format.ConfigurableJackson.text"]},{"name":"open override fun textValueOf(node: JsonNode, name: String): String?","description":"org.http4k.format.ConfigurableJackson.textValueOf","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: JsonNode, name: String): String?","org.http4k.format.ConfigurableJackson.textValueOf"]},{"name":"open override fun typeOf(value: JsonNode): JsonType","description":"org.http4k.format.ConfigurableJackson.typeOf","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: JsonNode): JsonType","org.http4k.format.ConfigurableJackson.typeOf"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableJackson.defaultContentType","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableJackson.defaultContentType"]},{"name":"val mapper: ObjectMapper","description":"org.http4k.format.ConfigurableJackson.mapper","location":"http4k-format-jackson/org.http4k.format/-configurable-jackson/mapper.html","searchKeys":["mapper","val mapper: ObjectMapper","org.http4k.format.ConfigurableJackson.mapper"]},{"name":"fun <IN : Any> BiDiLensSpec<IN, String>.xml(): BiDiLensSpec<IN, Document>","description":"org.http4k.format.Xml.xml","location":"http4k-format-xml/org.http4k.format/-xml/xml.html","searchKeys":["xml","fun <IN : Any> BiDiLensSpec<IN, String>.xml(): BiDiLensSpec<IN, Document>","org.http4k.format.Xml.xml"]},{"name":"fun Body.Companion.xml(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<Document>","description":"org.http4k.format.Xml.xml","location":"http4k-format-xml/org.http4k.format/-xml/xml.html","searchKeys":["xml","fun Body.Companion.xml(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<Document>","org.http4k.format.Xml.xml"]},{"name":"fun Document.asXmlString(): String","description":"org.http4k.format.Xml.asXmlString","location":"http4k-format-xml/org.http4k.format/-xml/as-xml-string.html","searchKeys":["asXmlString","fun Document.asXmlString(): String","org.http4k.format.Xml.asXmlString"]},{"name":"fun String.asXmlDocument(): Document","description":"org.http4k.format.Xml.asXmlDocument","location":"http4k-format-xml/org.http4k.format/-xml/as-xml-document.html","searchKeys":["asXmlDocument","fun String.asXmlDocument(): Document","org.http4k.format.Xml.asXmlDocument"]},{"name":"fun String.asXmlToJsonElement(): JsonElement","description":"org.http4k.format.Xml.asXmlToJsonElement","location":"http4k-format-xml/org.http4k.format/-xml/as-xml-to-json-element.html","searchKeys":["asXmlToJsonElement","fun String.asXmlToJsonElement(): JsonElement","org.http4k.format.Xml.asXmlToJsonElement"]},{"name":"fun asXmlToJsonElement(input: String): JsonElement","description":"org.http4k.format.Xml.asXmlToJsonElement","location":"http4k-format-xml/org.http4k.format/-xml/as-xml-to-json-element.html","searchKeys":["asXmlToJsonElement","fun asXmlToJsonElement(input: String): JsonElement","org.http4k.format.Xml.asXmlToJsonElement"]},{"name":"inline fun <T : Any, R : HttpMessage> R.xml(t: T): R","description":"org.http4k.format.Xml.xml","location":"http4k-format-xml/org.http4k.format/-xml/xml.html","searchKeys":["xml","inline fun <T : Any, R : HttpMessage> R.xml(t: T): R","org.http4k.format.Xml.xml"]},{"name":"inline fun <T : Any> HttpMessage.xml(): T","description":"org.http4k.format.Xml.xml","location":"http4k-format-xml/org.http4k.format/-xml/xml.html","searchKeys":["xml","inline fun <T : Any> HttpMessage.xml(): T","org.http4k.format.Xml.xml"]},{"name":"object Xml : AutoMarshallingXml","description":"org.http4k.format.Xml","location":"http4k-format-xml/org.http4k.format/-xml/index.html","searchKeys":["Xml","object Xml : AutoMarshallingXml","org.http4k.format.Xml"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.Xml.asA","location":"http4k-format-xml/org.http4k.format/-xml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.Xml.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.Xml.asA","location":"http4k-format-xml/org.http4k.format/-xml/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.Xml.asA"]},{"name":"open override fun Any.asXmlString(): String","description":"org.http4k.format.Xml.asXmlString","location":"http4k-format-xml/org.http4k.format/-xml/as-xml-string.html","searchKeys":["asXmlString","open override fun Any.asXmlString(): String","org.http4k.format.Xml.asXmlString"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.Xml.defaultContentType","location":"http4k-format-xml/org.http4k.format/-xml/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.Xml.defaultContentType"]},{"name":"abstract val contentType: ContentType","description":"org.http4k.format.dataframe.DataFrameFormat.contentType","location":"http4k-format-dataframe/org.http4k.format.dataframe/-data-frame-format/content-type.html","searchKeys":["contentType","abstract val contentType: ContentType","org.http4k.format.dataframe.DataFrameFormat.contentType"]},{"name":"constructor(delimiter: Char = ',', header: List<String> = listOf(), colTypes: Map<String, ColType> = mapOf(), skipLines: Int = 0, readLines: Int? = null, duplicate: Boolean = true, charset: Charset = Charsets.UTF_8, parserOptions: ParserOptions? = null, contentType: ContentType = TEXT_CSV)","description":"org.http4k.format.dataframe.CSV.CSV","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/-c-s-v.html","searchKeys":["CSV","constructor(delimiter: Char = ',', header: List<String> = listOf(), colTypes: Map<String, ColType> = mapOf(), skipLines: Int = 0, readLines: Int? = null, duplicate: Boolean = true, charset: Charset = Charsets.UTF_8, parserOptions: ParserOptions? = null, contentType: ContentType = TEXT_CSV)","org.http4k.format.dataframe.CSV.CSV"]},{"name":"constructor(header: List<String> = emptyList(), keyValuePaths: List<JsonPath> = emptyList(), typeClashTactic: JSON.TypeClashTactic = ARRAY_AND_VALUE_COLUMNS, contentType: ContentType = APPLICATION_JSON)","description":"org.http4k.format.dataframe.JSON.JSON","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/-j-s-o-n.html","searchKeys":["JSON","constructor(header: List<String> = emptyList(), keyValuePaths: List<JsonPath> = emptyList(), typeClashTactic: JSON.TypeClashTactic = ARRAY_AND_VALUE_COLUMNS, contentType: ContentType = APPLICATION_JSON)","org.http4k.format.dataframe.JSON.JSON"]},{"name":"data class CSV(val delimiter: Char = ',', val header: List<String> = listOf(), val colTypes: Map<String, ColType> = mapOf(), val skipLines: Int = 0, val readLines: Int? = null, val duplicate: Boolean = true, val charset: Charset = Charsets.UTF_8, val parserOptions: ParserOptions? = null, val contentType: ContentType = TEXT_CSV) : DataFrameFormat","description":"org.http4k.format.dataframe.CSV","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/index.html","searchKeys":["CSV","data class CSV(val delimiter: Char = ',', val header: List<String> = listOf(), val colTypes: Map<String, ColType> = mapOf(), val skipLines: Int = 0, val readLines: Int? = null, val duplicate: Boolean = true, val charset: Charset = Charsets.UTF_8, val parserOptions: ParserOptions? = null, val contentType: ContentType = TEXT_CSV) : DataFrameFormat","org.http4k.format.dataframe.CSV"]},{"name":"data class JSON(val header: List<String> = emptyList(), val keyValuePaths: List<JsonPath> = emptyList(), val typeClashTactic: JSON.TypeClashTactic = ARRAY_AND_VALUE_COLUMNS, val contentType: ContentType = APPLICATION_JSON) : DataFrameFormat","description":"org.http4k.format.dataframe.JSON","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/index.html","searchKeys":["JSON","data class JSON(val header: List<String> = emptyList(), val keyValuePaths: List<JsonPath> = emptyList(), val typeClashTactic: JSON.TypeClashTactic = ARRAY_AND_VALUE_COLUMNS, val contentType: ContentType = APPLICATION_JSON) : DataFrameFormat","org.http4k.format.dataframe.JSON"]},{"name":"fun <T> HttpMessage.dataFrameCsv(): DataFrame<T>","description":"org.http4k.format.dataframe.dataFrameCsv","location":"http4k-format-dataframe/org.http4k.format.dataframe/data-frame-csv.html","searchKeys":["dataFrameCsv","fun <T> HttpMessage.dataFrameCsv(): DataFrame<T>","org.http4k.format.dataframe.dataFrameCsv"]},{"name":"fun <T> HttpMessage.dataFrameJson(): DataFrame<T>","description":"org.http4k.format.dataframe.dataFrameJson","location":"http4k-format-dataframe/org.http4k.format.dataframe/data-frame-json.html","searchKeys":["dataFrameJson","fun <T> HttpMessage.dataFrameJson(): DataFrame<T>","org.http4k.format.dataframe.dataFrameJson"]},{"name":"fun Body.Companion.dataFrame(format: DataFrameFormat, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BodyLensSpec<AnyFrame>","description":"org.http4k.format.dataframe.dataFrame","location":"http4k-format-dataframe/org.http4k.format.dataframe/data-frame.html","searchKeys":["dataFrame","fun Body.Companion.dataFrame(format: DataFrameFormat, description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BodyLensSpec<AnyFrame>","org.http4k.format.dataframe.dataFrame"]},{"name":"fun HttpMessage.dataFrame(options: DataFrameFormat): DataFrame<*>","description":"org.http4k.format.dataframe.dataFrame","location":"http4k-format-dataframe/org.http4k.format.dataframe/data-frame.html","searchKeys":["dataFrame","fun HttpMessage.dataFrame(options: DataFrameFormat): DataFrame<*>","org.http4k.format.dataframe.dataFrame"]},{"name":"open operator override fun invoke(input: InputStream): DataFrame<*>","description":"org.http4k.format.dataframe.CSV.invoke","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/invoke.html","searchKeys":["invoke","open operator override fun invoke(input: InputStream): DataFrame<*>","org.http4k.format.dataframe.CSV.invoke"]},{"name":"open operator override fun invoke(input: InputStream): DataFrame<*>","description":"org.http4k.format.dataframe.JSON.invoke","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/invoke.html","searchKeys":["invoke","open operator override fun invoke(input: InputStream): DataFrame<*>","org.http4k.format.dataframe.JSON.invoke"]},{"name":"open override val contentType: ContentType","description":"org.http4k.format.dataframe.CSV.contentType","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/content-type.html","searchKeys":["contentType","open override val contentType: ContentType","org.http4k.format.dataframe.CSV.contentType"]},{"name":"open override val contentType: ContentType","description":"org.http4k.format.dataframe.JSON.contentType","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/content-type.html","searchKeys":["contentType","open override val contentType: ContentType","org.http4k.format.dataframe.JSON.contentType"]},{"name":"sealed interface DataFrameFormat : Function1<InputStream, AnyFrame> ","description":"org.http4k.format.dataframe.DataFrameFormat","location":"http4k-format-dataframe/org.http4k.format.dataframe/-data-frame-format/index.html","searchKeys":["DataFrameFormat","sealed interface DataFrameFormat : Function1<InputStream, AnyFrame> ","org.http4k.format.dataframe.DataFrameFormat"]},{"name":"val charset: Charset","description":"org.http4k.format.dataframe.CSV.charset","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/charset.html","searchKeys":["charset","val charset: Charset","org.http4k.format.dataframe.CSV.charset"]},{"name":"val colTypes: Map<String, ColType>","description":"org.http4k.format.dataframe.CSV.colTypes","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/col-types.html","searchKeys":["colTypes","val colTypes: Map<String, ColType>","org.http4k.format.dataframe.CSV.colTypes"]},{"name":"val delimiter: Char = ','","description":"org.http4k.format.dataframe.CSV.delimiter","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/delimiter.html","searchKeys":["delimiter","val delimiter: Char = ','","org.http4k.format.dataframe.CSV.delimiter"]},{"name":"val duplicate: Boolean = true","description":"org.http4k.format.dataframe.CSV.duplicate","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/duplicate.html","searchKeys":["duplicate","val duplicate: Boolean = true","org.http4k.format.dataframe.CSV.duplicate"]},{"name":"val header: List<String>","description":"org.http4k.format.dataframe.CSV.header","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/header.html","searchKeys":["header","val header: List<String>","org.http4k.format.dataframe.CSV.header"]},{"name":"val header: List<String>","description":"org.http4k.format.dataframe.JSON.header","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/header.html","searchKeys":["header","val header: List<String>","org.http4k.format.dataframe.JSON.header"]},{"name":"val keyValuePaths: List<JsonPath>","description":"org.http4k.format.dataframe.JSON.keyValuePaths","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/key-value-paths.html","searchKeys":["keyValuePaths","val keyValuePaths: List<JsonPath>","org.http4k.format.dataframe.JSON.keyValuePaths"]},{"name":"val parserOptions: ParserOptions? = null","description":"org.http4k.format.dataframe.CSV.parserOptions","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/parser-options.html","searchKeys":["parserOptions","val parserOptions: ParserOptions? = null","org.http4k.format.dataframe.CSV.parserOptions"]},{"name":"val readLines: Int? = null","description":"org.http4k.format.dataframe.CSV.readLines","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/read-lines.html","searchKeys":["readLines","val readLines: Int? = null","org.http4k.format.dataframe.CSV.readLines"]},{"name":"val skipLines: Int = 0","description":"org.http4k.format.dataframe.CSV.skipLines","location":"http4k-format-dataframe/org.http4k.format.dataframe/-c-s-v/skip-lines.html","searchKeys":["skipLines","val skipLines: Int = 0","org.http4k.format.dataframe.CSV.skipLines"]},{"name":"val typeClashTactic: JSON.TypeClashTactic","description":"org.http4k.format.dataframe.JSON.typeClashTactic","location":"http4k-format-dataframe/org.http4k.format.dataframe/-j-s-o-n/type-clash-tactic.html","searchKeys":["typeClashTactic","val typeClashTactic: JSON.TypeClashTactic","org.http4k.format.dataframe.JSON.typeClashTactic"]},{"name":"class Fuel(bodyMode: BodyMode = Memory, timeout: Duration = Duration.ofSeconds(15)) : DualSyncAsyncHttpHandler","description":"org.http4k.client.Fuel","location":"http4k-client-fuel/org.http4k.client/-fuel/index.html","searchKeys":["Fuel","class Fuel(bodyMode: BodyMode = Memory, timeout: Duration = Duration.ofSeconds(15)) : DualSyncAsyncHttpHandler","org.http4k.client.Fuel"]},{"name":"constructor(bodyMode: BodyMode = Memory, timeout: Duration = Duration.ofSeconds(15))","description":"org.http4k.client.Fuel.Fuel","location":"http4k-client-fuel/org.http4k.client/-fuel/-fuel.html","searchKeys":["Fuel","constructor(bodyMode: BodyMode = Memory, timeout: Duration = Duration.ofSeconds(15))","org.http4k.client.Fuel.Fuel"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.client.Fuel.invoke","location":"http4k-client-fuel/org.http4k.client/-fuel/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.client.Fuel.invoke"]},{"name":"open operator override fun invoke(request: Request, fn: (Response) -> Unit)","description":"org.http4k.client.Fuel.invoke","location":"http4k-client-fuel/org.http4k.client/-fuel/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request, fn: (Response) -> Unit)","org.http4k.client.Fuel.invoke"]},{"name":"fun <T : CloudEvent> T.with(vararg modifiers: (T) -> T): T","description":"io.cloudevents.with","location":"http4k-cloudevents/io.cloudevents/with.html","searchKeys":["with","fun <T : CloudEvent> T.with(vararg modifiers: (T) -> T): T","io.cloudevents.with"]},{"name":"fun <T : CloudEventBuilder> T.withDataContentType(contentType: ContentType): T","description":"io.cloudevents.core.builder.withDataContentType","location":"http4k-cloudevents/io.cloudevents.core.builder/with-data-content-type.html","searchKeys":["withDataContentType","fun <T : CloudEventBuilder> T.withDataContentType(contentType: ContentType): T","io.cloudevents.core.builder.withDataContentType"]},{"name":"fun <T : CloudEventBuilder> T.withDataSchema(uri: Uri): T","description":"io.cloudevents.core.builder.withDataSchema","location":"http4k-cloudevents/io.cloudevents.core.builder/with-data-schema.html","searchKeys":["withDataSchema","fun <T : CloudEventBuilder> T.withDataSchema(uri: Uri): T","io.cloudevents.core.builder.withDataSchema"]},{"name":"fun <T : CloudEventBuilder> T.withSource(uri: Uri): T","description":"io.cloudevents.core.builder.withSource","location":"http4k-cloudevents/io.cloudevents.core.builder/with-source.html","searchKeys":["withSource","fun <T : CloudEventBuilder> T.withSource(uri: Uri): T","io.cloudevents.core.builder.withSource"]},{"name":"fun <T : CloudEventData> data(mapper: CloudEventDataMapper<T>): Lens<CloudEvent, T>","description":"org.http4k.lens.CloudEvent.data","location":"http4k-cloudevents/org.http4k.lens/-cloud-event/data.html","searchKeys":["data","fun <T : CloudEventData> data(mapper: CloudEventDataMapper<T>): Lens<CloudEvent, T>","org.http4k.lens.CloudEvent.data"]},{"name":"fun Body.Companion.cloudEvent(contentType: ContentType = ContentType.CLOUD_EVENT_JSON): BiDiBodyLensSpec<CloudEvent>","description":"org.http4k.lens.cloudEvent","location":"http4k-cloudevents/org.http4k.lens/cloud-event.html","searchKeys":["cloudEvent","fun Body.Companion.cloudEvent(contentType: ContentType = ContentType.CLOUD_EVENT_JSON): BiDiBodyLensSpec<CloudEvent>","org.http4k.lens.cloudEvent"]},{"name":"fun ConfigurableJackson.cloudEventsFormat(): EventFormat","description":"io.cloudevents.http4k.cloudEventsFormat","location":"http4k-cloudevents/io.cloudevents.http4k/cloud-events-format.html","searchKeys":["cloudEventsFormat","fun ConfigurableJackson.cloudEventsFormat(): EventFormat","io.cloudevents.http4k.cloudEventsFormat"]},{"name":"fun EventFormat.contentType(): ContentType","description":"io.cloudevents.core.format.contentType","location":"http4k-cloudevents/io.cloudevents.core.format/content-type.html","searchKeys":["contentType","fun EventFormat.contentType(): ContentType","io.cloudevents.core.format.contentType"]},{"name":"inline fun <T : Any> ConfigurableJackson.cloudEventDataLens(): Lens<CloudEvent, T>","description":"org.http4k.format.cloudEventDataLens","location":"http4k-cloudevents/org.http4k.format/cloud-event-data-lens.html","searchKeys":["cloudEventDataLens","inline fun <T : Any> ConfigurableJackson.cloudEventDataLens(): Lens<CloudEvent, T>","org.http4k.format.cloudEventDataLens"]},{"name":"object CloudEvent","description":"org.http4k.lens.CloudEvent","location":"http4k-cloudevents/org.http4k.lens/-cloud-event/index.html","searchKeys":["CloudEvent","object CloudEvent","org.http4k.lens.CloudEvent"]},{"name":"val ContentType.Companion.CLOUD_EVENT_JSON: ContentType","description":"org.http4k.core.CLOUD_EVENT_JSON","location":"http4k-cloudevents/org.http4k.core/-c-l-o-u-d_-e-v-e-n-t_-j-s-o-n.html","searchKeys":["CLOUD_EVENT_JSON","val ContentType.Companion.CLOUD_EVENT_JSON: ContentType","org.http4k.core.CLOUD_EVENT_JSON"]},{"name":"Auto","description":"org.http4k.tracing.junit.RecordingMode.Auto","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/-auto/index.html","searchKeys":["Auto","Auto","org.http4k.tracing.junit.RecordingMode.Auto"]},{"name":"Database","description":"org.http4k.tracing.ActorType.Database","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/-database/index.html","searchKeys":["Database","Database","org.http4k.tracing.ActorType.Database"]},{"name":"Human","description":"org.http4k.tracing.ActorType.Human","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/-human/index.html","searchKeys":["Human","Human","org.http4k.tracing.ActorType.Human"]},{"name":"Manual","description":"org.http4k.tracing.junit.RecordingMode.Manual","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/-manual/index.html","searchKeys":["Manual","Manual","org.http4k.tracing.junit.RecordingMode.Manual"]},{"name":"Queue","description":"org.http4k.tracing.ActorType.Queue","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/-queue/index.html","searchKeys":["Queue","Queue","org.http4k.tracing.ActorType.Queue"]},{"name":"System","description":"org.http4k.tracing.ActorType.System","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/-system/index.html","searchKeys":["System","System","org.http4k.tracing.ActorType.System"]},{"name":"abstract fun <T> pause(block: () -> T): T","description":"org.http4k.tracing.VcrEvents.pause","location":"http4k-testing-tracerbullet/org.http4k.tracing/-vcr-events/pause.html","searchKeys":["pause","abstract fun <T> pause(block: () -> T): T","org.http4k.tracing.VcrEvents.pause"]},{"name":"abstract fun <T> record(block: () -> T): T","description":"org.http4k.tracing.VcrEvents.record","location":"http4k-testing-tracerbullet/org.http4k.tracing/-vcr-events/record.html","searchKeys":["record","abstract fun <T> record(block: () -> T): T","org.http4k.tracing.VcrEvents.record"]},{"name":"abstract fun load(): Iterable<ScenarioTraces>","description":"org.http4k.tracing.TraceLoader.load","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-loader/load.html","searchKeys":["load","abstract fun load(): Iterable<ScenarioTraces>","org.http4k.tracing.TraceLoader.load"]},{"name":"abstract fun pause()","description":"org.http4k.tracing.VcrEvents.pause","location":"http4k-testing-tracerbullet/org.http4k.tracing/-vcr-events/pause.html","searchKeys":["pause","abstract fun pause()","org.http4k.tracing.VcrEvents.pause"]},{"name":"abstract fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.TraceRenderer.render","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-renderer/render.html","searchKeys":["render","abstract fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.TraceRenderer.render"]},{"name":"abstract fun resume()","description":"org.http4k.tracing.VcrEvents.resume","location":"http4k-testing-tracerbullet/org.http4k.tracing/-vcr-events/resume.html","searchKeys":["resume","abstract fun resume()","org.http4k.tracing.VcrEvents.resume"]},{"name":"abstract fun store(trace: ScenarioTraces)","description":"org.http4k.tracing.TracePersistence.store","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-persistence/store.html","searchKeys":["store","abstract fun store(trace: ScenarioTraces)","org.http4k.tracing.TracePersistence.store"]},{"name":"abstract operator fun invoke(location: Uri, traceCompletion: TraceCompletion, render: TraceRender)","description":"org.http4k.tracing.TraceReporter.invoke","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-reporter/invoke.html","searchKeys":["invoke","abstract operator fun invoke(location: Uri, traceCompletion: TraceCompletion, render: TraceRender)","org.http4k.tracing.TraceReporter.invoke"]},{"name":"abstract operator fun invoke(node: EventNode, tracer: Tracer): List<Trace>","description":"org.http4k.tracing.Tracer.invoke","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer/invoke.html","searchKeys":["invoke","abstract operator fun invoke(node: EventNode, tracer: Tracer): List<Trace>","org.http4k.tracing.Tracer.invoke"]},{"name":"abstract val children: List<Trace>","description":"org.http4k.tracing.Trace.children","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace/children.html","searchKeys":["children","abstract val children: List<Trace>","org.http4k.tracing.Trace.children"]},{"name":"abstract val origin: Actor","description":"org.http4k.tracing.Trace.origin","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace/origin.html","searchKeys":["origin","abstract val origin: Actor","org.http4k.tracing.Trace.origin"]},{"name":"abstract val request: String","description":"org.http4k.tracing.Trace.request","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace/request.html","searchKeys":["request","abstract val request: String","org.http4k.tracing.Trace.request"]},{"name":"abstract val target: Actor","description":"org.http4k.tracing.Trace.target","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace/target.html","searchKeys":["target","abstract val target: Actor","org.http4k.tracing.Trace.target"]},{"name":"class TracerBullet(tracers: List<Tracer>)","description":"org.http4k.tracing.TracerBullet","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer-bullet/index.html","searchKeys":["TracerBullet","class TracerBullet(tracers: List<Tracer>)","org.http4k.tracing.TracerBullet"]},{"name":"complete","description":"org.http4k.tracing.TraceCompletion.complete","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/complete/index.html","searchKeys":["complete","complete","org.http4k.tracing.TraceCompletion.complete"]},{"name":"const val X_HTTP4K_INCOMING_EVENT: String","description":"org.http4k.tracing.X_HTTP4K_INCOMING_EVENT","location":"http4k-testing-tracerbullet/org.http4k.tracing/-x_-h-t-t-p4-k_-i-n-c-o-m-i-n-g_-e-v-e-n-t.html","searchKeys":["X_HTTP4K_INCOMING_EVENT","const val X_HTTP4K_INCOMING_EVENT: String","org.http4k.tracing.X_HTTP4K_INCOMING_EVENT"]},{"name":"constructor(event: MetadataEvent, children: List<EventNode>)","description":"org.http4k.tracing.EventNode.EventNode","location":"http4k-testing-tracerbullet/org.http4k.tracing/-event-node/-event-node.html","searchKeys":["EventNode","constructor(event: MetadataEvent, children: List<EventNode>)","org.http4k.tracing.EventNode.EventNode"]},{"name":"constructor(name: String, traces: List<Trace>)","description":"org.http4k.tracing.ScenarioTraces.ScenarioTraces","location":"http4k-testing-tracerbullet/org.http4k.tracing/-scenario-traces/-scenario-traces.html","searchKeys":["ScenarioTraces","constructor(name: String, traces: List<Trace>)","org.http4k.tracing.ScenarioTraces.ScenarioTraces"]},{"name":"constructor(name: String, type: ActorType)","description":"org.http4k.tracing.Actor.Actor","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor/-actor.html","searchKeys":["Actor","constructor(name: String, type: ActorType)","org.http4k.tracing.Actor.Actor"]},{"name":"constructor(origin: Actor, target: Actor, request: String, children: List<Trace>)","description":"org.http4k.tracing.BiDirectional.BiDirectional","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/-bi-directional.html","searchKeys":["BiDirectional","constructor(origin: Actor, target: Actor, request: String, children: List<Trace>)","org.http4k.tracing.BiDirectional.BiDirectional"]},{"name":"constructor(origin: Actor, target: Actor, request: String, children: List<Trace>)","description":"org.http4k.tracing.FireAndForget.FireAndForget","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/-fire-and-forget.html","searchKeys":["FireAndForget","constructor(origin: Actor, target: Actor, request: String, children: List<Trace>)","org.http4k.tracing.FireAndForget.FireAndForget"]},{"name":"constructor(origin: Actor, target: Actor, request: String, response: String, children: List<Trace>)","description":"org.http4k.tracing.RequestResponse.RequestResponse","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/-request-response.html","searchKeys":["RequestResponse","constructor(origin: Actor, target: Actor, request: String, response: String, children: List<Trace>)","org.http4k.tracing.RequestResponse.RequestResponse"]},{"name":"constructor(origin: String, interactionName: String)","description":"org.http4k.tracing.StartInteraction.StartInteraction","location":"http4k-testing-tracerbullet/org.http4k.tracing/-start-interaction/-start-interaction.html","searchKeys":["StartInteraction","constructor(origin: String, interactionName: String)","org.http4k.tracing.StartInteraction.StartInteraction"]},{"name":"constructor(title: String, format: String, content: String)","description":"org.http4k.tracing.TraceRender.TraceRender","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render/-trace-render.html","searchKeys":["TraceRender","constructor(title: String, format: String, content: String)","org.http4k.tracing.TraceRender.TraceRender"]},{"name":"constructor(tracers: List<Tracer>)","description":"org.http4k.tracing.TracerBullet.TracerBullet","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer-bullet/-tracer-bullet.html","searchKeys":["TracerBullet","constructor(tracers: List<Tracer>)","org.http4k.tracing.TracerBullet.TracerBullet"]},{"name":"constructor(tracers: List<Tracer>, renderers: List<TraceRenderer>, traceRenderPersistence: TraceRenderPersistence, traceNamer: TraceNamer = TestNameAndMethod, tracePersistence: TracePersistence = TracePersistence.InMemory(), reporter: TraceReporter = TraceReporter.PrintToConsole, recordingMode: RecordingMode = Auto, renderingMode: RenderingMode = Always, reportingMode: ReportingMode = OnFailure)","description":"org.http4k.tracing.junit.TracerBulletEvents.TracerBulletEvents","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/-tracer-bullet-events.html","searchKeys":["TracerBulletEvents","constructor(tracers: List<Tracer>, renderers: List<TraceRenderer>, traceRenderPersistence: TraceRenderPersistence, traceNamer: TraceNamer = TestNameAndMethod, tracePersistence: TracePersistence = TracePersistence.InMemory(), reporter: TraceReporter = TraceReporter.PrintToConsole, recordingMode: RecordingMode = Auto, renderingMode: RenderingMode = Always, reportingMode: ReportingMode = OnFailure)","org.http4k.tracing.junit.TracerBulletEvents.TracerBulletEvents"]},{"name":"constructor(vararg tracers: Tracer)","description":"org.http4k.tracing.TracerBullet.TracerBullet","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer-bullet/-tracer-bullet.html","searchKeys":["TracerBullet","constructor(vararg tracers: Tracer)","org.http4k.tracing.TracerBullet.TracerBullet"]},{"name":"data class Actor(val name: String, val type: ActorType)","description":"org.http4k.tracing.Actor","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor/index.html","searchKeys":["Actor","data class Actor(val name: String, val type: ActorType)","org.http4k.tracing.Actor"]},{"name":"data class BiDirectional(val origin: Actor, val target: Actor, val request: String, val children: List<Trace>) : Trace, TraceStep","description":"org.http4k.tracing.BiDirectional","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/index.html","searchKeys":["BiDirectional","data class BiDirectional(val origin: Actor, val target: Actor, val request: String, val children: List<Trace>) : Trace, TraceStep","org.http4k.tracing.BiDirectional"]},{"name":"data class EventNode(val event: MetadataEvent, val children: List<EventNode>)","description":"org.http4k.tracing.EventNode","location":"http4k-testing-tracerbullet/org.http4k.tracing/-event-node/index.html","searchKeys":["EventNode","data class EventNode(val event: MetadataEvent, val children: List<EventNode>)","org.http4k.tracing.EventNode"]},{"name":"data class FireAndForget(val origin: Actor, val target: Actor, val request: String, val children: List<Trace>) : Trace, TraceStep","description":"org.http4k.tracing.FireAndForget","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/index.html","searchKeys":["FireAndForget","data class FireAndForget(val origin: Actor, val target: Actor, val request: String, val children: List<Trace>) : Trace, TraceStep","org.http4k.tracing.FireAndForget"]},{"name":"data class RequestResponse(val origin: Actor, val target: Actor, val request: String, val response: String, val children: List<Trace>) : Trace, TraceStep","description":"org.http4k.tracing.RequestResponse","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/index.html","searchKeys":["RequestResponse","data class RequestResponse(val origin: Actor, val target: Actor, val request: String, val response: String, val children: List<Trace>) : Trace, TraceStep","org.http4k.tracing.RequestResponse"]},{"name":"data class ScenarioTraces(val name: String, val traces: List<Trace>)","description":"org.http4k.tracing.ScenarioTraces","location":"http4k-testing-tracerbullet/org.http4k.tracing/-scenario-traces/index.html","searchKeys":["ScenarioTraces","data class ScenarioTraces(val name: String, val traces: List<Trace>)","org.http4k.tracing.ScenarioTraces"]},{"name":"data class StartInteraction(val origin: String, val interactionName: String) : TraceStep, Event","description":"org.http4k.tracing.StartInteraction","location":"http4k-testing-tracerbullet/org.http4k.tracing/-start-interaction/index.html","searchKeys":["StartInteraction","data class StartInteraction(val origin: String, val interactionName: String) : TraceStep, Event","org.http4k.tracing.StartInteraction"]},{"name":"data class TraceRender(val title: String, val format: String, val content: String)","description":"org.http4k.tracing.TraceRender","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render/index.html","searchKeys":["TraceRender","data class TraceRender(val title: String, val format: String, val content: String)","org.http4k.tracing.TraceRender"]},{"name":"data object StartRendering : TraceStep, Event","description":"org.http4k.tracing.StartRendering","location":"http4k-testing-tracerbullet/org.http4k.tracing/-start-rendering/index.html","searchKeys":["StartRendering","data object StartRendering : TraceStep, Event","org.http4k.tracing.StartRendering"]},{"name":"data object StopRendering : TraceStep, Event","description":"org.http4k.tracing.StopRendering","location":"http4k-testing-tracerbullet/org.http4k.tracing/-stop-rendering/index.html","searchKeys":["StopRendering","data object StopRendering : TraceStep, Event","org.http4k.tracing.StopRendering"]},{"name":"enum ActorType : Enum<ActorType> ","description":"org.http4k.tracing.ActorType","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/index.html","searchKeys":["ActorType","enum ActorType : Enum<ActorType> ","org.http4k.tracing.ActorType"]},{"name":"enum RecordingMode : Enum<RecordingMode> ","description":"org.http4k.tracing.junit.RecordingMode","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/index.html","searchKeys":["RecordingMode","enum RecordingMode : Enum<RecordingMode> ","org.http4k.tracing.junit.RecordingMode"]},{"name":"enum TraceCompletion : Enum<TraceCompletion> ","description":"org.http4k.tracing.TraceCompletion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/index.html","searchKeys":["TraceCompletion","enum TraceCompletion : Enum<TraceCompletion> ","org.http4k.tracing.TraceCompletion"]},{"name":"fun HttpTracer(actorFrom: ActorResolver): Tracer","description":"org.http4k.tracing.tracer.HttpTracer","location":"http4k-testing-tracerbullet/org.http4k.tracing.tracer/-http-tracer.html","searchKeys":["HttpTracer","fun HttpTracer(actorFrom: ActorResolver): Tracer","org.http4k.tracing.tracer.HttpTracer"]},{"name":"fun Iterable<ScenarioTraces>.combineTo(name: String): ScenarioTraces","description":"org.http4k.tracing.combineTo","location":"http4k-testing-tracerbullet/org.http4k.tracing/combine-to.html","searchKeys":["combineTo","fun Iterable<ScenarioTraces>.combineTo(name: String): ScenarioTraces","org.http4k.tracing.combineTo"]},{"name":"fun List<Trace>.chronologicalActors(): List<Actor>","description":"org.http4k.tracing.renderer.chronologicalActors","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/chronological-actors.html","searchKeys":["chronologicalActors","fun List<Trace>.chronologicalActors(): List<Actor>","org.http4k.tracing.renderer.chronologicalActors"]},{"name":"fun MarkdownDocument(vararg renderers: TraceRenderer): TraceRenderer","description":"org.http4k.tracing.renderer.MarkdownDocument","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-markdown-document.html","searchKeys":["MarkdownDocument","fun MarkdownDocument(vararg renderers: TraceRenderer): TraceRenderer","org.http4k.tracing.renderer.MarkdownDocument"]},{"name":"fun TraceLoader.Companion.DirectoryTree(start: File): TraceLoader","description":"org.http4k.tracing.persistence.DirectoryTree","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-directory-tree.html","searchKeys":["DirectoryTree","fun TraceLoader.Companion.DirectoryTree(start: File): TraceLoader","org.http4k.tracing.persistence.DirectoryTree"]},{"name":"fun TracePersistence.Companion.FileSystem(dir: File = createTempDirectory(\"\").toFile()): TracePersistence","description":"org.http4k.tracing.persistence.FileSystem","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-file-system.html","searchKeys":["FileSystem","fun TracePersistence.Companion.FileSystem(dir: File = createTempDirectory(\"\").toFile()): TracePersistence","org.http4k.tracing.persistence.FileSystem"]},{"name":"fun TracePersistence.Companion.InMemory(): TracePersistence","description":"org.http4k.tracing.persistence.InMemory","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-in-memory.html","searchKeys":["InMemory","fun TracePersistence.Companion.InMemory(): TracePersistence","org.http4k.tracing.persistence.InMemory"]},{"name":"fun TraceRenderPersistence.Companion.FileSystem(dir: File = createTempDirectory(\"\").toFile()): TraceRenderPersistence","description":"org.http4k.tracing.persistence.FileSystem","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-file-system.html","searchKeys":["FileSystem","fun TraceRenderPersistence.Companion.FileSystem(dir: File = createTempDirectory(\"\").toFile()): TraceRenderPersistence","org.http4k.tracing.persistence.FileSystem"]},{"name":"fun TraceRenderPersistence.Companion.InMemory(): IterableTraceRenderPersistence","description":"org.http4k.tracing.persistence.InMemory","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-in-memory.html","searchKeys":["InMemory","fun TraceRenderPersistence.Companion.InMemory(): IterableTraceRenderPersistence","org.http4k.tracing.persistence.InMemory"]},{"name":"fun Tracer.Companion.TreeWalker(tracers: List<Tracer>): Tracer","description":"org.http4k.tracing.tracer.TreeWalker","location":"http4k-testing-tracerbullet/org.http4k.tracing.tracer/-tree-walker.html","searchKeys":["TreeWalker","fun Tracer.Companion.TreeWalker(tracers: List<Tracer>): Tracer","org.http4k.tracing.tracer.TreeWalker"]},{"name":"fun interface ActorResolver : Function1<MetadataEvent, Actor> ","description":"org.http4k.tracing.ActorResolver","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-resolver/index.html","searchKeys":["ActorResolver","fun interface ActorResolver : Function1<MetadataEvent, Actor> ","org.http4k.tracing.ActorResolver"]},{"name":"fun interface RenderingMode : Function1<TraceCompletion, Boolean> ","description":"org.http4k.tracing.junit.RenderingMode","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-rendering-mode/index.html","searchKeys":["RenderingMode","fun interface RenderingMode : Function1<TraceCompletion, Boolean> ","org.http4k.tracing.junit.RenderingMode"]},{"name":"fun interface ReportingMode : Function1<TraceCompletion, Boolean> ","description":"org.http4k.tracing.junit.ReportingMode","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-reporting-mode/index.html","searchKeys":["ReportingMode","fun interface ReportingMode : Function1<TraceCompletion, Boolean> ","org.http4k.tracing.junit.ReportingMode"]},{"name":"fun interface TraceNamer : Function1<ExtensionContext, String> ","description":"org.http4k.tracing.junit.TraceNamer","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-trace-namer/index.html","searchKeys":["TraceNamer","fun interface TraceNamer : Function1<ExtensionContext, String> ","org.http4k.tracing.junit.TraceNamer"]},{"name":"fun interface TraceRenderPersistence : Function1<TraceRender, Uri?> ","description":"org.http4k.tracing.TraceRenderPersistence","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render-persistence/index.html","searchKeys":["TraceRenderPersistence","fun interface TraceRenderPersistence : Function1<TraceRender, Uri?> ","org.http4k.tracing.TraceRenderPersistence"]},{"name":"fun interface TraceRenderer","description":"org.http4k.tracing.TraceRenderer","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-renderer/index.html","searchKeys":["TraceRenderer","fun interface TraceRenderer","org.http4k.tracing.TraceRenderer"]},{"name":"fun interface TraceReporter","description":"org.http4k.tracing.TraceReporter","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-reporter/index.html","searchKeys":["TraceReporter","fun interface TraceReporter","org.http4k.tracing.TraceReporter"]},{"name":"fun interface Tracer","description":"org.http4k.tracing.Tracer","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer/index.html","searchKeys":["Tracer","fun interface Tracer","org.http4k.tracing.Tracer"]},{"name":"fun valueOf(value: String): ActorType","description":"org.http4k.tracing.ActorType.valueOf","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ActorType","org.http4k.tracing.ActorType.valueOf"]},{"name":"fun valueOf(value: String): RecordingMode","description":"org.http4k.tracing.junit.RecordingMode.valueOf","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RecordingMode","org.http4k.tracing.junit.RecordingMode.valueOf"]},{"name":"fun valueOf(value: String): TraceCompletion","description":"org.http4k.tracing.TraceCompletion.valueOf","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TraceCompletion","org.http4k.tracing.TraceCompletion.valueOf"]},{"name":"fun values(): Array<ActorType>","description":"org.http4k.tracing.ActorType.values","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/values.html","searchKeys":["values","fun values(): Array<ActorType>","org.http4k.tracing.ActorType.values"]},{"name":"fun values(): Array<RecordingMode>","description":"org.http4k.tracing.junit.RecordingMode.values","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/values.html","searchKeys":["values","fun values(): Array<RecordingMode>","org.http4k.tracing.junit.RecordingMode.values"]},{"name":"fun values(): Array<TraceCompletion>","description":"org.http4k.tracing.TraceCompletion.values","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/values.html","searchKeys":["values","fun values(): Array<TraceCompletion>","org.http4k.tracing.TraceCompletion.values"]},{"name":"incomplete","description":"org.http4k.tracing.TraceCompletion.incomplete","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/incomplete/index.html","searchKeys":["incomplete","incomplete","org.http4k.tracing.TraceCompletion.incomplete"]},{"name":"interface IterableTraceRenderPersistence : TraceRenderPersistence, Iterable<TraceRender> ","description":"org.http4k.tracing.persistence.IterableTraceRenderPersistence","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-iterable-trace-render-persistence/index.html","searchKeys":["IterableTraceRenderPersistence","interface IterableTraceRenderPersistence : TraceRenderPersistence, Iterable<TraceRender> ","org.http4k.tracing.persistence.IterableTraceRenderPersistence"]},{"name":"interface TraceLoader","description":"org.http4k.tracing.TraceLoader","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-loader/index.html","searchKeys":["TraceLoader","interface TraceLoader","org.http4k.tracing.TraceLoader"]},{"name":"interface TracePersistence : TraceLoader","description":"org.http4k.tracing.TracePersistence","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-persistence/index.html","searchKeys":["TracePersistence","interface TracePersistence : TraceLoader","org.http4k.tracing.TracePersistence"]},{"name":"interface VcrEvents : Function1<Event, Unit> , Iterable<Event> ","description":"org.http4k.tracing.VcrEvents","location":"http4k-testing-tracerbullet/org.http4k.tracing/-vcr-events/index.html","searchKeys":["VcrEvents","interface VcrEvents : Function1<Event, Unit> , Iterable<Event> ","org.http4k.tracing.VcrEvents"]},{"name":"object Companion","description":"org.http4k.tracing.TraceLoader.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-loader/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.TraceLoader.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.TracePersistence.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-persistence/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.TracePersistence.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.TraceRenderPersistence.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render-persistence/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.TraceRenderPersistence.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.TraceReporter.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-reporter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.TraceReporter.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.Tracer.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.Tracer.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.junit.RenderingMode.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-rendering-mode/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.junit.RenderingMode.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.junit.ReportingMode.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-reporting-mode/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.junit.ReportingMode.Companion"]},{"name":"object Companion","description":"org.http4k.tracing.junit.TraceNamer.Companion","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-trace-namer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.tracing.junit.TraceNamer.Companion"]},{"name":"object D2InteractionDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.D2InteractionDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-d2-interaction-diagram/index.html","searchKeys":["D2InteractionDiagram","object D2InteractionDiagram : TraceRenderer","org.http4k.tracing.renderer.D2InteractionDiagram"]},{"name":"object D2SequenceDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.D2SequenceDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-d2-sequence-diagram/index.html","searchKeys":["D2SequenceDiagram","object D2SequenceDiagram : TraceRenderer","org.http4k.tracing.renderer.D2SequenceDiagram"]},{"name":"object MarkdownTraceDepthTable : TraceRenderer","description":"org.http4k.tracing.renderer.MarkdownTraceDepthTable","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-markdown-trace-depth-table/index.html","searchKeys":["MarkdownTraceDepthTable","object MarkdownTraceDepthTable : TraceRenderer","org.http4k.tracing.renderer.MarkdownTraceDepthTable"]},{"name":"object MarkdownTraceStepCountsTable : TraceRenderer","description":"org.http4k.tracing.renderer.MarkdownTraceStepCountsTable","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-markdown-trace-step-counts-table/index.html","searchKeys":["MarkdownTraceStepCountsTable","object MarkdownTraceStepCountsTable : TraceRenderer","org.http4k.tracing.renderer.MarkdownTraceStepCountsTable"]},{"name":"object MermaidInteractionDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.MermaidInteractionDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-mermaid-interaction-diagram/index.html","searchKeys":["MermaidInteractionDiagram","object MermaidInteractionDiagram : TraceRenderer","org.http4k.tracing.renderer.MermaidInteractionDiagram"]},{"name":"object MermaidSequenceDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.MermaidSequenceDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-mermaid-sequence-diagram/index.html","searchKeys":["MermaidSequenceDiagram","object MermaidSequenceDiagram : TraceRenderer","org.http4k.tracing.renderer.MermaidSequenceDiagram"]},{"name":"object PumlInteractionDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.PumlInteractionDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-interaction-diagram/index.html","searchKeys":["PumlInteractionDiagram","object PumlInteractionDiagram : TraceRenderer","org.http4k.tracing.renderer.PumlInteractionDiagram"]},{"name":"object PumlInteractionFlowDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.PumlInteractionFlowDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-interaction-flow-diagram/index.html","searchKeys":["PumlInteractionFlowDiagram","object PumlInteractionFlowDiagram : TraceRenderer","org.http4k.tracing.renderer.PumlInteractionFlowDiagram"]},{"name":"object PumlSequenceDiagram : TraceRenderer","description":"org.http4k.tracing.renderer.PumlSequenceDiagram","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-sequence-diagram/index.html","searchKeys":["PumlSequenceDiagram","object PumlSequenceDiagram : TraceRenderer","org.http4k.tracing.renderer.PumlSequenceDiagram"]},{"name":"object TraceMoshi : ConfigurableMoshi","description":"org.http4k.tracing.persistence.TraceMoshi","location":"http4k-testing-tracerbullet/org.http4k.tracing.persistence/-trace-moshi/index.html","searchKeys":["TraceMoshi","object TraceMoshi : ConfigurableMoshi","org.http4k.tracing.persistence.TraceMoshi"]},{"name":"open class TracerBulletEvents(tracers: List<Tracer>, renderers: List<TraceRenderer>, traceRenderPersistence: TraceRenderPersistence, traceNamer: TraceNamer = TestNameAndMethod, tracePersistence: TracePersistence = TracePersistence.InMemory(), reporter: TraceReporter = TraceReporter.PrintToConsole, recordingMode: RecordingMode = Auto, renderingMode: RenderingMode = Always, reportingMode: ReportingMode = OnFailure) : VcrEvents, AfterTestExecutionCallback","description":"org.http4k.tracing.junit.TracerBulletEvents","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/index.html","searchKeys":["TracerBulletEvents","open class TracerBulletEvents(tracers: List<Tracer>, renderers: List<TraceRenderer>, traceRenderPersistence: TraceRenderPersistence, traceNamer: TraceNamer = TestNameAndMethod, tracePersistence: TracePersistence = TracePersistence.InMemory(), reporter: TraceReporter = TraceReporter.PrintToConsole, recordingMode: RecordingMode = Auto, renderingMode: RenderingMode = Always, reportingMode: ReportingMode = OnFailure) : VcrEvents, AfterTestExecutionCallback","org.http4k.tracing.junit.TracerBulletEvents"]},{"name":"open operator override fun invoke(p1: Event)","description":"org.http4k.tracing.junit.TracerBulletEvents.invoke","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: Event)","org.http4k.tracing.junit.TracerBulletEvents.invoke"]},{"name":"open operator override fun iterator(): Iterator<Event>","description":"org.http4k.tracing.junit.TracerBulletEvents.iterator","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Event>","org.http4k.tracing.junit.TracerBulletEvents.iterator"]},{"name":"open override fun <T> pause(block: () -> T): T","description":"org.http4k.tracing.junit.TracerBulletEvents.pause","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/pause.html","searchKeys":["pause","open override fun <T> pause(block: () -> T): T","org.http4k.tracing.junit.TracerBulletEvents.pause"]},{"name":"open override fun <T> record(block: () -> T): T","description":"org.http4k.tracing.junit.TracerBulletEvents.record","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/record.html","searchKeys":["record","open override fun <T> record(block: () -> T): T","org.http4k.tracing.junit.TracerBulletEvents.record"]},{"name":"open override fun afterTestExecution(context: ExtensionContext)","description":"org.http4k.tracing.junit.TracerBulletEvents.afterTestExecution","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/after-test-execution.html","searchKeys":["afterTestExecution","open override fun afterTestExecution(context: ExtensionContext)","org.http4k.tracing.junit.TracerBulletEvents.afterTestExecution"]},{"name":"open override fun pause()","description":"org.http4k.tracing.junit.TracerBulletEvents.pause","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/pause.html","searchKeys":["pause","open override fun pause()","org.http4k.tracing.junit.TracerBulletEvents.pause"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.D2InteractionDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-d2-interaction-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.D2InteractionDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.D2SequenceDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-d2-sequence-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.D2SequenceDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.MarkdownTraceDepthTable.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-markdown-trace-depth-table/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.MarkdownTraceDepthTable.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.MarkdownTraceStepCountsTable.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-markdown-trace-step-counts-table/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.MarkdownTraceStepCountsTable.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.MermaidInteractionDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-mermaid-interaction-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.MermaidInteractionDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.MermaidSequenceDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-mermaid-sequence-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.MermaidSequenceDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.PumlInteractionDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-interaction-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.PumlInteractionDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.PumlInteractionFlowDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-interaction-flow-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.PumlInteractionFlowDiagram.render"]},{"name":"open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","description":"org.http4k.tracing.renderer.PumlSequenceDiagram.render","location":"http4k-testing-tracerbullet/org.http4k.tracing.renderer/-puml-sequence-diagram/render.html","searchKeys":["render","open override fun render(scenarioName: String, steps: List<TraceStep>): TraceRender","org.http4k.tracing.renderer.PumlSequenceDiagram.render"]},{"name":"open override fun resume()","description":"org.http4k.tracing.junit.TracerBulletEvents.resume","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/resume.html","searchKeys":["resume","open override fun resume()","org.http4k.tracing.junit.TracerBulletEvents.resume"]},{"name":"open override fun toString(): String","description":"org.http4k.tracing.junit.TracerBulletEvents.toString","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-tracer-bullet-events/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.tracing.junit.TracerBulletEvents.toString"]},{"name":"open override val children: List<Trace>","description":"org.http4k.tracing.BiDirectional.children","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/children.html","searchKeys":["children","open override val children: List<Trace>","org.http4k.tracing.BiDirectional.children"]},{"name":"open override val children: List<Trace>","description":"org.http4k.tracing.FireAndForget.children","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/children.html","searchKeys":["children","open override val children: List<Trace>","org.http4k.tracing.FireAndForget.children"]},{"name":"open override val children: List<Trace>","description":"org.http4k.tracing.RequestResponse.children","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/children.html","searchKeys":["children","open override val children: List<Trace>","org.http4k.tracing.RequestResponse.children"]},{"name":"open override val origin: Actor","description":"org.http4k.tracing.BiDirectional.origin","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/origin.html","searchKeys":["origin","open override val origin: Actor","org.http4k.tracing.BiDirectional.origin"]},{"name":"open override val origin: Actor","description":"org.http4k.tracing.FireAndForget.origin","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/origin.html","searchKeys":["origin","open override val origin: Actor","org.http4k.tracing.FireAndForget.origin"]},{"name":"open override val origin: Actor","description":"org.http4k.tracing.RequestResponse.origin","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/origin.html","searchKeys":["origin","open override val origin: Actor","org.http4k.tracing.RequestResponse.origin"]},{"name":"open override val request: String","description":"org.http4k.tracing.BiDirectional.request","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/request.html","searchKeys":["request","open override val request: String","org.http4k.tracing.BiDirectional.request"]},{"name":"open override val request: String","description":"org.http4k.tracing.FireAndForget.request","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/request.html","searchKeys":["request","open override val request: String","org.http4k.tracing.FireAndForget.request"]},{"name":"open override val request: String","description":"org.http4k.tracing.RequestResponse.request","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/request.html","searchKeys":["request","open override val request: String","org.http4k.tracing.RequestResponse.request"]},{"name":"open override val target: Actor","description":"org.http4k.tracing.BiDirectional.target","location":"http4k-testing-tracerbullet/org.http4k.tracing/-bi-directional/target.html","searchKeys":["target","open override val target: Actor","org.http4k.tracing.BiDirectional.target"]},{"name":"open override val target: Actor","description":"org.http4k.tracing.FireAndForget.target","location":"http4k-testing-tracerbullet/org.http4k.tracing/-fire-and-forget/target.html","searchKeys":["target","open override val target: Actor","org.http4k.tracing.FireAndForget.target"]},{"name":"open override val target: Actor","description":"org.http4k.tracing.RequestResponse.target","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/target.html","searchKeys":["target","open override val target: Actor","org.http4k.tracing.RequestResponse.target"]},{"name":"operator fun invoke(events: List<Event>): List<Trace>","description":"org.http4k.tracing.TracerBullet.invoke","location":"http4k-testing-tracerbullet/org.http4k.tracing/-tracer-bullet/invoke.html","searchKeys":["invoke","operator fun invoke(events: List<Event>): List<Trace>","org.http4k.tracing.TracerBullet.invoke"]},{"name":"sealed interface Trace : TraceStep","description":"org.http4k.tracing.Trace","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace/index.html","searchKeys":["Trace","sealed interface Trace : TraceStep","org.http4k.tracing.Trace"]},{"name":"sealed interface TraceStep","description":"org.http4k.tracing.TraceStep","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-step/index.html","searchKeys":["TraceStep","sealed interface TraceStep","org.http4k.tracing.TraceStep"]},{"name":"val Always: RenderingMode","description":"org.http4k.tracing.junit.RenderingMode.Companion.Always","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-rendering-mode/-companion/-always.html","searchKeys":["Always","val Always: RenderingMode","org.http4k.tracing.junit.RenderingMode.Companion.Always"]},{"name":"val Always: ReportingMode","description":"org.http4k.tracing.junit.ReportingMode.Companion.Always","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-reporting-mode/-companion/-always.html","searchKeys":["Always","val Always: ReportingMode","org.http4k.tracing.junit.ReportingMode.Companion.Always"]},{"name":"val NoOp: TraceReporter","description":"org.http4k.tracing.TraceReporter.Companion.NoOp","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-reporter/-companion/-no-op.html","searchKeys":["NoOp","val NoOp: TraceReporter","org.http4k.tracing.TraceReporter.Companion.NoOp"]},{"name":"val OnFailure: RenderingMode","description":"org.http4k.tracing.junit.RenderingMode.Companion.OnFailure","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-rendering-mode/-companion/-on-failure.html","searchKeys":["OnFailure","val OnFailure: RenderingMode","org.http4k.tracing.junit.RenderingMode.Companion.OnFailure"]},{"name":"val OnFailure: ReportingMode","description":"org.http4k.tracing.junit.ReportingMode.Companion.OnFailure","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-reporting-mode/-companion/-on-failure.html","searchKeys":["OnFailure","val OnFailure: ReportingMode","org.http4k.tracing.junit.ReportingMode.Companion.OnFailure"]},{"name":"val OnSuccess: RenderingMode","description":"org.http4k.tracing.junit.RenderingMode.Companion.OnSuccess","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-rendering-mode/-companion/-on-success.html","searchKeys":["OnSuccess","val OnSuccess: RenderingMode","org.http4k.tracing.junit.RenderingMode.Companion.OnSuccess"]},{"name":"val OnSuccess: ReportingMode","description":"org.http4k.tracing.junit.ReportingMode.Companion.OnSuccess","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-reporting-mode/-companion/-on-success.html","searchKeys":["OnSuccess","val OnSuccess: ReportingMode","org.http4k.tracing.junit.ReportingMode.Companion.OnSuccess"]},{"name":"val TestNameAndMethod: TraceNamer","description":"org.http4k.tracing.junit.TraceNamer.Companion.TestNameAndMethod","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-trace-namer/-companion/-test-name-and-method.html","searchKeys":["TestNameAndMethod","val TestNameAndMethod: TraceNamer","org.http4k.tracing.junit.TraceNamer.Companion.TestNameAndMethod"]},{"name":"val TraceReporter.Companion.PrintToConsole: TraceReporter","description":"org.http4k.tracing.junit.PrintToConsole","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-print-to-console.html","searchKeys":["PrintToConsole","val TraceReporter.Companion.PrintToConsole: TraceReporter","org.http4k.tracing.junit.PrintToConsole"]},{"name":"val children: List<EventNode>","description":"org.http4k.tracing.EventNode.children","location":"http4k-testing-tracerbullet/org.http4k.tracing/-event-node/children.html","searchKeys":["children","val children: List<EventNode>","org.http4k.tracing.EventNode.children"]},{"name":"val content: String","description":"org.http4k.tracing.TraceRender.content","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render/content.html","searchKeys":["content","val content: String","org.http4k.tracing.TraceRender.content"]},{"name":"val entries: EnumEntries<ActorType>","description":"org.http4k.tracing.ActorType.entries","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor-type/entries.html","searchKeys":["entries","val entries: EnumEntries<ActorType>","org.http4k.tracing.ActorType.entries"]},{"name":"val entries: EnumEntries<RecordingMode>","description":"org.http4k.tracing.junit.RecordingMode.entries","location":"http4k-testing-tracerbullet/org.http4k.tracing.junit/-recording-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<RecordingMode>","org.http4k.tracing.junit.RecordingMode.entries"]},{"name":"val entries: EnumEntries<TraceCompletion>","description":"org.http4k.tracing.TraceCompletion.entries","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-completion/entries.html","searchKeys":["entries","val entries: EnumEntries<TraceCompletion>","org.http4k.tracing.TraceCompletion.entries"]},{"name":"val event: MetadataEvent","description":"org.http4k.tracing.EventNode.event","location":"http4k-testing-tracerbullet/org.http4k.tracing/-event-node/event.html","searchKeys":["event","val event: MetadataEvent","org.http4k.tracing.EventNode.event"]},{"name":"val format: String","description":"org.http4k.tracing.TraceRender.format","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render/format.html","searchKeys":["format","val format: String","org.http4k.tracing.TraceRender.format"]},{"name":"val interactionName: String","description":"org.http4k.tracing.StartInteraction.interactionName","location":"http4k-testing-tracerbullet/org.http4k.tracing/-start-interaction/interaction-name.html","searchKeys":["interactionName","val interactionName: String","org.http4k.tracing.StartInteraction.interactionName"]},{"name":"val name: String","description":"org.http4k.tracing.Actor.name","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor/name.html","searchKeys":["name","val name: String","org.http4k.tracing.Actor.name"]},{"name":"val name: String","description":"org.http4k.tracing.ScenarioTraces.name","location":"http4k-testing-tracerbullet/org.http4k.tracing/-scenario-traces/name.html","searchKeys":["name","val name: String","org.http4k.tracing.ScenarioTraces.name"]},{"name":"val origin: String","description":"org.http4k.tracing.StartInteraction.origin","location":"http4k-testing-tracerbullet/org.http4k.tracing/-start-interaction/origin.html","searchKeys":["origin","val origin: String","org.http4k.tracing.StartInteraction.origin"]},{"name":"val response: String","description":"org.http4k.tracing.RequestResponse.response","location":"http4k-testing-tracerbullet/org.http4k.tracing/-request-response/response.html","searchKeys":["response","val response: String","org.http4k.tracing.RequestResponse.response"]},{"name":"val title: String","description":"org.http4k.tracing.TraceRender.title","location":"http4k-testing-tracerbullet/org.http4k.tracing/-trace-render/title.html","searchKeys":["title","val title: String","org.http4k.tracing.TraceRender.title"]},{"name":"val traces: List<Trace>","description":"org.http4k.tracing.ScenarioTraces.traces","location":"http4k-testing-tracerbullet/org.http4k.tracing/-scenario-traces/traces.html","searchKeys":["traces","val traces: List<Trace>","org.http4k.tracing.ScenarioTraces.traces"]},{"name":"val type: ActorType","description":"org.http4k.tracing.Actor.type","location":"http4k-testing-tracerbullet/org.http4k.tracing/-actor/type.html","searchKeys":["type","val type: ActorType","org.http4k.tracing.Actor.type"]},{"name":"class InvalidJsonException(message: String, cause: Throwable? = null) : RuntimeException","description":"org.http4k.format.InvalidJsonException","location":"http4k-format-gson/org.http4k.format/-invalid-json-exception/index.html","searchKeys":["InvalidJsonException","class InvalidJsonException(message: String, cause: Throwable? = null) : RuntimeException","org.http4k.format.InvalidJsonException"]},{"name":"constructor(builder: GsonBuilder, defaultContentType: ContentType = APPLICATION_JSON)","description":"org.http4k.format.ConfigurableGson.ConfigurableGson","location":"http4k-format-gson/org.http4k.format/-configurable-gson/-configurable-gson.html","searchKeys":["ConfigurableGson","constructor(builder: GsonBuilder, defaultContentType: ContentType = APPLICATION_JSON)","org.http4k.format.ConfigurableGson.ConfigurableGson"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"org.http4k.format.InvalidJsonException.InvalidJsonException","location":"http4k-format-gson/org.http4k.format/-invalid-json-exception/-invalid-json-exception.html","searchKeys":["InvalidJsonException","constructor(message: String, cause: Throwable? = null)","org.http4k.format.InvalidJsonException.InvalidJsonException"]},{"name":"fun GsonBuilder.asConfigurable(): AutoMappingConfiguration<GsonBuilder>","description":"org.http4k.format.asConfigurable","location":"http4k-format-gson/org.http4k.format/as-configurable.html","searchKeys":["asConfigurable","fun GsonBuilder.asConfigurable(): AutoMappingConfiguration<GsonBuilder>","org.http4k.format.asConfigurable"]},{"name":"inline fun <T : Any, R : HttpMessage> R.with(t: T): R","description":"org.http4k.format.ConfigurableGson.with","location":"http4k-format-gson/org.http4k.format/-configurable-gson/with.html","searchKeys":["with","inline fun <T : Any, R : HttpMessage> R.with(t: T): R","org.http4k.format.ConfigurableGson.with"]},{"name":"inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","description":"org.http4k.format.ConfigurableGson.yaml","location":"http4k-format-gson/org.http4k.format/-configurable-gson/yaml.html","searchKeys":["yaml","inline fun <T : Any, R : HttpMessage> R.yaml(t: T): R","org.http4k.format.ConfigurableGson.yaml"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableGson.auto","location":"http4k-format-gson/org.http4k.format/-configurable-gson/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableGson.auto"]},{"name":"inline fun <T : Any> Gson.read(): (String) -> T","description":"org.http4k.format.read","location":"http4k-format-gson/org.http4k.format/read.html","searchKeys":["read","inline fun <T : Any> Gson.read(): (String) -> T","org.http4k.format.read"]},{"name":"inline fun <T : Any> HttpMessage.yaml(): T","description":"org.http4k.format.ConfigurableGson.yaml","location":"http4k-format-gson/org.http4k.format/-configurable-gson/yaml.html","searchKeys":["yaml","inline fun <T : Any> HttpMessage.yaml(): T","org.http4k.format.ConfigurableGson.yaml"]},{"name":"inline fun <T : Any> JsonElement.asA(): T","description":"org.http4k.format.ConfigurableGson.asA","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-a.html","searchKeys":["asA","inline fun <T : Any> JsonElement.asA(): T","org.http4k.format.ConfigurableGson.asA"]},{"name":"inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","description":"org.http4k.format.ConfigurableGson.auto","location":"http4k-format-gson/org.http4k.format/-configurable-gson/auto.html","searchKeys":["auto","inline fun <T : Any> WsMessage.Companion.auto(): BiDiWsMessageLensSpec<T>","org.http4k.format.ConfigurableGson.auto"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","description":"org.http4k.format.ConfigurableGson.autoBody","location":"http4k-format-gson/org.http4k.format/-configurable-gson/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = None, contentType: ContentType = defaultContentType): BiDiBodyLensSpec<T>","org.http4k.format.ConfigurableGson.autoBody"]},{"name":"inline operator fun <T : Any, R : HttpMessage> ConfigurableGson.invoke(item: T): (R) -> R","description":"org.http4k.format.invoke","location":"http4k-format-gson/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any, R : HttpMessage> ConfigurableGson.invoke(item: T): (R) -> R","org.http4k.format.invoke"]},{"name":"inline operator fun <T : Any> ConfigurableGson.invoke(msg: HttpMessage): T","description":"org.http4k.format.invoke","location":"http4k-format-gson/org.http4k.format/invoke.html","searchKeys":["invoke","inline operator fun <T : Any> ConfigurableGson.invoke(msg: HttpMessage): T","org.http4k.format.invoke"]},{"name":"object Gson : ConfigurableGson","description":"org.http4k.format.Gson","location":"http4k-format-gson/org.http4k.format/-gson/index.html","searchKeys":["Gson","object Gson : ConfigurableGson","org.http4k.format.Gson"]},{"name":"open class ConfigurableGson(builder: GsonBuilder, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonElement> ","description":"org.http4k.format.ConfigurableGson","location":"http4k-format-gson/org.http4k.format/-configurable-gson/index.html","searchKeys":["ConfigurableGson","open class ConfigurableGson(builder: GsonBuilder, val defaultContentType: ContentType = APPLICATION_JSON) : AutoMarshallingJson<JsonElement> ","org.http4k.format.ConfigurableGson"]},{"name":"open override fun <LIST : Iterable<Pair<String, JsonElement>>> LIST.asJsonObject(): JsonObject","description":"org.http4k.format.ConfigurableGson.asJsonObject","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, JsonElement>>> LIST.asJsonObject(): JsonObject","org.http4k.format.ConfigurableGson.asJsonObject"]},{"name":"open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","description":"org.http4k.format.ConfigurableGson.asA","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: InputStream, target: KClass<T>): T","org.http4k.format.ConfigurableGson.asA"]},{"name":"open override fun <T : Any> asA(input: String, target: KClass<T>): T","description":"org.http4k.format.ConfigurableGson.asA","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(input: String, target: KClass<T>): T","org.http4k.format.ConfigurableGson.asA"]},{"name":"open override fun <T : Any> asA(j: JsonElement, target: KClass<T>): T","description":"org.http4k.format.ConfigurableGson.asA","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-a.html","searchKeys":["asA","open override fun <T : Any> asA(j: JsonElement, target: KClass<T>): T","org.http4k.format.ConfigurableGson.asA"]},{"name":"open override fun <T : Iterable<JsonElement>> T.asJsonArray(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonArray","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<JsonElement>> T.asJsonArray(): JsonElement","org.http4k.format.ConfigurableGson.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun JsonElement.asCompactJsonString(): String","description":"org.http4k.format.ConfigurableGson.asCompactJsonString","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun JsonElement.asCompactJsonString(): String","org.http4k.format.ConfigurableGson.asCompactJsonString"]},{"name":"open override fun JsonElement.asPrettyJsonString(): String","description":"org.http4k.format.ConfigurableGson.asPrettyJsonString","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun JsonElement.asPrettyJsonString(): String","org.http4k.format.ConfigurableGson.asPrettyJsonString"]},{"name":"open override fun Long?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun String.asJsonObject(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonObject","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): JsonElement","org.http4k.format.ConfigurableGson.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonValue","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): JsonElement","org.http4k.format.ConfigurableGson.asJsonValue"]},{"name":"open override fun asJsonObject(input: Any): JsonElement","description":"org.http4k.format.ConfigurableGson.asJsonObject","location":"http4k-format-gson/org.http4k.format/-configurable-gson/as-json-object.html","searchKeys":["asJsonObject","open override fun asJsonObject(input: Any): JsonElement","org.http4k.format.ConfigurableGson.asJsonObject"]},{"name":"open override fun bool(value: JsonElement): Boolean","description":"org.http4k.format.ConfigurableGson.bool","location":"http4k-format-gson/org.http4k.format/-configurable-gson/bool.html","searchKeys":["bool","open override fun bool(value: JsonElement): Boolean","org.http4k.format.ConfigurableGson.bool"]},{"name":"open override fun decimal(value: JsonElement): BigDecimal","description":"org.http4k.format.ConfigurableGson.decimal","location":"http4k-format-gson/org.http4k.format/-configurable-gson/decimal.html","searchKeys":["decimal","open override fun decimal(value: JsonElement): BigDecimal","org.http4k.format.ConfigurableGson.decimal"]},{"name":"open override fun elements(value: JsonElement): Iterable<JsonElement>","description":"org.http4k.format.ConfigurableGson.elements","location":"http4k-format-gson/org.http4k.format/-configurable-gson/elements.html","searchKeys":["elements","open override fun elements(value: JsonElement): Iterable<JsonElement>","org.http4k.format.ConfigurableGson.elements"]},{"name":"open override fun fields(node: JsonElement): Iterable<Pair<String, JsonElement>>","description":"org.http4k.format.ConfigurableGson.fields","location":"http4k-format-gson/org.http4k.format/-configurable-gson/fields.html","searchKeys":["fields","open override fun fields(node: JsonElement): Iterable<Pair<String, JsonElement>>","org.http4k.format.ConfigurableGson.fields"]},{"name":"open override fun integer(value: JsonElement): Long","description":"org.http4k.format.ConfigurableGson.integer","location":"http4k-format-gson/org.http4k.format/-configurable-gson/integer.html","searchKeys":["integer","open override fun integer(value: JsonElement): Long","org.http4k.format.ConfigurableGson.integer"]},{"name":"open override fun text(value: JsonElement): String","description":"org.http4k.format.ConfigurableGson.text","location":"http4k-format-gson/org.http4k.format/-configurable-gson/text.html","searchKeys":["text","open override fun text(value: JsonElement): String","org.http4k.format.ConfigurableGson.text"]},{"name":"open override fun textValueOf(node: JsonElement, name: String): String","description":"org.http4k.format.ConfigurableGson.textValueOf","location":"http4k-format-gson/org.http4k.format/-configurable-gson/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: JsonElement, name: String): String","org.http4k.format.ConfigurableGson.textValueOf"]},{"name":"open override fun typeOf(value: JsonElement): JsonType","description":"org.http4k.format.ConfigurableGson.typeOf","location":"http4k-format-gson/org.http4k.format/-configurable-gson/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: JsonElement): JsonType","org.http4k.format.ConfigurableGson.typeOf"]},{"name":"open override val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableGson.defaultContentType","location":"http4k-format-gson/org.http4k.format/-configurable-gson/default-content-type.html","searchKeys":["defaultContentType","open override val defaultContentType: ContentType","org.http4k.format.ConfigurableGson.defaultContentType"]},{"name":"val mapper: Gson","description":"org.http4k.format.ConfigurableGson.mapper","location":"http4k-format-gson/org.http4k.format/-configurable-gson/mapper.html","searchKeys":["mapper","val mapper: Gson","org.http4k.format.ConfigurableGson.mapper"]},{"name":"constructor(mapper: CsvMapper, defaultContentType: ContentType = ContentType.TEXT_CSV)","description":"org.http4k.format.ConfigurableJacksonCsv.ConfigurableJacksonCsv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/-configurable-jackson-csv.html","searchKeys":["ConfigurableJacksonCsv","constructor(mapper: CsvMapper, defaultContentType: ContentType = ContentType.TEXT_CSV)","org.http4k.format.ConfigurableJacksonCsv.ConfigurableJacksonCsv"]},{"name":"fun <T : Any> readerFor(type: KClass<T>, schema: CsvSchema): (String) -> List<T>","description":"org.http4k.format.ConfigurableJacksonCsv.readerFor","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/reader-for.html","searchKeys":["readerFor","fun <T : Any> readerFor(type: KClass<T>, schema: CsvSchema): (String) -> List<T>","org.http4k.format.ConfigurableJacksonCsv.readerFor"]},{"name":"fun <T : Any> writerFor(type: KClass<T>, schema: CsvSchema): (List<T>) -> String","description":"org.http4k.format.ConfigurableJacksonCsv.writerFor","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/writer-for.html","searchKeys":["writerFor","fun <T : Any> writerFor(type: KClass<T>, schema: CsvSchema): (List<T>) -> String","org.http4k.format.ConfigurableJacksonCsv.writerFor"]},{"name":"inline fun <T : Any, R : HttpMessage> R.csv(t: List<T>): R","description":"org.http4k.format.ConfigurableJacksonCsv.csv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/csv.html","searchKeys":["csv","inline fun <T : Any, R : HttpMessage> R.csv(t: List<T>): R","org.http4k.format.ConfigurableJacksonCsv.csv"]},{"name":"inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<List<T>>","description":"org.http4k.format.ConfigurableJacksonCsv.auto","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/auto.html","searchKeys":["auto","inline fun <T : Any> Body.Companion.auto(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None): BiDiBodyLensSpec<List<T>>","org.http4k.format.ConfigurableJacksonCsv.auto"]},{"name":"inline fun <T : Any> HttpMessage.csv(): List<T>","description":"org.http4k.format.ConfigurableJacksonCsv.csv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/csv.html","searchKeys":["csv","inline fun <T : Any> HttpMessage.csv(): List<T>","org.http4k.format.ConfigurableJacksonCsv.csv"]},{"name":"inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType, schema: CsvSchema = defaultSchema<T>()): BiDiBodyLensSpec<List<T>>","description":"org.http4k.format.ConfigurableJacksonCsv.autoBody","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/auto-body.html","searchKeys":["autoBody","inline fun <T : Any> autoBody(description: String? = null, contentNegotiation: ContentNegotiation = ContentNegotiation.None, contentType: ContentType = defaultContentType, schema: CsvSchema = defaultSchema<T>()): BiDiBodyLensSpec<List<T>>","org.http4k.format.ConfigurableJacksonCsv.autoBody"]},{"name":"inline fun <T : Any> readCsv(input: String, schema: CsvSchema = defaultSchema<T>()): List<T>","description":"org.http4k.format.ConfigurableJacksonCsv.readCsv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/read-csv.html","searchKeys":["readCsv","inline fun <T : Any> readCsv(input: String, schema: CsvSchema = defaultSchema<T>()): List<T>","org.http4k.format.ConfigurableJacksonCsv.readCsv"]},{"name":"inline fun <T : Any> writeCsv(input: List<T>, schema: CsvSchema = defaultSchema<T>()): String","description":"org.http4k.format.ConfigurableJacksonCsv.writeCsv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/write-csv.html","searchKeys":["writeCsv","inline fun <T : Any> writeCsv(input: List<T>, schema: CsvSchema = defaultSchema<T>()): String","org.http4k.format.ConfigurableJacksonCsv.writeCsv"]},{"name":"inline fun <T> defaultSchema(): CsvSchema","description":"org.http4k.format.ConfigurableJacksonCsv.defaultSchema","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/default-schema.html","searchKeys":["defaultSchema","inline fun <T> defaultSchema(): CsvSchema","org.http4k.format.ConfigurableJacksonCsv.defaultSchema"]},{"name":"object JacksonCsv : ConfigurableJacksonCsv","description":"org.http4k.format.JacksonCsv","location":"http4k-format-jackson-csv/org.http4k.format/-jackson-csv/index.html","searchKeys":["JacksonCsv","object JacksonCsv : ConfigurableJacksonCsv","org.http4k.format.JacksonCsv"]},{"name":"open class ConfigurableJacksonCsv(val mapper: CsvMapper, val defaultContentType: ContentType = ContentType.TEXT_CSV)","description":"org.http4k.format.ConfigurableJacksonCsv","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/index.html","searchKeys":["ConfigurableJacksonCsv","open class ConfigurableJacksonCsv(val mapper: CsvMapper, val defaultContentType: ContentType = ContentType.TEXT_CSV)","org.http4k.format.ConfigurableJacksonCsv"]},{"name":"val defaultContentType: ContentType","description":"org.http4k.format.ConfigurableJacksonCsv.defaultContentType","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/default-content-type.html","searchKeys":["defaultContentType","val defaultContentType: ContentType","org.http4k.format.ConfigurableJacksonCsv.defaultContentType"]},{"name":"val mapper: CsvMapper","description":"org.http4k.format.ConfigurableJacksonCsv.mapper","location":"http4k-format-jackson-csv/org.http4k.format/-configurable-jackson-csv/mapper.html","searchKeys":["mapper","val mapper: CsvMapper","org.http4k.format.ConfigurableJacksonCsv.mapper"]},{"name":"abstract class RockerViewModel : DefaultRockerModel, ViewModel","description":"org.http4k.template.RockerViewModel","location":"http4k-template-rocker/org.http4k.template/-rocker-view-model/index.html","searchKeys":["RockerViewModel","abstract class RockerViewModel : DefaultRockerModel, ViewModel","org.http4k.template.RockerViewModel"]},{"name":"class RockerTemplates : Templates","description":"org.http4k.template.RockerTemplates","location":"http4k-template-rocker/org.http4k.template/-rocker-templates/index.html","searchKeys":["RockerTemplates","class RockerTemplates : Templates","org.http4k.template.RockerTemplates"]},{"name":"constructor()","description":"org.http4k.template.RockerTemplates.RockerTemplates","location":"http4k-template-rocker/org.http4k.template/-rocker-templates/-rocker-templates.html","searchKeys":["RockerTemplates","constructor()","org.http4k.template.RockerTemplates.RockerTemplates"]},{"name":"constructor()","description":"org.http4k.template.RockerViewModel.RockerViewModel","location":"http4k-template-rocker/org.http4k.template/-rocker-view-model/-rocker-view-model.html","searchKeys":["RockerViewModel","constructor()","org.http4k.template.RockerViewModel.RockerViewModel"]},{"name":"open override fun Caching(unused: String): (ViewModel) -> String","description":"org.http4k.template.RockerTemplates.Caching","location":"http4k-template-rocker/org.http4k.template/-rocker-templates/-caching.html","searchKeys":["Caching","open override fun Caching(unused: String): (ViewModel) -> String","org.http4k.template.RockerTemplates.Caching"]},{"name":"open override fun CachingClasspath(unused: String): (ViewModel) -> String","description":"org.http4k.template.RockerTemplates.CachingClasspath","location":"http4k-template-rocker/org.http4k.template/-rocker-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(unused: String): (ViewModel) -> String","org.http4k.template.RockerTemplates.CachingClasspath"]},{"name":"open override fun HotReload(unused: String): (ViewModel) -> String","description":"org.http4k.template.RockerTemplates.HotReload","location":"http4k-template-rocker/org.http4k.template/-rocker-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(unused: String): (ViewModel) -> String","org.http4k.template.RockerTemplates.HotReload"]},{"name":"open override fun template(): String","description":"org.http4k.template.RockerViewModel.template","location":"http4k-template-rocker/org.http4k.template/-rocker-view-model/template.html","searchKeys":["template","open override fun template(): String","org.http4k.template.RockerViewModel.template"]},{"name":"fun defaultApacheHttpClient(): CloseableHttpClient","description":"org.http4k.client.PreCannedApacheHttpClients.defaultApacheHttpClient","location":"http4k-client-apache/org.http4k.client/-pre-canned-apache-http-clients/default-apache-http-client.html","searchKeys":["defaultApacheHttpClient","fun defaultApacheHttpClient(): CloseableHttpClient","org.http4k.client.PreCannedApacheHttpClients.defaultApacheHttpClient"]},{"name":"fun insecureApacheHttpClient(): CloseableHttpClient","description":"org.http4k.client.PreCannedApacheHttpClients.insecureApacheHttpClient","location":"http4k-client-apache/org.http4k.client/-pre-canned-apache-http-clients/insecure-apache-http-client.html","searchKeys":["insecureApacheHttpClient","fun insecureApacheHttpClient(): CloseableHttpClient","org.http4k.client.PreCannedApacheHttpClients.insecureApacheHttpClient"]},{"name":"object ApacheClient","description":"org.http4k.client.ApacheClient","location":"http4k-client-apache/org.http4k.client/-apache-client/index.html","searchKeys":["ApacheClient","object ApacheClient","org.http4k.client.ApacheClient"]},{"name":"object PreCannedApacheHttpClients","description":"org.http4k.client.PreCannedApacheHttpClients","location":"http4k-client-apache/org.http4k.client/-pre-canned-apache-http-clients/index.html","searchKeys":["PreCannedApacheHttpClients","object PreCannedApacheHttpClients","org.http4k.client.PreCannedApacheHttpClients"]},{"name":"operator fun invoke(client: CloseableHttpClient = PreCannedApacheHttpClients.defaultApacheHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): HttpHandler","description":"org.http4k.client.ApacheClient.invoke","location":"http4k-client-apache/org.http4k.client/-apache-client/invoke.html","searchKeys":["invoke","operator fun invoke(client: CloseableHttpClient = PreCannedApacheHttpClients.defaultApacheHttpClient(), responseBodyMode: BodyMode = Memory, requestBodyMode: BodyMode = Memory): HttpHandler","org.http4k.client.ApacheClient.invoke"]},{"name":"object Argo : Json<JsonNode> ","description":"org.http4k.format.Argo","location":"http4k-format-argo/org.http4k.format/-argo/index.html","searchKeys":["Argo","object Argo : Json<JsonNode> ","org.http4k.format.Argo"]},{"name":"open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNode","description":"org.http4k.format.Argo.asJsonObject","location":"http4k-format-argo/org.http4k.format/-argo/as-json-object.html","searchKeys":["asJsonObject","open override fun <LIST : Iterable<Pair<String, JsonNode>>> LIST.asJsonObject(): JsonNode","org.http4k.format.Argo.asJsonObject"]},{"name":"open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNode","description":"org.http4k.format.Argo.asJsonArray","location":"http4k-format-argo/org.http4k.format/-argo/as-json-array.html","searchKeys":["asJsonArray","open override fun <T : Iterable<JsonNode>> T.asJsonArray(): JsonNode","org.http4k.format.Argo.asJsonArray"]},{"name":"open override fun BigDecimal?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun BigDecimal?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun BigInteger?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun BigInteger?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun Boolean?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun Boolean?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun Double?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun Double?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun Int?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun Int?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun JsonNode.asCompactJsonString(): String","description":"org.http4k.format.Argo.asCompactJsonString","location":"http4k-format-argo/org.http4k.format/-argo/as-compact-json-string.html","searchKeys":["asCompactJsonString","open override fun JsonNode.asCompactJsonString(): String","org.http4k.format.Argo.asCompactJsonString"]},{"name":"open override fun JsonNode.asPrettyJsonString(): String","description":"org.http4k.format.Argo.asPrettyJsonString","location":"http4k-format-argo/org.http4k.format/-argo/as-pretty-json-string.html","searchKeys":["asPrettyJsonString","open override fun JsonNode.asPrettyJsonString(): String","org.http4k.format.Argo.asPrettyJsonString"]},{"name":"open override fun Long?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun Long?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun String.asJsonObject(): JsonNode","description":"org.http4k.format.Argo.asJsonObject","location":"http4k-format-argo/org.http4k.format/-argo/as-json-object.html","searchKeys":["asJsonObject","open override fun String.asJsonObject(): JsonNode","org.http4k.format.Argo.asJsonObject"]},{"name":"open override fun String?.asJsonValue(): JsonNode","description":"org.http4k.format.Argo.asJsonValue","location":"http4k-format-argo/org.http4k.format/-argo/as-json-value.html","searchKeys":["asJsonValue","open override fun String?.asJsonValue(): JsonNode","org.http4k.format.Argo.asJsonValue"]},{"name":"open override fun bool(value: JsonNode): Boolean","description":"org.http4k.format.Argo.bool","location":"http4k-format-argo/org.http4k.format/-argo/bool.html","searchKeys":["bool","open override fun bool(value: JsonNode): Boolean","org.http4k.format.Argo.bool"]},{"name":"open override fun decimal(value: JsonNode): BigDecimal","description":"org.http4k.format.Argo.decimal","location":"http4k-format-argo/org.http4k.format/-argo/decimal.html","searchKeys":["decimal","open override fun decimal(value: JsonNode): BigDecimal","org.http4k.format.Argo.decimal"]},{"name":"open override fun elements(value: JsonNode): Iterable<JsonNode>","description":"org.http4k.format.Argo.elements","location":"http4k-format-argo/org.http4k.format/-argo/elements.html","searchKeys":["elements","open override fun elements(value: JsonNode): Iterable<JsonNode>","org.http4k.format.Argo.elements"]},{"name":"open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","description":"org.http4k.format.Argo.fields","location":"http4k-format-argo/org.http4k.format/-argo/fields.html","searchKeys":["fields","open override fun fields(node: JsonNode): List<Pair<String, JsonNode>>","org.http4k.format.Argo.fields"]},{"name":"open override fun integer(value: JsonNode): Long","description":"org.http4k.format.Argo.integer","location":"http4k-format-argo/org.http4k.format/-argo/integer.html","searchKeys":["integer","open override fun integer(value: JsonNode): Long","org.http4k.format.Argo.integer"]},{"name":"open override fun text(value: JsonNode): String","description":"org.http4k.format.Argo.text","location":"http4k-format-argo/org.http4k.format/-argo/text.html","searchKeys":["text","open override fun text(value: JsonNode): String","org.http4k.format.Argo.text"]},{"name":"open override fun textValueOf(node: JsonNode, name: String): String","description":"org.http4k.format.Argo.textValueOf","location":"http4k-format-argo/org.http4k.format/-argo/text-value-of.html","searchKeys":["textValueOf","open override fun textValueOf(node: JsonNode, name: String): String","org.http4k.format.Argo.textValueOf"]},{"name":"open override fun typeOf(value: JsonNode): JsonType","description":"org.http4k.format.Argo.typeOf","location":"http4k-format-argo/org.http4k.format/-argo/type-of.html","searchKeys":["typeOf","open override fun typeOf(value: JsonNode): JsonType","org.http4k.format.Argo.typeOf"]},{"name":"fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.of(5, ChronoUnit.SECONDS), client: OkHttpClient = defaultOkHttpClient()): WsClient","description":"org.http4k.client.OkHttpWebsocketClient.blocking","location":"http4k-client-okhttp/org.http4k.client/-ok-http-websocket-client/blocking.html","searchKeys":["blocking","fun blocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.of(5, ChronoUnit.SECONDS), client: OkHttpClient = defaultOkHttpClient()): WsClient","org.http4k.client.OkHttpWebsocketClient.blocking"]},{"name":"fun defaultOkHttpClient(): OkHttpClient","description":"org.http4k.client.PreCannedOkHttpClients.defaultOkHttpClient","location":"http4k-client-okhttp/org.http4k.client/-pre-canned-ok-http-clients/default-ok-http-client.html","searchKeys":["defaultOkHttpClient","fun defaultOkHttpClient(): OkHttpClient","org.http4k.client.PreCannedOkHttpClients.defaultOkHttpClient"]},{"name":"fun insecureOkHttpClient(): OkHttpClient","description":"org.http4k.client.PreCannedOkHttpClients.insecureOkHttpClient","location":"http4k-client-okhttp/org.http4k.client/-pre-canned-ok-http-clients/insecure-ok-http-client.html","searchKeys":["insecureOkHttpClient","fun insecureOkHttpClient(): OkHttpClient","org.http4k.client.PreCannedOkHttpClients.insecureOkHttpClient"]},{"name":"fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.ZERO, client: OkHttpClient = defaultOkHttpClient(), onError: (Throwable) -> Unit = {}, onConnect: WsConsumer = {}): Websocket","description":"org.http4k.client.OkHttpWebsocketClient.nonBlocking","location":"http4k-client-okhttp/org.http4k.client/-ok-http-websocket-client/non-blocking.html","searchKeys":["nonBlocking","fun nonBlocking(uri: Uri, headers: Headers = emptyList(), timeout: Duration = Duration.ZERO, client: OkHttpClient = defaultOkHttpClient(), onError: (Throwable) -> Unit = {}, onConnect: WsConsumer = {}): Websocket","org.http4k.client.OkHttpWebsocketClient.nonBlocking"]},{"name":"object OkHttp","description":"org.http4k.client.OkHttp","location":"http4k-client-okhttp/org.http4k.client/-ok-http/index.html","searchKeys":["OkHttp","object OkHttp","org.http4k.client.OkHttp"]},{"name":"object OkHttpWebsocketClient","description":"org.http4k.client.OkHttpWebsocketClient","location":"http4k-client-okhttp/org.http4k.client/-ok-http-websocket-client/index.html","searchKeys":["OkHttpWebsocketClient","object OkHttpWebsocketClient","org.http4k.client.OkHttpWebsocketClient"]},{"name":"object PreCannedOkHttpClients","description":"org.http4k.client.PreCannedOkHttpClients","location":"http4k-client-okhttp/org.http4k.client/-pre-canned-ok-http-clients/index.html","searchKeys":["PreCannedOkHttpClients","object PreCannedOkHttpClients","org.http4k.client.PreCannedOkHttpClients"]},{"name":"operator fun invoke(client: OkHttpClient = defaultOkHttpClient(), bodyMode: BodyMode = BodyMode.Memory): DualSyncAsyncHttpHandler","description":"org.http4k.client.OkHttp.invoke","location":"http4k-client-okhttp/org.http4k.client/-ok-http/invoke.html","searchKeys":["invoke","operator fun invoke(client: OkHttpClient = defaultOkHttpClient(), bodyMode: BodyMode = BodyMode.Memory): DualSyncAsyncHttpHandler","org.http4k.client.OkHttp.invoke"]},{"name":"class PebbleTemplates(configure: (PebbleEngine.Builder) -> PebbleEngine.Builder = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","description":"org.http4k.template.PebbleTemplates","location":"http4k-template-pebble/org.http4k.template/-pebble-templates/index.html","searchKeys":["PebbleTemplates","class PebbleTemplates(configure: (PebbleEngine.Builder) -> PebbleEngine.Builder = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","org.http4k.template.PebbleTemplates"]},{"name":"constructor(configure: (PebbleEngine.Builder) -> PebbleEngine.Builder = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","description":"org.http4k.template.PebbleTemplates.PebbleTemplates","location":"http4k-template-pebble/org.http4k.template/-pebble-templates/-pebble-templates.html","searchKeys":["PebbleTemplates","constructor(configure: (PebbleEngine.Builder) -> PebbleEngine.Builder = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","org.http4k.template.PebbleTemplates.PebbleTemplates"]},{"name":"open override fun Caching(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.PebbleTemplates.Caching","location":"http4k-template-pebble/org.http4k.template/-pebble-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): TemplateRenderer","org.http4k.template.PebbleTemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","description":"org.http4k.template.PebbleTemplates.CachingClasspath","location":"http4k-template-pebble/org.http4k.template/-pebble-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","org.http4k.template.PebbleTemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.PebbleTemplates.HotReload","location":"http4k-template-pebble/org.http4k.template/-pebble-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): TemplateRenderer","org.http4k.template.PebbleTemplates.HotReload"]},{"name":"fun redocWebjar(configFn: RedocConfig.() -> Unit = {}): RoutingHttpHandler","description":"org.http4k.contract.ui.redoc.redocWebjar","location":"http4k-contract-ui-redoc/org.http4k.contract.ui.redoc/redoc-webjar.html","searchKeys":["redocWebjar","fun redocWebjar(configFn: RedocConfig.() -> Unit = {}): RoutingHttpHandler","org.http4k.contract.ui.redoc.redocWebjar"]},{"name":"fun <NODE> Json<NODE>.hasBody(expected: Matcher<NODE>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun <NODE> Json<NODE>.hasBody(expected: Matcher<NODE>): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun <NODE> Json<NODE>.hasBody(expected: NODE): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun <NODE> Json<NODE>.hasBody(expected: NODE): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun <NODE> Json<NODE>.hasBody(expected: String): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun <NODE> Json<NODE>.hasBody(expected: String): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun <T> hasBody(lens: BodyLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun <T> hasBody(lens: BodyLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun <T> hasFormField(lens: Lens<WebForm, T>, matcher: Matcher<T>): Matcher<WebForm>","description":"org.http4k.hamkrest.hasFormField","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-form-field.html","searchKeys":["hasFormField","fun <T> hasFormField(lens: Lens<WebForm, T>, matcher: Matcher<T>): Matcher<WebForm>","org.http4k.hamkrest.hasFormField"]},{"name":"fun <T> hasHeader(lens: HeaderLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun <T> hasHeader(lens: HeaderLens<T>, matcher: Matcher<T>): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun <T> hasQuery(lens: QueryLens<T>, matcher: Matcher<T>): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun <T> hasQuery(lens: QueryLens<T>, matcher: Matcher<T>): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun RequestFilters.Assert(matcher: Matcher<Request>): Filter","description":"org.http4k.filter.Assert","location":"http4k-testing-hamkrest/org.http4k.filter/-assert.html","searchKeys":["Assert","fun RequestFilters.Assert(matcher: Matcher<Request>): Filter","org.http4k.filter.Assert"]},{"name":"fun ResponseFilters.Assert(matcher: Matcher<Response>): Filter","description":"org.http4k.filter.Assert","location":"http4k-testing-hamkrest/org.http4k.filter/-assert.html","searchKeys":["Assert","fun ResponseFilters.Assert(matcher: Matcher<Response>): Filter","org.http4k.filter.Assert"]},{"name":"fun hasAuthority(expected: String): Matcher<Uri>","description":"org.http4k.hamkrest.hasAuthority","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-authority.html","searchKeys":["hasAuthority","fun hasAuthority(expected: String): Matcher<Uri>","org.http4k.hamkrest.hasAuthority"]},{"name":"fun hasBody(expected: CharSequence): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun hasBody(expected: CharSequence): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun hasBody(expected: Matcher<Body>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun hasBody(expected: Matcher<Body>): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun hasBody(expected: Matcher<String>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun hasBody(expected: Matcher<String>): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun hasBody(expected: Matcher<String?>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun hasBody(expected: Matcher<String?>): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun hasBody(expected: Regex): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasBody","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-body.html","searchKeys":["hasBody","fun hasBody(expected: Regex): Matcher<HttpMessage>","org.http4k.hamkrest.hasBody"]},{"name":"fun hasContentType(expected: ContentType): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasContentType","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-content-type.html","searchKeys":["hasContentType","fun hasContentType(expected: ContentType): Matcher<HttpMessage>","org.http4k.hamkrest.hasContentType"]},{"name":"fun hasCookie(expected: Cookie): Matcher<Request>","description":"org.http4k.hamkrest.hasCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie.html","searchKeys":["hasCookie","fun hasCookie(expected: Cookie): Matcher<Request>","org.http4k.hamkrest.hasCookie"]},{"name":"fun hasCookie(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.hamkrest.hasCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie.html","searchKeys":["hasCookie","fun hasCookie(name: String, expected: Regex): Matcher<Request>","org.http4k.hamkrest.hasCookie"]},{"name":"fun hasCookie(name: String, expected: String): Matcher<Request>","description":"org.http4k.hamkrest.hasCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie.html","searchKeys":["hasCookie","fun hasCookie(name: String, expected: String): Matcher<Request>","org.http4k.hamkrest.hasCookie"]},{"name":"fun hasCookie(name: String, matcher: Matcher<Cookie>): Matcher<Request>","description":"org.http4k.hamkrest.hasCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie.html","searchKeys":["hasCookie","fun hasCookie(name: String, matcher: Matcher<Cookie>): Matcher<Request>","org.http4k.hamkrest.hasCookie"]},{"name":"fun hasCookieDomain(expected: CharSequence): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieDomain","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-domain.html","searchKeys":["hasCookieDomain","fun hasCookieDomain(expected: CharSequence): Matcher<Cookie>","org.http4k.hamkrest.hasCookieDomain"]},{"name":"fun hasCookieExpiry(expected: Instant): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieExpiry","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-expiry.html","searchKeys":["hasCookieExpiry","fun hasCookieExpiry(expected: Instant): Matcher<Cookie>","org.http4k.hamkrest.hasCookieExpiry"]},{"name":"fun hasCookieExpiry(matcher: Matcher<Instant>): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieExpiry","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-expiry.html","searchKeys":["hasCookieExpiry","fun hasCookieExpiry(matcher: Matcher<Instant>): Matcher<Cookie>","org.http4k.hamkrest.hasCookieExpiry"]},{"name":"fun hasCookieName(expected: CharSequence): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieName","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-name.html","searchKeys":["hasCookieName","fun hasCookieName(expected: CharSequence): Matcher<Cookie>","org.http4k.hamkrest.hasCookieName"]},{"name":"fun hasCookiePath(expected: CharSequence): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookiePath","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-path.html","searchKeys":["hasCookiePath","fun hasCookiePath(expected: CharSequence): Matcher<Cookie>","org.http4k.hamkrest.hasCookiePath"]},{"name":"fun hasCookieSameSite(expected: SameSite): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieSameSite","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-same-site.html","searchKeys":["hasCookieSameSite","fun hasCookieSameSite(expected: SameSite): Matcher<Cookie>","org.http4k.hamkrest.hasCookieSameSite"]},{"name":"fun hasCookieValue(expected: CharSequence): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieValue","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-value.html","searchKeys":["hasCookieValue","fun hasCookieValue(expected: CharSequence): Matcher<Cookie>","org.http4k.hamkrest.hasCookieValue"]},{"name":"fun hasCookieValue(matcher: Matcher<String>): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieValue","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-value.html","searchKeys":["hasCookieValue","fun hasCookieValue(matcher: Matcher<String>): Matcher<Cookie>","org.http4k.hamkrest.hasCookieValue"]},{"name":"fun hasCookieValue(matcher: Matcher<String?>): Matcher<Cookie>","description":"org.http4k.hamkrest.hasCookieValue","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-cookie-value.html","searchKeys":["hasCookieValue","fun hasCookieValue(matcher: Matcher<String?>): Matcher<Cookie>","org.http4k.hamkrest.hasCookieValue"]},{"name":"fun hasForm(name: String, expected: CharSequence): Matcher<Request>","description":"org.http4k.hamkrest.hasForm","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-form.html","searchKeys":["hasForm","fun hasForm(name: String, expected: CharSequence): Matcher<Request>","org.http4k.hamkrest.hasForm"]},{"name":"fun hasForm(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.hamkrest.hasForm","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-form.html","searchKeys":["hasForm","fun hasForm(name: String, expected: Regex): Matcher<Request>","org.http4k.hamkrest.hasForm"]},{"name":"fun hasForm(name: String, matcher: Matcher<String>): Matcher<Request>","description":"org.http4k.hamkrest.hasForm","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-form.html","searchKeys":["hasForm","fun hasForm(name: String, matcher: Matcher<String>): Matcher<Request>","org.http4k.hamkrest.hasForm"]},{"name":"fun hasForm(name: String, matcher: Matcher<String?>): Matcher<Request>","description":"org.http4k.hamkrest.hasForm","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-form.html","searchKeys":["hasForm","fun hasForm(name: String, matcher: Matcher<String?>): Matcher<Request>","org.http4k.hamkrest.hasForm"]},{"name":"fun hasHeader(name: String): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHeader(name: String, expected: CharSequence): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String, expected: CharSequence): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHeader(name: String, expected: List<String?>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String, expected: List<String?>): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHeader(name: String, expected: Regex): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String, expected: Regex): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHeader(name: String, matcher: Matcher<String>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String, matcher: Matcher<String>): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHeader(name: String, matcher: Matcher<String?>): Matcher<HttpMessage>","description":"org.http4k.hamkrest.hasHeader","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-header.html","searchKeys":["hasHeader","fun hasHeader(name: String, matcher: Matcher<String?>): Matcher<HttpMessage>","org.http4k.hamkrest.hasHeader"]},{"name":"fun hasHost(expected: String): Matcher<Uri>","description":"org.http4k.hamkrest.hasHost","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-host.html","searchKeys":["hasHost","fun hasHost(expected: String): Matcher<Uri>","org.http4k.hamkrest.hasHost"]},{"name":"fun hasMethod(expected: Method): Matcher<Request>","description":"org.http4k.hamkrest.hasMethod","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-method.html","searchKeys":["hasMethod","fun hasMethod(expected: Method): Matcher<Request>","org.http4k.hamkrest.hasMethod"]},{"name":"fun hasPort(expected: Int): Matcher<Uri>","description":"org.http4k.hamkrest.hasPort","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-port.html","searchKeys":["hasPort","fun hasPort(expected: Int): Matcher<Uri>","org.http4k.hamkrest.hasPort"]},{"name":"fun hasQuery(name: String, expected: CharSequence): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun hasQuery(name: String, expected: CharSequence): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun hasQuery(name: String, expected: List<String?>): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun hasQuery(name: String, expected: List<String?>): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun hasQuery(name: String, expected: Regex): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun hasQuery(name: String, expected: Regex): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun hasQuery(name: String, matcher: Matcher<String>): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun hasQuery(name: String, matcher: Matcher<String>): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun hasQuery(name: String, matcher: Matcher<String?>): Matcher<Request>","description":"org.http4k.hamkrest.hasQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-query.html","searchKeys":["hasQuery","fun hasQuery(name: String, matcher: Matcher<String?>): Matcher<Request>","org.http4k.hamkrest.hasQuery"]},{"name":"fun hasRequest(matcher: Matcher<Request>): Matcher<HttpTransaction>","description":"org.http4k.hamkrest.hasRequest","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-request.html","searchKeys":["hasRequest","fun hasRequest(matcher: Matcher<Request>): Matcher<HttpTransaction>","org.http4k.hamkrest.hasRequest"]},{"name":"fun hasResponse(matcher: Matcher<Response>): Matcher<HttpTransaction>","description":"org.http4k.hamkrest.hasResponse","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-response.html","searchKeys":["hasResponse","fun hasResponse(matcher: Matcher<Response>): Matcher<HttpTransaction>","org.http4k.hamkrest.hasResponse"]},{"name":"fun hasSetCookie(expected: Cookie): Matcher<Response>","description":"org.http4k.hamkrest.hasSetCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-set-cookie.html","searchKeys":["hasSetCookie","fun hasSetCookie(expected: Cookie): Matcher<Response>","org.http4k.hamkrest.hasSetCookie"]},{"name":"fun hasSetCookie(name: String, expected: Matcher<Cookie>): Matcher<Response>","description":"org.http4k.hamkrest.hasSetCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-set-cookie.html","searchKeys":["hasSetCookie","fun hasSetCookie(name: String, expected: Matcher<Cookie>): Matcher<Response>","org.http4k.hamkrest.hasSetCookie"]},{"name":"fun hasStatus(expected: Status): Matcher<Response>","description":"org.http4k.hamkrest.hasStatus","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-status.html","searchKeys":["hasStatus","fun hasStatus(expected: Status): Matcher<Response>","org.http4k.hamkrest.hasStatus"]},{"name":"fun hasStatusDescription(expected: String): Matcher<Response>","description":"org.http4k.hamkrest.hasStatusDescription","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-status-description.html","searchKeys":["hasStatusDescription","fun hasStatusDescription(expected: String): Matcher<Response>","org.http4k.hamkrest.hasStatusDescription"]},{"name":"fun hasUri(expected: Matcher<Uri>): Matcher<Request>","description":"org.http4k.hamkrest.hasUri","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri.html","searchKeys":["hasUri","fun hasUri(expected: Matcher<Uri>): Matcher<Request>","org.http4k.hamkrest.hasUri"]},{"name":"fun hasUri(expected: Regex): Matcher<Request>","description":"org.http4k.hamkrest.hasUri","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri.html","searchKeys":["hasUri","fun hasUri(expected: Regex): Matcher<Request>","org.http4k.hamkrest.hasUri"]},{"name":"fun hasUri(expected: String): Matcher<Request>","description":"org.http4k.hamkrest.hasUri","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri.html","searchKeys":["hasUri","fun hasUri(expected: String): Matcher<Request>","org.http4k.hamkrest.hasUri"]},{"name":"fun hasUri(expected: Uri): Matcher<Request>","description":"org.http4k.hamkrest.hasUri","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri.html","searchKeys":["hasUri","fun hasUri(expected: Uri): Matcher<Request>","org.http4k.hamkrest.hasUri"]},{"name":"fun hasUriPath(expected: Regex): Matcher<Uri>","description":"org.http4k.hamkrest.hasUriPath","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri-path.html","searchKeys":["hasUriPath","fun hasUriPath(expected: Regex): Matcher<Uri>","org.http4k.hamkrest.hasUriPath"]},{"name":"fun hasUriPath(expected: String): Matcher<Uri>","description":"org.http4k.hamkrest.hasUriPath","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri-path.html","searchKeys":["hasUriPath","fun hasUriPath(expected: String): Matcher<Uri>","org.http4k.hamkrest.hasUriPath"]},{"name":"fun hasUriPath(matcher: Matcher<String?>): Matcher<Uri>","description":"org.http4k.hamkrest.hasUriPath","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri-path.html","searchKeys":["hasUriPath","fun hasUriPath(matcher: Matcher<String?>): Matcher<Uri>","org.http4k.hamkrest.hasUriPath"]},{"name":"fun hasUriQuery(expected: String): Matcher<Uri>","description":"org.http4k.hamkrest.hasUriQuery","location":"http4k-testing-hamkrest/org.http4k.hamkrest/has-uri-query.html","searchKeys":["hasUriQuery","fun hasUriQuery(expected: String): Matcher<Uri>","org.http4k.hamkrest.hasUriQuery"]},{"name":"fun isHttpOnlyCookie(expected: Boolean = true): Matcher<Cookie>","description":"org.http4k.hamkrest.isHttpOnlyCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/is-http-only-cookie.html","searchKeys":["isHttpOnlyCookie","fun isHttpOnlyCookie(expected: Boolean = true): Matcher<Cookie>","org.http4k.hamkrest.isHttpOnlyCookie"]},{"name":"fun isSecureCookie(expected: Boolean = true): Matcher<Cookie>","description":"org.http4k.hamkrest.isSecureCookie","location":"http4k-testing-hamkrest/org.http4k.hamkrest/is-secure-cookie.html","searchKeys":["isSecureCookie","fun isSecureCookie(expected: Boolean = true): Matcher<Cookie>","org.http4k.hamkrest.isSecureCookie"]},{"name":"class KtorCIO(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : ServerConfig","description":"org.http4k.server.KtorCIO","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/index.html","searchKeys":["KtorCIO","class KtorCIO(val port: Int = 8000, val stopMode: ServerConfig.StopMode) : ServerConfig","org.http4k.server.KtorCIO"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.KtorCIO.KtorCIO","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/-ktor-c-i-o.html","searchKeys":["KtorCIO","constructor(port: Int = 8000)","org.http4k.server.KtorCIO.KtorCIO"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.KtorCIO.KtorCIO","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/-ktor-c-i-o.html","searchKeys":["KtorCIO","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.KtorCIO.KtorCIO"]},{"name":"fun ApplicationRequest.asHttp4k(): Request?","description":"org.http4k.server.asHttp4k","location":"http4k-server-ktorcio/org.http4k.server/as-http4k.html","searchKeys":["asHttp4k","fun ApplicationRequest.asHttp4k(): Request?","org.http4k.server.asHttp4k"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.KtorCIO.toServer","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.KtorCIO.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.KtorCIO.stopMode","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.KtorCIO.stopMode"]},{"name":"suspend fun ApplicationResponse.fromHttp4K(response: Response)","description":"org.http4k.server.fromHttp4K","location":"http4k-server-ktorcio/org.http4k.server/from-http4-k.html","searchKeys":["fromHttp4K","suspend fun ApplicationResponse.fromHttp4K(response: Response)","org.http4k.server.fromHttp4K"]},{"name":"val port: Int = 8000","description":"org.http4k.server.KtorCIO.port","location":"http4k-server-ktorcio/org.http4k.server/-ktor-c-i-o/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.KtorCIO.port"]},{"name":"abstract val contentType: ContentType","description":"org.http4k.cloudnative.health.ReadinessCheckResultRenderer.contentType","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result-renderer/content-type.html","searchKeys":["contentType","abstract val contentType: ContentType","org.http4k.cloudnative.health.ReadinessCheckResultRenderer.contentType"]},{"name":"abstract val name: String","description":"org.http4k.cloudnative.health.ReadinessCheck.name","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check/name.html","searchKeys":["name","abstract val name: String","org.http4k.cloudnative.health.ReadinessCheck.name"]},{"name":"abstract val name: String","description":"org.http4k.cloudnative.health.ReadinessCheckResult.name","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result/name.html","searchKeys":["name","abstract val name: String","org.http4k.cloudnative.health.ReadinessCheckResult.name"]},{"name":"class ClientTimeout(message: String, uri: Uri? = null) : RemoteRequestFailed","description":"org.http4k.cloudnative.ClientTimeout","location":"http4k-cloudnative/org.http4k.cloudnative/-client-timeout/index.html","searchKeys":["ClientTimeout","class ClientTimeout(message: String, uri: Uri? = null) : RemoteRequestFailed","org.http4k.cloudnative.ClientTimeout"]},{"name":"class Forbidden(message: String, uri: Uri? = null) : RemoteRequestFailed","description":"org.http4k.cloudnative.Forbidden","location":"http4k-cloudnative/org.http4k.cloudnative/-forbidden/index.html","searchKeys":["Forbidden","class Forbidden(message: String, uri: Uri? = null) : RemoteRequestFailed","org.http4k.cloudnative.Forbidden"]},{"name":"class GatewayTimeout(message: String, uri: Uri? = null) : RemoteRequestFailed","description":"org.http4k.cloudnative.GatewayTimeout","location":"http4k-cloudnative/org.http4k.cloudnative/-gateway-timeout/index.html","searchKeys":["GatewayTimeout","class GatewayTimeout(message: String, uri: Uri? = null) : RemoteRequestFailed","org.http4k.cloudnative.GatewayTimeout"]},{"name":"class Http4kK8sServer(main: Http4kServer, health: Http4kServer) : Http4kServer","description":"org.http4k.cloudnative.Http4kK8sServer","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/index.html","searchKeys":["Http4kK8sServer","class Http4kK8sServer(main: Http4kServer, health: Http4kServer) : Http4kServer","org.http4k.cloudnative.Http4kK8sServer"]},{"name":"class NotFound(message: String, uri: Uri? = null) : RemoteRequestFailed","description":"org.http4k.cloudnative.NotFound","location":"http4k-cloudnative/org.http4k.cloudnative/-not-found/index.html","searchKeys":["NotFound","class NotFound(message: String, uri: Uri? = null) : RemoteRequestFailed","org.http4k.cloudnative.NotFound"]},{"name":"class Unauthorized(message: String, uri: Uri? = null) : RemoteRequestFailed","description":"org.http4k.cloudnative.Unauthorized","location":"http4k-cloudnative/org.http4k.cloudnative/-unauthorized/index.html","searchKeys":["Unauthorized","class Unauthorized(message: String, uri: Uri? = null) : RemoteRequestFailed","org.http4k.cloudnative.Unauthorized"]},{"name":"constructor(main: Http4kServer, health: Http4kServer)","description":"org.http4k.cloudnative.Http4kK8sServer.Http4kK8sServer","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/-http4k-k8s-server.html","searchKeys":["Http4kK8sServer","constructor(main: Http4kServer, health: Http4kServer)","org.http4k.cloudnative.Http4kK8sServer.Http4kK8sServer"]},{"name":"constructor(message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.ClientTimeout.ClientTimeout","location":"http4k-cloudnative/org.http4k.cloudnative/-client-timeout/-client-timeout.html","searchKeys":["ClientTimeout","constructor(message: String, uri: Uri? = null)","org.http4k.cloudnative.ClientTimeout.ClientTimeout"]},{"name":"constructor(message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.Forbidden.Forbidden","location":"http4k-cloudnative/org.http4k.cloudnative/-forbidden/-forbidden.html","searchKeys":["Forbidden","constructor(message: String, uri: Uri? = null)","org.http4k.cloudnative.Forbidden.Forbidden"]},{"name":"constructor(message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.GatewayTimeout.GatewayTimeout","location":"http4k-cloudnative/org.http4k.cloudnative/-gateway-timeout/-gateway-timeout.html","searchKeys":["GatewayTimeout","constructor(message: String, uri: Uri? = null)","org.http4k.cloudnative.GatewayTimeout.GatewayTimeout"]},{"name":"constructor(message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.NotFound.NotFound","location":"http4k-cloudnative/org.http4k.cloudnative/-not-found/-not-found.html","searchKeys":["NotFound","constructor(message: String, uri: Uri? = null)","org.http4k.cloudnative.NotFound.NotFound"]},{"name":"constructor(message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.Unauthorized.Unauthorized","location":"http4k-cloudnative/org.http4k.cloudnative/-unauthorized/-unauthorized.html","searchKeys":["Unauthorized","constructor(message: String, uri: Uri? = null)","org.http4k.cloudnative.Unauthorized.Unauthorized"]},{"name":"constructor(name: String)","description":"org.http4k.cloudnative.health.Completed.Completed","location":"http4k-cloudnative/org.http4k.cloudnative.health/-completed/-completed.html","searchKeys":["Completed","constructor(name: String)","org.http4k.cloudnative.health.Completed.Completed"]},{"name":"constructor(name: String, cause: Exception)","description":"org.http4k.cloudnative.health.Failed.Failed","location":"http4k-cloudnative/org.http4k.cloudnative.health/-failed/-failed.html","searchKeys":["Failed","constructor(name: String, cause: Exception)","org.http4k.cloudnative.health.Failed.Failed"]},{"name":"constructor(name: String, message: String)","description":"org.http4k.cloudnative.health.Failed.Failed","location":"http4k-cloudnative/org.http4k.cloudnative.health/-failed/-failed.html","searchKeys":["Failed","constructor(name: String, message: String)","org.http4k.cloudnative.health.Failed.Failed"]},{"name":"constructor(parts: Iterable<ReadinessCheckResult> = emptyList())","description":"org.http4k.cloudnative.health.Composite.Composite","location":"http4k-cloudnative/org.http4k.cloudnative.health/-composite/-composite.html","searchKeys":["Composite","constructor(parts: Iterable<ReadinessCheckResult> = emptyList())","org.http4k.cloudnative.health.Composite.Composite"]},{"name":"constructor(status: Status, message: String, uri: Uri? = null)","description":"org.http4k.cloudnative.RemoteRequestFailed.RemoteRequestFailed","location":"http4k-cloudnative/org.http4k.cloudnative/-remote-request-failed/-remote-request-failed.html","searchKeys":["RemoteRequestFailed","constructor(status: Status, message: String, uri: Uri? = null)","org.http4k.cloudnative.RemoteRequestFailed.RemoteRequestFailed"]},{"name":"data class Completed(val name: String) : ReadinessCheckResult","description":"org.http4k.cloudnative.health.Completed","location":"http4k-cloudnative/org.http4k.cloudnative.health/-completed/index.html","searchKeys":["Completed","data class Completed(val name: String) : ReadinessCheckResult","org.http4k.cloudnative.health.Completed"]},{"name":"data class Composite(parts: Iterable<ReadinessCheckResult> = emptyList()) : ReadinessCheckResult","description":"org.http4k.cloudnative.health.Composite","location":"http4k-cloudnative/org.http4k.cloudnative.health/-composite/index.html","searchKeys":["Composite","data class Composite(parts: Iterable<ReadinessCheckResult> = emptyList()) : ReadinessCheckResult","org.http4k.cloudnative.health.Composite"]},{"name":"data class Failed(val name: String, val cause: Exception) : ReadinessCheckResult","description":"org.http4k.cloudnative.health.Failed","location":"http4k-cloudnative/org.http4k.cloudnative.health/-failed/index.html","searchKeys":["Failed","data class Failed(val name: String, val cause: Exception) : ReadinessCheckResult","org.http4k.cloudnative.health.Failed"]},{"name":"fun ClientFilters.HandleRemoteRequestFailed(responseWasSuccessful: Response.() -> Boolean = { status.successful }, responseToMessage: Response.() -> String = Response::bodyString): Filter","description":"org.http4k.filter.HandleRemoteRequestFailed","location":"http4k-cloudnative/org.http4k.filter/-handle-remote-request-failed.html","searchKeys":["HandleRemoteRequestFailed","fun ClientFilters.HandleRemoteRequestFailed(responseWasSuccessful: Response.() -> Boolean = { status.successful }, responseToMessage: Response.() -> String = Response::bodyString): Filter","org.http4k.filter.HandleRemoteRequestFailed"]},{"name":"fun HttpHandler.asK8sServer(serverConfig: (port: Int) -> ServerConfig, env: Environment = ENV, healthApp: HttpHandler = Health()): Http4kK8sServer","description":"org.http4k.cloudnative.asK8sServer","location":"http4k-cloudnative/org.http4k.cloudnative/as-k8s-server.html","searchKeys":["asK8sServer","fun HttpHandler.asK8sServer(serverConfig: (port: Int) -> ServerConfig, env: Environment = ENV, healthApp: HttpHandler = Health()): Http4kK8sServer","org.http4k.cloudnative.asK8sServer"]},{"name":"fun HttpHandler.asK8sServer(serverConfig: (port: Int) -> ServerConfig, port: Int = 8000, healthApp: HttpHandler = Health(), healthPort: Int = 8001): Http4kK8sServer","description":"org.http4k.cloudnative.asK8sServer","location":"http4k-cloudnative/org.http4k.cloudnative/as-k8s-server.html","searchKeys":["asK8sServer","fun HttpHandler.asK8sServer(serverConfig: (port: Int) -> ServerConfig, port: Int = 8000, healthApp: HttpHandler = Health(), healthPort: Int = 8001): Http4kK8sServer","org.http4k.cloudnative.asK8sServer"]},{"name":"fun HttpHandler.asServer(fn: (Int) -> ServerConfig, port: Port): Http4kServer","description":"org.http4k.server.asServer","location":"http4k-cloudnative/org.http4k.server/as-server.html","searchKeys":["asServer","fun HttpHandler.asServer(fn: (Int) -> ServerConfig, port: Port): Http4kServer","org.http4k.server.asServer"]},{"name":"fun ServerFilters.HandleRemoteRequestFailed(exceptionToBody: RemoteRequestFailed.() -> String = Throwable::getLocalizedMessage): Filter","description":"org.http4k.filter.HandleRemoteRequestFailed","location":"http4k-cloudnative/org.http4k.filter/-handle-remote-request-failed.html","searchKeys":["HandleRemoteRequestFailed","fun ServerFilters.HandleRemoteRequestFailed(exceptionToBody: RemoteRequestFailed.() -> String = Throwable::getLocalizedMessage): Filter","org.http4k.filter.HandleRemoteRequestFailed"]},{"name":"fun healthPort(): Int","description":"org.http4k.cloudnative.Http4kK8sServer.healthPort","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/health-port.html","searchKeys":["healthPort","fun healthPort(): Int","org.http4k.cloudnative.Http4kK8sServer.healthPort"]},{"name":"interface ReadinessCheck : Function0<ReadinessCheckResult> ","description":"org.http4k.cloudnative.health.ReadinessCheck","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check/index.html","searchKeys":["ReadinessCheck","interface ReadinessCheck : Function0<ReadinessCheckResult> ","org.http4k.cloudnative.health.ReadinessCheck"]},{"name":"interface ReadinessCheckResultRenderer : Function1<ReadinessCheckResult, String> ","description":"org.http4k.cloudnative.health.ReadinessCheckResultRenderer","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result-renderer/index.html","searchKeys":["ReadinessCheckResultRenderer","interface ReadinessCheckResultRenderer : Function1<ReadinessCheckResult, String> ","org.http4k.cloudnative.health.ReadinessCheckResultRenderer"]},{"name":"object DefaultReadinessCheckResultRenderer : ReadinessCheckResultRenderer","description":"org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer","location":"http4k-cloudnative/org.http4k.cloudnative.health/-default-readiness-check-result-renderer/index.html","searchKeys":["DefaultReadinessCheckResultRenderer","object DefaultReadinessCheckResultRenderer : ReadinessCheckResultRenderer","org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer"]},{"name":"object Health","description":"org.http4k.cloudnative.health.Health","location":"http4k-cloudnative/org.http4k.cloudnative.health/-health/index.html","searchKeys":["Health","object Health","org.http4k.cloudnative.health.Health"]},{"name":"object JsonReadinessCheckResultRenderer","description":"org.http4k.cloudnative.health.JsonReadinessCheckResultRenderer","location":"http4k-cloudnative/org.http4k.cloudnative.health/-json-readiness-check-result-renderer/index.html","searchKeys":["JsonReadinessCheckResultRenderer","object JsonReadinessCheckResultRenderer","org.http4k.cloudnative.health.JsonReadinessCheckResultRenderer"]},{"name":"object Liveness : Function1<request: Request, Response> ","description":"org.http4k.cloudnative.health.Liveness","location":"http4k-cloudnative/org.http4k.cloudnative.health/-liveness/index.html","searchKeys":["Liveness","object Liveness : Function1<request: Request, Response> ","org.http4k.cloudnative.health.Liveness"]},{"name":"object Readiness","description":"org.http4k.cloudnative.health.Readiness","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness/index.html","searchKeys":["Readiness","object Readiness","org.http4k.cloudnative.health.Readiness"]},{"name":"open class RemoteRequestFailed(val status: Status, message: String, uri: Uri? = null) : RuntimeException","description":"org.http4k.cloudnative.RemoteRequestFailed","location":"http4k-cloudnative/org.http4k.cloudnative/-remote-request-failed/index.html","searchKeys":["RemoteRequestFailed","open class RemoteRequestFailed(val status: Status, message: String, uri: Uri? = null) : RuntimeException","org.http4k.cloudnative.RemoteRequestFailed"]},{"name":"open operator override fun invoke(p1: ReadinessCheckResult): String","description":"org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer.invoke","location":"http4k-cloudnative/org.http4k.cloudnative.health/-default-readiness-check-result-renderer/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: ReadinessCheckResult): String","org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer.invoke"]},{"name":"open operator override fun iterator(): Iterator<ReadinessCheckResult>","description":"org.http4k.cloudnative.health.Composite.iterator","location":"http4k-cloudnative/org.http4k.cloudnative.health/-composite/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ReadinessCheckResult>","org.http4k.cloudnative.health.Composite.iterator"]},{"name":"open operator override fun iterator(): Iterator<ReadinessCheckResult>","description":"org.http4k.cloudnative.health.ReadinessCheckResult.iterator","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ReadinessCheckResult>","org.http4k.cloudnative.health.ReadinessCheckResult.iterator"]},{"name":"open override fun port(): Int","description":"org.http4k.cloudnative.Http4kK8sServer.port","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/port.html","searchKeys":["port","open override fun port(): Int","org.http4k.cloudnative.Http4kK8sServer.port"]},{"name":"open override fun start(): Http4kServer","description":"org.http4k.cloudnative.Http4kK8sServer.start","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/start.html","searchKeys":["start","open override fun start(): Http4kServer","org.http4k.cloudnative.Http4kK8sServer.start"]},{"name":"open override fun stop(): Http4kServer","description":"org.http4k.cloudnative.Http4kK8sServer.stop","location":"http4k-cloudnative/org.http4k.cloudnative/-http4k-k8s-server/stop.html","searchKeys":["stop","open override fun stop(): Http4kServer","org.http4k.cloudnative.Http4kK8sServer.stop"]},{"name":"open override val contentType: ContentType","description":"org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer.contentType","location":"http4k-cloudnative/org.http4k.cloudnative.health/-default-readiness-check-result-renderer/content-type.html","searchKeys":["contentType","open override val contentType: ContentType","org.http4k.cloudnative.health.DefaultReadinessCheckResultRenderer.contentType"]},{"name":"open override val name: String","description":"org.http4k.cloudnative.health.Completed.name","location":"http4k-cloudnative/org.http4k.cloudnative.health/-completed/name.html","searchKeys":["name","open override val name: String","org.http4k.cloudnative.health.Completed.name"]},{"name":"open override val name: String","description":"org.http4k.cloudnative.health.Composite.name","location":"http4k-cloudnative/org.http4k.cloudnative.health/-composite/name.html","searchKeys":["name","open override val name: String","org.http4k.cloudnative.health.Composite.name"]},{"name":"open override val name: String","description":"org.http4k.cloudnative.health.Failed.name","location":"http4k-cloudnative/org.http4k.cloudnative.health/-failed/name.html","searchKeys":["name","open override val name: String","org.http4k.cloudnative.health.Failed.name"]},{"name":"operator fun <NODE> invoke(json: Json<NODE>): ReadinessCheckResultRenderer","description":"org.http4k.cloudnative.health.JsonReadinessCheckResultRenderer.invoke","location":"http4k-cloudnative/org.http4k.cloudnative.health/-json-readiness-check-result-renderer/invoke.html","searchKeys":["invoke","operator fun <NODE> invoke(json: Json<NODE>): ReadinessCheckResultRenderer","org.http4k.cloudnative.health.JsonReadinessCheckResultRenderer.invoke"]},{"name":"operator fun ReadinessCheckResult.plus(that: ReadinessCheckResult): Composite","description":"org.http4k.cloudnative.health.plus","location":"http4k-cloudnative/org.http4k.cloudnative.health/plus.html","searchKeys":["plus","operator fun ReadinessCheckResult.plus(that: ReadinessCheckResult): Composite","org.http4k.cloudnative.health.plus"]},{"name":"operator fun invoke(checks: List<ReadinessCheck> = emptyList(), renderer: ReadinessCheckResultRenderer = DefaultReadinessCheckResultRenderer): HttpHandler","description":"org.http4k.cloudnative.health.Readiness.invoke","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness/invoke.html","searchKeys":["invoke","operator fun invoke(checks: List<ReadinessCheck> = emptyList(), renderer: ReadinessCheckResultRenderer = DefaultReadinessCheckResultRenderer): HttpHandler","org.http4k.cloudnative.health.Readiness.invoke"]},{"name":"operator fun invoke(vararg extraRoutes: RoutingHttpHandler, checks: List<ReadinessCheck> = emptyList(), renderer: ReadinessCheckResultRenderer = DefaultReadinessCheckResultRenderer): RoutingHttpHandler","description":"org.http4k.cloudnative.health.Health.invoke","location":"http4k-cloudnative/org.http4k.cloudnative.health/-health/invoke.html","searchKeys":["invoke","operator fun invoke(vararg extraRoutes: RoutingHttpHandler, checks: List<ReadinessCheck> = emptyList(), renderer: ReadinessCheckResultRenderer = DefaultReadinessCheckResultRenderer): RoutingHttpHandler","org.http4k.cloudnative.health.Health.invoke"]},{"name":"sealed class ReadinessCheckResult : Iterable<ReadinessCheckResult> ","description":"org.http4k.cloudnative.health.ReadinessCheckResult","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result/index.html","searchKeys":["ReadinessCheckResult","sealed class ReadinessCheckResult : Iterable<ReadinessCheckResult> ","org.http4k.cloudnative.health.ReadinessCheckResult"]},{"name":"val cause: Exception","description":"org.http4k.cloudnative.health.Failed.cause","location":"http4k-cloudnative/org.http4k.cloudnative.health/-failed/cause.html","searchKeys":["cause","val cause: Exception","org.http4k.cloudnative.health.Failed.cause"]},{"name":"val pass: Boolean = true","description":"org.http4k.cloudnative.health.ReadinessCheckResult.pass","location":"http4k-cloudnative/org.http4k.cloudnative.health/-readiness-check-result/pass.html","searchKeys":["pass","val pass: Boolean = true","org.http4k.cloudnative.health.ReadinessCheckResult.pass"]},{"name":"val status: Status","description":"org.http4k.cloudnative.RemoteRequestFailed.status","location":"http4k-cloudnative/org.http4k.cloudnative/-remote-request-failed/status.html","searchKeys":["status","val status: Status","org.http4k.cloudnative.RemoteRequestFailed.status"]},{"name":"fun swaggerUiWebjar(configFn: SwaggerUiConfig.() -> Unit = {}): RoutingHttpHandler","description":"org.http4k.contract.ui.swagger.swaggerUiWebjar","location":"http4k-contract-ui-swagger/org.http4k.contract.ui.swagger/swagger-ui-webjar.html","searchKeys":["swaggerUiWebjar","fun swaggerUiWebjar(configFn: SwaggerUiConfig.() -> Unit = {}): RoutingHttpHandler","org.http4k.contract.ui.swagger.swaggerUiWebjar"]},{"name":"abstract fun method(name: String, handler: JsonRpcHandler<NODE, NODE>)","description":"org.http4k.jsonrpc.MethodBindings.method","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/method.html","searchKeys":["method","abstract fun method(name: String, handler: JsonRpcHandler<NODE, NODE>)","org.http4k.jsonrpc.MethodBindings.method"]},{"name":"class Auto<NODE : Any>(val json: AutoMarshallingJson<NODE>) : MethodBindings.Companion.Manual<NODE> ","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/index.html","searchKeys":["Auto","class Auto<NODE : Any>(val json: AutoMarshallingJson<NODE>) : MethodBindings.Companion.Manual<NODE> ","org.http4k.jsonrpc.MethodBindings.Companion.Auto"]},{"name":"class Mapping<IN : Any, OUT>(convert: (IN) -> OUT) : Lens<IN, OUT> ","description":"org.http4k.jsonrpc.Mapping","location":"http4k-jsonrpc/org.http4k.jsonrpc/-mapping/index.html","searchKeys":["Mapping","class Mapping<IN : Any, OUT>(convert: (IN) -> OUT) : Lens<IN, OUT> ","org.http4k.jsonrpc.Mapping"]},{"name":"constructor(code: Int, message: String)","description":"org.http4k.jsonrpc.ErrorMessage.ErrorMessage","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-error-message.html","searchKeys":["ErrorMessage","constructor(code: Int, message: String)","org.http4k.jsonrpc.ErrorMessage.ErrorMessage"]},{"name":"constructor(convert: (IN) -> OUT)","description":"org.http4k.jsonrpc.Mapping.Mapping","location":"http4k-jsonrpc/org.http4k.jsonrpc/-mapping/-mapping.html","searchKeys":["Mapping","constructor(convert: (IN) -> OUT)","org.http4k.jsonrpc.Mapping.Mapping"]},{"name":"constructor(json: AutoMarshallingJson<NODE>)","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto.Auto","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/-auto.html","searchKeys":["Auto","constructor(json: AutoMarshallingJson<NODE>)","org.http4k.jsonrpc.MethodBindings.Companion.Auto.Auto"]},{"name":"constructor(json: Json<NODE>)","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.Manual","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/-manual.html","searchKeys":["Manual","constructor(json: Json<NODE>)","org.http4k.jsonrpc.MethodBindings.Companion.Manual.Manual"]},{"name":"constructor(json: Json<NODE>, errorHandler: ErrorHandler, bindings: Iterable<JsonRpcMethodBinding<NODE, NODE>>)","description":"org.http4k.jsonrpc.JsonRpcService.JsonRpcService","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-service/-json-rpc-service.html","searchKeys":["JsonRpcService","constructor(json: Json<NODE>, errorHandler: ErrorHandler, bindings: Iterable<JsonRpcMethodBinding<NODE, NODE>>)","org.http4k.jsonrpc.JsonRpcService.JsonRpcService"]},{"name":"constructor(name: String, handler: JsonRpcHandler<IN, OUT>)","description":"org.http4k.jsonrpc.JsonRpcMethodBinding.JsonRpcMethodBinding","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-method-binding/-json-rpc-method-binding.html","searchKeys":["JsonRpcMethodBinding","constructor(name: String, handler: JsonRpcHandler<IN, OUT>)","org.http4k.jsonrpc.JsonRpcMethodBinding.JsonRpcMethodBinding"]},{"name":"data class JsonRpcMethodBinding<IN, OUT>(val name: String, val handler: JsonRpcHandler<IN, OUT>)","description":"org.http4k.jsonrpc.JsonRpcMethodBinding","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-method-binding/index.html","searchKeys":["JsonRpcMethodBinding","data class JsonRpcMethodBinding<IN, OUT>(val name: String, val handler: JsonRpcHandler<IN, OUT>)","org.http4k.jsonrpc.JsonRpcMethodBinding"]},{"name":"data class JsonRpcService<NODE : Any>(json: Json<NODE>, errorHandler: ErrorHandler, bindings: Iterable<JsonRpcMethodBinding<NODE, NODE>>) : Function1<request: Request, Response> ","description":"org.http4k.jsonrpc.JsonRpcService","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-service/index.html","searchKeys":["JsonRpcService","data class JsonRpcService<NODE : Any>(json: Json<NODE>, errorHandler: ErrorHandler, bindings: Iterable<JsonRpcMethodBinding<NODE, NODE>>) : Function1<request: Request, Response> ","org.http4k.jsonrpc.JsonRpcService"]},{"name":"fun <IN, OUT : Any> handler(paramsFieldNames: Set<String>, paramsLens: Mapping<NODE, IN>, resultLens: Mapping<OUT, NODE>, fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/handler.html","searchKeys":["handler","fun <IN, OUT : Any> handler(paramsFieldNames: Set<String>, paramsLens: Mapping<NODE, IN>, resultLens: Mapping<OUT, NODE>, fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler"]},{"name":"fun <IN, OUT : Any> handler(paramsLens: Mapping<NODE, IN>, resultLens: Mapping<OUT, NODE>, fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/handler.html","searchKeys":["handler","fun <IN, OUT : Any> handler(paramsLens: Mapping<NODE, IN>, resultLens: Mapping<OUT, NODE>, fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler"]},{"name":"fun <NODE : Any> auto(json: AutoMarshallingJson<NODE>, errorHandler: ErrorHandler = defaultErrorHandler, fn: MethodBindings.Companion.Auto<NODE>.() -> Unit): JsonRpcService<NODE>","description":"org.http4k.jsonrpc.JsonRpc.auto","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc/auto.html","searchKeys":["auto","fun <NODE : Any> auto(json: AutoMarshallingJson<NODE>, errorHandler: ErrorHandler = defaultErrorHandler, fn: MethodBindings.Companion.Auto<NODE>.() -> Unit): JsonRpcService<NODE>","org.http4k.jsonrpc.JsonRpc.auto"]},{"name":"fun <NODE : Any> manual(json: Json<NODE>, errorHandler: ErrorHandler = defaultErrorHandler, fn: MethodBindings.Companion.Manual<NODE>.() -> Unit): JsonRpcService<NODE>","description":"org.http4k.jsonrpc.JsonRpc.manual","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc/manual.html","searchKeys":["manual","fun <NODE : Any> manual(json: Json<NODE>, errorHandler: ErrorHandler = defaultErrorHandler, fn: MethodBindings.Companion.Manual<NODE>.() -> Unit): JsonRpcService<NODE>","org.http4k.jsonrpc.JsonRpc.manual"]},{"name":"fun <OUT : Any> handler(fn: () -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/handler.html","searchKeys":["handler","fun <OUT : Any> handler(fn: () -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler"]},{"name":"fun <OUT : Any> handler(resultLens: Mapping<OUT, NODE>, block: () -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/handler.html","searchKeys":["handler","fun <OUT : Any> handler(resultLens: Mapping<OUT, NODE>, block: () -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Manual.handler"]},{"name":"inline fun <IN : Any, OUT : Any> handler(noinline fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/handler.html","searchKeys":["handler","inline fun <IN : Any, OUT : Any> handler(noinline fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler"]},{"name":"inline fun <IN : Any, OUT : Any> handler(paramsFieldNames: Set<String>, noinline fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/handler.html","searchKeys":["handler","inline fun <IN : Any, OUT : Any> handler(paramsFieldNames: Set<String>, noinline fn: (IN) -> OUT): JsonRpcHandler<NODE, NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Auto.handler"]},{"name":"interface MethodBindings<NODE> : Iterable<JsonRpcMethodBinding<NODE, NODE>> ","description":"org.http4k.jsonrpc.MethodBindings","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/index.html","searchKeys":["MethodBindings","interface MethodBindings<NODE> : Iterable<JsonRpcMethodBinding<NODE, NODE>> ","org.http4k.jsonrpc.MethodBindings"]},{"name":"object Companion","description":"org.http4k.jsonrpc.ErrorMessage.Companion","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.jsonrpc.ErrorMessage.Companion"]},{"name":"object Companion","description":"org.http4k.jsonrpc.MethodBindings.Companion","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.jsonrpc.MethodBindings.Companion"]},{"name":"object JsonRpc","description":"org.http4k.jsonrpc.JsonRpc","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc/index.html","searchKeys":["JsonRpc","object JsonRpc","org.http4k.jsonrpc.JsonRpc"]},{"name":"open class ErrorMessage(val code: Int, val message: String)","description":"org.http4k.jsonrpc.ErrorMessage","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/index.html","searchKeys":["ErrorMessage","open class ErrorMessage(val code: Int, val message: String)","org.http4k.jsonrpc.ErrorMessage"]},{"name":"open class Manual<NODE : Any>(json: Json<NODE>) : MethodBindings<NODE> ","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/index.html","searchKeys":["Manual","open class Manual<NODE : Any>(json: Json<NODE>) : MethodBindings<NODE> ","org.http4k.jsonrpc.MethodBindings.Companion.Manual"]},{"name":"open fun <NODE> data(json: Json<NODE>): NODE?","description":"org.http4k.jsonrpc.ErrorMessage.data","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/data.html","searchKeys":["data","open fun <NODE> data(json: Json<NODE>): NODE?","org.http4k.jsonrpc.ErrorMessage.data"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.jsonrpc.JsonRpcService.invoke","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-service/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.jsonrpc.JsonRpcService.invoke"]},{"name":"open operator override fun iterator(): Iterator<JsonRpcMethodBinding<NODE, NODE>>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.iterator","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<JsonRpcMethodBinding<NODE, NODE>>","org.http4k.jsonrpc.MethodBindings.Companion.Manual.iterator"]},{"name":"open override fun method(name: String, handler: JsonRpcHandler<NODE, NODE>)","description":"org.http4k.jsonrpc.MethodBindings.Companion.Manual.method","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-manual/method.html","searchKeys":["method","open override fun method(name: String, handler: JsonRpcHandler<NODE, NODE>)","org.http4k.jsonrpc.MethodBindings.Companion.Manual.method"]},{"name":"operator fun <NODE> invoke(json: Json<NODE>): NODE","description":"org.http4k.jsonrpc.ErrorMessage.invoke","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/invoke.html","searchKeys":["invoke","operator fun <NODE> invoke(json: Json<NODE>): NODE","org.http4k.jsonrpc.ErrorMessage.invoke"]},{"name":"typealias ErrorHandler = (Throwable) -> ErrorMessage?","description":"org.http4k.jsonrpc.ErrorHandler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-handler/index.html","searchKeys":["ErrorHandler","typealias ErrorHandler = (Throwable) -> ErrorMessage?","org.http4k.jsonrpc.ErrorHandler"]},{"name":"typealias JsonRpcHandler<IN, OUT> = (IN) -> OUT","description":"org.http4k.jsonrpc.JsonRpcHandler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-handler/index.html","searchKeys":["JsonRpcHandler","typealias JsonRpcHandler<IN, OUT> = (IN) -> OUT","org.http4k.jsonrpc.JsonRpcHandler"]},{"name":"val InternalError: ErrorMessage","description":"org.http4k.jsonrpc.ErrorMessage.Companion.InternalError","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/-internal-error.html","searchKeys":["InternalError","val InternalError: ErrorMessage","org.http4k.jsonrpc.ErrorMessage.Companion.InternalError"]},{"name":"val InvalidParams: ErrorMessage","description":"org.http4k.jsonrpc.ErrorMessage.Companion.InvalidParams","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/-invalid-params.html","searchKeys":["InvalidParams","val InvalidParams: ErrorMessage","org.http4k.jsonrpc.ErrorMessage.Companion.InvalidParams"]},{"name":"val InvalidRequest: ErrorMessage","description":"org.http4k.jsonrpc.ErrorMessage.Companion.InvalidRequest","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/-invalid-request.html","searchKeys":["InvalidRequest","val InvalidRequest: ErrorMessage","org.http4k.jsonrpc.ErrorMessage.Companion.InvalidRequest"]},{"name":"val MethodNotFound: ErrorMessage","description":"org.http4k.jsonrpc.ErrorMessage.Companion.MethodNotFound","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/-method-not-found.html","searchKeys":["MethodNotFound","val MethodNotFound: ErrorMessage","org.http4k.jsonrpc.ErrorMessage.Companion.MethodNotFound"]},{"name":"val ParseError: ErrorMessage","description":"org.http4k.jsonrpc.ErrorMessage.Companion.ParseError","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/-companion/-parse-error.html","searchKeys":["ParseError","val ParseError: ErrorMessage","org.http4k.jsonrpc.ErrorMessage.Companion.ParseError"]},{"name":"val code: Int","description":"org.http4k.jsonrpc.ErrorMessage.code","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/code.html","searchKeys":["code","val code: Int","org.http4k.jsonrpc.ErrorMessage.code"]},{"name":"val handler: JsonRpcHandler<IN, OUT>","description":"org.http4k.jsonrpc.JsonRpcMethodBinding.handler","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-method-binding/handler.html","searchKeys":["handler","val handler: JsonRpcHandler<IN, OUT>","org.http4k.jsonrpc.JsonRpcMethodBinding.handler"]},{"name":"val json: AutoMarshallingJson<NODE>","description":"org.http4k.jsonrpc.MethodBindings.Companion.Auto.json","location":"http4k-jsonrpc/org.http4k.jsonrpc/-method-bindings/-companion/-auto/json.html","searchKeys":["json","val json: AutoMarshallingJson<NODE>","org.http4k.jsonrpc.MethodBindings.Companion.Auto.json"]},{"name":"val message: String","description":"org.http4k.jsonrpc.ErrorMessage.message","location":"http4k-jsonrpc/org.http4k.jsonrpc/-error-message/message.html","searchKeys":["message","val message: String","org.http4k.jsonrpc.ErrorMessage.message"]},{"name":"val name: String","description":"org.http4k.jsonrpc.JsonRpcMethodBinding.name","location":"http4k-jsonrpc/org.http4k.jsonrpc/-json-rpc-method-binding/name.html","searchKeys":["name","val name: String","org.http4k.jsonrpc.JsonRpcMethodBinding.name"]},{"name":"class ThymeleafTemplates(configure: (TemplateEngine) -> TemplateEngine = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","description":"org.http4k.template.ThymeleafTemplates","location":"http4k-template-thymeleaf/org.http4k.template/-thymeleaf-templates/index.html","searchKeys":["ThymeleafTemplates","class ThymeleafTemplates(configure: (TemplateEngine) -> TemplateEngine = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","org.http4k.template.ThymeleafTemplates"]},{"name":"constructor(configure: (TemplateEngine) -> TemplateEngine = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","description":"org.http4k.template.ThymeleafTemplates.ThymeleafTemplates","location":"http4k-template-thymeleaf/org.http4k.template/-thymeleaf-templates/-thymeleaf-templates.html","searchKeys":["ThymeleafTemplates","constructor(configure: (TemplateEngine) -> TemplateEngine = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","org.http4k.template.ThymeleafTemplates.ThymeleafTemplates"]},{"name":"open override fun Caching(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.ThymeleafTemplates.Caching","location":"http4k-template-thymeleaf/org.http4k.template/-thymeleaf-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): TemplateRenderer","org.http4k.template.ThymeleafTemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","description":"org.http4k.template.ThymeleafTemplates.CachingClasspath","location":"http4k-template-thymeleaf/org.http4k.template/-thymeleaf-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","org.http4k.template.ThymeleafTemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.ThymeleafTemplates.HotReload","location":"http4k-template-thymeleaf/org.http4k.template/-thymeleaf-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): TemplateRenderer","org.http4k.template.ThymeleafTemplates.HotReload"]},{"name":"class Http4kWebSocketFrameHandler(consumer: WsConsumer) : FrameHandler","description":"org.http4k.server.Http4kWebSocketFrameHandler","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/index.html","searchKeys":["Http4kWebSocketFrameHandler","class Http4kWebSocketFrameHandler(consumer: WsConsumer) : FrameHandler","org.http4k.server.Http4kWebSocketFrameHandler"]},{"name":"class Jetty11(port: Int, val stopMode: ServerConfig.StopMode, server: Server) : PolyServerConfig","description":"org.http4k.server.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/index.html","searchKeys":["Jetty11","class Jetty11(port: Int, val stopMode: ServerConfig.StopMode, server: Server) : PolyServerConfig","org.http4k.server.Jetty11"]},{"name":"class Jetty11EventStreamEmitter(connectRequest: Request, output: OutputStream, heartBeatDuration: Duration, scheduler: Scheduler, onClose: (Jetty11EventStreamEmitter) -> Unit) : PushAdaptingSse, Runnable, LifeCycle.Listener","description":"org.http4k.server.Jetty11EventStreamEmitter","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/index.html","searchKeys":["Jetty11EventStreamEmitter","class Jetty11EventStreamEmitter(connectRequest: Request, output: OutputStream, heartBeatDuration: Duration, scheduler: Scheduler, onClose: (Jetty11EventStreamEmitter) -> Unit) : PushAdaptingSse, Runnable, LifeCycle.Listener","org.http4k.server.Jetty11EventStreamEmitter"]},{"name":"class Jetty11EventStreamHandler(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15)) : HandlerWrapper","description":"org.http4k.server.Jetty11EventStreamHandler","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-handler/index.html","searchKeys":["Jetty11EventStreamHandler","class Jetty11EventStreamHandler(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15)) : HandlerWrapper","org.http4k.server.Jetty11EventStreamHandler"]},{"name":"constructor(connectRequest: Request, output: OutputStream, heartBeatDuration: Duration, scheduler: Scheduler, onClose: (Jetty11EventStreamEmitter) -> Unit)","description":"org.http4k.server.Jetty11EventStreamEmitter.Jetty11EventStreamEmitter","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/-jetty11-event-stream-emitter.html","searchKeys":["Jetty11EventStreamEmitter","constructor(connectRequest: Request, output: OutputStream, heartBeatDuration: Duration, scheduler: Scheduler, onClose: (Jetty11EventStreamEmitter) -> Unit)","org.http4k.server.Jetty11EventStreamEmitter.Jetty11EventStreamEmitter"]},{"name":"constructor(consumer: WsConsumer)","description":"org.http4k.server.Http4kWebSocketFrameHandler.Http4kWebSocketFrameHandler","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/-http4k-web-socket-frame-handler.html","searchKeys":["Http4kWebSocketFrameHandler","constructor(consumer: WsConsumer)","org.http4k.server.Http4kWebSocketFrameHandler.Http4kWebSocketFrameHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int = 8000)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(port: Int = 8000, server: Server)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int = 8000, server: Server)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(port: Int, stopMode: ServerConfig.StopMode, server: Server)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int, stopMode: ServerConfig.StopMode, server: Server)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(port: Int, stopMode: ServerConfig.StopMode, vararg inConnectors: ConnectorBuilder)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int, stopMode: ServerConfig.StopMode, vararg inConnectors: ConnectorBuilder)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(port: Int, vararg inConnectors: ConnectorBuilder)","description":"org.http4k.server.Jetty11.Jetty11","location":"http4k-server-jetty11/org.http4k.server/-jetty11/-jetty11.html","searchKeys":["Jetty11","constructor(port: Int, vararg inConnectors: ConnectorBuilder)","org.http4k.server.Jetty11.Jetty11"]},{"name":"constructor(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15))","description":"org.http4k.server.Jetty11EventStreamHandler.Jetty11EventStreamHandler","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-handler/-jetty11-event-stream-handler.html","searchKeys":["Jetty11EventStreamHandler","constructor(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15))","org.http4k.server.Jetty11EventStreamHandler.Jetty11EventStreamHandler"]},{"name":"fun HttpHandler.toJetty11Handler(withStatisticsHandler: Boolean = false): HandlerWrapper","description":"org.http4k.server.toJetty11Handler","location":"http4k-server-jetty11/org.http4k.server/to-jetty11-handler.html","searchKeys":["toJetty11Handler","fun HttpHandler.toJetty11Handler(withStatisticsHandler: Boolean = false): HandlerWrapper","org.http4k.server.toJetty11Handler"]},{"name":"fun Jetty11Loom(port: Int): Jetty11","description":"org.http4k.server.Jetty11Loom","location":"http4k-server-jetty11/org.http4k.server/-jetty11-loom.html","searchKeys":["Jetty11Loom","fun Jetty11Loom(port: Int): Jetty11","org.http4k.server.Jetty11Loom"]},{"name":"fun Jetty11Loom(port: Int, stopMode: ServerConfig.StopMode): Jetty11","description":"org.http4k.server.Jetty11Loom","location":"http4k-server-jetty11/org.http4k.server/-jetty11-loom.html","searchKeys":["Jetty11Loom","fun Jetty11Loom(port: Int, stopMode: ServerConfig.StopMode): Jetty11","org.http4k.server.Jetty11Loom"]},{"name":"fun SseHandler.toJettySseHandler(): Jetty11EventStreamHandler","description":"org.http4k.server.toJettySseHandler","location":"http4k-server-jetty11/org.http4k.server/to-jetty-sse-handler.html","searchKeys":["toJettySseHandler","fun SseHandler.toJettySseHandler(): Jetty11EventStreamHandler","org.http4k.server.toJettySseHandler"]},{"name":"fun WsHandler.toJettyNegotiator(): WebSocketNegotiator.AbstractNegotiator","description":"org.http4k.server.toJettyNegotiator","location":"http4k-server-jetty11/org.http4k.server/to-jetty-negotiator.html","searchKeys":["toJettyNegotiator","fun WsHandler.toJettyNegotiator(): WebSocketNegotiator.AbstractNegotiator","org.http4k.server.toJettyNegotiator"]},{"name":"fun WsHandler.toJettyWsHandler(): WebSocketUpgradeHandler","description":"org.http4k.server.toJettyWsHandler","location":"http4k-server-jetty11/org.http4k.server/to-jetty-ws-handler.html","searchKeys":["toJettyWsHandler","fun WsHandler.toJettyWsHandler(): WebSocketUpgradeHandler","org.http4k.server.toJettyWsHandler"]},{"name":"fun http(httpPort: Int): ConnectorBuilder","description":"org.http4k.server.http","location":"http4k-server-jetty11/org.http4k.server/http.html","searchKeys":["http","fun http(httpPort: Int): ConnectorBuilder","org.http4k.server.http"]},{"name":"fun http2(http2Port: Int, keystorePath: String, keystorePassword: String): ConnectorBuilder","description":"org.http4k.server.http2","location":"http4k-server-jetty11/org.http4k.server/http2.html","searchKeys":["http2","fun http2(http2Port: Int, keystorePath: String, keystorePassword: String): ConnectorBuilder","org.http4k.server.http2"]},{"name":"object Companion","description":"org.http4k.server.Jetty11EventStreamEmitter.Companion","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.server.Jetty11EventStreamEmitter.Companion"]},{"name":"object Companion","description":"org.http4k.server.Jetty11EventStreamHandler.Companion","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-handler/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.server.Jetty11EventStreamHandler.Companion"]},{"name":"open override fun close()","description":"org.http4k.server.Jetty11EventStreamEmitter.close","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/close.html","searchKeys":["close","open override fun close()","org.http4k.server.Jetty11EventStreamEmitter.close"]},{"name":"open override fun handle(target: String, baseRequest: Request, request: HttpServletRequest, response: HttpServletResponse)","description":"org.http4k.server.Jetty11EventStreamHandler.handle","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-handler/handle.html","searchKeys":["handle","open override fun handle(target: String, baseRequest: Request, request: HttpServletRequest, response: HttpServletResponse)","org.http4k.server.Jetty11EventStreamHandler.handle"]},{"name":"open override fun lifeCycleStopping(event: LifeCycle)","description":"org.http4k.server.Jetty11EventStreamEmitter.lifeCycleStopping","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/life-cycle-stopping.html","searchKeys":["lifeCycleStopping","open override fun lifeCycleStopping(event: LifeCycle)","org.http4k.server.Jetty11EventStreamEmitter.lifeCycleStopping"]},{"name":"open override fun onClosed(closeStatus: CloseStatus, callback: Callback)","description":"org.http4k.server.Http4kWebSocketFrameHandler.onClosed","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/on-closed.html","searchKeys":["onClosed","open override fun onClosed(closeStatus: CloseStatus, callback: Callback)","org.http4k.server.Http4kWebSocketFrameHandler.onClosed"]},{"name":"open override fun onError(cause: Throwable, callback: Callback)","description":"org.http4k.server.Http4kWebSocketFrameHandler.onError","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/on-error.html","searchKeys":["onError","open override fun onError(cause: Throwable, callback: Callback)","org.http4k.server.Http4kWebSocketFrameHandler.onError"]},{"name":"open override fun onFrame(frame: Frame, callback: Callback)","description":"org.http4k.server.Http4kWebSocketFrameHandler.onFrame","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/on-frame.html","searchKeys":["onFrame","open override fun onFrame(frame: Frame, callback: Callback)","org.http4k.server.Http4kWebSocketFrameHandler.onFrame"]},{"name":"open override fun onOpen(session: CoreSession, callback: Callback)","description":"org.http4k.server.Http4kWebSocketFrameHandler.onOpen","location":"http4k-server-jetty11/org.http4k.server/-http4k-web-socket-frame-handler/on-open.html","searchKeys":["onOpen","open override fun onOpen(session: CoreSession, callback: Callback)","org.http4k.server.Http4kWebSocketFrameHandler.onOpen"]},{"name":"open override fun run()","description":"org.http4k.server.Jetty11EventStreamEmitter.run","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/run.html","searchKeys":["run","open override fun run()","org.http4k.server.Jetty11EventStreamEmitter.run"]},{"name":"open override fun send(message: SseMessage)","description":"org.http4k.server.Jetty11EventStreamEmitter.send","location":"http4k-server-jetty11/org.http4k.server/-jetty11-event-stream-emitter/send.html","searchKeys":["send","open override fun send(message: SseMessage)","org.http4k.server.Jetty11EventStreamEmitter.send"]},{"name":"open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","description":"org.http4k.server.Jetty11.toServer","location":"http4k-server-jetty11/org.http4k.server/-jetty11/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","org.http4k.server.Jetty11.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.Jetty11.stopMode","location":"http4k-server-jetty11/org.http4k.server/-jetty11/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.Jetty11.stopMode"]},{"name":"typealias ConnectorBuilder = (Server) -> ServerConnector","description":"org.http4k.server.ConnectorBuilder","location":"http4k-server-jetty11/org.http4k.server/-connector-builder/index.html","searchKeys":["ConnectorBuilder","typealias ConnectorBuilder = (Server) -> ServerConnector","org.http4k.server.ConnectorBuilder"]},{"name":"class FreemarkerTemplates(configure: (Configuration) -> Configuration = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","description":"org.http4k.template.FreemarkerTemplates","location":"http4k-template-freemarker/org.http4k.template/-freemarker-templates/index.html","searchKeys":["FreemarkerTemplates","class FreemarkerTemplates(configure: (Configuration) -> Configuration = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader()) : Templates","org.http4k.template.FreemarkerTemplates"]},{"name":"constructor(configure: (Configuration) -> Configuration = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","description":"org.http4k.template.FreemarkerTemplates.FreemarkerTemplates","location":"http4k-template-freemarker/org.http4k.template/-freemarker-templates/-freemarker-templates.html","searchKeys":["FreemarkerTemplates","constructor(configure: (Configuration) -> Configuration = { it }, classLoader: ClassLoader = ClassLoader.getSystemClassLoader())","org.http4k.template.FreemarkerTemplates.FreemarkerTemplates"]},{"name":"open override fun Caching(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.FreemarkerTemplates.Caching","location":"http4k-template-freemarker/org.http4k.template/-freemarker-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): TemplateRenderer","org.http4k.template.FreemarkerTemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","description":"org.http4k.template.FreemarkerTemplates.CachingClasspath","location":"http4k-template-freemarker/org.http4k.template/-freemarker-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): TemplateRenderer","org.http4k.template.FreemarkerTemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.FreemarkerTemplates.HotReload","location":"http4k-template-freemarker/org.http4k.template/-freemarker-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): TemplateRenderer","org.http4k.template.FreemarkerTemplates.HotReload"]},{"name":"abstract class Behaviour : Filter","description":"org.http4k.chaos.Behaviour","location":"http4k-testing-chaos/org.http4k.chaos/-behaviour/index.html","searchKeys":["Behaviour","abstract class Behaviour : Filter","org.http4k.chaos.Behaviour"]},{"name":"abstract class ChaoticHttpHandler : Function1<request: Request, Response> ","description":"org.http4k.chaos.ChaoticHttpHandler","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/index.html","searchKeys":["ChaoticHttpHandler","abstract class ChaoticHttpHandler : Function1<request: Request, Response> ","org.http4k.chaos.ChaoticHttpHandler"]},{"name":"class ChaosEngine(initialStage: Stage = Wait) : Filter","description":"org.http4k.chaos.ChaosEngine","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/index.html","searchKeys":["ChaosEngine","class ChaosEngine(initialStage: Stage = Wait) : Filter","org.http4k.chaos.ChaosEngine"]},{"name":"class Variable(current: Stage = Wait) : Function1<Request, Filter?> ","description":"org.http4k.chaos.ChaosStages.Variable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-variable/index.html","searchKeys":["Variable","class Variable(current: Stage = Wait) : Function1<Request, Filter?> ","org.http4k.chaos.ChaosStages.Variable"]},{"name":"class Variable(var current: Behaviour = None()) : Behaviour","description":"org.http4k.chaos.ChaosBehaviours.Variable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-variable/index.html","searchKeys":["Variable","class Variable(var current: Behaviour = None()) : Behaviour","org.http4k.chaos.ChaosBehaviours.Variable"]},{"name":"constructor()","description":"org.http4k.chaos.Behaviour.Behaviour","location":"http4k-testing-chaos/org.http4k.chaos/-behaviour/-behaviour.html","searchKeys":["Behaviour","constructor()","org.http4k.chaos.Behaviour.Behaviour"]},{"name":"constructor()","description":"org.http4k.chaos.ChaoticHttpHandler.ChaoticHttpHandler","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/-chaotic-http-handler.html","searchKeys":["ChaoticHttpHandler","constructor()","org.http4k.chaos.ChaoticHttpHandler.ChaoticHttpHandler"]},{"name":"constructor(behaviour: Behaviour)","description":"org.http4k.chaos.ChaosEngine.ChaosEngine","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/-chaos-engine.html","searchKeys":["ChaosEngine","constructor(behaviour: Behaviour)","org.http4k.chaos.ChaosEngine.ChaosEngine"]},{"name":"constructor(current: Behaviour = None())","description":"org.http4k.chaos.ChaosBehaviours.Variable.Variable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-variable/-variable.html","searchKeys":["Variable","constructor(current: Behaviour = None())","org.http4k.chaos.ChaosBehaviours.Variable.Variable"]},{"name":"constructor(current: Stage = Wait)","description":"org.http4k.chaos.ChaosStages.Variable.Variable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-variable/-variable.html","searchKeys":["Variable","constructor(current: Stage = Wait)","org.http4k.chaos.ChaosStages.Variable.Variable"]},{"name":"constructor(initialStage: Stage = Wait)","description":"org.http4k.chaos.ChaosEngine.ChaosEngine","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/-chaos-engine.html","searchKeys":["ChaosEngine","constructor(initialStage: Stage = Wait)","org.http4k.chaos.ChaosEngine.ChaosEngine"]},{"name":"data object Wait : Function1<Request, Filter?> ","description":"org.http4k.chaos.ChaosStages.Wait","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-wait/index.html","searchKeys":["Wait","data object Wait : Function1<Request, Filter?> ","org.http4k.chaos.ChaosStages.Wait"]},{"name":"fun Behaviour.appliedWhen(trigger: Trigger): (Request) -> Filter?","description":"org.http4k.chaos.appliedWhen","location":"http4k-testing-chaos/org.http4k.chaos/applied-when.html","searchKeys":["appliedWhen","fun Behaviour.appliedWhen(trigger: Trigger): (Request) -> Filter?","org.http4k.chaos.appliedWhen"]},{"name":"fun ChaoticHttpHandler.start(port: Int = this::class.defaultPort, serverConfig: (Int) -> ServerConfig = ::SunHttp): Http4kServer","description":"org.http4k.chaos.start","location":"http4k-testing-chaos/org.http4k.chaos/start.html","searchKeys":["start","fun ChaoticHttpHandler.start(port: Int = this::class.defaultPort, serverConfig: (Int) -> ServerConfig = ::SunHttp): Http4kServer","org.http4k.chaos.start"]},{"name":"fun HttpHandler.withChaosApi(engine: ChaosEngine = ChaosEngine(), security: Security = NoSecurity, controlsPath: String = \"/chaos\", openApiPath: String = \"\", corsPolicy: CorsPolicy = UnsafeGlobalPermissive, clock: Clock = Clock.systemUTC(), apiName: String = \"http4k\"): RoutingHttpHandler","description":"org.http4k.chaos.withChaosApi","location":"http4k-testing-chaos/org.http4k.chaos/with-chaos-api.html","searchKeys":["withChaosApi","fun HttpHandler.withChaosApi(engine: ChaosEngine = ChaosEngine(), security: Security = NoSecurity, controlsPath: String = \"/chaos\", openApiPath: String = \"\", corsPolicy: CorsPolicy = UnsafeGlobalPermissive, clock: Clock = Clock.systemUTC(), apiName: String = \"http4k\"): RoutingHttpHandler","org.http4k.chaos.withChaosApi"]},{"name":"fun JsonNode.asStage(clock: Clock = Clock.systemUTC()): Stage","description":"org.http4k.chaos.asStage","location":"http4k-testing-chaos/org.http4k.chaos/as-stage.html","searchKeys":["asStage","fun JsonNode.asStage(clock: Clock = Clock.systemUTC()): Stage","org.http4k.chaos.asStage"]},{"name":"fun Repeat(newStageFn: () -> Stage): Stage","description":"org.http4k.chaos.ChaosStages.Repeat","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-repeat.html","searchKeys":["Repeat","fun Repeat(newStageFn: () -> Stage): Stage","org.http4k.chaos.ChaosStages.Repeat"]},{"name":"fun Stage.asFilter(): Filter","description":"org.http4k.chaos.asFilter","location":"http4k-testing-chaos/org.http4k.chaos/as-filter.html","searchKeys":["asFilter","fun Stage.asFilter(): Filter","org.http4k.chaos.asFilter"]},{"name":"fun Stage.then(nextStage: Stage): (Request) -> Filter?","description":"org.http4k.chaos.then","location":"http4k-testing-chaos/org.http4k.chaos/then.html","searchKeys":["then","fun Stage.then(nextStage: Stage): (Request) -> Filter?","org.http4k.chaos.then"]},{"name":"fun Stage.until(trigger: Trigger): Stage","description":"org.http4k.chaos.until","location":"http4k-testing-chaos/org.http4k.chaos/until.html","searchKeys":["until","fun Stage.until(trigger: Trigger): Stage","org.http4k.chaos.until"]},{"name":"fun behave(): ChaosEngine","description":"org.http4k.chaos.ChaoticHttpHandler.behave","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/behave.html","searchKeys":["behave","fun behave(): ChaosEngine","org.http4k.chaos.ChaoticHttpHandler.behave"]},{"name":"fun disable(): ChaosEngine","description":"org.http4k.chaos.ChaosEngine.disable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/disable.html","searchKeys":["disable","fun disable(): ChaosEngine","org.http4k.chaos.ChaosEngine.disable"]},{"name":"fun enable(): ChaosEngine","description":"org.http4k.chaos.ChaosEngine.enable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/enable.html","searchKeys":["enable","fun enable(): ChaosEngine","org.http4k.chaos.ChaosEngine.enable"]},{"name":"fun enable(behaviour: Behaviour): ChaosEngine","description":"org.http4k.chaos.ChaosEngine.enable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/enable.html","searchKeys":["enable","fun enable(behaviour: Behaviour): ChaosEngine","org.http4k.chaos.ChaosEngine.enable"]},{"name":"fun enable(stage: Stage): ChaosEngine","description":"org.http4k.chaos.ChaosEngine.enable","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/enable.html","searchKeys":["enable","fun enable(stage: Stage): ChaosEngine","org.http4k.chaos.ChaosEngine.enable"]},{"name":"fun fromEnv(env: (String) -> String? = System::getenv, defaultMin: Duration = ofMillis(100), defaultMax: Duration = ofMillis(500), minName: String = \"CHAOS_LATENCY_MS_MIN\", maxName: String = \"CHAOS_LATENCY_MS_MAX\"): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.Latency.fromEnv","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-latency/from-env.html","searchKeys":["fromEnv","fun fromEnv(env: (String) -> String? = System::getenv, defaultMin: Duration = ofMillis(100), defaultMax: Duration = ofMillis(500), minName: String = \"CHAOS_LATENCY_MS_MIN\", maxName: String = \"CHAOS_LATENCY_MS_MAX\"): Behaviour","org.http4k.chaos.ChaosBehaviours.Latency.fromEnv"]},{"name":"fun fromEnvironment(env: (String) -> String? = System::getenv, defaultPercentage: Int = 50, name: String = \"CHAOS_PERCENTAGE\"): Trigger","description":"org.http4k.chaos.ChaosTriggers.PercentageBased.fromEnvironment","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-percentage-based/from-environment.html","searchKeys":["fromEnvironment","fun fromEnvironment(env: (String) -> String? = System::getenv, defaultPercentage: Int = 50, name: String = \"CHAOS_PERCENTAGE\"): Trigger","org.http4k.chaos.ChaosTriggers.PercentageBased.fromEnvironment"]},{"name":"fun interface Trigger : Function1<Request, Boolean> ","description":"org.http4k.chaos.Trigger","location":"http4k-testing-chaos/org.http4k.chaos/-trigger/index.html","searchKeys":["Trigger","fun interface Trigger : Function1<Request, Boolean> ","org.http4k.chaos.Trigger"]},{"name":"fun isEnabled(): Boolean","description":"org.http4k.chaos.ChaosEngine.isEnabled","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/is-enabled.html","searchKeys":["isEnabled","fun isEnabled(): Boolean","org.http4k.chaos.ChaosEngine.isEnabled"]},{"name":"fun misbehave(behaviour: Behaviour = ReturnStatus(INTERNAL_SERVER_ERROR)): ChaosEngine","description":"org.http4k.chaos.ChaoticHttpHandler.misbehave","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/misbehave.html","searchKeys":["misbehave","fun misbehave(behaviour: Behaviour = ReturnStatus(INTERNAL_SERVER_ERROR)): ChaosEngine","org.http4k.chaos.ChaoticHttpHandler.misbehave"]},{"name":"fun misbehave(stage: Stage): ChaosEngine","description":"org.http4k.chaos.ChaoticHttpHandler.misbehave","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/misbehave.html","searchKeys":["misbehave","fun misbehave(stage: Stage): ChaosEngine","org.http4k.chaos.ChaoticHttpHandler.misbehave"]},{"name":"fun returnStatus(status: Status): ChaosEngine","description":"org.http4k.chaos.ChaoticHttpHandler.returnStatus","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/return-status.html","searchKeys":["returnStatus","fun returnStatus(status: Status): ChaosEngine","org.http4k.chaos.ChaoticHttpHandler.returnStatus"]},{"name":"infix fun Trigger.and(that: Trigger): Trigger","description":"org.http4k.chaos.and","location":"http4k-testing-chaos/org.http4k.chaos/and.html","searchKeys":["and","infix fun Trigger.and(that: Trigger): Trigger","org.http4k.chaos.and"]},{"name":"infix fun Trigger.or(that: Trigger): Trigger","description":"org.http4k.chaos.or","location":"http4k-testing-chaos/org.http4k.chaos/or.html","searchKeys":["or","infix fun Trigger.or(that: Trigger): Trigger","org.http4k.chaos.or"]},{"name":"object Always","description":"org.http4k.chaos.ChaosTriggers.Always","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-always/index.html","searchKeys":["Always","object Always","org.http4k.chaos.ChaosTriggers.Always"]},{"name":"object BlockThread","description":"org.http4k.chaos.ChaosBehaviours.BlockThread","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-block-thread/index.html","searchKeys":["BlockThread","object BlockThread","org.http4k.chaos.ChaosBehaviours.BlockThread"]},{"name":"object ChaosBehaviours","description":"org.http4k.chaos.ChaosBehaviours","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/index.html","searchKeys":["ChaosBehaviours","object ChaosBehaviours","org.http4k.chaos.ChaosBehaviours"]},{"name":"object ChaosStages","description":"org.http4k.chaos.ChaosStages","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/index.html","searchKeys":["ChaosStages","object ChaosStages","org.http4k.chaos.ChaosStages"]},{"name":"object ChaosTriggers","description":"org.http4k.chaos.ChaosTriggers","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/index.html","searchKeys":["ChaosTriggers","object ChaosTriggers","org.http4k.chaos.ChaosTriggers"]},{"name":"object Countdown","description":"org.http4k.chaos.ChaosTriggers.Countdown","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-countdown/index.html","searchKeys":["Countdown","object Countdown","org.http4k.chaos.ChaosTriggers.Countdown"]},{"name":"object Deadline","description":"org.http4k.chaos.ChaosTriggers.Deadline","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-deadline/index.html","searchKeys":["Deadline","object Deadline","org.http4k.chaos.ChaosTriggers.Deadline"]},{"name":"object Delay","description":"org.http4k.chaos.ChaosTriggers.Delay","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-delay/index.html","searchKeys":["Delay","object Delay","org.http4k.chaos.ChaosTriggers.Delay"]},{"name":"object EatMemory","description":"org.http4k.chaos.ChaosBehaviours.EatMemory","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-eat-memory/index.html","searchKeys":["EatMemory","object EatMemory","org.http4k.chaos.ChaosBehaviours.EatMemory"]},{"name":"object KillProcess","description":"org.http4k.chaos.ChaosBehaviours.KillProcess","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-kill-process/index.html","searchKeys":["KillProcess","object KillProcess","org.http4k.chaos.ChaosBehaviours.KillProcess"]},{"name":"object Latency","description":"org.http4k.chaos.ChaosBehaviours.Latency","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-latency/index.html","searchKeys":["Latency","object Latency","org.http4k.chaos.ChaosBehaviours.Latency"]},{"name":"object MatchRequest","description":"org.http4k.chaos.ChaosTriggers.MatchRequest","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-match-request/index.html","searchKeys":["MatchRequest","object MatchRequest","org.http4k.chaos.ChaosTriggers.MatchRequest"]},{"name":"object NoBody","description":"org.http4k.chaos.ChaosBehaviours.NoBody","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-no-body/index.html","searchKeys":["NoBody","object NoBody","org.http4k.chaos.ChaosBehaviours.NoBody"]},{"name":"object None","description":"org.http4k.chaos.ChaosBehaviours.None","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-none/index.html","searchKeys":["None","object None","org.http4k.chaos.ChaosBehaviours.None"]},{"name":"object Once","description":"org.http4k.chaos.ChaosTriggers.Once","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-once/index.html","searchKeys":["Once","object Once","org.http4k.chaos.ChaosTriggers.Once"]},{"name":"object PercentageBased","description":"org.http4k.chaos.ChaosTriggers.PercentageBased","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-percentage-based/index.html","searchKeys":["PercentageBased","object PercentageBased","org.http4k.chaos.ChaosTriggers.PercentageBased"]},{"name":"object RemoteChaosApi","description":"org.http4k.chaos.RemoteChaosApi","location":"http4k-testing-chaos/org.http4k.chaos/-remote-chaos-api/index.html","searchKeys":["RemoteChaosApi","object RemoteChaosApi","org.http4k.chaos.RemoteChaosApi"]},{"name":"object ReturnResponse","description":"org.http4k.chaos.ChaosBehaviours.ReturnResponse","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-return-response/index.html","searchKeys":["ReturnResponse","object ReturnResponse","org.http4k.chaos.ChaosBehaviours.ReturnResponse"]},{"name":"object ReturnStatus","description":"org.http4k.chaos.ChaosBehaviours.ReturnStatus","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-return-status/index.html","searchKeys":["ReturnStatus","object ReturnStatus","org.http4k.chaos.ChaosBehaviours.ReturnStatus"]},{"name":"object SnipBody","description":"org.http4k.chaos.ChaosBehaviours.SnipBody","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-snip-body/index.html","searchKeys":["SnipBody","object SnipBody","org.http4k.chaos.ChaosBehaviours.SnipBody"]},{"name":"object SnipRequestBody","description":"org.http4k.chaos.ChaosBehaviours.SnipRequestBody","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-snip-request-body/index.html","searchKeys":["SnipRequestBody","object SnipRequestBody","org.http4k.chaos.ChaosBehaviours.SnipRequestBody"]},{"name":"object StackOverflow","description":"org.http4k.chaos.ChaosBehaviours.StackOverflow","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-stack-overflow/index.html","searchKeys":["StackOverflow","object StackOverflow","org.http4k.chaos.ChaosBehaviours.StackOverflow"]},{"name":"object ThrowException","description":"org.http4k.chaos.ChaosBehaviours.ThrowException","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-throw-exception/index.html","searchKeys":["ThrowException","object ThrowException","org.http4k.chaos.ChaosBehaviours.ThrowException"]},{"name":"open operator override fun invoke(next: HttpHandler): HttpHandler","description":"org.http4k.chaos.ChaosBehaviours.Variable.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-variable/invoke.html","searchKeys":["invoke","open operator override fun invoke(next: HttpHandler): HttpHandler","org.http4k.chaos.ChaosBehaviours.Variable.invoke"]},{"name":"open operator override fun invoke(p1: HttpHandler): (request: Request) -> Response","description":"org.http4k.chaos.ChaosEngine.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/invoke.html","searchKeys":["invoke","open operator override fun invoke(p1: HttpHandler): (request: Request) -> Response","org.http4k.chaos.ChaosEngine.invoke"]},{"name":"open operator override fun invoke(request: Request): Filter","description":"org.http4k.chaos.ChaosStages.Wait.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-wait/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Filter","org.http4k.chaos.ChaosStages.Wait.invoke"]},{"name":"open operator override fun invoke(request: Request): Filter?","description":"org.http4k.chaos.ChaosStages.Variable.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-variable/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Filter?","org.http4k.chaos.ChaosStages.Variable.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.chaos.ChaoticHttpHandler.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaotic-http-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.chaos.ChaoticHttpHandler.invoke"]},{"name":"open override fun toString(): String","description":"org.http4k.chaos.ChaosBehaviours.Variable.toString","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-variable/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.chaos.ChaosBehaviours.Variable.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.chaos.ChaosEngine.toString","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-engine/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.chaos.ChaosEngine.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.chaos.ChaosStages.Variable.toString","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-stages/-variable/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.chaos.ChaosStages.Variable.toString"]},{"name":"operator fun Trigger.not(): Trigger","description":"org.http4k.chaos.not","location":"http4k-testing-chaos/org.http4k.chaos/not.html","searchKeys":["not","operator fun Trigger.not(): Trigger","org.http4k.chaos.not"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.BlockThread.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-block-thread/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.BlockThread.invoke"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.EatMemory.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-eat-memory/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.EatMemory.invoke"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.KillProcess.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-kill-process/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.KillProcess.invoke"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.NoBody.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-no-body/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.NoBody.invoke"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.None.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-none/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.None.invoke"]},{"name":"operator fun invoke(): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.StackOverflow.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-stack-overflow/invoke.html","searchKeys":["invoke","operator fun invoke(): Behaviour","org.http4k.chaos.ChaosBehaviours.StackOverflow.invoke"]},{"name":"operator fun invoke(): Trigger","description":"org.http4k.chaos.ChaosTriggers.Always.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-always/invoke.html","searchKeys":["invoke","operator fun invoke(): Trigger","org.http4k.chaos.ChaosTriggers.Always.invoke"]},{"name":"operator fun invoke(e: Throwable = RuntimeException(\"Chaos behaviour injected!\")): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.ThrowException.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-throw-exception/invoke.html","searchKeys":["invoke","operator fun invoke(e: Throwable = RuntimeException(\"Chaos behaviour injected!\")): Behaviour","org.http4k.chaos.ChaosBehaviours.ThrowException.invoke"]},{"name":"operator fun invoke(endTime: Instant, clock: Clock = systemUTC()): Trigger","description":"org.http4k.chaos.ChaosTriggers.Deadline.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-deadline/invoke.html","searchKeys":["invoke","operator fun invoke(endTime: Instant, clock: Clock = systemUTC()): Trigger","org.http4k.chaos.ChaosTriggers.Deadline.invoke"]},{"name":"operator fun invoke(engine: ChaosEngine, controlsPath: String = \"/chaos\", chaosSecurity: Security = NoSecurity, openApiPath: String = \"\", corsPolicy: CorsPolicy = UnsafeGlobalPermissive, clock: Clock = Clock.systemUTC(), apiName: String = \"http4k\"): RoutingHttpHandler","description":"org.http4k.chaos.RemoteChaosApi.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-remote-chaos-api/invoke.html","searchKeys":["invoke","operator fun invoke(engine: ChaosEngine, controlsPath: String = \"/chaos\", chaosSecurity: Security = NoSecurity, openApiPath: String = \"\", corsPolicy: CorsPolicy = UnsafeGlobalPermissive, clock: Clock = Clock.systemUTC(), apiName: String = \"http4k\"): RoutingHttpHandler","org.http4k.chaos.RemoteChaosApi.invoke"]},{"name":"operator fun invoke(initial: Int): Trigger","description":"org.http4k.chaos.ChaosTriggers.Countdown.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-countdown/invoke.html","searchKeys":["invoke","operator fun invoke(initial: Int): Trigger","org.http4k.chaos.ChaosTriggers.Countdown.invoke"]},{"name":"operator fun invoke(injectionFrequency: Int, selector: Random = Random): Trigger","description":"org.http4k.chaos.ChaosTriggers.PercentageBased.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-percentage-based/invoke.html","searchKeys":["invoke","operator fun invoke(injectionFrequency: Int, selector: Random = Random): Trigger","org.http4k.chaos.ChaosTriggers.PercentageBased.invoke"]},{"name":"operator fun invoke(method: String? = null, path: Regex? = null, queries: Map<String, Regex>? = null, headers: Map<String, Regex>? = null, body: Regex? = null): Trigger","description":"org.http4k.chaos.ChaosTriggers.MatchRequest.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-match-request/invoke.html","searchKeys":["invoke","operator fun invoke(method: String? = null, path: Regex? = null, queries: Map<String, Regex>? = null, headers: Map<String, Regex>? = null, body: Regex? = null): Trigger","org.http4k.chaos.ChaosTriggers.MatchRequest.invoke"]},{"name":"operator fun invoke(min: Duration = ofMillis(100), max: Duration = ofMillis(500)): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.Latency.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-latency/invoke.html","searchKeys":["invoke","operator fun invoke(min: Duration = ofMillis(100), max: Duration = ofMillis(500)): Behaviour","org.http4k.chaos.ChaosBehaviours.Latency.invoke"]},{"name":"operator fun invoke(period: Duration, clock: Clock = systemUTC()): Trigger","description":"org.http4k.chaos.ChaosTriggers.Delay.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-delay/invoke.html","searchKeys":["invoke","operator fun invoke(period: Duration, clock: Clock = systemUTC()): Trigger","org.http4k.chaos.ChaosTriggers.Delay.invoke"]},{"name":"operator fun invoke(random: Random = Random, limitFn: (Long) -> Long): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.SnipBody.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-snip-body/invoke.html","searchKeys":["invoke","operator fun invoke(random: Random = Random, limitFn: (Long) -> Long): Behaviour","org.http4k.chaos.ChaosBehaviours.SnipBody.invoke"]},{"name":"operator fun invoke(random: Random = Random, limitFn: (Long) -> Long): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.SnipRequestBody.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-snip-request-body/invoke.html","searchKeys":["invoke","operator fun invoke(random: Random = Random, limitFn: (Long) -> Long): Behaviour","org.http4k.chaos.ChaosBehaviours.SnipRequestBody.invoke"]},{"name":"operator fun invoke(response: Response): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.ReturnResponse.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-return-response/invoke.html","searchKeys":["invoke","operator fun invoke(response: Response): Behaviour","org.http4k.chaos.ChaosBehaviours.ReturnResponse.invoke"]},{"name":"operator fun invoke(status: Status = INTERNAL_SERVER_ERROR): Behaviour","description":"org.http4k.chaos.ChaosBehaviours.ReturnStatus.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-return-status/invoke.html","searchKeys":["invoke","operator fun invoke(status: Status = INTERNAL_SERVER_ERROR): Behaviour","org.http4k.chaos.ChaosBehaviours.ReturnStatus.invoke"]},{"name":"operator fun invoke(trigger: Trigger? = Always()): Trigger","description":"org.http4k.chaos.ChaosTriggers.Once.invoke","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-triggers/-once/invoke.html","searchKeys":["invoke","operator fun invoke(trigger: Trigger? = Always()): Trigger","org.http4k.chaos.ChaosTriggers.Once.invoke"]},{"name":"typealias Stage = (Request) -> Filter?","description":"org.http4k.chaos.Stage","location":"http4k-testing-chaos/org.http4k.chaos/-stage/index.html","searchKeys":["Stage","typealias Stage = (Request) -> Filter?","org.http4k.chaos.Stage"]},{"name":"val <T : ChaoticHttpHandler> KClass<T>.defaultLocalUri: Uri","description":"org.http4k.chaos.defaultLocalUri","location":"http4k-testing-chaos/org.http4k.chaos/default-local-uri.html","searchKeys":["defaultLocalUri","val <T : ChaoticHttpHandler> KClass<T>.defaultLocalUri: Uri","org.http4k.chaos.defaultLocalUri"]},{"name":"val <T : ChaoticHttpHandler> KClass<T>.defaultPort: Int","description":"org.http4k.chaos.defaultPort","location":"http4k-testing-chaos/org.http4k.chaos/default-port.html","searchKeys":["defaultPort","val <T : ChaoticHttpHandler> KClass<T>.defaultPort: Int","org.http4k.chaos.defaultPort"]},{"name":"val Header.CHAOS: BiDiLens<HttpMessage, String>","description":"org.http4k.lens.CHAOS","location":"http4k-testing-chaos/org.http4k.lens/-c-h-a-o-s.html","searchKeys":["CHAOS","val Header.CHAOS: BiDiLens<HttpMessage, String>","org.http4k.lens.CHAOS"]},{"name":"var current: Behaviour","description":"org.http4k.chaos.ChaosBehaviours.Variable.current","location":"http4k-testing-chaos/org.http4k.chaos/-chaos-behaviours/-variable/current.html","searchKeys":["current","var current: Behaviour","org.http4k.chaos.ChaosBehaviours.Variable.current"]},{"name":"class ApacheServer(val port: Int = 8000, val address: InetAddress? = null, canonicalHostname: String? = null, val stopMode: ServerConfig.StopMode = StopMode.Graceful(Duration.ofSeconds(5))) : ServerConfig","description":"org.http4k.server.ApacheServer","location":"http4k-server-apache/org.http4k.server/-apache-server/index.html","searchKeys":["ApacheServer","class ApacheServer(val port: Int = 8000, val address: InetAddress? = null, canonicalHostname: String? = null, val stopMode: ServerConfig.StopMode = StopMode.Graceful(Duration.ofSeconds(5))) : ServerConfig","org.http4k.server.ApacheServer"]},{"name":"class Http4kRequestHandler(handler: HttpHandler) : HttpRequestHandler","description":"org.http4k.server.Http4kRequestHandler","location":"http4k-server-apache/org.http4k.server/-http4k-request-handler/index.html","searchKeys":["Http4kRequestHandler","class Http4kRequestHandler(handler: HttpHandler) : HttpRequestHandler","org.http4k.server.Http4kRequestHandler"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.Http4kRequestHandler.Http4kRequestHandler","location":"http4k-server-apache/org.http4k.server/-http4k-request-handler/-http4k-request-handler.html","searchKeys":["Http4kRequestHandler","constructor(handler: HttpHandler)","org.http4k.server.Http4kRequestHandler.Http4kRequestHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.ApacheServer.ApacheServer","location":"http4k-server-apache/org.http4k.server/-apache-server/-apache-server.html","searchKeys":["ApacheServer","constructor(port: Int = 8000)","org.http4k.server.ApacheServer.ApacheServer"]},{"name":"constructor(port: Int = 8000, address: InetAddress? = null, canonicalHostname: String? = null)","description":"org.http4k.server.ApacheServer.ApacheServer","location":"http4k-server-apache/org.http4k.server/-apache-server/-apache-server.html","searchKeys":["ApacheServer","constructor(port: Int = 8000, address: InetAddress? = null, canonicalHostname: String? = null)","org.http4k.server.ApacheServer.ApacheServer"]},{"name":"constructor(port: Int = 8000, address: InetAddress? = null, canonicalHostname: String? = null, stopMode: ServerConfig.StopMode = StopMode.Graceful(Duration.ofSeconds(5)))","description":"org.http4k.server.ApacheServer.ApacheServer","location":"http4k-server-apache/org.http4k.server/-apache-server/-apache-server.html","searchKeys":["ApacheServer","constructor(port: Int = 8000, address: InetAddress? = null, canonicalHostname: String? = null, stopMode: ServerConfig.StopMode = StopMode.Graceful(Duration.ofSeconds(5)))","org.http4k.server.ApacheServer.ApacheServer"]},{"name":"open override fun handle(request: ClassicHttpRequest, response: ClassicHttpResponse, context: HttpContext)","description":"org.http4k.server.Http4kRequestHandler.handle","location":"http4k-server-apache/org.http4k.server/-http4k-request-handler/handle.html","searchKeys":["handle","open override fun handle(request: ClassicHttpRequest, response: ClassicHttpResponse, context: HttpContext)","org.http4k.server.Http4kRequestHandler.handle"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.ApacheServer.toServer","location":"http4k-server-apache/org.http4k.server/-apache-server/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.ApacheServer.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.ApacheServer.stopMode","location":"http4k-server-apache/org.http4k.server/-apache-server/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.ApacheServer.stopMode"]},{"name":"val address: InetAddress? = null","description":"org.http4k.server.ApacheServer.address","location":"http4k-server-apache/org.http4k.server/-apache-server/address.html","searchKeys":["address","val address: InetAddress? = null","org.http4k.server.ApacheServer.address"]},{"name":"val port: Int = 8000","description":"org.http4k.server.ApacheServer.port","location":"http4k-server-apache/org.http4k.server/-apache-server/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.ApacheServer.port"]},{"name":"fun <M : HttpMessage> Assertion.Builder<M>.header(name: String): DescribeableBuilder<String?>","description":"org.http4k.strikt.header","location":"http4k-testing-strikt/org.http4k.strikt/header.html","searchKeys":["header","fun <M : HttpMessage> Assertion.Builder<M>.header(name: String): DescribeableBuilder<String?>","org.http4k.strikt.header"]},{"name":"fun <M : HttpMessage> Assertion.Builder<M>.headerValues(name: String): DescribeableBuilder<List<String?>>","description":"org.http4k.strikt.headerValues","location":"http4k-testing-strikt/org.http4k.strikt/header-values.html","searchKeys":["headerValues","fun <M : HttpMessage> Assertion.Builder<M>.headerValues(name: String): DescribeableBuilder<List<String?>>","org.http4k.strikt.headerValues"]},{"name":"fun <NODE, M : HttpMessage> Assertion.Builder<M>.jsonBody(json: Json<NODE>): DescribeableBuilder<NODE>","description":"org.http4k.strikt.jsonBody","location":"http4k-testing-strikt/org.http4k.strikt/json-body.html","searchKeys":["jsonBody","fun <NODE, M : HttpMessage> Assertion.Builder<M>.jsonBody(json: Json<NODE>): DescribeableBuilder<NODE>","org.http4k.strikt.jsonBody"]},{"name":"fun <T, M : HttpMessage> Assertion.Builder<M>.header(lens: HeaderLens<T>): DescribeableBuilder<T>","description":"org.http4k.strikt.header","location":"http4k-testing-strikt/org.http4k.strikt/header.html","searchKeys":["header","fun <T, M : HttpMessage> Assertion.Builder<M>.header(lens: HeaderLens<T>): DescribeableBuilder<T>","org.http4k.strikt.header"]},{"name":"fun <T> Assertion.Builder<Request>.query(lens: QueryLens<T>): DescribeableBuilder<T>","description":"org.http4k.strikt.query","location":"http4k-testing-strikt/org.http4k.strikt/query.html","searchKeys":["query","fun <T> Assertion.Builder<Request>.query(lens: QueryLens<T>): DescribeableBuilder<T>","org.http4k.strikt.query"]},{"name":"fun <T> Assertion.Builder<WebForm>.field(lens: Lens<WebForm, T>): DescribeableBuilder<T>","description":"org.http4k.strikt.field","location":"http4k-testing-strikt/org.http4k.strikt/field.html","searchKeys":["field","fun <T> Assertion.Builder<WebForm>.field(lens: Lens<WebForm, T>): DescribeableBuilder<T>","org.http4k.strikt.field"]},{"name":"fun <T> Assertion.Builder<WebForm>.field2(lens: Lens<WebForm, T>): DescribeableBuilder<T>","description":"org.http4k.strikt.field2","location":"http4k-testing-strikt/org.http4k.strikt/field2.html","searchKeys":["field2","fun <T> Assertion.Builder<WebForm>.field2(lens: Lens<WebForm, T>): DescribeableBuilder<T>","org.http4k.strikt.field2"]},{"name":"fun Assertion.Builder<Request>.cookie(name: String): DescribeableBuilder<Cookie?>","description":"org.http4k.strikt.cookie","location":"http4k-testing-strikt/org.http4k.strikt/cookie.html","searchKeys":["cookie","fun Assertion.Builder<Request>.cookie(name: String): DescribeableBuilder<Cookie?>","org.http4k.strikt.cookie"]},{"name":"fun Assertion.Builder<Request>.form(name: String): DescribeableBuilder<String?>","description":"org.http4k.strikt.form","location":"http4k-testing-strikt/org.http4k.strikt/form.html","searchKeys":["form","fun Assertion.Builder<Request>.form(name: String): DescribeableBuilder<String?>","org.http4k.strikt.form"]},{"name":"fun Assertion.Builder<Request>.queries(name: String): DescribeableBuilder<List<String?>>","description":"org.http4k.strikt.queries","location":"http4k-testing-strikt/org.http4k.strikt/queries.html","searchKeys":["queries","fun Assertion.Builder<Request>.queries(name: String): DescribeableBuilder<List<String?>>","org.http4k.strikt.queries"]},{"name":"fun Assertion.Builder<Request>.query(name: String): DescribeableBuilder<String?>","description":"org.http4k.strikt.query","location":"http4k-testing-strikt/org.http4k.strikt/query.html","searchKeys":["query","fun Assertion.Builder<Request>.query(name: String): DescribeableBuilder<String?>","org.http4k.strikt.query"]},{"name":"fun Assertion.Builder<Request>.setCookie(name: String): DescribeableBuilder<Cookie?>","description":"org.http4k.strikt.setCookie","location":"http4k-testing-strikt/org.http4k.strikt/set-cookie.html","searchKeys":["setCookie","fun Assertion.Builder<Request>.setCookie(name: String): DescribeableBuilder<Cookie?>","org.http4k.strikt.setCookie"]},{"name":"val <M : HttpMessage> Assertion.Builder<M>.body: DescribeableBuilder<Body>","description":"org.http4k.strikt.body","location":"http4k-testing-strikt/org.http4k.strikt/body.html","searchKeys":["body","val <M : HttpMessage> Assertion.Builder<M>.body: DescribeableBuilder<Body>","org.http4k.strikt.body"]},{"name":"val <M : HttpMessage> Assertion.Builder<M>.bodyString: DescribeableBuilder<String>","description":"org.http4k.strikt.bodyString","location":"http4k-testing-strikt/org.http4k.strikt/body-string.html","searchKeys":["bodyString","val <M : HttpMessage> Assertion.Builder<M>.bodyString: DescribeableBuilder<String>","org.http4k.strikt.bodyString"]},{"name":"val <M : HttpMessage> Assertion.Builder<M>.contentType: DescribeableBuilder<ContentType?>","description":"org.http4k.strikt.contentType","location":"http4k-testing-strikt/org.http4k.strikt/content-type.html","searchKeys":["contentType","val <M : HttpMessage> Assertion.Builder<M>.contentType: DescribeableBuilder<ContentType?>","org.http4k.strikt.contentType"]},{"name":"val Assertion.Builder<Cookie>.domain: DescribeableBuilder<String?>","description":"org.http4k.strikt.domain","location":"http4k-testing-strikt/org.http4k.strikt/domain.html","searchKeys":["domain","val Assertion.Builder<Cookie>.domain: DescribeableBuilder<String?>","org.http4k.strikt.domain"]},{"name":"val Assertion.Builder<Cookie>.expires: DescribeableBuilder<Instant?>","description":"org.http4k.strikt.expires","location":"http4k-testing-strikt/org.http4k.strikt/expires.html","searchKeys":["expires","val Assertion.Builder<Cookie>.expires: DescribeableBuilder<Instant?>","org.http4k.strikt.expires"]},{"name":"val Assertion.Builder<Cookie>.httpOnly: DescribeableBuilder<Boolean>","description":"org.http4k.strikt.httpOnly","location":"http4k-testing-strikt/org.http4k.strikt/http-only.html","searchKeys":["httpOnly","val Assertion.Builder<Cookie>.httpOnly: DescribeableBuilder<Boolean>","org.http4k.strikt.httpOnly"]},{"name":"val Assertion.Builder<Cookie>.maxAge: DescribeableBuilder<Long?>","description":"org.http4k.strikt.maxAge","location":"http4k-testing-strikt/org.http4k.strikt/max-age.html","searchKeys":["maxAge","val Assertion.Builder<Cookie>.maxAge: DescribeableBuilder<Long?>","org.http4k.strikt.maxAge"]},{"name":"val Assertion.Builder<Cookie>.name: DescribeableBuilder<String>","description":"org.http4k.strikt.name","location":"http4k-testing-strikt/org.http4k.strikt/name.html","searchKeys":["name","val Assertion.Builder<Cookie>.name: DescribeableBuilder<String>","org.http4k.strikt.name"]},{"name":"val Assertion.Builder<Cookie>.path: DescribeableBuilder<String?>","description":"org.http4k.strikt.path","location":"http4k-testing-strikt/org.http4k.strikt/path.html","searchKeys":["path","val Assertion.Builder<Cookie>.path: DescribeableBuilder<String?>","org.http4k.strikt.path"]},{"name":"val Assertion.Builder<Cookie>.sameSite: DescribeableBuilder<SameSite?>","description":"org.http4k.strikt.sameSite","location":"http4k-testing-strikt/org.http4k.strikt/same-site.html","searchKeys":["sameSite","val Assertion.Builder<Cookie>.sameSite: DescribeableBuilder<SameSite?>","org.http4k.strikt.sameSite"]},{"name":"val Assertion.Builder<Cookie>.secure: DescribeableBuilder<Boolean>","description":"org.http4k.strikt.secure","location":"http4k-testing-strikt/org.http4k.strikt/secure.html","searchKeys":["secure","val Assertion.Builder<Cookie>.secure: DescribeableBuilder<Boolean>","org.http4k.strikt.secure"]},{"name":"val Assertion.Builder<Cookie>.value: DescribeableBuilder<String>","description":"org.http4k.strikt.value","location":"http4k-testing-strikt/org.http4k.strikt/value.html","searchKeys":["value","val Assertion.Builder<Cookie>.value: DescribeableBuilder<String>","org.http4k.strikt.value"]},{"name":"val Assertion.Builder<HttpTransaction>.duration: DescribeableBuilder<Duration>","description":"org.http4k.strikt.duration","location":"http4k-testing-strikt/org.http4k.strikt/duration.html","searchKeys":["duration","val Assertion.Builder<HttpTransaction>.duration: DescribeableBuilder<Duration>","org.http4k.strikt.duration"]},{"name":"val Assertion.Builder<HttpTransaction>.request: DescribeableBuilder<Request>","description":"org.http4k.strikt.request","location":"http4k-testing-strikt/org.http4k.strikt/request.html","searchKeys":["request","val Assertion.Builder<HttpTransaction>.request: DescribeableBuilder<Request>","org.http4k.strikt.request"]},{"name":"val Assertion.Builder<HttpTransaction>.response: DescribeableBuilder<Response>","description":"org.http4k.strikt.response","location":"http4k-testing-strikt/org.http4k.strikt/response.html","searchKeys":["response","val Assertion.Builder<HttpTransaction>.response: DescribeableBuilder<Response>","org.http4k.strikt.response"]},{"name":"val Assertion.Builder<Request>.method: DescribeableBuilder<Method>","description":"org.http4k.strikt.method","location":"http4k-testing-strikt/org.http4k.strikt/method.html","searchKeys":["method","val Assertion.Builder<Request>.method: DescribeableBuilder<Method>","org.http4k.strikt.method"]},{"name":"val Assertion.Builder<Request>.uri: DescribeableBuilder<Uri>","description":"org.http4k.strikt.uri","location":"http4k-testing-strikt/org.http4k.strikt/uri.html","searchKeys":["uri","val Assertion.Builder<Request>.uri: DescribeableBuilder<Uri>","org.http4k.strikt.uri"]},{"name":"val Assertion.Builder<Response>.status: DescribeableBuilder<Status>","description":"org.http4k.strikt.status","location":"http4k-testing-strikt/org.http4k.strikt/status.html","searchKeys":["status","val Assertion.Builder<Response>.status: DescribeableBuilder<Status>","org.http4k.strikt.status"]},{"name":"val Assertion.Builder<Uri>.authority: DescribeableBuilder<String>","description":"org.http4k.strikt.authority","location":"http4k-testing-strikt/org.http4k.strikt/authority.html","searchKeys":["authority","val Assertion.Builder<Uri>.authority: DescribeableBuilder<String>","org.http4k.strikt.authority"]},{"name":"val Assertion.Builder<Uri>.host: DescribeableBuilder<String>","description":"org.http4k.strikt.host","location":"http4k-testing-strikt/org.http4k.strikt/host.html","searchKeys":["host","val Assertion.Builder<Uri>.host: DescribeableBuilder<String>","org.http4k.strikt.host"]},{"name":"val Assertion.Builder<Uri>.path: DescribeableBuilder<String>","description":"org.http4k.strikt.path","location":"http4k-testing-strikt/org.http4k.strikt/path.html","searchKeys":["path","val Assertion.Builder<Uri>.path: DescribeableBuilder<String>","org.http4k.strikt.path"]},{"name":"val Assertion.Builder<Uri>.port: DescribeableBuilder<Int?>","description":"org.http4k.strikt.port","location":"http4k-testing-strikt/org.http4k.strikt/port.html","searchKeys":["port","val Assertion.Builder<Uri>.port: DescribeableBuilder<Int?>","org.http4k.strikt.port"]},{"name":"val Assertion.Builder<Uri>.query: DescribeableBuilder<String>","description":"org.http4k.strikt.query","location":"http4k-testing-strikt/org.http4k.strikt/query.html","searchKeys":["query","val Assertion.Builder<Uri>.query: DescribeableBuilder<String>","org.http4k.strikt.query"]},{"name":"_2_0_0","description":"org.http4k.contract.openapi.OpenApiVersion._2_0_0","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/_2_0_0/index.html","searchKeys":["_2_0_0","_2_0_0","org.http4k.contract.openapi.OpenApiVersion._2_0_0"]},{"name":"_3_0_0","description":"org.http4k.contract.openapi.OpenApiVersion._3_0_0","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/_3_0_0/index.html","searchKeys":["_3_0_0","_3_0_0","org.http4k.contract.openapi.OpenApiVersion._3_0_0"]},{"name":"_3_1_0","description":"org.http4k.contract.openapi.OpenApiVersion._3_1_0","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/_3_1_0/index.html","searchKeys":["_3_1_0","_3_1_0","org.http4k.contract.openapi.OpenApiVersion._3_1_0"]},{"name":"abstract class ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec","location":"http4k-contract/org.http4k.contract/-contract-route-spec/index.html","searchKeys":["ContractRouteSpec","abstract class ContractRouteSpec","org.http4k.contract.ContractRouteSpec"]},{"name":"abstract fun <NODE> full(): Render<NODE>","description":"org.http4k.contract.openapi.RenderModes.full","location":"http4k-contract/org.http4k.contract.openapi/-render-modes/full.html","searchKeys":["full","abstract fun <NODE> full(): Render<NODE>","org.http4k.contract.openapi.RenderModes.full"]},{"name":"abstract fun <NODE> full(security: Security): Render<NODE>?","description":"org.http4k.contract.openapi.SecurityRenderer.full","location":"http4k-contract/org.http4k.contract.openapi/-security-renderer/full.html","searchKeys":["full","abstract fun <NODE> full(security: Security): Render<NODE>?","org.http4k.contract.openapi.SecurityRenderer.full"]},{"name":"abstract fun <NODE> ref(): Render<NODE>","description":"org.http4k.contract.openapi.RenderModes.ref","location":"http4k-contract/org.http4k.contract.openapi/-render-modes/ref.html","searchKeys":["ref","abstract fun <NODE> ref(): Render<NODE>","org.http4k.contract.openapi.RenderModes.ref"]},{"name":"abstract fun <NODE> ref(security: Security): Render<NODE>?","description":"org.http4k.contract.openapi.SecurityRenderer.ref","location":"http4k-contract/org.http4k.contract.openapi/-security-renderer/ref.html","searchKeys":["ref","abstract fun <NODE> ref(security: Security): Render<NODE>?","org.http4k.contract.openapi.SecurityRenderer.ref"]},{"name":"abstract fun api(api: API): NODE","description":"org.http4k.contract.openapi.ApiRenderer.api","location":"http4k-contract/org.http4k.contract.openapi/-api-renderer/api.html","searchKeys":["api","abstract fun api(api: API): NODE","org.http4k.contract.openapi.ApiRenderer.api"]},{"name":"abstract fun definitions(): Iterable<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.HasSchema.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-has-schema/definitions.html","searchKeys":["definitions","abstract fun definitions(): Iterable<Pair<String, NODE>>","org.http4k.contract.openapi.v3.HasSchema.definitions"]},{"name":"abstract fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","description":"org.http4k.contract.ContractRenderer.description","location":"http4k-contract/org.http4k.contract/-contract-renderer/description.html","searchKeys":["description","abstract fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","org.http4k.contract.ContractRenderer.description"]},{"name":"abstract fun startsWith(other: PathSegments): Boolean","description":"org.http4k.contract.PathSegments.startsWith","location":"http4k-contract/org.http4k.contract/-path-segments/starts-with.html","searchKeys":["startsWith","abstract fun startsWith(other: PathSegments): Boolean","org.http4k.contract.PathSegments.startsWith"]},{"name":"abstract fun toList(): List<String>","description":"org.http4k.contract.PathSegments.toList","location":"http4k-contract/org.http4k.contract/-path-segments/to-list.html","searchKeys":["toList","abstract fun toList(): List<String>","org.http4k.contract.PathSegments.toList"]},{"name":"abstract infix fun bindContract(method: Method): ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec/bind-contract.html","searchKeys":["bindContract","abstract infix fun bindContract(method: Method): ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec.bindContract"]},{"name":"abstract infix operator fun <T> div(next: PathLens<T>): ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec/div.html","searchKeys":["div","abstract infix operator fun <T> div(next: PathLens<T>): ContractRouteSpec","org.http4k.contract.ContractRouteSpec.div"]},{"name":"abstract operator fun <NODE> invoke(node: NODE): Render<NODE>","description":"org.http4k.contract.openapi.OpenApiExtension.invoke","location":"http4k-contract/org.http4k.contract.openapi/-open-api-extension/invoke.html","searchKeys":["invoke","abstract operator fun <NODE> invoke(node: NODE): Render<NODE>","org.http4k.contract.openapi.OpenApiExtension.invoke"]},{"name":"abstract val filter: Filter","description":"org.http4k.contract.security.Security.filter","location":"http4k-contract/org.http4k.contract.security/-security/filter.html","searchKeys":["filter","abstract val filter: Filter","org.http4k.contract.security.Security.filter"]},{"name":"abstract val parent: PathSegments","description":"org.http4k.contract.PathSegments.parent","location":"http4k-contract/org.http4k.contract/-path-segments/parent.html","searchKeys":["parent","abstract val parent: PathSegments","org.http4k.contract.PathSegments.parent"]},{"name":"class ApiKeySecurity<out T> : Security","description":"org.http4k.contract.security.ApiKeySecurity","location":"http4k-contract/org.http4k.contract.security/-api-key-security/index.html","searchKeys":["ApiKeySecurity","class ApiKeySecurity<out T> : Security","org.http4k.contract.security.ApiKeySecurity"]},{"name":"class Appendable<T>(val all: MutableList<T> = mutableListOf())","description":"org.http4k.util.Appendable","location":"http4k-contract/org.http4k.util/-appendable/index.html","searchKeys":["Appendable","class Appendable<T>(val all: MutableList<T> = mutableListOf())","org.http4k.util.Appendable"]},{"name":"class AuthCodeOAuthSecurity(val authorizationUrl: Uri, val tokenUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter, val name: String = \"oauthSecurityAuthCode\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","description":"org.http4k.contract.security.AuthCodeOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/index.html","searchKeys":["AuthCodeOAuthSecurity","class AuthCodeOAuthSecurity(val authorizationUrl: Uri, val tokenUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter, val name: String = \"oauthSecurityAuthCode\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","org.http4k.contract.security.AuthCodeOAuthSecurity"]},{"name":"class BasicAuthSecurity : Security","description":"org.http4k.contract.security.BasicAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/index.html","searchKeys":["BasicAuthSecurity","class BasicAuthSecurity : Security","org.http4k.contract.security.BasicAuthSecurity"]},{"name":"class BearerAuthSecurity(val filter: Filter, val name: String = \"bearerAuth\") : Security","description":"org.http4k.contract.security.BearerAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/index.html","searchKeys":["BearerAuthSecurity","class BearerAuthSecurity(val filter: Filter, val name: String = \"bearerAuth\") : Security","org.http4k.contract.security.BearerAuthSecurity"]},{"name":"class ContractBuilder","description":"org.http4k.contract.ContractBuilder","location":"http4k-contract/org.http4k.contract/-contract-builder/index.html","searchKeys":["ContractBuilder","class ContractBuilder","org.http4k.contract.ContractBuilder"]},{"name":"class ContractRoute : Function1<request: Request, Response> ","description":"org.http4k.contract.ContractRoute","location":"http4k-contract/org.http4k.contract/-contract-route/index.html","searchKeys":["ContractRoute","class ContractRoute : Function1<request: Request, Response> ","org.http4k.contract.ContractRoute"]},{"name":"class ContractRouteSpec0 : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec0","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/index.html","searchKeys":["ContractRouteSpec0","class ContractRouteSpec0 : ContractRouteSpec","org.http4k.contract.ContractRouteSpec0"]},{"name":"class ContractRouteSpec10<out A, out B, out C, out D, out E, out F, out G, out H, out I, out J> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec10","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/index.html","searchKeys":["ContractRouteSpec10","class ContractRouteSpec10<out A, out B, out C, out D, out E, out F, out G, out H, out I, out J> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec10"]},{"name":"class ContractRouteSpec1<out A> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec1","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/index.html","searchKeys":["ContractRouteSpec1","class ContractRouteSpec1<out A> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec1"]},{"name":"class ContractRouteSpec2<out A, out B> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec2","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/index.html","searchKeys":["ContractRouteSpec2","class ContractRouteSpec2<out A, out B> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec2"]},{"name":"class ContractRouteSpec3<out A, out B, out C> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec3","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/index.html","searchKeys":["ContractRouteSpec3","class ContractRouteSpec3<out A, out B, out C> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec3"]},{"name":"class ContractRouteSpec4<out A, out B, out C, out D> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec4","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/index.html","searchKeys":["ContractRouteSpec4","class ContractRouteSpec4<out A, out B, out C, out D> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec4"]},{"name":"class ContractRouteSpec5<out A, out B, out C, out D, out E> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec5","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/index.html","searchKeys":["ContractRouteSpec5","class ContractRouteSpec5<out A, out B, out C, out D, out E> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec5"]},{"name":"class ContractRouteSpec6<out A, out B, out C, out D, out E, out F> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec6","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/index.html","searchKeys":["ContractRouteSpec6","class ContractRouteSpec6<out A, out B, out C, out D, out E, out F> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec6"]},{"name":"class ContractRouteSpec7<out A, out B, out C, out D, out E, out F, out G> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec7","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/index.html","searchKeys":["ContractRouteSpec7","class ContractRouteSpec7<out A, out B, out C, out D, out E, out F, out G> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec7"]},{"name":"class ContractRouteSpec8<out A, out B, out C, out D, out E, out F, out G, out H> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec8","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/index.html","searchKeys":["ContractRouteSpec8","class ContractRouteSpec8<out A, out B, out C, out D, out E, out F, out G, out H> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec8"]},{"name":"class ContractRouteSpec9<out A, out B, out C, out D, out E, out F, out G, out H, out I> : ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec9","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/index.html","searchKeys":["ContractRouteSpec9","class ContractRouteSpec9<out A, out B, out C, out D, out E, out F, out G, out H, out I> : ContractRouteSpec","org.http4k.contract.ContractRouteSpec9"]},{"name":"class FormContent(val schema: BodyContent.FormContent.FormSchema) : BodyContent","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/index.html","searchKeys":["FormContent","class FormContent(val schema: BodyContent.FormContent.FormSchema) : BodyContent","org.http4k.contract.openapi.v3.BodyContent.FormContent"]},{"name":"class FormSchema(metas: Map<Meta, List<String>?>)","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-schema/index.html","searchKeys":["FormSchema","class FormSchema(metas: Map<Meta, List<String>?>)","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema"]},{"name":"class ImplicitOAuthSecurity(val authorizationUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter, val name: String = \"oauthSecurityImplicit\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","description":"org.http4k.contract.security.ImplicitOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-implicit-o-auth-security/index.html","searchKeys":["ImplicitOAuthSecurity","class ImplicitOAuthSecurity(val authorizationUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter, val name: String = \"oauthSecurityImplicit\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","org.http4k.contract.security.ImplicitOAuthSecurity"]},{"name":"class JsonErrorResponseRenderer<NODE>(json: Json<NODE>) : ErrorResponseRenderer","description":"org.http4k.contract.JsonErrorResponseRenderer","location":"http4k-contract/org.http4k.contract/-json-error-response-renderer/index.html","searchKeys":["JsonErrorResponseRenderer","class JsonErrorResponseRenderer<NODE>(json: Json<NODE>) : ErrorResponseRenderer","org.http4k.contract.JsonErrorResponseRenderer"]},{"name":"class NoBody<NODE>(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?) : ApiPath<NODE> ","description":"org.http4k.contract.openapi.v3.ApiPath.NoBody","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-no-body/index.html","searchKeys":["NoBody","class NoBody<NODE>(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?) : ApiPath<NODE> ","org.http4k.contract.openapi.v3.ApiPath.NoBody"]},{"name":"class OneOfSchemaContent<NODE : Any>(schemas: List<BodyContent>) : BodyContent, HasSchema<NODE> ","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/index.html","searchKeys":["OneOfSchemaContent","class OneOfSchemaContent<NODE : Any>(schemas: List<BodyContent>) : BodyContent, HasSchema<NODE> ","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent"]},{"name":"class OpenApi3<NODE : Any>(apiInfo: ApiInfo, json: Json<NODE>, extensions: List<OpenApiExtension> = emptyList(), apiRenderer: ApiRenderer<Api<NODE>, NODE> = OpenApi3ApiRenderer(json), securityRenderer: SecurityRenderer = OpenApi3SecurityRenderer, errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0) : ContractRenderer, ErrorResponseRenderer","description":"org.http4k.contract.openapi.v3.OpenApi3","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3/index.html","searchKeys":["OpenApi3","class OpenApi3<NODE : Any>(apiInfo: ApiInfo, json: Json<NODE>, extensions: List<OpenApiExtension> = emptyList(), apiRenderer: ApiRenderer<Api<NODE>, NODE> = OpenApi3ApiRenderer(json), securityRenderer: SecurityRenderer = OpenApi3SecurityRenderer, errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0) : ContractRenderer, ErrorResponseRenderer","org.http4k.contract.openapi.v3.OpenApi3"]},{"name":"class OpenApi3ApiRenderer<NODE : Any>(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\", jsonToJsonSchema: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json, refLocationPrefix)) : ApiRenderer<Api<NODE>, NODE> ","description":"org.http4k.contract.openapi.v3.OpenApi3ApiRenderer","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3-api-renderer/index.html","searchKeys":["OpenApi3ApiRenderer","class OpenApi3ApiRenderer<NODE : Any>(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\", jsonToJsonSchema: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json, refLocationPrefix)) : ApiRenderer<Api<NODE>, NODE> ","org.http4k.contract.openapi.v3.OpenApi3ApiRenderer"]},{"name":"class OpenIdConnectSecurity(val discoveryUrl: Uri, val filter: Filter, val name: String = \"openIdConnect\") : Security","description":"org.http4k.contract.security.OpenIdConnectSecurity","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/index.html","searchKeys":["OpenIdConnectSecurity","class OpenIdConnectSecurity(val discoveryUrl: Uri, val filter: Filter, val name: String = \"openIdConnect\") : Security","org.http4k.contract.security.OpenIdConnectSecurity"]},{"name":"class PrimitiveParameter<NODE>(meta: Meta, val schema: NODE) : RequestParameter<NODE> ","description":"org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-primitive-parameter/index.html","searchKeys":["PrimitiveParameter","class PrimitiveParameter<NODE>(meta: Meta, val schema: NODE) : RequestParameter<NODE> ","org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter"]},{"name":"class RequestContents<NODE>(val content: Map<String, BodyContent>? = null) : HasSchema<NODE> ","description":"org.http4k.contract.openapi.v3.RequestContents","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-contents/index.html","searchKeys":["RequestContents","class RequestContents<NODE>(val content: Map<String, BodyContent>? = null) : HasSchema<NODE> ","org.http4k.contract.openapi.v3.RequestContents"]},{"name":"class RequestMeta(request: Request, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null) : HttpMessageMeta<Request> ","description":"org.http4k.contract.RequestMeta","location":"http4k-contract/org.http4k.contract/-request-meta/index.html","searchKeys":["RequestMeta","class RequestMeta(request: Request, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null) : HttpMessageMeta<Request> ","org.http4k.contract.RequestMeta"]},{"name":"class ResponseContents<NODE>(val description: String?, val content: Map<String, BodyContent> = emptyMap()) : HasSchema<NODE> ","description":"org.http4k.contract.openapi.v3.ResponseContents","location":"http4k-contract/org.http4k.contract.openapi.v3/-response-contents/index.html","searchKeys":["ResponseContents","class ResponseContents<NODE>(val description: String?, val content: Map<String, BodyContent> = emptyMap()) : HasSchema<NODE> ","org.http4k.contract.openapi.v3.ResponseContents"]},{"name":"class ResponseMeta(description: String, response: Response, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null) : HttpMessageMeta<Response> ","description":"org.http4k.contract.ResponseMeta","location":"http4k-contract/org.http4k.contract/-response-meta/index.html","searchKeys":["ResponseMeta","class ResponseMeta(description: String, response: Response, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null) : HttpMessageMeta<Response> ","org.http4k.contract.ResponseMeta"]},{"name":"class RouteMetaDsl","description":"org.http4k.contract.RouteMetaDsl","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/index.html","searchKeys":["RouteMetaDsl","class RouteMetaDsl","org.http4k.contract.RouteMetaDsl"]},{"name":"class SchemaContent<NODE : Any>(jsonSchema: JsonSchema<NODE>?, val example: NODE?) : BodyContent, HasSchema<NODE> ","description":"org.http4k.contract.openapi.v3.BodyContent.SchemaContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-schema-content/index.html","searchKeys":["SchemaContent","class SchemaContent<NODE : Any>(jsonSchema: JsonSchema<NODE>?, val example: NODE?) : BodyContent, HasSchema<NODE> ","org.http4k.contract.openapi.v3.BodyContent.SchemaContent"]},{"name":"class SchemaParameter<NODE>(meta: Meta, jsonSchema: JsonSchema<NODE>?) : RequestParameter<NODE> , HasSchema<NODE> ","description":"org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-schema-parameter/index.html","searchKeys":["SchemaParameter","class SchemaParameter<NODE>(meta: Meta, jsonSchema: JsonSchema<NODE>?) : RequestParameter<NODE> , HasSchema<NODE> ","org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter"]},{"name":"class SimpleJson<out NODE>(json: Json<NODE>) : ContractRenderer, ErrorResponseRenderer","description":"org.http4k.contract.simple.SimpleJson","location":"http4k-contract/org.http4k.contract.simple/-simple-json/index.html","searchKeys":["SimpleJson","class SimpleJson<out NODE>(json: Json<NODE>) : ContractRenderer, ErrorResponseRenderer","org.http4k.contract.simple.SimpleJson"]},{"name":"class UserCredentialsOAuthSecurity(val tokenUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter = Filter.NoOp, val name: String = \"oauthSecurityUserCredentials\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","description":"org.http4k.contract.security.UserCredentialsOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-user-credentials-o-auth-security/index.html","searchKeys":["UserCredentialsOAuthSecurity","class UserCredentialsOAuthSecurity(val tokenUrl: Uri, val scopes: List<OAuthScope> = emptyList(), val filter: Filter = Filter.NoOp, val name: String = \"oauthSecurityUserCredentials\", val refreshUrl: Uri? = null, val extraFields: Map<String, String> = emptyMap()) : OAuthSecurity","org.http4k.contract.security.UserCredentialsOAuthSecurity"]},{"name":"class WithBody<NODE>(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, val requestBody: RequestContents<NODE>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?) : ApiPath<NODE> ","description":"org.http4k.contract.openapi.v3.ApiPath.WithBody","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-with-body/index.html","searchKeys":["WithBody","class WithBody<NODE>(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, val requestBody: RequestContents<NODE>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?) : ApiPath<NODE> ","org.http4k.contract.openapi.v3.ApiPath.WithBody"]},{"name":"constructor(all: MutableList<T> = mutableListOf())","description":"org.http4k.util.Appendable.Appendable","location":"http4k-contract/org.http4k.util/-appendable/-appendable.html","searchKeys":["Appendable","constructor(all: MutableList<T> = mutableListOf())","org.http4k.util.Appendable.Appendable"]},{"name":"constructor(apiInfo: ApiInfo, json: AutoMarshallingJson<NODE>, extensions: List<OpenApiExtension> = emptyList(), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0)","description":"org.http4k.contract.openapi.v3.OpenApi3.OpenApi3","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3/-open-api3.html","searchKeys":["OpenApi3","constructor(apiInfo: ApiInfo, json: AutoMarshallingJson<NODE>, extensions: List<OpenApiExtension> = emptyList(), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0)","org.http4k.contract.openapi.v3.OpenApi3.OpenApi3"]},{"name":"constructor(apiInfo: ApiInfo, json: Json<NODE>, baseUri: Uri? = null, extensions: List<OpenApiExtension> = emptyList(), securityRenderer: SecurityRenderer = OpenApi2SecurityRenderer, schemaGenerator: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json), errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json))","description":"org.http4k.contract.openapi.v2.OpenApi2.OpenApi2","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2/-open-api2.html","searchKeys":["OpenApi2","constructor(apiInfo: ApiInfo, json: Json<NODE>, baseUri: Uri? = null, extensions: List<OpenApiExtension> = emptyList(), securityRenderer: SecurityRenderer = OpenApi2SecurityRenderer, schemaGenerator: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json), errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json))","org.http4k.contract.openapi.v2.OpenApi2.OpenApi2"]},{"name":"constructor(apiInfo: ApiInfo, json: Json<NODE>, extensions: List<OpenApiExtension> = emptyList(), apiRenderer: ApiRenderer<Api<NODE>, NODE> = OpenApi3ApiRenderer(json), securityRenderer: SecurityRenderer = OpenApi3SecurityRenderer, errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0)","description":"org.http4k.contract.openapi.v3.OpenApi3.OpenApi3","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3/-open-api3.html","searchKeys":["OpenApi3","constructor(apiInfo: ApiInfo, json: Json<NODE>, extensions: List<OpenApiExtension> = emptyList(), apiRenderer: ApiRenderer<Api<NODE>, NODE> = OpenApi3ApiRenderer(json), securityRenderer: SecurityRenderer = OpenApi3SecurityRenderer, errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = _3_0_0)","org.http4k.contract.openapi.v3.OpenApi3.OpenApi3"]},{"name":"constructor(authorizationUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter, name: String = \"oauthSecurityImplicit\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","description":"org.http4k.contract.security.ImplicitOAuthSecurity.ImplicitOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-implicit-o-auth-security/-implicit-o-auth-security.html","searchKeys":["ImplicitOAuthSecurity","constructor(authorizationUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter, name: String = \"oauthSecurityImplicit\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","org.http4k.contract.security.ImplicitOAuthSecurity.ImplicitOAuthSecurity"]},{"name":"constructor(authorizationUrl: Uri, tokenUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter, name: String = \"oauthSecurityAuthCode\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","description":"org.http4k.contract.security.AuthCodeOAuthSecurity.AuthCodeOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/-auth-code-o-auth-security.html","searchKeys":["AuthCodeOAuthSecurity","constructor(authorizationUrl: Uri, tokenUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter, name: String = \"oauthSecurityAuthCode\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","org.http4k.contract.security.AuthCodeOAuthSecurity.AuthCodeOAuthSecurity"]},{"name":"constructor(content: Map<String, BodyContent>? = null)","description":"org.http4k.contract.openapi.v3.RequestContents.RequestContents","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-contents/-request-contents.html","searchKeys":["RequestContents","constructor(content: Map<String, BodyContent>? = null)","org.http4k.contract.openapi.v3.RequestContents.RequestContents"]},{"name":"constructor(description: String, response: Response, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.ResponseMeta.ResponseMeta","location":"http4k-contract/org.http4k.contract/-response-meta/-response-meta.html","searchKeys":["ResponseMeta","constructor(description: String, response: Response, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null)","org.http4k.contract.ResponseMeta.ResponseMeta"]},{"name":"constructor(description: String?, content: Map<String, BodyContent> = emptyMap())","description":"org.http4k.contract.openapi.v3.ResponseContents.ResponseContents","location":"http4k-contract/org.http4k.contract.openapi.v3/-response-contents/-response-contents.html","searchKeys":["ResponseContents","constructor(description: String?, content: Map<String, BodyContent> = emptyMap())","org.http4k.contract.openapi.v3.ResponseContents.ResponseContents"]},{"name":"constructor(discoveryUrl: Uri, filter: Filter, name: String = \"openIdConnect\")","description":"org.http4k.contract.security.OpenIdConnectSecurity.OpenIdConnectSecurity","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/-open-id-connect-security.html","searchKeys":["OpenIdConnectSecurity","constructor(discoveryUrl: Uri, filter: Filter, name: String = \"openIdConnect\")","org.http4k.contract.security.OpenIdConnectSecurity.OpenIdConnectSecurity"]},{"name":"constructor(filter: Filter, name: String = \"bearerAuth\")","description":"org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/-bearer-auth-security.html","searchKeys":["BearerAuthSecurity","constructor(filter: Filter, name: String = \"bearerAuth\")","org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity"]},{"name":"constructor(info: ApiInfo, tags: List<Tag>, paths: Map<String, Map<String, ApiPath<NODE>>>, components: Components<NODE>, servers: List<ApiServer>, webhooks: Map<String, Map<String, ApiPath<NODE>>>?, openapi: String)","description":"org.http4k.contract.openapi.v3.Api.Api","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/-api.html","searchKeys":["Api","constructor(info: ApiInfo, tags: List<Tag>, paths: Map<String, Map<String, ApiPath<NODE>>>, components: Components<NODE>, servers: List<ApiServer>, webhooks: Map<String, Map<String, ApiPath<NODE>>>?, openapi: String)","org.http4k.contract.openapi.v3.Api.Api"]},{"name":"constructor(json: Json<NODE>)","description":"org.http4k.contract.JsonErrorResponseRenderer.JsonErrorResponseRenderer","location":"http4k-contract/org.http4k.contract/-json-error-response-renderer/-json-error-response-renderer.html","searchKeys":["JsonErrorResponseRenderer","constructor(json: Json<NODE>)","org.http4k.contract.JsonErrorResponseRenderer.JsonErrorResponseRenderer"]},{"name":"constructor(json: Json<NODE>)","description":"org.http4k.contract.simple.SimpleJson.SimpleJson","location":"http4k-contract/org.http4k.contract.simple/-simple-json/-simple-json.html","searchKeys":["SimpleJson","constructor(json: Json<NODE>)","org.http4k.contract.simple.SimpleJson.SimpleJson"]},{"name":"constructor(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\", jsonToJsonSchema: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json, refLocationPrefix))","description":"org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.OpenApi3ApiRenderer","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3-api-renderer/-open-api3-api-renderer.html","searchKeys":["OpenApi3ApiRenderer","constructor(json: Json<NODE>, refLocationPrefix: String = \"components/schemas\", jsonToJsonSchema: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json, refLocationPrefix))","org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.OpenApi3ApiRenderer"]},{"name":"constructor(jsonSchema: JsonSchema<NODE>?, example: NODE?)","description":"org.http4k.contract.openapi.v3.BodyContent.SchemaContent.SchemaContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-schema-content/-schema-content.html","searchKeys":["SchemaContent","constructor(jsonSchema: JsonSchema<NODE>?, example: NODE?)","org.http4k.contract.openapi.v3.BodyContent.SchemaContent.SchemaContent"]},{"name":"constructor(message: T, description: String, definitionId: String?, example: Any?, schemaPrefix: String? = null)","description":"org.http4k.contract.HttpMessageMeta.HttpMessageMeta","location":"http4k-contract/org.http4k.contract/-http-message-meta/-http-message-meta.html","searchKeys":["HttpMessageMeta","constructor(message: T, description: String, definitionId: String?, example: Any?, schemaPrefix: String? = null)","org.http4k.contract.HttpMessageMeta.HttpMessageMeta"]},{"name":"constructor(meta: Meta, jsonSchema: JsonSchema<NODE>?)","description":"org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.SchemaParameter","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-schema-parameter/-schema-parameter.html","searchKeys":["SchemaParameter","constructor(meta: Meta, jsonSchema: JsonSchema<NODE>?)","org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.SchemaParameter"]},{"name":"constructor(meta: Meta, schema: NODE)","description":"org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter.PrimitiveParameter","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-primitive-parameter/-primitive-parameter.html","searchKeys":["PrimitiveParameter","constructor(meta: Meta, schema: NODE)","org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter.PrimitiveParameter"]},{"name":"constructor(metas: Map<Meta, List<String>?>)","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.FormSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-schema/-form-schema.html","searchKeys":["FormSchema","constructor(metas: Map<Meta, List<String>?>)","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.FormSchema"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec.ContractRequestBuilder.ContractRequestBuilder","location":"http4k-contract/org.http4k.contract/-contract-route-spec/-contract-request-builder/-contract-request-builder.html","searchKeys":["ContractRequestBuilder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec.ContractRequestBuilder.ContractRequestBuilder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec0.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec0.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec1.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec1.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec10.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec10.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec2.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec2.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec3.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec3.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec4.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec4.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec5.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec5.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec6.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec6.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec7.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec7.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec8.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec8.Binder.Binder"]},{"name":"constructor(method: Method)","description":"org.http4k.contract.ContractRouteSpec9.Binder.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/-binder/-binder.html","searchKeys":["Binder","constructor(method: Method)","org.http4k.contract.ContractRouteSpec9.Binder.Binder"]},{"name":"constructor(method: Method, meta: RouteMeta)","description":"org.http4k.contract.WebCallback.WebCallback","location":"http4k-contract/org.http4k.contract/-web-callback/-web-callback.html","searchKeys":["WebCallback","constructor(method: Method, meta: RouteMeta)","org.http4k.contract.WebCallback.WebCallback"]},{"name":"constructor(name: String, description: String = name)","description":"org.http4k.contract.security.OAuthScope.OAuthScope","location":"http4k-contract/org.http4k.contract.security/-o-auth-scope/-o-auth-scope.html","searchKeys":["OAuthScope","constructor(name: String, description: String = name)","org.http4k.contract.security.OAuthScope.OAuthScope"]},{"name":"constructor(name: String, description: String? = null)","description":"org.http4k.contract.Tag.Tag","location":"http4k-contract/org.http4k.contract/-tag/-tag.html","searchKeys":["Tag","constructor(name: String, description: String? = null)","org.http4k.contract.Tag.Tag"]},{"name":"constructor(oneOf: List<NODE>)","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf.OneOf","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/-one-of/-one-of.html","searchKeys":["OneOf","constructor(oneOf: List<NODE>)","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf.OneOf"]},{"name":"constructor(pageTitle: String = \"Redoc\", url: String = \"https://petstore.swagger.io/v2/swagger.json\", options: MutableMap<String, String> = mutableMapOf())","description":"org.http4k.contract.ui.RedocConfig.RedocConfig","location":"http4k-contract/org.http4k.contract.ui/-redoc-config/-redoc-config.html","searchKeys":["RedocConfig","constructor(pageTitle: String = \"Redoc\", url: String = \"https://petstore.swagger.io/v2/swagger.json\", options: MutableMap<String, String> = mutableMapOf())","org.http4k.contract.ui.RedocConfig.RedocConfig"]},{"name":"constructor(pageTitle: String = \"Swagger UI\", url: String = \"https://petstore.swagger.io/v2/swagger.json\", domId: String = \"swagger-ui\", queryConfigEnabled: Boolean? = null, displayOperationId: Boolean? = null, displayRequestDuration: Boolean? = null, requestSnippetsEnabled: Boolean? = null, tryItOutEnabled: Boolean? = null, deepLinking: Boolean? = null, oauth2RedirectUrl: String? = null, withCredentials: Boolean? = null, persistAuthorization: Boolean? = null, layout: String = \"BaseLayout\", presets: List<String> = listOf(\"SwaggerUIBundle.presets.apis\"))","description":"org.http4k.contract.ui.SwaggerUiConfig.SwaggerUiConfig","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/-swagger-ui-config.html","searchKeys":["SwaggerUiConfig","constructor(pageTitle: String = \"Swagger UI\", url: String = \"https://petstore.swagger.io/v2/swagger.json\", domId: String = \"swagger-ui\", queryConfigEnabled: Boolean? = null, displayOperationId: Boolean? = null, displayRequestDuration: Boolean? = null, requestSnippetsEnabled: Boolean? = null, tryItOutEnabled: Boolean? = null, deepLinking: Boolean? = null, oauth2RedirectUrl: String? = null, withCredentials: Boolean? = null, persistAuthorization: Boolean? = null, layout: String = \"BaseLayout\", presets: List<String> = listOf(\"SwaggerUIBundle.presets.apis\"))","org.http4k.contract.ui.SwaggerUiConfig.SwaggerUiConfig"]},{"name":"constructor(param: Lens<Request, T>, validateKey: (T) -> Boolean, authorizeOptionsRequests: Boolean = true, name: String = \"api_key\")","description":"org.http4k.contract.security.ApiKeySecurity.ApiKeySecurity","location":"http4k-contract/org.http4k.contract.security/-api-key-security/-api-key-security.html","searchKeys":["ApiKeySecurity","constructor(param: Lens<Request, T>, validateKey: (T) -> Boolean, authorizeOptionsRequests: Boolean = true, name: String = \"api_key\")","org.http4k.contract.security.ApiKeySecurity.ApiKeySecurity"]},{"name":"constructor(parent: PathSegments, child: String)","description":"org.http4k.contract.Slash.Slash","location":"http4k-contract/org.http4k.contract/-slash/-slash.html","searchKeys":["Slash","constructor(parent: PathSegments, child: String)","org.http4k.contract.Slash.Slash"]},{"name":"constructor(realm: String, credentials: (Credentials) -> Boolean)","description":"org.http4k.contract.security.BasicAuthSecurity.BasicAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/-basic-auth-security.html","searchKeys":["BasicAuthSecurity","constructor(realm: String, credentials: (Credentials) -> Boolean)","org.http4k.contract.security.BasicAuthSecurity.BasicAuthSecurity"]},{"name":"constructor(realm: String, credentials: Credentials, name: String = \"basicAuth\")","description":"org.http4k.contract.security.BasicAuthSecurity.BasicAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/-basic-auth-security.html","searchKeys":["BasicAuthSecurity","constructor(realm: String, credentials: Credentials, name: String = \"basicAuth\")","org.http4k.contract.security.BasicAuthSecurity.BasicAuthSecurity"]},{"name":"constructor(renderer: ContractRenderer, security: Security?, tags: Set<Tag>, descriptionSecurity: Security?, descriptionPath: String, preFlightExtraction: PreFlightExtraction, routes: List<ContractRoute> = emptyList(), rootAsString: String = \"\", preSecurityFilter: Filter = Filter.NoOp, postSecurityFilter: Filter = Filter.NoOp, includeDescriptionRoute: Boolean = false, webhooks: Map<String, List<WebCallback>> = emptyMap())","description":"org.http4k.contract.ContractRoutingHttpHandler.ContractRoutingHttpHandler","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/-contract-routing-http-handler.html","searchKeys":["ContractRoutingHttpHandler","constructor(renderer: ContractRenderer, security: Security?, tags: Set<Tag>, descriptionSecurity: Security?, descriptionPath: String, preFlightExtraction: PreFlightExtraction, routes: List<ContractRoute> = emptyList(), rootAsString: String = \"\", preSecurityFilter: Filter = Filter.NoOp, postSecurityFilter: Filter = Filter.NoOp, includeDescriptionRoute: Boolean = false, webhooks: Map<String, List<WebCallback>> = emptyMap())","org.http4k.contract.ContractRoutingHttpHandler.ContractRoutingHttpHandler"]},{"name":"constructor(request: Request, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.RequestMeta.RequestMeta","location":"http4k-contract/org.http4k.contract/-request-meta/-request-meta.html","searchKeys":["RequestMeta","constructor(request: Request, definitionId: String? = null, example: Any? = null, schemaPrefix: String? = null)","org.http4k.contract.RequestMeta.RequestMeta"]},{"name":"constructor(schema: BodyContent.FormContent.FormSchema)","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-content.html","searchKeys":["FormContent","constructor(schema: BodyContent.FormContent.FormSchema)","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormContent"]},{"name":"constructor(schema: NODE, example: String? = null)","description":"org.http4k.contract.openapi.v3.BodyContent.NoSchema.NoSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-no-schema/-no-schema.html","searchKeys":["NoSchema","constructor(schema: NODE, example: String? = null)","org.http4k.contract.openapi.v3.BodyContent.NoSchema.NoSchema"]},{"name":"constructor(schemas: List<BodyContent>)","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOfSchemaContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/-one-of-schema-content.html","searchKeys":["OneOfSchemaContent","constructor(schemas: List<BodyContent>)","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOfSchemaContent"]},{"name":"constructor(schemas: NODE, securitySchemes: NODE)","description":"org.http4k.contract.openapi.v3.Components.Components","location":"http4k-contract/org.http4k.contract.openapi.v3/-components/-components.html","searchKeys":["Components","constructor(schemas: NODE, securitySchemes: NODE)","org.http4k.contract.openapi.v3.Components.Components"]},{"name":"constructor(summary: String = \"<unknown>\", description: String? = null, tags: Set<Tag> = emptySet(), body: BodyLens<*>? = null, produces: Set<ContentType> = emptySet(), consumes: Set<ContentType> = emptySet(), requestParams: List<Lens<Request, *>> = emptyList(), requests: List<HttpMessageMeta<Request>> = emptyList(), responses: List<HttpMessageMeta<Response>> = emptyList(), preFlightExtraction: PreFlightExtraction? = null, security: Security? = null, operationId: String? = null, deprecated: Boolean = false, callbacks: Map<String, Map<Uri, WebCallback>>? = null, described: Boolean = true)","description":"org.http4k.contract.RouteMeta.RouteMeta","location":"http4k-contract/org.http4k.contract/-route-meta/-route-meta.html","searchKeys":["RouteMeta","constructor(summary: String = \"<unknown>\", description: String? = null, tags: Set<Tag> = emptySet(), body: BodyLens<*>? = null, produces: Set<ContentType> = emptySet(), consumes: Set<ContentType> = emptySet(), requestParams: List<Lens<Request, *>> = emptyList(), requests: List<HttpMessageMeta<Request>> = emptyList(), responses: List<HttpMessageMeta<Response>> = emptyList(), preFlightExtraction: PreFlightExtraction? = null, security: Security? = null, operationId: String? = null, deprecated: Boolean = false, callbacks: Map<String, Map<Uri, WebCallback>>? = null, described: Boolean = true)","org.http4k.contract.RouteMeta.RouteMeta"]},{"name":"constructor(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, requestBody: RequestContents<NODE>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?)","description":"org.http4k.contract.openapi.v3.ApiPath.WithBody.WithBody","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-with-body/-with-body.html","searchKeys":["WithBody","constructor(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, requestBody: RequestContents<NODE>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?)","org.http4k.contract.openapi.v3.ApiPath.WithBody.WithBody"]},{"name":"constructor(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?)","description":"org.http4k.contract.openapi.v3.ApiPath.NoBody.NoBody","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-no-body/-no-body.html","searchKeys":["NoBody","constructor(summary: String, description: String?, tags: List<String>?, parameters: List<RequestParameter<NODE>>, responses: Map<String, ResponseContents<NODE>>, security: NODE?, operationId: String?, deprecated: Boolean?, callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?)","org.http4k.contract.openapi.v3.ApiPath.NoBody.NoBody"]},{"name":"constructor(title: String, version: String, description: String? = null)","description":"org.http4k.contract.openapi.ApiInfo.ApiInfo","location":"http4k-contract/org.http4k.contract.openapi/-api-info/-api-info.html","searchKeys":["ApiInfo","constructor(title: String, version: String, description: String? = null)","org.http4k.contract.openapi.ApiInfo.ApiInfo"]},{"name":"constructor(token: (String) -> Boolean, name: String = \"bearerAuth\")","description":"org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/-bearer-auth-security.html","searchKeys":["BearerAuthSecurity","constructor(token: (String) -> Boolean, name: String = \"bearerAuth\")","org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity"]},{"name":"constructor(token: String, name: String = \"bearerAuth\")","description":"org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/-bearer-auth-security.html","searchKeys":["BearerAuthSecurity","constructor(token: String, name: String = \"bearerAuth\")","org.http4k.contract.security.BearerAuthSecurity.BearerAuthSecurity"]},{"name":"constructor(tokenUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter = Filter.NoOp, name: String = \"oauthSecurityUserCredentials\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","description":"org.http4k.contract.security.UserCredentialsOAuthSecurity.UserCredentialsOAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-user-credentials-o-auth-security/-user-credentials-o-auth-security.html","searchKeys":["UserCredentialsOAuthSecurity","constructor(tokenUrl: Uri, scopes: List<OAuthScope> = emptyList(), filter: Filter = Filter.NoOp, name: String = \"oauthSecurityUserCredentials\", refreshUrl: Uri? = null, extraFields: Map<String, String> = emptyMap())","org.http4k.contract.security.UserCredentialsOAuthSecurity.UserCredentialsOAuthSecurity"]},{"name":"constructor(url: Uri, description: String? = null)","description":"org.http4k.contract.openapi.v3.ApiServer.ApiServer","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-server/-api-server.html","searchKeys":["ApiServer","constructor(url: Uri, description: String? = null)","org.http4k.contract.openapi.v3.ApiServer.ApiServer"]},{"name":"data class Api<NODE>","description":"org.http4k.contract.openapi.v3.Api","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/index.html","searchKeys":["Api","data class Api<NODE>","org.http4k.contract.openapi.v3.Api"]},{"name":"data class ApiInfo(val title: String, val version: String, val description: String? = null)","description":"org.http4k.contract.openapi.ApiInfo","location":"http4k-contract/org.http4k.contract.openapi/-api-info/index.html","searchKeys":["ApiInfo","data class ApiInfo(val title: String, val version: String, val description: String? = null)","org.http4k.contract.openapi.ApiInfo"]},{"name":"data class ApiServer(val url: Uri, val description: String? = null)","description":"org.http4k.contract.openapi.v3.ApiServer","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-server/index.html","searchKeys":["ApiServer","data class ApiServer(val url: Uri, val description: String? = null)","org.http4k.contract.openapi.v3.ApiServer"]},{"name":"data class Components<NODE>(val schemas: NODE, val securitySchemes: NODE)","description":"org.http4k.contract.openapi.v3.Components","location":"http4k-contract/org.http4k.contract.openapi.v3/-components/index.html","searchKeys":["Components","data class Components<NODE>(val schemas: NODE, val securitySchemes: NODE)","org.http4k.contract.openapi.v3.Components"]},{"name":"data class ContractRoutingHttpHandler(renderer: ContractRenderer, security: Security?, tags: Set<Tag>, descriptionSecurity: Security?, descriptionPath: String, preFlightExtraction: PreFlightExtraction, routes: List<ContractRoute> = emptyList(), rootAsString: String = \"\", preSecurityFilter: Filter = Filter.NoOp, postSecurityFilter: Filter = Filter.NoOp, includeDescriptionRoute: Boolean = false, webhooks: Map<String, List<WebCallback>> = emptyMap()) : RoutingHttpHandler","description":"org.http4k.contract.ContractRoutingHttpHandler","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/index.html","searchKeys":["ContractRoutingHttpHandler","data class ContractRoutingHttpHandler(renderer: ContractRenderer, security: Security?, tags: Set<Tag>, descriptionSecurity: Security?, descriptionPath: String, preFlightExtraction: PreFlightExtraction, routes: List<ContractRoute> = emptyList(), rootAsString: String = \"\", preSecurityFilter: Filter = Filter.NoOp, postSecurityFilter: Filter = Filter.NoOp, includeDescriptionRoute: Boolean = false, webhooks: Map<String, List<WebCallback>> = emptyMap()) : RoutingHttpHandler","org.http4k.contract.ContractRoutingHttpHandler"]},{"name":"data class NoSchema<NODE : Any>(val schema: NODE, val example: String? = null) : BodyContent","description":"org.http4k.contract.openapi.v3.BodyContent.NoSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-no-schema/index.html","searchKeys":["NoSchema","data class NoSchema<NODE : Any>(val schema: NODE, val example: String? = null) : BodyContent","org.http4k.contract.openapi.v3.BodyContent.NoSchema"]},{"name":"data class OAuthScope(val name: String, val description: String = name)","description":"org.http4k.contract.security.OAuthScope","location":"http4k-contract/org.http4k.contract.security/-o-auth-scope/index.html","searchKeys":["OAuthScope","data class OAuthScope(val name: String, val description: String = name)","org.http4k.contract.security.OAuthScope"]},{"name":"data class OneOf<NODE>(val oneOf: List<NODE>)","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/-one-of/index.html","searchKeys":["OneOf","data class OneOf<NODE>(val oneOf: List<NODE>)","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf"]},{"name":"data class RedocConfig(var pageTitle: String = \"Redoc\", var url: String = \"https://petstore.swagger.io/v2/swagger.json\", val options: MutableMap<String, String> = mutableMapOf())","description":"org.http4k.contract.ui.RedocConfig","location":"http4k-contract/org.http4k.contract.ui/-redoc-config/index.html","searchKeys":["RedocConfig","data class RedocConfig(var pageTitle: String = \"Redoc\", var url: String = \"https://petstore.swagger.io/v2/swagger.json\", val options: MutableMap<String, String> = mutableMapOf())","org.http4k.contract.ui.RedocConfig"]},{"name":"data class RouteMeta(val summary: String = \"<unknown>\", val description: String? = null, val tags: Set<Tag> = emptySet(), val body: BodyLens<*>? = null, val produces: Set<ContentType> = emptySet(), val consumes: Set<ContentType> = emptySet(), val requestParams: List<Lens<Request, *>> = emptyList(), val requests: List<HttpMessageMeta<Request>> = emptyList(), val responses: List<HttpMessageMeta<Response>> = emptyList(), val preFlightExtraction: PreFlightExtraction? = null, val security: Security? = null, val operationId: String? = null, val deprecated: Boolean = false, val callbacks: Map<String, Map<Uri, WebCallback>>? = null, val described: Boolean = true)","description":"org.http4k.contract.RouteMeta","location":"http4k-contract/org.http4k.contract/-route-meta/index.html","searchKeys":["RouteMeta","data class RouteMeta(val summary: String = \"<unknown>\", val description: String? = null, val tags: Set<Tag> = emptySet(), val body: BodyLens<*>? = null, val produces: Set<ContentType> = emptySet(), val consumes: Set<ContentType> = emptySet(), val requestParams: List<Lens<Request, *>> = emptyList(), val requests: List<HttpMessageMeta<Request>> = emptyList(), val responses: List<HttpMessageMeta<Response>> = emptyList(), val preFlightExtraction: PreFlightExtraction? = null, val security: Security? = null, val operationId: String? = null, val deprecated: Boolean = false, val callbacks: Map<String, Map<Uri, WebCallback>>? = null, val described: Boolean = true)","org.http4k.contract.RouteMeta"]},{"name":"data class Slash(val parent: PathSegments, child: String) : PathSegments","description":"org.http4k.contract.Slash","location":"http4k-contract/org.http4k.contract/-slash/index.html","searchKeys":["Slash","data class Slash(val parent: PathSegments, child: String) : PathSegments","org.http4k.contract.Slash"]},{"name":"data class SwaggerUiConfig(var pageTitle: String = \"Swagger UI\", var url: String = \"https://petstore.swagger.io/v2/swagger.json\", var domId: String = \"swagger-ui\", var queryConfigEnabled: Boolean? = null, var displayOperationId: Boolean? = null, var displayRequestDuration: Boolean? = null, var requestSnippetsEnabled: Boolean? = null, var tryItOutEnabled: Boolean? = null, var deepLinking: Boolean? = null, var oauth2RedirectUrl: String? = null, var withCredentials: Boolean? = null, var persistAuthorization: Boolean? = null, var layout: String = \"BaseLayout\", var presets: List<String> = listOf(\"SwaggerUIBundle.presets.apis\"))","description":"org.http4k.contract.ui.SwaggerUiConfig","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/index.html","searchKeys":["SwaggerUiConfig","data class SwaggerUiConfig(var pageTitle: String = \"Swagger UI\", var url: String = \"https://petstore.swagger.io/v2/swagger.json\", var domId: String = \"swagger-ui\", var queryConfigEnabled: Boolean? = null, var displayOperationId: Boolean? = null, var displayRequestDuration: Boolean? = null, var requestSnippetsEnabled: Boolean? = null, var tryItOutEnabled: Boolean? = null, var deepLinking: Boolean? = null, var oauth2RedirectUrl: String? = null, var withCredentials: Boolean? = null, var persistAuthorization: Boolean? = null, var layout: String = \"BaseLayout\", var presets: List<String> = listOf(\"SwaggerUIBundle.presets.apis\"))","org.http4k.contract.ui.SwaggerUiConfig"]},{"name":"data class Tag(val name: String, val description: String? = null)","description":"org.http4k.contract.Tag","location":"http4k-contract/org.http4k.contract/-tag/index.html","searchKeys":["Tag","data class Tag(val name: String, val description: String? = null)","org.http4k.contract.Tag"]},{"name":"data class WebCallback(val method: Method, val meta: RouteMeta)","description":"org.http4k.contract.WebCallback","location":"http4k-contract/org.http4k.contract/-web-callback/index.html","searchKeys":["WebCallback","data class WebCallback(val method: Method, val meta: RouteMeta)","org.http4k.contract.WebCallback"]},{"name":"enum OpenApiVersion : Enum<OpenApiVersion> ","description":"org.http4k.contract.openapi.OpenApiVersion","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/index.html","searchKeys":["OpenApiVersion","enum OpenApiVersion : Enum<OpenApiVersion> ","org.http4k.contract.openapi.OpenApiVersion"]},{"name":"fun <API : Any, NODE : Any> ApiRenderer<API, NODE>.cached(): ApiRenderer<API, NODE>","description":"org.http4k.contract.openapi.cached","location":"http4k-contract/org.http4k.contract.openapi/cached.html","searchKeys":["cached","fun <API : Any, NODE : Any> ApiRenderer<API, NODE>.cached(): ApiRenderer<API, NODE>","org.http4k.contract.openapi.cached"]},{"name":"fun <T : Any, NODE : Any> Auto(json: AutoMarshallingJson<NODE>, schema: JsonSchemaCreator<Any, NODE> = AutoJsonToJsonSchema(json)): ApiRenderer<T, NODE>","description":"org.http4k.contract.openapi.ApiRenderer.Companion.Auto","location":"http4k-contract/org.http4k.contract.openapi/-api-renderer/-companion/-auto.html","searchKeys":["Auto","fun <T : Any, NODE : Any> Auto(json: AutoMarshallingJson<NODE>, schema: JsonSchemaCreator<Any, NODE> = AutoJsonToJsonSchema(json)): ApiRenderer<T, NODE>","org.http4k.contract.openapi.ApiRenderer.Companion.Auto"]},{"name":"fun <T : Any> returning(status: Status, negotiated: Pair<AutoContentNegotiator<T>, T>, description: String? = null, definitionId: String? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun <T : Any> returning(status: Status, negotiated: Pair<AutoContentNegotiator<T>, T>, description: String? = null, definitionId: String? = null, schemaPrefix: String? = null)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun <T> receiving(body: Pair<BiDiBodyLens<T>, T>, definitionId: String? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.RouteMetaDsl.receiving","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/receiving.html","searchKeys":["receiving","fun <T> receiving(body: Pair<BiDiBodyLens<T>, T>, definitionId: String? = null, schemaPrefix: String? = null)","org.http4k.contract.RouteMetaDsl.receiving"]},{"name":"fun <T> receiving(bodyLens: BiDiBodyLens<T>)","description":"org.http4k.contract.RouteMetaDsl.receiving","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/receiving.html","searchKeys":["receiving","fun <T> receiving(bodyLens: BiDiBodyLens<T>)","org.http4k.contract.RouteMetaDsl.receiving"]},{"name":"fun <T> receiving(negotiated: Pair<AutoContentNegotiator<T>, T>, definitionId: String? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.RouteMetaDsl.receiving","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/receiving.html","searchKeys":["receiving","fun <T> receiving(negotiated: Pair<AutoContentNegotiator<T>, T>, definitionId: String? = null, schemaPrefix: String? = null)","org.http4k.contract.RouteMetaDsl.receiving"]},{"name":"fun <T> returning(status: Status, body: Pair<BiDiBodyLens<T>, T>, description: String? = null, definitionId: String? = null, schemaPrefix: String? = null)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun <T> returning(status: Status, body: Pair<BiDiBodyLens<T>, T>, description: String? = null, definitionId: String? = null, schemaPrefix: String? = null)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun AutoJsonToJsonSchema(json: ConfigurableJackson, typeToMetadata: Map<KType, FieldMetadata> = emptyMap()): AutoJsonToJsonSchema<JsonNode>","description":"org.http4k.contract.openapi.v3.AutoJsonToJsonSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-auto-json-to-json-schema.html","searchKeys":["AutoJsonToJsonSchema","fun AutoJsonToJsonSchema(json: ConfigurableJackson, typeToMetadata: Map<KType, FieldMetadata> = emptyMap()): AutoJsonToJsonSchema<JsonNode>","org.http4k.contract.openapi.v3.AutoJsonToJsonSchema"]},{"name":"fun ContractBuilder.webhook(name: String, fn: () -> WebCallback)","description":"org.http4k.contract.webhook","location":"http4k-contract/org.http4k.contract/webhook.html","searchKeys":["webhook","fun ContractBuilder.webhook(name: String, fn: () -> WebCallback)","org.http4k.contract.webhook"]},{"name":"fun OAuthSecurity.Companion.googleCloudEndpoints(issuer: String, jwksUri: Uri, audiences: List<String>): ImplicitOAuthSecurity","description":"org.http4k.contract.security.googleCloudEndpoints","location":"http4k-contract/org.http4k.contract.security/google-cloud-endpoints.html","searchKeys":["googleCloudEndpoints","fun OAuthSecurity.Companion.googleCloudEndpoints(issuer: String, jwksUri: Uri, audiences: List<String>): ImplicitOAuthSecurity","org.http4k.contract.security.googleCloudEndpoints"]},{"name":"fun OpenApi2(apiInfo: ApiInfo, baseUri: Uri, json: ConfigurableJackson = OpenAPIJackson, extensions: List<OpenApiExtension> = emptyList()): OpenApi2<JsonNode>","description":"org.http4k.contract.openapi.v2.OpenApi2","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2.html","searchKeys":["OpenApi2","fun OpenApi2(apiInfo: ApiInfo, baseUri: Uri, json: ConfigurableJackson = OpenAPIJackson, extensions: List<OpenApiExtension> = emptyList()): OpenApi2<JsonNode>","org.http4k.contract.openapi.v2.OpenApi2"]},{"name":"fun OpenApi3(apiInfo: ApiInfo, json: ConfigurableJackson = OpenAPIJackson, extensions: List<OpenApiExtension> = emptyList(), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = OpenApiVersion._3_0_0, typeToMetadata: Map<KType, FieldMetadata> = emptyMap()): OpenApi3<JsonNode>","description":"org.http4k.contract.openapi.v3.OpenApi3","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3.html","searchKeys":["OpenApi3","fun OpenApi3(apiInfo: ApiInfo, json: ConfigurableJackson = OpenAPIJackson, extensions: List<OpenApiExtension> = emptyList(), servers: List<ApiServer> = emptyList(), version: OpenApiVersion = OpenApiVersion._3_0_0, typeToMetadata: Map<KType, FieldMetadata> = emptyMap()): OpenApi3<JsonNode>","org.http4k.contract.openapi.v3.OpenApi3"]},{"name":"fun RedocConfig.toFilter(bundleUrl: String): Filter","description":"org.http4k.contract.ui.toFilter","location":"http4k-contract/org.http4k.contract.ui/to-filter.html","searchKeys":["toFilter","fun RedocConfig.toFilter(bundleUrl: String): Filter","org.http4k.contract.ui.toFilter"]},{"name":"fun Security.and(that: Security): Security","description":"org.http4k.contract.security.and","location":"http4k-contract/org.http4k.contract.security/and.html","searchKeys":["and","fun Security.and(that: Security): Security","org.http4k.contract.security.and"]},{"name":"fun Security.or(that: Security): Security","description":"org.http4k.contract.security.or","location":"http4k-contract/org.http4k.contract.security/or.html","searchKeys":["or","fun Security.or(that: Security): Security","org.http4k.contract.security.or"]},{"name":"fun SwaggerUiConfig.toFilter(): Filter","description":"org.http4k.contract.ui.toFilter","location":"http4k-contract/org.http4k.contract.ui/to-filter.html","searchKeys":["toFilter","fun SwaggerUiConfig.toFilter(): Filter","org.http4k.contract.ui.toFilter"]},{"name":"fun callback(name: String, fn: () -> Pair<String, WebCallback>)","description":"org.http4k.contract.RouteMetaDsl.callback","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/callback.html","searchKeys":["callback","fun callback(name: String, fn: () -> Pair<String, WebCallback>)","org.http4k.contract.RouteMetaDsl.callback"]},{"name":"fun contract(fn: ContractBuilder.() -> Unit): ContractRoutingHttpHandler","description":"org.http4k.contract.contract","location":"http4k-contract/org.http4k.contract/contract.html","searchKeys":["contract","fun contract(fn: ContractBuilder.() -> Unit): ContractRoutingHttpHandler","org.http4k.contract.contract"]},{"name":"fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJackson","description":"org.http4k.contract.openapi.OpenAPIJackson.custom","location":"http4k-contract/org.http4k.contract.openapi/-open-a-p-i-jackson/custom.html","searchKeys":["custom","fun custom(configFn: AutoMappingConfiguration<ObjectMapper>.() -> AutoMappingConfiguration<ObjectMapper>): ConfigurableJackson","org.http4k.contract.openapi.OpenAPIJackson.custom"]},{"name":"fun describeFor(contractRoot: PathSegments): String","description":"org.http4k.contract.ContractRoute.describeFor","location":"http4k-contract/org.http4k.contract/-contract-route/describe-for.html","searchKeys":["describeFor","fun describeFor(contractRoot: PathSegments): String","org.http4k.contract.ContractRoute.describeFor"]},{"name":"fun interface ContractRenderer : ErrorResponseRenderer","description":"org.http4k.contract.ContractRenderer","location":"http4k-contract/org.http4k.contract/-contract-renderer/index.html","searchKeys":["ContractRenderer","fun interface ContractRenderer : ErrorResponseRenderer","org.http4k.contract.ContractRenderer"]},{"name":"fun interface HasSchema<NODE>","description":"org.http4k.contract.openapi.v3.HasSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-has-schema/index.html","searchKeys":["HasSchema","fun interface HasSchema<NODE>","org.http4k.contract.openapi.v3.HasSchema"]},{"name":"fun interface PreFlightExtraction : Function1<RouteMeta, List<LensExtractor<Request, *>>> ","description":"org.http4k.contract.PreFlightExtraction","location":"http4k-contract/org.http4k.contract/-pre-flight-extraction/index.html","searchKeys":["PreFlightExtraction","fun interface PreFlightExtraction : Function1<RouteMeta, List<LensExtractor<Request, *>>> ","org.http4k.contract.PreFlightExtraction"]},{"name":"fun markAsDeprecated()","description":"org.http4k.contract.RouteMetaDsl.markAsDeprecated","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/mark-as-deprecated.html","searchKeys":["markAsDeprecated","fun markAsDeprecated()","org.http4k.contract.RouteMetaDsl.markAsDeprecated"]},{"name":"fun newRequest(baseUri: Uri = Uri.of(\"\")): Request","description":"org.http4k.contract.ContractRouteSpec.ContractRequestBuilder.newRequest","location":"http4k-contract/org.http4k.contract/-contract-route-spec/-contract-request-builder/new-request.html","searchKeys":["newRequest","fun newRequest(baseUri: Uri = Uri.of(\"\")): Request","org.http4k.contract.ContractRouteSpec.ContractRequestBuilder.newRequest"]},{"name":"fun newRequest(baseUri: Uri): Request","description":"org.http4k.contract.ContractRoute.newRequest","location":"http4k-contract/org.http4k.contract/-contract-route/new-request.html","searchKeys":["newRequest","fun newRequest(baseUri: Uri): Request","org.http4k.contract.ContractRoute.newRequest"]},{"name":"fun operationId(routeMeta: RouteMeta, method: Method, description: String): String","description":"org.http4k.contract.openapi.operationId","location":"http4k-contract/org.http4k.contract.openapi/operation-id.html","searchKeys":["operationId","fun operationId(routeMeta: RouteMeta, method: Method, description: String): String","org.http4k.contract.openapi.operationId"]},{"name":"fun receiving(requestMeta: HttpMessageMeta<Request>)","description":"org.http4k.contract.RouteMetaDsl.receiving","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/receiving.html","searchKeys":["receiving","fun receiving(requestMeta: HttpMessageMeta<Request>)","org.http4k.contract.RouteMetaDsl.receiving"]},{"name":"fun redocLite(configFn: RedocConfig.() -> Unit = {}): RoutingHttpHandler","description":"org.http4k.contract.ui.redocLite","location":"http4k-contract/org.http4k.contract.ui/redoc-lite.html","searchKeys":["redocLite","fun redocLite(configFn: RedocConfig.() -> Unit = {}): RoutingHttpHandler","org.http4k.contract.ui.redocLite"]},{"name":"fun returning(vararg descriptionToResponse: Pair<String, Response>)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun returning(vararg descriptionToResponse: Pair<String, Response>)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun returning(vararg responseMetas: HttpMessageMeta<Response>)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun returning(vararg responseMetas: HttpMessageMeta<Response>)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun returning(vararg statuses: Status)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun returning(vararg statuses: Status)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun returning(vararg statusesToDescriptions: Pair<Status, String>)","description":"org.http4k.contract.RouteMetaDsl.returning","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/returning.html","searchKeys":["returning","fun returning(vararg statusesToDescriptions: Pair<Status, String>)","org.http4k.contract.RouteMetaDsl.returning"]},{"name":"fun routeMetaDsl(fn: RouteMetaDsl.() -> Unit = {}): RouteMeta","description":"org.http4k.contract.routeMetaDsl","location":"http4k-contract/org.http4k.contract/route-meta-dsl.html","searchKeys":["routeMetaDsl","fun routeMetaDsl(fn: RouteMetaDsl.() -> Unit = {}): RouteMeta","org.http4k.contract.routeMetaDsl"]},{"name":"fun swaggerUiLite(configFn: SwaggerUiConfig.() -> Unit = {}): RoutingHttpHandler","description":"org.http4k.contract.ui.swaggerUiLite","location":"http4k-contract/org.http4k.contract.ui/swagger-ui-lite.html","searchKeys":["swaggerUiLite","fun swaggerUiLite(configFn: SwaggerUiConfig.() -> Unit = {}): RoutingHttpHandler","org.http4k.contract.ui.swaggerUiLite"]},{"name":"fun toRouter(contractRoot: PathSegments): Router","description":"org.http4k.contract.ContractRoute.toRouter","location":"http4k-contract/org.http4k.contract/-contract-route/to-router.html","searchKeys":["toRouter","fun toRouter(contractRoot: PathSegments): Router","org.http4k.contract.ContractRoute.toRouter"]},{"name":"fun valueOf(value: String): OpenApiVersion","description":"org.http4k.contract.openapi.OpenApiVersion.valueOf","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): OpenApiVersion","org.http4k.contract.openapi.OpenApiVersion.valueOf"]},{"name":"fun values(): Array<OpenApiVersion>","description":"org.http4k.contract.openapi.OpenApiVersion.values","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/values.html","searchKeys":["values","fun values(): Array<OpenApiVersion>","org.http4k.contract.openapi.OpenApiVersion.values"]},{"name":"fun withPostSecurityFilter(new: Filter): ContractRoutingHttpHandler","description":"org.http4k.contract.ContractRoutingHttpHandler.withPostSecurityFilter","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/with-post-security-filter.html","searchKeys":["withPostSecurityFilter","fun withPostSecurityFilter(new: Filter): ContractRoutingHttpHandler","org.http4k.contract.ContractRoutingHttpHandler.withPostSecurityFilter"]},{"name":"infix fun <A, B, C, D, E, F, G, H, I, J> ContractRouteSpec10<A, B, C, D, E, F, G, H, I, J>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, J>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E, F, G, H, I, J> ContractRouteSpec10<A, B, C, D, E, F, G, H, I, J>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, J>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D, E, F, G, H, I> ContractRouteSpec9<A, B, C, D, E, F, G, H, I>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec9<A, B, C, D, E, F, G, H, I>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E, F, G, H, I> ContractRouteSpec9<A, B, C, D, E, F, G, H, I>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec9<A, B, C, D, E, F, G, H, I>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D, E, F, G, H> ContractRouteSpec8<A, B, C, D, E, F, G, H>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec8<A, B, C, D, E, F, G, H>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E, F, G, H> ContractRouteSpec8<A, B, C, D, E, F, G, H>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec8<A, B, C, D, E, F, G, H>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D, E, F, G> ContractRouteSpec7<A, B, C, D, E, F, G>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec7<A, B, C, D, E, F, G>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E, F, G> ContractRouteSpec7<A, B, C, D, E, F, G>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec7<A, B, C, D, E, F, G>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D, E, F> ContractRouteSpec6<A, B, C, D, E, F>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec6<A, B, C, D, E, F>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E, F> ContractRouteSpec6<A, B, C, D, E, F>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec6<A, B, C, D, E, F>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D, E> ContractRouteSpec5<A, B, C, D, E>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec5<A, B, C, D, E>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D, E> ContractRouteSpec5<A, B, C, D, E>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec5<A, B, C, D, E>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C, D> ContractRouteSpec4<A, B, C, D>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec4<A, B, C, D>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C, D> ContractRouteSpec4<A, B, C, D>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec4<A, B, C, D>","org.http4k.contract.meta"]},{"name":"infix fun <A, B, C> ContractRouteSpec3<A, B, C>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec3<A, B, C>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B, C> ContractRouteSpec3<A, B, C>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec3<A, B, C>","org.http4k.contract.meta"]},{"name":"infix fun <A, B> ContractRouteSpec2<A, B>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec2<A, B>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A, B> ContractRouteSpec2<A, B>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec2<A, B>","org.http4k.contract.meta"]},{"name":"infix fun <A> ContractRouteSpec1<A>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec1<A>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A> ContractRouteSpec1<A>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec1<A>","org.http4k.contract.meta"]},{"name":"infix fun <A> PathLens<A>.bindContract(method: Method): ContractRouteSpec1.Binder<A>","description":"org.http4k.contract.bindContract","location":"http4k-contract/org.http4k.contract/bind-contract.html","searchKeys":["bindContract","infix fun <A> PathLens<A>.bindContract(method: Method): ContractRouteSpec1.Binder<A>","org.http4k.contract.bindContract"]},{"name":"infix fun <A> PathLens<A>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec1<A>","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun <A> PathLens<A>.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec1<A>","org.http4k.contract.meta"]},{"name":"infix fun ContractRouteSpec0.bindCallback(method: Method): Pair<String, WebCallback>","description":"org.http4k.contract.bindCallback","location":"http4k-contract/org.http4k.contract/bind-callback.html","searchKeys":["bindCallback","infix fun ContractRouteSpec0.bindCallback(method: Method): Pair<String, WebCallback>","org.http4k.contract.bindCallback"]},{"name":"infix fun ContractRouteSpec0.bindWebhook(method: Method): WebCallback","description":"org.http4k.contract.bindWebhook","location":"http4k-contract/org.http4k.contract/bind-webhook.html","searchKeys":["bindWebhook","infix fun ContractRouteSpec0.bindWebhook(method: Method): WebCallback","org.http4k.contract.bindWebhook"]},{"name":"infix fun ContractRouteSpec0.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec0","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun ContractRouteSpec0.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec0","org.http4k.contract.meta"]},{"name":"infix fun String.bind(router: ContractRoutingHttpHandler): ContractRoutingHttpHandler","description":"org.http4k.contract.bind","location":"http4k-contract/org.http4k.contract/bind.html","searchKeys":["bind","infix fun String.bind(router: ContractRoutingHttpHandler): ContractRoutingHttpHandler","org.http4k.contract.bind"]},{"name":"infix fun String.bindContract(method: Method): ContractRouteSpec0.Binder","description":"org.http4k.contract.bindContract","location":"http4k-contract/org.http4k.contract/bind-contract.html","searchKeys":["bindContract","infix fun String.bindContract(method: Method): ContractRouteSpec0.Binder","org.http4k.contract.bindContract"]},{"name":"infix fun String.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec0","description":"org.http4k.contract.meta","location":"http4k-contract/org.http4k.contract/meta.html","searchKeys":["meta","infix fun String.meta(new: RouteMetaDsl.() -> Unit): ContractRouteSpec0","org.http4k.contract.meta"]},{"name":"infix fun to(fn: () -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec0.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/-binder/to.html","searchKeys":["to","infix fun to(fn: () -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec0.Binder.to"]},{"name":"infix fun to(fn: (A) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec1.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/-binder/to.html","searchKeys":["to","infix fun to(fn: (A) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec1.Binder.to"]},{"name":"infix fun to(fn: (A, B) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec2.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec2.Binder.to"]},{"name":"infix fun to(fn: (A, B, C) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec3.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec3.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec4.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec4.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec5.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec5.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E, F) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec6.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E, F) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec6.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E, F, G) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec7.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E, F, G) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec7.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E, F, G, H) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec8.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E, F, G, H) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec8.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E, F, G, H, I) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec9.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E, F, G, H, I) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec9.Binder.to"]},{"name":"infix fun to(fn: (A, B, C, D, E, F, G, H, I, J) -> HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec10.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/-binder/to.html","searchKeys":["to","infix fun to(fn: (A, B, C, D, E, F, G, H, I, J) -> HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec10.Binder.to"]},{"name":"infix fun to(fn: HttpHandler): ContractRoute","description":"org.http4k.contract.ContractRouteSpec0.Binder.to","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/-binder/to.html","searchKeys":["to","infix fun to(fn: HttpHandler): ContractRoute","org.http4k.contract.ContractRouteSpec0.Binder.to"]},{"name":"inline fun <T : Security> rendererFor(crossinline fn: (T) -> RenderModes): SecurityRenderer","description":"org.http4k.contract.openapi.rendererFor","location":"http4k-contract/org.http4k.contract.openapi/renderer-for.html","searchKeys":["rendererFor","inline fun <T : Security> rendererFor(crossinline fn: (T) -> RenderModes): SecurityRenderer","org.http4k.contract.openapi.rendererFor"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec0.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec0.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec1.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec1.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec10.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec10.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec2.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec2.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec3.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec3.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec4.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec4.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec5.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec5.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec6.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec6.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec7.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec7.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec8.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec8.Binder"]},{"name":"inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","description":"org.http4k.contract.ContractRouteSpec9.Binder","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/-binder/index.html","searchKeys":["Binder","inner class Binder(method: Method) : ContractRouteSpec.ContractRequestBuilder","org.http4k.contract.ContractRouteSpec9.Binder"]},{"name":"interface ApiRenderer<API, NODE> : JsonSchemaCreator<Any, NODE> ","description":"org.http4k.contract.openapi.ApiRenderer","location":"http4k-contract/org.http4k.contract.openapi/-api-renderer/index.html","searchKeys":["ApiRenderer","interface ApiRenderer<API, NODE> : JsonSchemaCreator<Any, NODE> ","org.http4k.contract.openapi.ApiRenderer"]},{"name":"interface ErrorResponseRenderer","description":"org.http4k.contract.ErrorResponseRenderer","location":"http4k-contract/org.http4k.contract/-error-response-renderer/index.html","searchKeys":["ErrorResponseRenderer","interface ErrorResponseRenderer","org.http4k.contract.ErrorResponseRenderer"]},{"name":"interface OpenApiExtension","description":"org.http4k.contract.openapi.OpenApiExtension","location":"http4k-contract/org.http4k.contract.openapi/-open-api-extension/index.html","searchKeys":["OpenApiExtension","interface OpenApiExtension","org.http4k.contract.openapi.OpenApiExtension"]},{"name":"interface RenderModes","description":"org.http4k.contract.openapi.RenderModes","location":"http4k-contract/org.http4k.contract.openapi/-render-modes/index.html","searchKeys":["RenderModes","interface RenderModes","org.http4k.contract.openapi.RenderModes"]},{"name":"interface Security","description":"org.http4k.contract.security.Security","location":"http4k-contract/org.http4k.contract.security/-security/index.html","searchKeys":["Security","interface Security","org.http4k.contract.security.Security"]},{"name":"interface SecurityRenderer","description":"org.http4k.contract.openapi.SecurityRenderer","location":"http4k-contract/org.http4k.contract.openapi/-security-renderer/index.html","searchKeys":["SecurityRenderer","interface SecurityRenderer","org.http4k.contract.openapi.SecurityRenderer"]},{"name":"object Companion","description":"org.http4k.contract.PathSegments.Companion","location":"http4k-contract/org.http4k.contract/-path-segments/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.PathSegments.Companion"]},{"name":"object Companion","description":"org.http4k.contract.PreFlightExtraction.Companion","location":"http4k-contract/org.http4k.contract/-pre-flight-extraction/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.PreFlightExtraction.Companion"]},{"name":"object Companion","description":"org.http4k.contract.openapi.ApiRenderer.Companion","location":"http4k-contract/org.http4k.contract.openapi/-api-renderer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.openapi.ApiRenderer.Companion"]},{"name":"object Companion","description":"org.http4k.contract.openapi.SecurityRenderer.Companion","location":"http4k-contract/org.http4k.contract.openapi/-security-renderer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.openapi.SecurityRenderer.Companion"]},{"name":"object Companion","description":"org.http4k.contract.openapi.v3.OpenApi3.Companion","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.openapi.v3.OpenApi3.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.ApiKeySecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-api-key-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.ApiKeySecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.AuthCodeOAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.AuthCodeOAuthSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.BasicAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.BasicAuthSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.BearerAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.BearerAuthSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.ImplicitOAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-implicit-o-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.ImplicitOAuthSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.OAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.OAuthSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.OpenIdConnectSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.OpenIdConnectSecurity.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.Security.Companion","location":"http4k-contract/org.http4k.contract.security/-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.Security.Companion"]},{"name":"object Companion","description":"org.http4k.contract.security.UserCredentialsOAuthSecurity.Companion","location":"http4k-contract/org.http4k.contract.security/-user-credentials-o-auth-security/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.contract.security.UserCredentialsOAuthSecurity.Companion"]},{"name":"object NoRenderer : ContractRenderer","description":"org.http4k.contract.NoRenderer","location":"http4k-contract/org.http4k.contract/-no-renderer/index.html","searchKeys":["NoRenderer","object NoRenderer : ContractRenderer","org.http4k.contract.NoRenderer"]},{"name":"object NoSecurity : Security","description":"org.http4k.contract.security.NoSecurity","location":"http4k-contract/org.http4k.contract.security/-no-security/index.html","searchKeys":["NoSecurity","object NoSecurity : Security","org.http4k.contract.security.NoSecurity"]},{"name":"object OpenAPIJackson : ConfigurableJackson","description":"org.http4k.contract.openapi.OpenAPIJackson","location":"http4k-contract/org.http4k.contract.openapi/-open-a-p-i-jackson/index.html","searchKeys":["OpenAPIJackson","object OpenAPIJackson : ConfigurableJackson","org.http4k.contract.openapi.OpenAPIJackson"]},{"name":"object Root : PathSegments","description":"org.http4k.contract.Root","location":"http4k-contract/org.http4k.contract/-root/index.html","searchKeys":["Root","object Root : PathSegments","org.http4k.contract.Root"]},{"name":"open class HttpMessageMeta<out T : HttpMessage>(val message: T, val description: String, val definitionId: String?, val example: Any?, val schemaPrefix: String? = null)","description":"org.http4k.contract.HttpMessageMeta","location":"http4k-contract/org.http4k.contract/-http-message-meta/index.html","searchKeys":["HttpMessageMeta","open class HttpMessageMeta<out T : HttpMessage>(val message: T, val description: String, val definitionId: String?, val example: Any?, val schemaPrefix: String? = null)","org.http4k.contract.HttpMessageMeta"]},{"name":"open class OpenApi2<out NODE>(apiInfo: ApiInfo, json: Json<NODE>, baseUri: Uri? = null, extensions: List<OpenApiExtension> = emptyList(), securityRenderer: SecurityRenderer = OpenApi2SecurityRenderer, schemaGenerator: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json), errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json)) : ContractRenderer, ErrorResponseRenderer","description":"org.http4k.contract.openapi.v2.OpenApi2","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2/index.html","searchKeys":["OpenApi2","open class OpenApi2<out NODE>(apiInfo: ApiInfo, json: Json<NODE>, baseUri: Uri? = null, extensions: List<OpenApiExtension> = emptyList(), securityRenderer: SecurityRenderer = OpenApi2SecurityRenderer, schemaGenerator: JsonSchemaCreator<NODE, NODE> = JsonToJsonSchema(json), errorResponseRenderer: ErrorResponseRenderer = JsonErrorResponseRenderer(json)) : ContractRenderer, ErrorResponseRenderer","org.http4k.contract.openapi.v2.OpenApi2"]},{"name":"open fun badRequest(lensFailure: LensFailure): Response","description":"org.http4k.contract.ErrorResponseRenderer.badRequest","location":"http4k-contract/org.http4k.contract/-error-response-renderer/bad-request.html","searchKeys":["badRequest","open fun badRequest(lensFailure: LensFailure): Response","org.http4k.contract.ErrorResponseRenderer.badRequest"]},{"name":"open fun definitions(): List<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.ApiPath.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/definitions.html","searchKeys":["definitions","open fun definitions(): List<Pair<String, NODE>>","org.http4k.contract.openapi.v3.ApiPath.definitions"]},{"name":"open fun notFound(): Response","description":"org.http4k.contract.ErrorResponseRenderer.notFound","location":"http4k-contract/org.http4k.contract/-error-response-renderer/not-found.html","searchKeys":["notFound","open fun notFound(): Response","org.http4k.contract.ErrorResponseRenderer.notFound"]},{"name":"open infix operator fun div(next: String): ContractRouteSpec","description":"org.http4k.contract.ContractRouteSpec.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec/div.html","searchKeys":["div","open infix operator fun div(next: String): ContractRouteSpec","org.http4k.contract.ContractRouteSpec.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, NEXT>","description":"org.http4k.contract.ContractRouteSpec9.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, NEXT>","org.http4k.contract.ContractRouteSpec9.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec1<NEXT>","description":"org.http4k.contract.ContractRouteSpec0.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec1<NEXT>","org.http4k.contract.ContractRouteSpec0.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec2<A, NEXT>","description":"org.http4k.contract.ContractRouteSpec1.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec2<A, NEXT>","org.http4k.contract.ContractRouteSpec1.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec3<A, B, NEXT>","description":"org.http4k.contract.ContractRouteSpec2.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec3<A, B, NEXT>","org.http4k.contract.ContractRouteSpec2.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec4<A, B, C, NEXT>","description":"org.http4k.contract.ContractRouteSpec3.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec4<A, B, C, NEXT>","org.http4k.contract.ContractRouteSpec3.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec5<A, B, C, D, NEXT>","description":"org.http4k.contract.ContractRouteSpec4.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec5<A, B, C, D, NEXT>","org.http4k.contract.ContractRouteSpec4.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec6<A, B, C, D, E, NEXT>","description":"org.http4k.contract.ContractRouteSpec5.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec6<A, B, C, D, E, NEXT>","org.http4k.contract.ContractRouteSpec5.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec7<A, B, C, D, E, F, NEXT>","description":"org.http4k.contract.ContractRouteSpec6.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec7<A, B, C, D, E, F, NEXT>","org.http4k.contract.ContractRouteSpec6.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec8<A, B, C, D, E, F, G, NEXT>","description":"org.http4k.contract.ContractRouteSpec7.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec8<A, B, C, D, E, F, G, NEXT>","org.http4k.contract.ContractRouteSpec7.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec9<A, B, C, D, E, F, G, H, NEXT>","description":"org.http4k.contract.ContractRouteSpec8.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): ContractRouteSpec9<A, B, C, D, E, F, G, H, NEXT>","org.http4k.contract.ContractRouteSpec8.div"]},{"name":"open infix operator override fun <NEXT> div(next: PathLens<NEXT>): Nothing","description":"org.http4k.contract.ContractRouteSpec10.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/div.html","searchKeys":["div","open infix operator override fun <NEXT> div(next: PathLens<NEXT>): Nothing","org.http4k.contract.ContractRouteSpec10.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec0","description":"org.http4k.contract.ContractRouteSpec0.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec0","org.http4k.contract.ContractRouteSpec0.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, String>","description":"org.http4k.contract.ContractRouteSpec9.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec10<A, B, C, D, E, F, G, H, I, String>","org.http4k.contract.ContractRouteSpec9.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec2<A, String>","description":"org.http4k.contract.ContractRouteSpec1.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec2<A, String>","org.http4k.contract.ContractRouteSpec1.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec3<A, B, String>","description":"org.http4k.contract.ContractRouteSpec2.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec3<A, B, String>","org.http4k.contract.ContractRouteSpec2.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec4<A, B, C, String>","description":"org.http4k.contract.ContractRouteSpec3.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec4<A, B, C, String>","org.http4k.contract.ContractRouteSpec3.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec5<A, B, C, D, String>","description":"org.http4k.contract.ContractRouteSpec4.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec5<A, B, C, D, String>","org.http4k.contract.ContractRouteSpec4.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec6<A, B, C, D, E, String>","description":"org.http4k.contract.ContractRouteSpec5.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec6<A, B, C, D, E, String>","org.http4k.contract.ContractRouteSpec5.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec7<A, B, C, D, E, F, String>","description":"org.http4k.contract.ContractRouteSpec6.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec7<A, B, C, D, E, F, String>","org.http4k.contract.ContractRouteSpec6.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec8<A, B, C, D, E, F, G, String>","description":"org.http4k.contract.ContractRouteSpec7.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec8<A, B, C, D, E, F, G, String>","org.http4k.contract.ContractRouteSpec7.div"]},{"name":"open infix operator override fun div(next: String): ContractRouteSpec9<A, B, C, D, E, F, G, H, String>","description":"org.http4k.contract.ContractRouteSpec8.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/div.html","searchKeys":["div","open infix operator override fun div(next: String): ContractRouteSpec9<A, B, C, D, E, F, G, H, String>","org.http4k.contract.ContractRouteSpec8.div"]},{"name":"open infix operator override fun div(next: String): Nothing","description":"org.http4k.contract.ContractRouteSpec10.div","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/div.html","searchKeys":["div","open infix operator override fun div(next: String): Nothing","org.http4k.contract.ContractRouteSpec10.div"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec0.Binder","description":"org.http4k.contract.ContractRouteSpec0.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec0/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec0.Binder","org.http4k.contract.ContractRouteSpec0.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec1.Binder<A>","description":"org.http4k.contract.ContractRouteSpec1.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec1.Binder<A>","org.http4k.contract.ContractRouteSpec1.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec10.Binder<A, B, C, D, E, F, G, H, I, J>","description":"org.http4k.contract.ContractRouteSpec10.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec10.Binder<A, B, C, D, E, F, G, H, I, J>","org.http4k.contract.ContractRouteSpec10.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec2.Binder<A, B>","description":"org.http4k.contract.ContractRouteSpec2.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec2.Binder<A, B>","org.http4k.contract.ContractRouteSpec2.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec3.Binder<A, B, C>","description":"org.http4k.contract.ContractRouteSpec3.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec3.Binder<A, B, C>","org.http4k.contract.ContractRouteSpec3.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec4.Binder<A, B, C, D>","description":"org.http4k.contract.ContractRouteSpec4.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec4.Binder<A, B, C, D>","org.http4k.contract.ContractRouteSpec4.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec5.Binder<A, B, C, D, E>","description":"org.http4k.contract.ContractRouteSpec5.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec5.Binder<A, B, C, D, E>","org.http4k.contract.ContractRouteSpec5.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec6.Binder<A, B, C, D, E, F>","description":"org.http4k.contract.ContractRouteSpec6.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec6.Binder<A, B, C, D, E, F>","org.http4k.contract.ContractRouteSpec6.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec7.Binder<A, B, C, D, E, F, G>","description":"org.http4k.contract.ContractRouteSpec7.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec7.Binder<A, B, C, D, E, F, G>","org.http4k.contract.ContractRouteSpec7.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec8.Binder<A, B, C, D, E, F, G, H>","description":"org.http4k.contract.ContractRouteSpec8.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec8.Binder<A, B, C, D, E, F, G, H>","org.http4k.contract.ContractRouteSpec8.bindContract"]},{"name":"open infix override fun bindContract(method: Method): ContractRouteSpec9.Binder<A, B, C, D, E, F, G, H, I>","description":"org.http4k.contract.ContractRouteSpec9.bindContract","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/bind-contract.html","searchKeys":["bindContract","open infix override fun bindContract(method: Method): ContractRouteSpec9.Binder<A, B, C, D, E, F, G, H, I>","org.http4k.contract.ContractRouteSpec9.bindContract"]},{"name":"open inner class ContractRequestBuilder(method: Method)","description":"org.http4k.contract.ContractRouteSpec.ContractRequestBuilder","location":"http4k-contract/org.http4k.contract/-contract-route-spec/-contract-request-builder/index.html","searchKeys":["ContractRequestBuilder","open inner class ContractRequestBuilder(method: Method)","org.http4k.contract.ContractRouteSpec.ContractRequestBuilder"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.contract.ContractRoute.invoke","location":"http4k-contract/org.http4k.contract/-contract-route/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.contract.ContractRoute.invoke"]},{"name":"open operator override fun invoke(request: Request): Response","description":"org.http4k.contract.ContractRoutingHttpHandler.invoke","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/invoke.html","searchKeys":["invoke","open operator override fun invoke(request: Request): Response","org.http4k.contract.ContractRoutingHttpHandler.invoke"]},{"name":"open override fun api(api: Api<NODE>): NODE","description":"org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.api","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3-api-renderer/api.html","searchKeys":["api","open override fun api(api: Api<NODE>): NODE","org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.api"]},{"name":"open override fun badRequest(lensFailure: LensFailure): Response","description":"org.http4k.contract.JsonErrorResponseRenderer.badRequest","location":"http4k-contract/org.http4k.contract/-json-error-response-renderer/bad-request.html","searchKeys":["badRequest","open override fun badRequest(lensFailure: LensFailure): Response","org.http4k.contract.JsonErrorResponseRenderer.badRequest"]},{"name":"open override fun badRequest(lensFailure: LensFailure): Response","description":"org.http4k.contract.openapi.v2.OpenApi2.badRequest","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2/bad-request.html","searchKeys":["badRequest","open override fun badRequest(lensFailure: LensFailure): Response","org.http4k.contract.openapi.v2.OpenApi2.badRequest"]},{"name":"open override fun definitions(): List<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.ApiPath.WithBody.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-with-body/definitions.html","searchKeys":["definitions","open override fun definitions(): List<Pair<String, NODE>>","org.http4k.contract.openapi.v3.ApiPath.WithBody.definitions"]},{"name":"open override fun definitions(): List<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/definitions.html","searchKeys":["definitions","open override fun definitions(): List<Pair<String, NODE>>","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.definitions"]},{"name":"open override fun definitions(): List<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.RequestContents.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-contents/definitions.html","searchKeys":["definitions","open override fun definitions(): List<Pair<String, NODE>>","org.http4k.contract.openapi.v3.RequestContents.definitions"]},{"name":"open override fun definitions(): Set<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.BodyContent.SchemaContent.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-schema-content/definitions.html","searchKeys":["definitions","open override fun definitions(): Set<Pair<String, NODE>>","org.http4k.contract.openapi.v3.BodyContent.SchemaContent.definitions"]},{"name":"open override fun definitions(): Set<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-schema-parameter/definitions.html","searchKeys":["definitions","open override fun definitions(): Set<Pair<String, NODE>>","org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.definitions"]},{"name":"open override fun definitions(): Set<Pair<String, NODE>>","description":"org.http4k.contract.openapi.v3.ResponseContents.definitions","location":"http4k-contract/org.http4k.contract.openapi.v3/-response-contents/definitions.html","searchKeys":["definitions","open override fun definitions(): Set<Pair<String, NODE>>","org.http4k.contract.openapi.v3.ResponseContents.definitions"]},{"name":"open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","description":"org.http4k.contract.NoRenderer.description","location":"http4k-contract/org.http4k.contract/-no-renderer/description.html","searchKeys":["description","open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","org.http4k.contract.NoRenderer.description"]},{"name":"open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","description":"org.http4k.contract.openapi.v2.OpenApi2.description","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2/description.html","searchKeys":["description","open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","org.http4k.contract.openapi.v2.OpenApi2.description"]},{"name":"open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","description":"org.http4k.contract.openapi.v3.OpenApi3.description","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3/description.html","searchKeys":["description","open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","org.http4k.contract.openapi.v3.OpenApi3.description"]},{"name":"open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","description":"org.http4k.contract.simple.SimpleJson.description","location":"http4k-contract/org.http4k.contract.simple/-simple-json/description.html","searchKeys":["description","open override fun description(contractRoot: PathSegments, security: Security?, routes: List<ContractRoute>, tags: Set<Tag>, webhooks: Map<String, List<WebCallback>>): Response","org.http4k.contract.simple.SimpleJson.description"]},{"name":"open override fun match(request: Request): RouterMatch","description":"org.http4k.contract.ContractRoutingHttpHandler.match","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/match.html","searchKeys":["match","open override fun match(request: Request): RouterMatch","org.http4k.contract.ContractRoutingHttpHandler.match"]},{"name":"open override fun notFound(): Response","description":"org.http4k.contract.JsonErrorResponseRenderer.notFound","location":"http4k-contract/org.http4k.contract/-json-error-response-renderer/not-found.html","searchKeys":["notFound","open override fun notFound(): Response","org.http4k.contract.JsonErrorResponseRenderer.notFound"]},{"name":"open override fun notFound(): Response","description":"org.http4k.contract.openapi.v2.OpenApi2.notFound","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2/not-found.html","searchKeys":["notFound","open override fun notFound(): Response","org.http4k.contract.openapi.v2.OpenApi2.notFound"]},{"name":"open override fun startsWith(other: PathSegments): Boolean","description":"org.http4k.contract.Root.startsWith","location":"http4k-contract/org.http4k.contract/-root/starts-with.html","searchKeys":["startsWith","open override fun startsWith(other: PathSegments): Boolean","org.http4k.contract.Root.startsWith"]},{"name":"open override fun startsWith(other: PathSegments): Boolean","description":"org.http4k.contract.Slash.startsWith","location":"http4k-contract/org.http4k.contract/-slash/starts-with.html","searchKeys":["startsWith","open override fun startsWith(other: PathSegments): Boolean","org.http4k.contract.Slash.startsWith"]},{"name":"open override fun toList(): List<String>","description":"org.http4k.contract.Root.toList","location":"http4k-contract/org.http4k.contract/-root/to-list.html","searchKeys":["toList","open override fun toList(): List<String>","org.http4k.contract.Root.toList"]},{"name":"open override fun toList(): List<String>","description":"org.http4k.contract.Slash.toList","location":"http4k-contract/org.http4k.contract/-slash/to-list.html","searchKeys":["toList","open override fun toList(): List<String>","org.http4k.contract.Slash.toList"]},{"name":"open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","description":"org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.toSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3-api-renderer/to-schema.html","searchKeys":["toSchema","open override fun toSchema(obj: Any, overrideDefinitionId: String?, refModelNamePrefix: String?): JsonSchema<NODE>","org.http4k.contract.openapi.v3.OpenApi3ApiRenderer.toSchema"]},{"name":"open override fun toString(): String","description":"org.http4k.contract.ContractRoute.toString","location":"http4k-contract/org.http4k.contract/-contract-route/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.contract.ContractRoute.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.contract.ContractRoutingHttpHandler.toString","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.contract.ContractRoutingHttpHandler.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.contract.Root.toString","location":"http4k-contract/org.http4k.contract/-root/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.contract.Root.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.contract.Slash.toString","location":"http4k-contract/org.http4k.contract/-slash/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.contract.Slash.toString"]},{"name":"open override fun toString(): String","description":"org.http4k.contract.openapi.OpenApiVersion.toString","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/to-string.html","searchKeys":["toString","open override fun toString(): String","org.http4k.contract.openapi.OpenApiVersion.toString"]},{"name":"open override fun withBasePath(new: String): ContractRoutingHttpHandler","description":"org.http4k.contract.ContractRoutingHttpHandler.withBasePath","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/with-base-path.html","searchKeys":["withBasePath","open override fun withBasePath(new: String): ContractRoutingHttpHandler","org.http4k.contract.ContractRoutingHttpHandler.withBasePath"]},{"name":"open override fun withFilter(new: Filter): ContractRoutingHttpHandler","description":"org.http4k.contract.ContractRoutingHttpHandler.withFilter","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/with-filter.html","searchKeys":["withFilter","open override fun withFilter(new: Filter): ContractRoutingHttpHandler","org.http4k.contract.ContractRoutingHttpHandler.withFilter"]},{"name":"open override val description: RouterDescription","description":"org.http4k.contract.ContractRoutingHttpHandler.description","location":"http4k-contract/org.http4k.contract/-contract-routing-http-handler/description.html","searchKeys":["description","open override val description: RouterDescription","org.http4k.contract.ContractRoutingHttpHandler.description"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.ApiKeySecurity.filter","location":"http4k-contract/org.http4k.contract.security/-api-key-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.ApiKeySecurity.filter"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.BasicAuthSecurity.filter","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.BasicAuthSecurity.filter"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.BearerAuthSecurity.filter","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.BearerAuthSecurity.filter"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.NoSecurity.filter","location":"http4k-contract/org.http4k.contract.security/-no-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.NoSecurity.filter"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.OAuthSecurity.filter","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.OAuthSecurity.filter"]},{"name":"open override val filter: Filter","description":"org.http4k.contract.security.OpenIdConnectSecurity.filter","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/filter.html","searchKeys":["filter","open override val filter: Filter","org.http4k.contract.security.OpenIdConnectSecurity.filter"]},{"name":"open override val parent: PathSegments","description":"org.http4k.contract.Root.parent","location":"http4k-contract/org.http4k.contract/-root/parent.html","searchKeys":["parent","open override val parent: PathSegments","org.http4k.contract.Root.parent"]},{"name":"open override val parent: PathSegments","description":"org.http4k.contract.Slash.parent","location":"http4k-contract/org.http4k.contract/-slash/parent.html","searchKeys":["parent","open override val parent: PathSegments","org.http4k.contract.Slash.parent"]},{"name":"operator fun <A, B> PathLens<A>.div(next: PathLens<B>): ContractRouteSpec2<A, B>","description":"org.http4k.contract.div","location":"http4k-contract/org.http4k.contract/div.html","searchKeys":["div","operator fun <A, B> PathLens<A>.div(next: PathLens<B>): ContractRouteSpec2<A, B>","org.http4k.contract.div"]},{"name":"operator fun <A> PathLens<A>.div(next: String): ContractRouteSpec2<A, String>","description":"org.http4k.contract.div","location":"http4k-contract/org.http4k.contract/div.html","searchKeys":["div","operator fun <A> PathLens<A>.div(next: String): ContractRouteSpec2<A, String>","org.http4k.contract.div"]},{"name":"operator fun <A> String.div(next: PathLens<A>): ContractRouteSpec1<A>","description":"org.http4k.contract.div","location":"http4k-contract/org.http4k.contract/div.html","searchKeys":["div","operator fun <A> String.div(next: PathLens<A>): ContractRouteSpec1<A>","org.http4k.contract.div"]},{"name":"operator fun <T, C> invoke(param: Lens<Request, T>, consumer: LensInjector<C, Request>, consumerForKey: (T) -> C?, authorizeOptionsRequests: Boolean = true, name: String = \"api_key\"): ApiKeySecurity<T>","description":"org.http4k.contract.security.ApiKeySecurity.Companion.invoke","location":"http4k-contract/org.http4k.contract.security/-api-key-security/-companion/invoke.html","searchKeys":["invoke","operator fun <T, C> invoke(param: Lens<Request, T>, consumer: LensInjector<C, Request>, consumerForKey: (T) -> C?, authorizeOptionsRequests: Boolean = true, name: String = \"api_key\"): ApiKeySecurity<T>","org.http4k.contract.security.ApiKeySecurity.Companion.invoke"]},{"name":"operator fun <T> invoke(key: RequestContextLens<T>, lookup: (String) -> T?, name: String = \"bearerAuth\"): BearerAuthSecurity","description":"org.http4k.contract.security.BearerAuthSecurity.Companion.invoke","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/-companion/invoke.html","searchKeys":["invoke","operator fun <T> invoke(key: RequestContextLens<T>, lookup: (String) -> T?, name: String = \"bearerAuth\"): BearerAuthSecurity","org.http4k.contract.security.BearerAuthSecurity.Companion.invoke"]},{"name":"operator fun <T> invoke(realm: String, key: RequestContextLens<T>, lookup: (Credentials) -> T?, name: String = \"basicAuth\"): BasicAuthSecurity","description":"org.http4k.contract.security.BasicAuthSecurity.Companion.invoke","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/-companion/invoke.html","searchKeys":["invoke","operator fun <T> invoke(realm: String, key: RequestContextLens<T>, lookup: (Credentials) -> T?, name: String = \"basicAuth\"): BasicAuthSecurity","org.http4k.contract.security.BasicAuthSecurity.Companion.invoke"]},{"name":"operator fun <T> invoke(tokenUrl: Uri, key: RequestContextLens<T>, lookup: (String) -> T?, refreshUrl: Uri? = null, scopes: List<OAuthScope> = emptyList()): UserCredentialsOAuthSecurity","description":"org.http4k.contract.security.UserCredentialsOAuthSecurity.Companion.invoke","location":"http4k-contract/org.http4k.contract.security/-user-credentials-o-auth-security/-companion/invoke.html","searchKeys":["invoke","operator fun <T> invoke(tokenUrl: Uri, key: RequestContextLens<T>, lookup: (String) -> T?, refreshUrl: Uri? = null, scopes: List<OAuthScope> = emptyList()): UserCredentialsOAuthSecurity","org.http4k.contract.security.UserCredentialsOAuthSecurity.Companion.invoke"]},{"name":"operator fun String.div(next: String): String","description":"org.http4k.contract.div","location":"http4k-contract/org.http4k.contract/div.html","searchKeys":["div","operator fun String.div(next: String): String","org.http4k.contract.div"]},{"name":"operator fun div(child: PathSegments): PathSegments","description":"org.http4k.contract.PathSegments.div","location":"http4k-contract/org.http4k.contract/-path-segments/div.html","searchKeys":["div","operator fun div(child: PathSegments): PathSegments","org.http4k.contract.PathSegments.div"]},{"name":"operator fun div(child: String): PathSegments","description":"org.http4k.contract.PathSegments.div","location":"http4k-contract/org.http4k.contract/-path-segments/div.html","searchKeys":["div","operator fun div(child: String): PathSegments","org.http4k.contract.PathSegments.div"]},{"name":"operator fun invoke(oAuthProvider: OAuthProvider, customScopes: List<OAuthScope>? = null): AuthCodeOAuthSecurity","description":"org.http4k.contract.security.AuthCodeOAuthSecurity.Companion.invoke","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(oAuthProvider: OAuthProvider, customScopes: List<OAuthScope>? = null): AuthCodeOAuthSecurity","org.http4k.contract.security.AuthCodeOAuthSecurity.Companion.invoke"]},{"name":"operator fun invoke(str: String): PathSegments","description":"org.http4k.contract.PathSegments.Companion.invoke","location":"http4k-contract/org.http4k.contract/-path-segments/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(str: String): PathSegments","org.http4k.contract.PathSegments.Companion.invoke"]},{"name":"operator fun invoke(vararg renderers: SecurityRenderer): SecurityRenderer","description":"org.http4k.contract.openapi.SecurityRenderer.Companion.invoke","location":"http4k-contract/org.http4k.contract.openapi/-security-renderer/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(vararg renderers: SecurityRenderer): SecurityRenderer","org.http4k.contract.openapi.SecurityRenderer.Companion.invoke"]},{"name":"operator fun plusAssign(t: Collection<T>)","description":"org.http4k.util.Appendable.plusAssign","location":"http4k-contract/org.http4k.util/-appendable/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(t: Collection<T>)","org.http4k.util.Appendable.plusAssign"]},{"name":"operator fun plusAssign(t: T)","description":"org.http4k.util.Appendable.plusAssign","location":"http4k-contract/org.http4k.util/-appendable/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(t: T)","org.http4k.util.Appendable.plusAssign"]},{"name":"sealed class ApiPath<NODE>","description":"org.http4k.contract.openapi.v3.ApiPath","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/index.html","searchKeys":["ApiPath","sealed class ApiPath<NODE>","org.http4k.contract.openapi.v3.ApiPath"]},{"name":"sealed class BodyContent","description":"org.http4k.contract.openapi.v3.BodyContent","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/index.html","searchKeys":["BodyContent","sealed class BodyContent","org.http4k.contract.openapi.v3.BodyContent"]},{"name":"sealed class OAuthSecurity : Security","description":"org.http4k.contract.security.OAuthSecurity","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/index.html","searchKeys":["OAuthSecurity","sealed class OAuthSecurity : Security","org.http4k.contract.security.OAuthSecurity"]},{"name":"sealed class PathSegments","description":"org.http4k.contract.PathSegments","location":"http4k-contract/org.http4k.contract/-path-segments/index.html","searchKeys":["PathSegments","sealed class PathSegments","org.http4k.contract.PathSegments"]},{"name":"sealed class RequestParameter<NODE>","description":"org.http4k.contract.openapi.v3.RequestParameter","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/index.html","searchKeys":["RequestParameter","sealed class RequestParameter<NODE>","org.http4k.contract.openapi.v3.RequestParameter"]},{"name":"typealias AutoJsonToJsonSchema<T> = org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema<T>","description":"org.http4k.contract.openapi.v3.AutoJsonToJsonSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-auto-json-to-json-schema/index.html","searchKeys":["AutoJsonToJsonSchema","typealias AutoJsonToJsonSchema<T> = org.http4k.contract.jsonschema.v3.AutoJsonToJsonSchema<T>","org.http4k.contract.openapi.v3.AutoJsonToJsonSchema"]},{"name":"typealias Field = org.http4k.contract.jsonschema.v3.Field","description":"org.http4k.contract.openapi.v3.Field","location":"http4k-contract/org.http4k.contract.openapi.v3/-field/index.html","searchKeys":["Field","typealias Field = org.http4k.contract.jsonschema.v3.Field","org.http4k.contract.openapi.v3.Field"]},{"name":"typealias FieldMetadata = org.http4k.contract.jsonschema.v3.FieldMetadata","description":"org.http4k.contract.openapi.v3.FieldMetadata","location":"http4k-contract/org.http4k.contract.openapi.v3/-field-metadata/index.html","searchKeys":["FieldMetadata","typealias FieldMetadata = org.http4k.contract.jsonschema.v3.FieldMetadata","org.http4k.contract.openapi.v3.FieldMetadata"]},{"name":"typealias FieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.FieldMetadataRetrievalStrategy","description":"org.http4k.contract.openapi.v3.FieldMetadataRetrievalStrategy","location":"http4k-contract/org.http4k.contract.openapi.v3/-field-metadata-retrieval-strategy/index.html","searchKeys":["FieldMetadataRetrievalStrategy","typealias FieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.FieldMetadataRetrievalStrategy","org.http4k.contract.openapi.v3.FieldMetadataRetrievalStrategy"]},{"name":"typealias FieldRetrieval = org.http4k.contract.jsonschema.v3.FieldRetrieval","description":"org.http4k.contract.openapi.v3.FieldRetrieval","location":"http4k-contract/org.http4k.contract.openapi.v3/-field-retrieval/index.html","searchKeys":["FieldRetrieval","typealias FieldRetrieval = org.http4k.contract.jsonschema.v3.FieldRetrieval","org.http4k.contract.openapi.v3.FieldRetrieval"]},{"name":"typealias JacksonFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy","description":"org.http4k.contract.openapi.v3.JacksonFieldMetadataRetrievalStrategy","location":"http4k-contract/org.http4k.contract.openapi.v3/-jackson-field-metadata-retrieval-strategy/index.html","searchKeys":["JacksonFieldMetadataRetrievalStrategy","typealias JacksonFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.JacksonFieldMetadataRetrievalStrategy","org.http4k.contract.openapi.v3.JacksonFieldMetadataRetrievalStrategy"]},{"name":"typealias JacksonJsonNamingAnnotated = org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated","description":"org.http4k.contract.openapi.v3.JacksonJsonNamingAnnotated","location":"http4k-contract/org.http4k.contract.openapi.v3/-jackson-json-naming-annotated/index.html","searchKeys":["JacksonJsonNamingAnnotated","typealias JacksonJsonNamingAnnotated = org.http4k.contract.jsonschema.v3.JacksonJsonNamingAnnotated","org.http4k.contract.openapi.v3.JacksonJsonNamingAnnotated"]},{"name":"typealias JacksonJsonPropertyAnnotated = org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated","description":"org.http4k.contract.openapi.v3.JacksonJsonPropertyAnnotated","location":"http4k-contract/org.http4k.contract.openapi.v3/-jackson-json-property-annotated/index.html","searchKeys":["JacksonJsonPropertyAnnotated","typealias JacksonJsonPropertyAnnotated = org.http4k.contract.jsonschema.v3.JacksonJsonPropertyAnnotated","org.http4k.contract.openapi.v3.JacksonJsonPropertyAnnotated"]},{"name":"typealias JsonSchema<T> = org.http4k.contract.jsonschema.JsonSchema<T>","description":"org.http4k.util.JsonSchema","location":"http4k-contract/org.http4k.util/-json-schema/index.html","searchKeys":["JsonSchema","typealias JsonSchema<T> = org.http4k.contract.jsonschema.JsonSchema<T>","org.http4k.util.JsonSchema"]},{"name":"typealias JsonSchemaCreator<IN, OUT> = org.http4k.contract.jsonschema.JsonSchemaCreator<IN, OUT>","description":"org.http4k.util.JsonSchemaCreator","location":"http4k-contract/org.http4k.util/-json-schema-creator/index.html","searchKeys":["JsonSchemaCreator","typealias JsonSchemaCreator<IN, OUT> = org.http4k.contract.jsonschema.JsonSchemaCreator<IN, OUT>","org.http4k.util.JsonSchemaCreator"]},{"name":"typealias JsonToJsonSchema<T> = org.http4k.contract.jsonschema.v2.JsonToJsonSchema<T>","description":"org.http4k.contract.openapi.v2.JsonToJsonSchema","location":"http4k-contract/org.http4k.contract.openapi.v2/-json-to-json-schema/index.html","searchKeys":["JsonToJsonSchema","typealias JsonToJsonSchema<T> = org.http4k.contract.jsonschema.v2.JsonToJsonSchema<T>","org.http4k.contract.openapi.v2.JsonToJsonSchema"]},{"name":"typealias JsonToJsonSchema<T> = org.http4k.contract.jsonschema.v3.JsonToJsonSchema<T>","description":"org.http4k.contract.openapi.v3.JsonToJsonSchema","location":"http4k-contract/org.http4k.contract.openapi.v3/-json-to-json-schema/index.html","searchKeys":["JsonToJsonSchema","typealias JsonToJsonSchema<T> = org.http4k.contract.jsonschema.v3.JsonToJsonSchema<T>","org.http4k.contract.openapi.v3.JsonToJsonSchema"]},{"name":"typealias NoFieldFound = org.http4k.contract.jsonschema.v3.NoFieldFound","description":"org.http4k.contract.openapi.v3.NoFieldFound","location":"http4k-contract/org.http4k.contract.openapi.v3/-no-field-found/index.html","searchKeys":["NoFieldFound","typealias NoFieldFound = org.http4k.contract.jsonschema.v3.NoFieldFound","org.http4k.contract.openapi.v3.NoFieldFound"]},{"name":"typealias NoOpFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy","description":"org.http4k.contract.openapi.v3.NoOpFieldMetadataRetrievalStrategy","location":"http4k-contract/org.http4k.contract.openapi.v3/-no-op-field-metadata-retrieval-strategy/index.html","searchKeys":["NoOpFieldMetadataRetrievalStrategy","typealias NoOpFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.NoOpFieldMetadataRetrievalStrategy","org.http4k.contract.openapi.v3.NoOpFieldMetadataRetrievalStrategy"]},{"name":"typealias PrimitivesFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy","description":"org.http4k.contract.openapi.v3.PrimitivesFieldMetadataRetrievalStrategy","location":"http4k-contract/org.http4k.contract.openapi.v3/-primitives-field-metadata-retrieval-strategy/index.html","searchKeys":["PrimitivesFieldMetadataRetrievalStrategy","typealias PrimitivesFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.PrimitivesFieldMetadataRetrievalStrategy","org.http4k.contract.openapi.v3.PrimitivesFieldMetadataRetrievalStrategy"]},{"name":"typealias Render<NODE> = Json<NODE>.() -> NODE","description":"org.http4k.contract.openapi.Render","location":"http4k-contract/org.http4k.contract.openapi/-render/index.html","searchKeys":["Render","typealias Render<NODE> = Json<NODE>.() -> NODE","org.http4k.contract.openapi.Render"]},{"name":"typealias SimpleLookup = org.http4k.contract.jsonschema.v3.SimpleLookup","description":"org.http4k.contract.openapi.v3.SimpleLookup","location":"http4k-contract/org.http4k.contract.openapi.v3/-simple-lookup/index.html","searchKeys":["SimpleLookup","typealias SimpleLookup = org.http4k.contract.jsonschema.v3.SimpleLookup","org.http4k.contract.openapi.v3.SimpleLookup"]},{"name":"typealias Values4kFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy","description":"org.http4k.contract.openapi.v3.Values4kFieldMetadataRetrievalStrategy","location":"http4k-contract/org.http4k.contract.openapi.v3/-values4k-field-metadata-retrieval-strategy/index.html","searchKeys":["Values4kFieldMetadataRetrievalStrategy","typealias Values4kFieldMetadataRetrievalStrategy = org.http4k.contract.jsonschema.v3.Values4kFieldMetadataRetrievalStrategy","org.http4k.contract.openapi.v3.Values4kFieldMetadataRetrievalStrategy"]},{"name":"val All: PreFlightExtraction","description":"org.http4k.contract.PreFlightExtraction.Companion.All","location":"http4k-contract/org.http4k.contract/-pre-flight-extraction/-companion/-all.html","searchKeys":["All","val All: PreFlightExtraction","org.http4k.contract.PreFlightExtraction.Companion.All"]},{"name":"val ApiKeySecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v2.renderer","location":"http4k-contract/org.http4k.contract.openapi.v2/renderer.html","searchKeys":["renderer","val ApiKeySecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v2.renderer"]},{"name":"val ApiKeySecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val ApiKeySecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val AuthCodeOAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val AuthCodeOAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val BasicAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v2.renderer","location":"http4k-contract/org.http4k.contract.openapi.v2/renderer.html","searchKeys":["renderer","val BasicAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v2.renderer"]},{"name":"val BasicAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val BasicAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val BearerAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val BearerAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val IgnoreBody: PreFlightExtraction","description":"org.http4k.contract.PreFlightExtraction.Companion.IgnoreBody","location":"http4k-contract/org.http4k.contract/-pre-flight-extraction/-companion/-ignore-body.html","searchKeys":["IgnoreBody","val IgnoreBody: PreFlightExtraction","org.http4k.contract.PreFlightExtraction.Companion.IgnoreBody"]},{"name":"val ImplicitOAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v2.renderer","location":"http4k-contract/org.http4k.contract.openapi.v2/renderer.html","searchKeys":["renderer","val ImplicitOAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v2.renderer"]},{"name":"val ImplicitOAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val ImplicitOAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val None: PreFlightExtraction","description":"org.http4k.contract.PreFlightExtraction.Companion.None","location":"http4k-contract/org.http4k.contract/-pre-flight-extraction/-companion/-none.html","searchKeys":["None","val None: PreFlightExtraction","org.http4k.contract.PreFlightExtraction.Companion.None"]},{"name":"val None: Security? = null","description":"org.http4k.contract.security.Security.Companion.None","location":"http4k-contract/org.http4k.contract.security/-security/-companion/-none.html","searchKeys":["None","val None: Security? = null","org.http4k.contract.security.Security.Companion.None"]},{"name":"val OpenApi2SecurityRenderer: SecurityRenderer","description":"org.http4k.contract.openapi.v2.OpenApi2SecurityRenderer","location":"http4k-contract/org.http4k.contract.openapi.v2/-open-api2-security-renderer.html","searchKeys":["OpenApi2SecurityRenderer","val OpenApi2SecurityRenderer: SecurityRenderer","org.http4k.contract.openapi.v2.OpenApi2SecurityRenderer"]},{"name":"val OpenApi3SecurityRenderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.OpenApi3SecurityRenderer","location":"http4k-contract/org.http4k.contract.openapi.v3/-open-api3-security-renderer.html","searchKeys":["OpenApi3SecurityRenderer","val OpenApi3SecurityRenderer: SecurityRenderer","org.http4k.contract.openapi.v3.OpenApi3SecurityRenderer"]},{"name":"val OpenIdConnectSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val OpenIdConnectSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val UserCredentialsOAuthSecurity.Companion.renderer: SecurityRenderer","description":"org.http4k.contract.openapi.v3.renderer","location":"http4k-contract/org.http4k.contract.openapi.v3/renderer.html","searchKeys":["renderer","val UserCredentialsOAuthSecurity.Companion.renderer: SecurityRenderer","org.http4k.contract.openapi.v3.renderer"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec1.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec1/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec1.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec10.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec10.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec2.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec2.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec3.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec3.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec4.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec4.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec5.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec5.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec6.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec6.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec7.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec7.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec8.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec8.a"]},{"name":"val a: PathLens<A>","description":"org.http4k.contract.ContractRouteSpec9.a","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/a.html","searchKeys":["a","val a: PathLens<A>","org.http4k.contract.ContractRouteSpec9.a"]},{"name":"val all: MutableList<T>","description":"org.http4k.util.Appendable.all","location":"http4k-contract/org.http4k.util/-appendable/all.html","searchKeys":["all","val all: MutableList<T>","org.http4k.util.Appendable.all"]},{"name":"val authorizationUrl: Uri","description":"org.http4k.contract.security.AuthCodeOAuthSecurity.authorizationUrl","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/authorization-url.html","searchKeys":["authorizationUrl","val authorizationUrl: Uri","org.http4k.contract.security.AuthCodeOAuthSecurity.authorizationUrl"]},{"name":"val authorizationUrl: Uri","description":"org.http4k.contract.security.ImplicitOAuthSecurity.authorizationUrl","location":"http4k-contract/org.http4k.contract.security/-implicit-o-auth-security/authorization-url.html","searchKeys":["authorizationUrl","val authorizationUrl: Uri","org.http4k.contract.security.ImplicitOAuthSecurity.authorizationUrl"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec10.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec10.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec2.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec2/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec2.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec3.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec3.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec4.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec4.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec5.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec5.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec6.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec6.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec7.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec7.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec8.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec8.b"]},{"name":"val b: PathLens<B>","description":"org.http4k.contract.ContractRouteSpec9.b","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/b.html","searchKeys":["b","val b: PathLens<B>","org.http4k.contract.ContractRouteSpec9.b"]},{"name":"val body: BodyLens<*>? = null","description":"org.http4k.contract.RouteMeta.body","location":"http4k-contract/org.http4k.contract/-route-meta/body.html","searchKeys":["body","val body: BodyLens<*>? = null","org.http4k.contract.RouteMeta.body"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec10.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec10.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec3.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec3/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec3.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec4.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec4.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec5.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec5.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec6.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec6.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec7.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec7.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec8.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec8.c"]},{"name":"val c: PathLens<C>","description":"org.http4k.contract.ContractRouteSpec9.c","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/c.html","searchKeys":["c","val c: PathLens<C>","org.http4k.contract.ContractRouteSpec9.c"]},{"name":"val callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?","description":"org.http4k.contract.openapi.v3.ApiPath.callbacks","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/callbacks.html","searchKeys":["callbacks","val callbacks: Map<String, Map<Uri, Map<String, ApiPath<NODE>>>>?","org.http4k.contract.openapi.v3.ApiPath.callbacks"]},{"name":"val callbacks: Map<String, Map<Uri, WebCallback>>? = null","description":"org.http4k.contract.RouteMeta.callbacks","location":"http4k-contract/org.http4k.contract/-route-meta/callbacks.html","searchKeys":["callbacks","val callbacks: Map<String, Map<Uri, WebCallback>>? = null","org.http4k.contract.RouteMeta.callbacks"]},{"name":"val components: Components<NODE>","description":"org.http4k.contract.openapi.v3.Api.components","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/components.html","searchKeys":["components","val components: Components<NODE>","org.http4k.contract.openapi.v3.Api.components"]},{"name":"val consumes: Appendable<ContentType>","description":"org.http4k.contract.RouteMetaDsl.consumes","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/consumes.html","searchKeys":["consumes","val consumes: Appendable<ContentType>","org.http4k.contract.RouteMetaDsl.consumes"]},{"name":"val consumes: Set<ContentType>","description":"org.http4k.contract.RouteMeta.consumes","location":"http4k-contract/org.http4k.contract/-route-meta/consumes.html","searchKeys":["consumes","val consumes: Set<ContentType>","org.http4k.contract.RouteMeta.consumes"]},{"name":"val content: Map<String, BodyContent>","description":"org.http4k.contract.openapi.v3.ResponseContents.content","location":"http4k-contract/org.http4k.contract.openapi.v3/-response-contents/content.html","searchKeys":["content","val content: Map<String, BodyContent>","org.http4k.contract.openapi.v3.ResponseContents.content"]},{"name":"val content: Map<String, BodyContent>? = null","description":"org.http4k.contract.openapi.v3.RequestContents.content","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-contents/content.html","searchKeys":["content","val content: Map<String, BodyContent>? = null","org.http4k.contract.openapi.v3.RequestContents.content"]},{"name":"val cookies: Appendable<Lens<Request, *>>","description":"org.http4k.contract.RouteMetaDsl.cookies","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/cookies.html","searchKeys":["cookies","val cookies: Appendable<Lens<Request, *>>","org.http4k.contract.RouteMetaDsl.cookies"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec10.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec10.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec4.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec4/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec4.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec5.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec5.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec6.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec6.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec7.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec7.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec8.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec8.d"]},{"name":"val d: PathLens<D>","description":"org.http4k.contract.ContractRouteSpec9.d","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/d.html","searchKeys":["d","val d: PathLens<D>","org.http4k.contract.ContractRouteSpec9.d"]},{"name":"val definitionId: String?","description":"org.http4k.contract.HttpMessageMeta.definitionId","location":"http4k-contract/org.http4k.contract/-http-message-meta/definition-id.html","searchKeys":["definitionId","val definitionId: String?","org.http4k.contract.HttpMessageMeta.definitionId"]},{"name":"val deprecated: Boolean = false","description":"org.http4k.contract.RouteMeta.deprecated","location":"http4k-contract/org.http4k.contract/-route-meta/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean = false","org.http4k.contract.RouteMeta.deprecated"]},{"name":"val deprecated: Boolean?","description":"org.http4k.contract.openapi.v3.ApiPath.deprecated","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/deprecated.html","searchKeys":["deprecated","val deprecated: Boolean?","org.http4k.contract.openapi.v3.ApiPath.deprecated"]},{"name":"val described: Boolean = true","description":"org.http4k.contract.RouteMeta.described","location":"http4k-contract/org.http4k.contract/-route-meta/described.html","searchKeys":["described","val described: Boolean = true","org.http4k.contract.RouteMeta.described"]},{"name":"val description: String","description":"org.http4k.contract.HttpMessageMeta.description","location":"http4k-contract/org.http4k.contract/-http-message-meta/description.html","searchKeys":["description","val description: String","org.http4k.contract.HttpMessageMeta.description"]},{"name":"val description: String","description":"org.http4k.contract.security.OAuthScope.description","location":"http4k-contract/org.http4k.contract.security/-o-auth-scope/description.html","searchKeys":["description","val description: String","org.http4k.contract.security.OAuthScope.description"]},{"name":"val description: String?","description":"org.http4k.contract.openapi.v3.ApiPath.description","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/description.html","searchKeys":["description","val description: String?","org.http4k.contract.openapi.v3.ApiPath.description"]},{"name":"val description: String?","description":"org.http4k.contract.openapi.v3.RequestParameter.description","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/description.html","searchKeys":["description","val description: String?","org.http4k.contract.openapi.v3.RequestParameter.description"]},{"name":"val description: String?","description":"org.http4k.contract.openapi.v3.ResponseContents.description","location":"http4k-contract/org.http4k.contract.openapi.v3/-response-contents/description.html","searchKeys":["description","val description: String?","org.http4k.contract.openapi.v3.ResponseContents.description"]},{"name":"val description: String? = null","description":"org.http4k.contract.RouteMeta.description","location":"http4k-contract/org.http4k.contract/-route-meta/description.html","searchKeys":["description","val description: String? = null","org.http4k.contract.RouteMeta.description"]},{"name":"val description: String? = null","description":"org.http4k.contract.Tag.description","location":"http4k-contract/org.http4k.contract/-tag/description.html","searchKeys":["description","val description: String? = null","org.http4k.contract.Tag.description"]},{"name":"val description: String? = null","description":"org.http4k.contract.openapi.ApiInfo.description","location":"http4k-contract/org.http4k.contract.openapi/-api-info/description.html","searchKeys":["description","val description: String? = null","org.http4k.contract.openapi.ApiInfo.description"]},{"name":"val description: String? = null","description":"org.http4k.contract.openapi.v3.ApiServer.description","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-server/description.html","searchKeys":["description","val description: String? = null","org.http4k.contract.openapi.v3.ApiServer.description"]},{"name":"val discoveryUrl: Uri","description":"org.http4k.contract.security.OpenIdConnectSecurity.discoveryUrl","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/discovery-url.html","searchKeys":["discoveryUrl","val discoveryUrl: Uri","org.http4k.contract.security.OpenIdConnectSecurity.discoveryUrl"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec10.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec10.e"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec5.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec5/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec5.e"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec6.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec6.e"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec7.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec7.e"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec8.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec8.e"]},{"name":"val e: PathLens<E>","description":"org.http4k.contract.ContractRouteSpec9.e","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/e.html","searchKeys":["e","val e: PathLens<E>","org.http4k.contract.ContractRouteSpec9.e"]},{"name":"val entries: EnumEntries<OpenApiVersion>","description":"org.http4k.contract.openapi.OpenApiVersion.entries","location":"http4k-contract/org.http4k.contract.openapi/-open-api-version/entries.html","searchKeys":["entries","val entries: EnumEntries<OpenApiVersion>","org.http4k.contract.openapi.OpenApiVersion.entries"]},{"name":"val example: Any?","description":"org.http4k.contract.HttpMessageMeta.example","location":"http4k-contract/org.http4k.contract/-http-message-meta/example.html","searchKeys":["example","val example: Any?","org.http4k.contract.HttpMessageMeta.example"]},{"name":"val example: NODE?","description":"org.http4k.contract.openapi.v3.BodyContent.SchemaContent.example","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-schema-content/example.html","searchKeys":["example","val example: NODE?","org.http4k.contract.openapi.v3.BodyContent.SchemaContent.example"]},{"name":"val example: String? = null","description":"org.http4k.contract.openapi.v3.BodyContent.NoSchema.example","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-no-schema/example.html","searchKeys":["example","val example: String? = null","org.http4k.contract.openapi.v3.BodyContent.NoSchema.example"]},{"name":"val extraFields: Map<String, String>","description":"org.http4k.contract.security.OAuthSecurity.extraFields","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/extra-fields.html","searchKeys":["extraFields","val extraFields: Map<String, String>","org.http4k.contract.security.OAuthSecurity.extraFields"]},{"name":"val f: PathLens<F>","description":"org.http4k.contract.ContractRouteSpec10.f","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/f.html","searchKeys":["f","val f: PathLens<F>","org.http4k.contract.ContractRouteSpec10.f"]},{"name":"val f: PathLens<F>","description":"org.http4k.contract.ContractRouteSpec6.f","location":"http4k-contract/org.http4k.contract/-contract-route-spec6/f.html","searchKeys":["f","val f: PathLens<F>","org.http4k.contract.ContractRouteSpec6.f"]},{"name":"val f: PathLens<F>","description":"org.http4k.contract.ContractRouteSpec7.f","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/f.html","searchKeys":["f","val f: PathLens<F>","org.http4k.contract.ContractRouteSpec7.f"]},{"name":"val f: PathLens<F>","description":"org.http4k.contract.ContractRouteSpec8.f","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/f.html","searchKeys":["f","val f: PathLens<F>","org.http4k.contract.ContractRouteSpec8.f"]},{"name":"val f: PathLens<F>","description":"org.http4k.contract.ContractRouteSpec9.f","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/f.html","searchKeys":["f","val f: PathLens<F>","org.http4k.contract.ContractRouteSpec9.f"]},{"name":"val g: PathLens<G>","description":"org.http4k.contract.ContractRouteSpec10.g","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/g.html","searchKeys":["g","val g: PathLens<G>","org.http4k.contract.ContractRouteSpec10.g"]},{"name":"val g: PathLens<G>","description":"org.http4k.contract.ContractRouteSpec7.g","location":"http4k-contract/org.http4k.contract/-contract-route-spec7/g.html","searchKeys":["g","val g: PathLens<G>","org.http4k.contract.ContractRouteSpec7.g"]},{"name":"val g: PathLens<G>","description":"org.http4k.contract.ContractRouteSpec8.g","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/g.html","searchKeys":["g","val g: PathLens<G>","org.http4k.contract.ContractRouteSpec8.g"]},{"name":"val g: PathLens<G>","description":"org.http4k.contract.ContractRouteSpec9.g","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/g.html","searchKeys":["g","val g: PathLens<G>","org.http4k.contract.ContractRouteSpec9.g"]},{"name":"val h: PathLens<H>","description":"org.http4k.contract.ContractRouteSpec10.h","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/h.html","searchKeys":["h","val h: PathLens<H>","org.http4k.contract.ContractRouteSpec10.h"]},{"name":"val h: PathLens<H>","description":"org.http4k.contract.ContractRouteSpec8.h","location":"http4k-contract/org.http4k.contract/-contract-route-spec8/h.html","searchKeys":["h","val h: PathLens<H>","org.http4k.contract.ContractRouteSpec8.h"]},{"name":"val h: PathLens<H>","description":"org.http4k.contract.ContractRouteSpec9.h","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/h.html","searchKeys":["h","val h: PathLens<H>","org.http4k.contract.ContractRouteSpec9.h"]},{"name":"val headers: Appendable<Lens<Request, *>>","description":"org.http4k.contract.RouteMetaDsl.headers","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/headers.html","searchKeys":["headers","val headers: Appendable<Lens<Request, *>>","org.http4k.contract.RouteMetaDsl.headers"]},{"name":"val i: PathLens<I>","description":"org.http4k.contract.ContractRouteSpec10.i","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/i.html","searchKeys":["i","val i: PathLens<I>","org.http4k.contract.ContractRouteSpec10.i"]},{"name":"val i: PathLens<I>","description":"org.http4k.contract.ContractRouteSpec9.i","location":"http4k-contract/org.http4k.contract/-contract-route-spec9/i.html","searchKeys":["i","val i: PathLens<I>","org.http4k.contract.ContractRouteSpec9.i"]},{"name":"val in: String","description":"org.http4k.contract.openapi.v3.RequestParameter.in","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/in.html","searchKeys":["in","val in: String","org.http4k.contract.openapi.v3.RequestParameter.in"]},{"name":"val info: ApiInfo","description":"org.http4k.contract.openapi.v3.Api.info","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/info.html","searchKeys":["info","val info: ApiInfo","org.http4k.contract.openapi.v3.Api.info"]},{"name":"val j: PathLens<J>","description":"org.http4k.contract.ContractRouteSpec10.j","location":"http4k-contract/org.http4k.contract/-contract-route-spec10/j.html","searchKeys":["j","val j: PathLens<J>","org.http4k.contract.ContractRouteSpec10.j"]},{"name":"val message: T","description":"org.http4k.contract.HttpMessageMeta.message","location":"http4k-contract/org.http4k.contract/-http-message-meta/message.html","searchKeys":["message","val message: T","org.http4k.contract.HttpMessageMeta.message"]},{"name":"val meta: RouteMeta","description":"org.http4k.contract.ContractRoute.meta","location":"http4k-contract/org.http4k.contract/-contract-route/meta.html","searchKeys":["meta","val meta: RouteMeta","org.http4k.contract.ContractRoute.meta"]},{"name":"val meta: RouteMeta","description":"org.http4k.contract.WebCallback.meta","location":"http4k-contract/org.http4k.contract/-web-callback/meta.html","searchKeys":["meta","val meta: RouteMeta","org.http4k.contract.WebCallback.meta"]},{"name":"val method: Method","description":"org.http4k.contract.ContractRoute.method","location":"http4k-contract/org.http4k.contract/-contract-route/method.html","searchKeys":["method","val method: Method","org.http4k.contract.ContractRoute.method"]},{"name":"val method: Method","description":"org.http4k.contract.WebCallback.method","location":"http4k-contract/org.http4k.contract/-web-callback/method.html","searchKeys":["method","val method: Method","org.http4k.contract.WebCallback.method"]},{"name":"val name: String","description":"org.http4k.contract.Tag.name","location":"http4k-contract/org.http4k.contract/-tag/name.html","searchKeys":["name","val name: String","org.http4k.contract.Tag.name"]},{"name":"val name: String","description":"org.http4k.contract.openapi.v3.RequestParameter.name","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/name.html","searchKeys":["name","val name: String","org.http4k.contract.openapi.v3.RequestParameter.name"]},{"name":"val name: String","description":"org.http4k.contract.security.ApiKeySecurity.name","location":"http4k-contract/org.http4k.contract.security/-api-key-security/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.ApiKeySecurity.name"]},{"name":"val name: String","description":"org.http4k.contract.security.BasicAuthSecurity.name","location":"http4k-contract/org.http4k.contract.security/-basic-auth-security/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.BasicAuthSecurity.name"]},{"name":"val name: String","description":"org.http4k.contract.security.BearerAuthSecurity.name","location":"http4k-contract/org.http4k.contract.security/-bearer-auth-security/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.BearerAuthSecurity.name"]},{"name":"val name: String","description":"org.http4k.contract.security.OAuthScope.name","location":"http4k-contract/org.http4k.contract.security/-o-auth-scope/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.OAuthScope.name"]},{"name":"val name: String","description":"org.http4k.contract.security.OAuthSecurity.name","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.OAuthSecurity.name"]},{"name":"val name: String","description":"org.http4k.contract.security.OpenIdConnectSecurity.name","location":"http4k-contract/org.http4k.contract.security/-open-id-connect-security/name.html","searchKeys":["name","val name: String","org.http4k.contract.security.OpenIdConnectSecurity.name"]},{"name":"val nonBodyParams: List<Meta>","description":"org.http4k.contract.ContractRoute.nonBodyParams","location":"http4k-contract/org.http4k.contract/-contract-route/non-body-params.html","searchKeys":["nonBodyParams","val nonBodyParams: List<Meta>","org.http4k.contract.ContractRoute.nonBodyParams"]},{"name":"val oneOf: List<NODE>","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf.oneOf","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/-one-of/one-of.html","searchKeys":["oneOf","val oneOf: List<NODE>","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.OneOf.oneOf"]},{"name":"val openapi: String","description":"org.http4k.contract.openapi.v3.Api.openapi","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/openapi.html","searchKeys":["openapi","val openapi: String","org.http4k.contract.openapi.v3.Api.openapi"]},{"name":"val operationId: String?","description":"org.http4k.contract.openapi.v3.ApiPath.operationId","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/operation-id.html","searchKeys":["operationId","val operationId: String?","org.http4k.contract.openapi.v3.ApiPath.operationId"]},{"name":"val operationId: String? = null","description":"org.http4k.contract.RouteMeta.operationId","location":"http4k-contract/org.http4k.contract/-route-meta/operation-id.html","searchKeys":["operationId","val operationId: String? = null","org.http4k.contract.RouteMeta.operationId"]},{"name":"val options: MutableMap<String, String>","description":"org.http4k.contract.ui.RedocConfig.options","location":"http4k-contract/org.http4k.contract.ui/-redoc-config/options.html","searchKeys":["options","val options: MutableMap<String, String>","org.http4k.contract.ui.RedocConfig.options"]},{"name":"val param: Lens<Request, T>","description":"org.http4k.contract.security.ApiKeySecurity.param","location":"http4k-contract/org.http4k.contract.security/-api-key-security/param.html","searchKeys":["param","val param: Lens<Request, T>","org.http4k.contract.security.ApiKeySecurity.param"]},{"name":"val parameters: List<RequestParameter<NODE>>","description":"org.http4k.contract.openapi.v3.ApiPath.parameters","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/parameters.html","searchKeys":["parameters","val parameters: List<RequestParameter<NODE>>","org.http4k.contract.openapi.v3.ApiPath.parameters"]},{"name":"val pathFn: (PathSegments) -> PathSegments","description":"org.http4k.contract.ContractRouteSpec.pathFn","location":"http4k-contract/org.http4k.contract/-contract-route-spec/path-fn.html","searchKeys":["pathFn","val pathFn: (PathSegments) -> PathSegments","org.http4k.contract.ContractRouteSpec.pathFn"]},{"name":"val pathLenses: Array<out PathLens<*>>","description":"org.http4k.contract.ContractRouteSpec.pathLenses","location":"http4k-contract/org.http4k.contract/-contract-route-spec/path-lenses.html","searchKeys":["pathLenses","val pathLenses: Array<out PathLens<*>>","org.http4k.contract.ContractRouteSpec.pathLenses"]},{"name":"val paths: Map<String, Map<String, ApiPath<NODE>>>","description":"org.http4k.contract.openapi.v3.Api.paths","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/paths.html","searchKeys":["paths","val paths: Map<String, Map<String, ApiPath<NODE>>>","org.http4k.contract.openapi.v3.Api.paths"]},{"name":"val preFlightExtraction: PreFlightExtraction? = null","description":"org.http4k.contract.RouteMeta.preFlightExtraction","location":"http4k-contract/org.http4k.contract/-route-meta/pre-flight-extraction.html","searchKeys":["preFlightExtraction","val preFlightExtraction: PreFlightExtraction? = null","org.http4k.contract.RouteMeta.preFlightExtraction"]},{"name":"val produces: Appendable<ContentType>","description":"org.http4k.contract.RouteMetaDsl.produces","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/produces.html","searchKeys":["produces","val produces: Appendable<ContentType>","org.http4k.contract.RouteMetaDsl.produces"]},{"name":"val produces: Set<ContentType>","description":"org.http4k.contract.RouteMeta.produces","location":"http4k-contract/org.http4k.contract/-route-meta/produces.html","searchKeys":["produces","val produces: Set<ContentType>","org.http4k.contract.RouteMeta.produces"]},{"name":"val properties: Map<String, Map<String, Any>>","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.properties","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-schema/properties.html","searchKeys":["properties","val properties: Map<String, Map<String, Any>>","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.properties"]},{"name":"val queries: Appendable<Lens<Request, *>>","description":"org.http4k.contract.RouteMetaDsl.queries","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/queries.html","searchKeys":["queries","val queries: Appendable<Lens<Request, *>>","org.http4k.contract.RouteMetaDsl.queries"]},{"name":"val refreshUrl: Uri?","description":"org.http4k.contract.security.OAuthSecurity.refreshUrl","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/refresh-url.html","searchKeys":["refreshUrl","val refreshUrl: Uri?","org.http4k.contract.security.OAuthSecurity.refreshUrl"]},{"name":"val requestBody: RequestContents<NODE>","description":"org.http4k.contract.openapi.v3.ApiPath.WithBody.requestBody","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/-with-body/request-body.html","searchKeys":["requestBody","val requestBody: RequestContents<NODE>","org.http4k.contract.openapi.v3.ApiPath.WithBody.requestBody"]},{"name":"val requestParams: List<Lens<Request, *>>","description":"org.http4k.contract.RouteMeta.requestParams","location":"http4k-contract/org.http4k.contract/-route-meta/request-params.html","searchKeys":["requestParams","val requestParams: List<Lens<Request, *>>","org.http4k.contract.RouteMeta.requestParams"]},{"name":"val requests: List<HttpMessageMeta<Request>>","description":"org.http4k.contract.RouteMeta.requests","location":"http4k-contract/org.http4k.contract/-route-meta/requests.html","searchKeys":["requests","val requests: List<HttpMessageMeta<Request>>","org.http4k.contract.RouteMeta.requests"]},{"name":"val required: Boolean","description":"org.http4k.contract.openapi.v3.RequestContents.required","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-contents/required.html","searchKeys":["required","val required: Boolean","org.http4k.contract.openapi.v3.RequestContents.required"]},{"name":"val required: Boolean","description":"org.http4k.contract.openapi.v3.RequestParameter.required","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/required.html","searchKeys":["required","val required: Boolean","org.http4k.contract.openapi.v3.RequestParameter.required"]},{"name":"val required: List<String>","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.required","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-schema/required.html","searchKeys":["required","val required: List<String>","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.required"]},{"name":"val responses: List<HttpMessageMeta<Response>>","description":"org.http4k.contract.RouteMeta.responses","location":"http4k-contract/org.http4k.contract/-route-meta/responses.html","searchKeys":["responses","val responses: List<HttpMessageMeta<Response>>","org.http4k.contract.RouteMeta.responses"]},{"name":"val responses: Map<String, ResponseContents<NODE>>","description":"org.http4k.contract.openapi.v3.ApiPath.responses","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/responses.html","searchKeys":["responses","val responses: Map<String, ResponseContents<NODE>>","org.http4k.contract.openapi.v3.ApiPath.responses"]},{"name":"val routeMeta: RouteMeta","description":"org.http4k.contract.ContractRouteSpec.routeMeta","location":"http4k-contract/org.http4k.contract/-contract-route-spec/route-meta.html","searchKeys":["routeMeta","val routeMeta: RouteMeta","org.http4k.contract.ContractRouteSpec.routeMeta"]},{"name":"val schema: BodyContent.FormContent.FormSchema","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/schema.html","searchKeys":["schema","val schema: BodyContent.FormContent.FormSchema","org.http4k.contract.openapi.v3.BodyContent.FormContent.schema"]},{"name":"val schema: BodyContent.OneOfSchemaContent.OneOf<NODE>","description":"org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-one-of-schema-content/schema.html","searchKeys":["schema","val schema: BodyContent.OneOfSchemaContent.OneOf<NODE>","org.http4k.contract.openapi.v3.BodyContent.OneOfSchemaContent.schema"]},{"name":"val schema: NODE","description":"org.http4k.contract.openapi.v3.BodyContent.NoSchema.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-no-schema/schema.html","searchKeys":["schema","val schema: NODE","org.http4k.contract.openapi.v3.BodyContent.NoSchema.schema"]},{"name":"val schema: NODE","description":"org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-primitive-parameter/schema.html","searchKeys":["schema","val schema: NODE","org.http4k.contract.openapi.v3.RequestParameter.PrimitiveParameter.schema"]},{"name":"val schema: NODE?","description":"org.http4k.contract.openapi.v3.BodyContent.SchemaContent.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-schema-content/schema.html","searchKeys":["schema","val schema: NODE?","org.http4k.contract.openapi.v3.BodyContent.SchemaContent.schema"]},{"name":"val schema: NODE?","description":"org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.schema","location":"http4k-contract/org.http4k.contract.openapi.v3/-request-parameter/-schema-parameter/schema.html","searchKeys":["schema","val schema: NODE?","org.http4k.contract.openapi.v3.RequestParameter.SchemaParameter.schema"]},{"name":"val schemaPrefix: String? = null","description":"org.http4k.contract.HttpMessageMeta.schemaPrefix","location":"http4k-contract/org.http4k.contract/-http-message-meta/schema-prefix.html","searchKeys":["schemaPrefix","val schemaPrefix: String? = null","org.http4k.contract.HttpMessageMeta.schemaPrefix"]},{"name":"val schemas: NODE","description":"org.http4k.contract.openapi.v3.Components.schemas","location":"http4k-contract/org.http4k.contract.openapi.v3/-components/schemas.html","searchKeys":["schemas","val schemas: NODE","org.http4k.contract.openapi.v3.Components.schemas"]},{"name":"val scopes: List<OAuthScope>","description":"org.http4k.contract.security.OAuthSecurity.scopes","location":"http4k-contract/org.http4k.contract.security/-o-auth-security/scopes.html","searchKeys":["scopes","val scopes: List<OAuthScope>","org.http4k.contract.security.OAuthSecurity.scopes"]},{"name":"val security: NODE?","description":"org.http4k.contract.openapi.v3.ApiPath.security","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/security.html","searchKeys":["security","val security: NODE?","org.http4k.contract.openapi.v3.ApiPath.security"]},{"name":"val security: Security? = null","description":"org.http4k.contract.RouteMeta.security","location":"http4k-contract/org.http4k.contract/-route-meta/security.html","searchKeys":["security","val security: Security? = null","org.http4k.contract.RouteMeta.security"]},{"name":"val securitySchemes: NODE","description":"org.http4k.contract.openapi.v3.Components.securitySchemes","location":"http4k-contract/org.http4k.contract.openapi.v3/-components/security-schemes.html","searchKeys":["securitySchemes","val securitySchemes: NODE","org.http4k.contract.openapi.v3.Components.securitySchemes"]},{"name":"val servers: List<ApiServer>","description":"org.http4k.contract.openapi.v3.Api.servers","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/servers.html","searchKeys":["servers","val servers: List<ApiServer>","org.http4k.contract.openapi.v3.Api.servers"]},{"name":"val spec: ContractRouteSpec","description":"org.http4k.contract.ContractRoute.spec","location":"http4k-contract/org.http4k.contract/-contract-route/spec.html","searchKeys":["spec","val spec: ContractRouteSpec","org.http4k.contract.ContractRoute.spec"]},{"name":"val summary: String","description":"org.http4k.contract.RouteMeta.summary","location":"http4k-contract/org.http4k.contract/-route-meta/summary.html","searchKeys":["summary","val summary: String","org.http4k.contract.RouteMeta.summary"]},{"name":"val summary: String","description":"org.http4k.contract.openapi.v3.ApiPath.summary","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/summary.html","searchKeys":["summary","val summary: String","org.http4k.contract.openapi.v3.ApiPath.summary"]},{"name":"val tags: Appendable<Tag>","description":"org.http4k.contract.ContractBuilder.tags","location":"http4k-contract/org.http4k.contract/-contract-builder/tags.html","searchKeys":["tags","val tags: Appendable<Tag>","org.http4k.contract.ContractBuilder.tags"]},{"name":"val tags: Appendable<Tag>","description":"org.http4k.contract.RouteMetaDsl.tags","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/tags.html","searchKeys":["tags","val tags: Appendable<Tag>","org.http4k.contract.RouteMetaDsl.tags"]},{"name":"val tags: List<String>?","description":"org.http4k.contract.openapi.v3.ApiPath.tags","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-path/tags.html","searchKeys":["tags","val tags: List<String>?","org.http4k.contract.openapi.v3.ApiPath.tags"]},{"name":"val tags: List<Tag>","description":"org.http4k.contract.ContractRoute.tags","location":"http4k-contract/org.http4k.contract/-contract-route/tags.html","searchKeys":["tags","val tags: List<Tag>","org.http4k.contract.ContractRoute.tags"]},{"name":"val tags: List<Tag>","description":"org.http4k.contract.openapi.v3.Api.tags","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/tags.html","searchKeys":["tags","val tags: List<Tag>","org.http4k.contract.openapi.v3.Api.tags"]},{"name":"val tags: Set<Tag>","description":"org.http4k.contract.RouteMeta.tags","location":"http4k-contract/org.http4k.contract/-route-meta/tags.html","searchKeys":["tags","val tags: Set<Tag>","org.http4k.contract.RouteMeta.tags"]},{"name":"val title: String","description":"org.http4k.contract.openapi.ApiInfo.title","location":"http4k-contract/org.http4k.contract.openapi/-api-info/title.html","searchKeys":["title","val title: String","org.http4k.contract.openapi.ApiInfo.title"]},{"name":"val tokenUrl: Uri","description":"org.http4k.contract.security.AuthCodeOAuthSecurity.tokenUrl","location":"http4k-contract/org.http4k.contract.security/-auth-code-o-auth-security/token-url.html","searchKeys":["tokenUrl","val tokenUrl: Uri","org.http4k.contract.security.AuthCodeOAuthSecurity.tokenUrl"]},{"name":"val tokenUrl: Uri","description":"org.http4k.contract.security.UserCredentialsOAuthSecurity.tokenUrl","location":"http4k-contract/org.http4k.contract.security/-user-credentials-o-auth-security/token-url.html","searchKeys":["tokenUrl","val tokenUrl: Uri","org.http4k.contract.security.UserCredentialsOAuthSecurity.tokenUrl"]},{"name":"val type: String","description":"org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.type","location":"http4k-contract/org.http4k.contract.openapi.v3/-body-content/-form-content/-form-schema/type.html","searchKeys":["type","val type: String","org.http4k.contract.openapi.v3.BodyContent.FormContent.FormSchema.type"]},{"name":"val url: Uri","description":"org.http4k.contract.openapi.v3.ApiServer.url","location":"http4k-contract/org.http4k.contract.openapi.v3/-api-server/url.html","searchKeys":["url","val url: Uri","org.http4k.contract.openapi.v3.ApiServer.url"]},{"name":"val version: String","description":"org.http4k.contract.openapi.ApiInfo.version","location":"http4k-contract/org.http4k.contract.openapi/-api-info/version.html","searchKeys":["version","val version: String","org.http4k.contract.openapi.ApiInfo.version"]},{"name":"val webhooks: Map<String, Map<String, ApiPath<NODE>>>?","description":"org.http4k.contract.openapi.v3.Api.webhooks","location":"http4k-contract/org.http4k.contract.openapi.v3/-api/webhooks.html","searchKeys":["webhooks","val webhooks: Map<String, Map<String, ApiPath<NODE>>>?","org.http4k.contract.openapi.v3.Api.webhooks"]},{"name":"var deepLinking: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.deepLinking","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/deep-linking.html","searchKeys":["deepLinking","var deepLinking: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.deepLinking"]},{"name":"var described: Boolean","description":"org.http4k.contract.RouteMetaDsl.described","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/described.html","searchKeys":["described","var described: Boolean","org.http4k.contract.RouteMetaDsl.described"]},{"name":"var description: String?","description":"org.http4k.contract.RouteMetaDsl.description","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/description.html","searchKeys":["description","var description: String?","org.http4k.contract.RouteMetaDsl.description"]},{"name":"var descriptionPath: String","description":"org.http4k.contract.ContractBuilder.descriptionPath","location":"http4k-contract/org.http4k.contract/-contract-builder/description-path.html","searchKeys":["descriptionPath","var descriptionPath: String","org.http4k.contract.ContractBuilder.descriptionPath"]},{"name":"var descriptionSecurity: Security?","description":"org.http4k.contract.ContractBuilder.descriptionSecurity","location":"http4k-contract/org.http4k.contract/-contract-builder/description-security.html","searchKeys":["descriptionSecurity","var descriptionSecurity: Security?","org.http4k.contract.ContractBuilder.descriptionSecurity"]},{"name":"var displayOperationId: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.displayOperationId","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/display-operation-id.html","searchKeys":["displayOperationId","var displayOperationId: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.displayOperationId"]},{"name":"var displayRequestDuration: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.displayRequestDuration","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/display-request-duration.html","searchKeys":["displayRequestDuration","var displayRequestDuration: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.displayRequestDuration"]},{"name":"var domId: String","description":"org.http4k.contract.ui.SwaggerUiConfig.domId","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/dom-id.html","searchKeys":["domId","var domId: String","org.http4k.contract.ui.SwaggerUiConfig.domId"]},{"name":"var includeDescriptionRoute: Boolean","description":"org.http4k.contract.ContractBuilder.includeDescriptionRoute","location":"http4k-contract/org.http4k.contract/-contract-builder/include-description-route.html","searchKeys":["includeDescriptionRoute","var includeDescriptionRoute: Boolean","org.http4k.contract.ContractBuilder.includeDescriptionRoute"]},{"name":"var layout: String","description":"org.http4k.contract.ui.SwaggerUiConfig.layout","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/layout.html","searchKeys":["layout","var layout: String","org.http4k.contract.ui.SwaggerUiConfig.layout"]},{"name":"var oauth2RedirectUrl: String?","description":"org.http4k.contract.ui.SwaggerUiConfig.oauth2RedirectUrl","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/oauth2-redirect-url.html","searchKeys":["oauth2RedirectUrl","var oauth2RedirectUrl: String?","org.http4k.contract.ui.SwaggerUiConfig.oauth2RedirectUrl"]},{"name":"var operationId: String?","description":"org.http4k.contract.RouteMetaDsl.operationId","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/operation-id.html","searchKeys":["operationId","var operationId: String?","org.http4k.contract.RouteMetaDsl.operationId"]},{"name":"var pageTitle: String","description":"org.http4k.contract.ui.RedocConfig.pageTitle","location":"http4k-contract/org.http4k.contract.ui/-redoc-config/page-title.html","searchKeys":["pageTitle","var pageTitle: String","org.http4k.contract.ui.RedocConfig.pageTitle"]},{"name":"var pageTitle: String","description":"org.http4k.contract.ui.SwaggerUiConfig.pageTitle","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/page-title.html","searchKeys":["pageTitle","var pageTitle: String","org.http4k.contract.ui.SwaggerUiConfig.pageTitle"]},{"name":"var persistAuthorization: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.persistAuthorization","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/persist-authorization.html","searchKeys":["persistAuthorization","var persistAuthorization: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.persistAuthorization"]},{"name":"var postSecurityFilter: Filter","description":"org.http4k.contract.ContractBuilder.postSecurityFilter","location":"http4k-contract/org.http4k.contract/-contract-builder/post-security-filter.html","searchKeys":["postSecurityFilter","var postSecurityFilter: Filter","org.http4k.contract.ContractBuilder.postSecurityFilter"]},{"name":"var preFlightExtraction: PreFlightExtraction","description":"org.http4k.contract.ContractBuilder.preFlightExtraction","location":"http4k-contract/org.http4k.contract/-contract-builder/pre-flight-extraction.html","searchKeys":["preFlightExtraction","var preFlightExtraction: PreFlightExtraction","org.http4k.contract.ContractBuilder.preFlightExtraction"]},{"name":"var preFlightExtraction: PreFlightExtraction?","description":"org.http4k.contract.RouteMetaDsl.preFlightExtraction","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/pre-flight-extraction.html","searchKeys":["preFlightExtraction","var preFlightExtraction: PreFlightExtraction?","org.http4k.contract.RouteMetaDsl.preFlightExtraction"]},{"name":"var preSecurityFilter: Filter","description":"org.http4k.contract.ContractBuilder.preSecurityFilter","location":"http4k-contract/org.http4k.contract/-contract-builder/pre-security-filter.html","searchKeys":["preSecurityFilter","var preSecurityFilter: Filter","org.http4k.contract.ContractBuilder.preSecurityFilter"]},{"name":"var presets: List<String>","description":"org.http4k.contract.ui.SwaggerUiConfig.presets","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/presets.html","searchKeys":["presets","var presets: List<String>","org.http4k.contract.ui.SwaggerUiConfig.presets"]},{"name":"var queryConfigEnabled: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.queryConfigEnabled","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/query-config-enabled.html","searchKeys":["queryConfigEnabled","var queryConfigEnabled: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.queryConfigEnabled"]},{"name":"var renderer: ContractRenderer","description":"org.http4k.contract.ContractBuilder.renderer","location":"http4k-contract/org.http4k.contract/-contract-builder/renderer.html","searchKeys":["renderer","var renderer: ContractRenderer","org.http4k.contract.ContractBuilder.renderer"]},{"name":"var requestSnippetsEnabled: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.requestSnippetsEnabled","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/request-snippets-enabled.html","searchKeys":["requestSnippetsEnabled","var requestSnippetsEnabled: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.requestSnippetsEnabled"]},{"name":"var routes: Appendable<ContractRoute>","description":"org.http4k.contract.ContractBuilder.routes","location":"http4k-contract/org.http4k.contract/-contract-builder/routes.html","searchKeys":["routes","var routes: Appendable<ContractRoute>","org.http4k.contract.ContractBuilder.routes"]},{"name":"var security: Security?","description":"org.http4k.contract.ContractBuilder.security","location":"http4k-contract/org.http4k.contract/-contract-builder/security.html","searchKeys":["security","var security: Security?","org.http4k.contract.ContractBuilder.security"]},{"name":"var security: Security?","description":"org.http4k.contract.RouteMetaDsl.security","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/security.html","searchKeys":["security","var security: Security?","org.http4k.contract.RouteMetaDsl.security"]},{"name":"var summary: String","description":"org.http4k.contract.RouteMetaDsl.summary","location":"http4k-contract/org.http4k.contract/-route-meta-dsl/summary.html","searchKeys":["summary","var summary: String","org.http4k.contract.RouteMetaDsl.summary"]},{"name":"var tryItOutEnabled: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.tryItOutEnabled","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/try-it-out-enabled.html","searchKeys":["tryItOutEnabled","var tryItOutEnabled: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.tryItOutEnabled"]},{"name":"var url: String","description":"org.http4k.contract.ui.RedocConfig.url","location":"http4k-contract/org.http4k.contract.ui/-redoc-config/url.html","searchKeys":["url","var url: String","org.http4k.contract.ui.RedocConfig.url"]},{"name":"var url: String","description":"org.http4k.contract.ui.SwaggerUiConfig.url","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/url.html","searchKeys":["url","var url: String","org.http4k.contract.ui.SwaggerUiConfig.url"]},{"name":"var withCredentials: Boolean?","description":"org.http4k.contract.ui.SwaggerUiConfig.withCredentials","location":"http4k-contract/org.http4k.contract.ui/-swagger-ui-config/with-credentials.html","searchKeys":["withCredentials","var withCredentials: Boolean?","org.http4k.contract.ui.SwaggerUiConfig.withCredentials"]},{"name":"class JTETemplates(contentType: ContentType = Html) : Templates","description":"org.http4k.template.JTETemplates","location":"http4k-template-jte/org.http4k.template/-j-t-e-templates/index.html","searchKeys":["JTETemplates","class JTETemplates(contentType: ContentType = Html) : Templates","org.http4k.template.JTETemplates"]},{"name":"constructor(contentType: ContentType = Html)","description":"org.http4k.template.JTETemplates.JTETemplates","location":"http4k-template-jte/org.http4k.template/-j-t-e-templates/-j-t-e-templates.html","searchKeys":["JTETemplates","constructor(contentType: ContentType = Html)","org.http4k.template.JTETemplates.JTETemplates"]},{"name":"open override fun Caching(baseTemplateDir: String): TemplateRenderer","description":"org.http4k.template.JTETemplates.Caching","location":"http4k-template-jte/org.http4k.template/-j-t-e-templates/-caching.html","searchKeys":["Caching","open override fun Caching(baseTemplateDir: String): TemplateRenderer","org.http4k.template.JTETemplates.Caching"]},{"name":"open override fun CachingClasspath(baseClasspathPackage: String): (ViewModel) -> String","description":"org.http4k.template.JTETemplates.CachingClasspath","location":"http4k-template-jte/org.http4k.template/-j-t-e-templates/-caching-classpath.html","searchKeys":["CachingClasspath","open override fun CachingClasspath(baseClasspathPackage: String): (ViewModel) -> String","org.http4k.template.JTETemplates.CachingClasspath"]},{"name":"open override fun HotReload(baseTemplateDir: String): (ViewModel) -> String","description":"org.http4k.template.JTETemplates.HotReload","location":"http4k-template-jte/org.http4k.template/-j-t-e-templates/-hot-reload.html","searchKeys":["HotReload","open override fun HotReload(baseTemplateDir: String): (ViewModel) -> String","org.http4k.template.JTETemplates.HotReload"]},{"name":"abstract class ContentTypeAwareApprovalTest(contentType: ContentType, testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : BaseApprovalTest","description":"org.http4k.testing.ContentTypeAwareApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-content-type-aware-approval-test/index.html","searchKeys":["ContentTypeAwareApprovalTest","abstract class ContentTypeAwareApprovalTest(contentType: ContentType, testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : BaseApprovalTest","org.http4k.testing.ContentTypeAwareApprovalTest"]},{"name":"abstract fun <T : HttpMessage> assertApproved(httpMessage: T)","description":"org.http4k.testing.Approver.assertApproved","location":"http4k-testing-approval/org.http4k.testing/-approver/assert-approved.html","searchKeys":["assertApproved","abstract fun <T : HttpMessage> assertApproved(httpMessage: T)","org.http4k.testing.Approver.assertApproved"]},{"name":"abstract fun actualFor(testName: String): ReadWriteResource","description":"org.http4k.testing.ApprovalSource.actualFor","location":"http4k-testing-approval/org.http4k.testing/-approval-source/actual-for.html","searchKeys":["actualFor","abstract fun actualFor(testName: String): ReadWriteResource","org.http4k.testing.ApprovalSource.actualFor"]},{"name":"abstract fun approvedFor(testName: String): ReadResource","description":"org.http4k.testing.ApprovalSource.approvedFor","location":"http4k-testing-approval/org.http4k.testing/-approval-source/approved-for.html","searchKeys":["approvedFor","abstract fun approvedFor(testName: String): ReadResource","org.http4k.testing.ApprovalSource.approvedFor"]},{"name":"abstract fun approverFor(context: ExtensionContext): Approver","description":"org.http4k.testing.BaseApprovalTest.approverFor","location":"http4k-testing-approval/org.http4k.testing/-base-approval-test/approver-for.html","searchKeys":["approverFor","abstract fun approverFor(context: ExtensionContext): Approver","org.http4k.testing.BaseApprovalTest.approverFor"]},{"name":"abstract fun format(input: String): String","description":"org.http4k.testing.ContentTypeAwareApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-content-type-aware-approval-test/format.html","searchKeys":["format","abstract fun format(input: String): String","org.http4k.testing.ContentTypeAwareApprovalTest.format"]},{"name":"abstract fun input(): InputStream?","description":"org.http4k.testing.ReadResource.input","location":"http4k-testing-approval/org.http4k.testing/-read-resource/input.html","searchKeys":["input","abstract fun input(): InputStream?","org.http4k.testing.ReadResource.input"]},{"name":"abstract fun nameFor(testClass: Class<*>, testMethod: Method): String","description":"org.http4k.testing.TestNamer.nameFor","location":"http4k-testing-approval/org.http4k.testing/-test-namer/name-for.html","searchKeys":["nameFor","abstract fun nameFor(testClass: Class<*>, testMethod: Method): String","org.http4k.testing.TestNamer.nameFor"]},{"name":"abstract fun output(): OutputStream","description":"org.http4k.testing.ReadWriteResource.output","location":"http4k-testing-approval/org.http4k.testing/-read-write-resource/output.html","searchKeys":["output","abstract fun output(): OutputStream","org.http4k.testing.ReadWriteResource.output"]},{"name":"abstract fun withNameSuffix(suffix: String): Approver","description":"org.http4k.testing.Approver.withNameSuffix","location":"http4k-testing-approval/org.http4k.testing/-approver/with-name-suffix.html","searchKeys":["withNameSuffix","abstract fun withNameSuffix(suffix: String): Approver","org.http4k.testing.Approver.withNameSuffix"]},{"name":"abstract operator fun invoke(input: HttpMessage): InputStream","description":"org.http4k.testing.ApprovalContent.invoke","location":"http4k-testing-approval/org.http4k.testing/-approval-content/invoke.html","searchKeys":["invoke","abstract operator fun invoke(input: HttpMessage): InputStream","org.http4k.testing.ApprovalContent.invoke"]},{"name":"abstract operator fun invoke(input: InputStream): InputStream","description":"org.http4k.testing.ApprovalContent.invoke","location":"http4k-testing-approval/org.http4k.testing/-approval-content/invoke.html","searchKeys":["invoke","abstract operator fun invoke(input: InputStream): InputStream","org.http4k.testing.ApprovalContent.invoke"]},{"name":"class ApprovalFailed(prefix: String, actual: ReadResource, expected: ReadResource) : RuntimeException","description":"org.http4k.testing.ApprovalFailed","location":"http4k-testing-approval/org.http4k.testing/-approval-failed/index.html","searchKeys":["ApprovalFailed","class ApprovalFailed(prefix: String, actual: ReadResource, expected: ReadResource) : RuntimeException","org.http4k.testing.ApprovalFailed"]},{"name":"class ApprovalTest : BaseApprovalTest","description":"org.http4k.testing.ApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-approval-test/index.html","searchKeys":["ApprovalTest","class ApprovalTest : BaseApprovalTest","org.http4k.testing.ApprovalTest"]},{"name":"class CloudEventsJsonApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","description":"org.http4k.testing.CloudEventsJsonApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-cloud-events-json-approval-test/index.html","searchKeys":["CloudEventsJsonApprovalTest","class CloudEventsJsonApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","org.http4k.testing.CloudEventsJsonApprovalTest"]},{"name":"class FileSystemApprovalSource(base: File, suffix: String = \"\") : ApprovalSource","description":"org.http4k.testing.FileSystemApprovalSource","location":"http4k-testing-approval/org.http4k.testing/-file-system-approval-source/index.html","searchKeys":["FileSystemApprovalSource","class FileSystemApprovalSource(base: File, suffix: String = \"\") : ApprovalSource","org.http4k.testing.FileSystemApprovalSource"]},{"name":"class HtmlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","description":"org.http4k.testing.HtmlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-html-approval-test/index.html","searchKeys":["HtmlApprovalTest","class HtmlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","org.http4k.testing.HtmlApprovalTest"]},{"name":"class JsonApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","description":"org.http4k.testing.JsonApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-json-approval-test/index.html","searchKeys":["JsonApprovalTest","class JsonApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","org.http4k.testing.JsonApprovalTest"]},{"name":"class NamedResourceApprover(name: String, approvalContent: ApprovalContent, approvalSource: ApprovalSource, transformer: ApprovalTransformer<*> = ApprovalTransformer.StringWithNormalisedLineEndings()) : Approver","description":"org.http4k.testing.NamedResourceApprover","location":"http4k-testing-approval/org.http4k.testing/-named-resource-approver/index.html","searchKeys":["NamedResourceApprover","class NamedResourceApprover(name: String, approvalContent: ApprovalContent, approvalSource: ApprovalSource, transformer: ApprovalTransformer<*> = ApprovalTransformer.StringWithNormalisedLineEndings()) : Approver","org.http4k.testing.NamedResourceApprover"]},{"name":"class XmlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","description":"org.http4k.testing.XmlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-xml-approval-test/index.html","searchKeys":["XmlApprovalTest","class XmlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","org.http4k.testing.XmlApprovalTest"]},{"name":"class YamlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","description":"org.http4k.testing.YamlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-yaml-approval-test/index.html","searchKeys":["YamlApprovalTest","class YamlApprovalTest(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\"))) : ContentTypeAwareApprovalTest","org.http4k.testing.YamlApprovalTest"]},{"name":"constructor()","description":"org.http4k.testing.ApprovalTest.ApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-approval-test/-approval-test.html","searchKeys":["ApprovalTest","constructor()","org.http4k.testing.ApprovalTest.ApprovalTest"]},{"name":"constructor(base: File, suffix: String = \"\")","description":"org.http4k.testing.FileSystemApprovalSource.FileSystemApprovalSource","location":"http4k-testing-approval/org.http4k.testing/-file-system-approval-source/-file-system-approval-source.html","searchKeys":["FileSystemApprovalSource","constructor(base: File, suffix: String = \"\")","org.http4k.testing.FileSystemApprovalSource.FileSystemApprovalSource"]},{"name":"constructor(contentType: ContentType, testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.ContentTypeAwareApprovalTest.ContentTypeAwareApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-content-type-aware-approval-test/-content-type-aware-approval-test.html","searchKeys":["ContentTypeAwareApprovalTest","constructor(contentType: ContentType, testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.ContentTypeAwareApprovalTest.ContentTypeAwareApprovalTest"]},{"name":"constructor(name: String, approvalContent: ApprovalContent, approvalSource: ApprovalSource, transformer: ApprovalTransformer<*> = ApprovalTransformer.StringWithNormalisedLineEndings())","description":"org.http4k.testing.NamedResourceApprover.NamedResourceApprover","location":"http4k-testing-approval/org.http4k.testing/-named-resource-approver/-named-resource-approver.html","searchKeys":["NamedResourceApprover","constructor(name: String, approvalContent: ApprovalContent, approvalSource: ApprovalSource, transformer: ApprovalTransformer<*> = ApprovalTransformer.StringWithNormalisedLineEndings())","org.http4k.testing.NamedResourceApprover.NamedResourceApprover"]},{"name":"constructor(prefix: String, actual: ReadResource, expected: ReadResource)","description":"org.http4k.testing.ApprovalFailed.ApprovalFailed","location":"http4k-testing-approval/org.http4k.testing/-approval-failed/-approval-failed.html","searchKeys":["ApprovalFailed","constructor(prefix: String, actual: ReadResource, expected: ReadResource)","org.http4k.testing.ApprovalFailed.ApprovalFailed"]},{"name":"constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.CloudEventsJsonApprovalTest.CloudEventsJsonApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-cloud-events-json-approval-test/-cloud-events-json-approval-test.html","searchKeys":["CloudEventsJsonApprovalTest","constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.CloudEventsJsonApprovalTest.CloudEventsJsonApprovalTest"]},{"name":"constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.HtmlApprovalTest.HtmlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-html-approval-test/-html-approval-test.html","searchKeys":["HtmlApprovalTest","constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.HtmlApprovalTest.HtmlApprovalTest"]},{"name":"constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.JsonApprovalTest.JsonApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-json-approval-test/-json-approval-test.html","searchKeys":["JsonApprovalTest","constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.JsonApprovalTest.JsonApprovalTest"]},{"name":"constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.XmlApprovalTest.XmlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-xml-approval-test/-xml-approval-test.html","searchKeys":["XmlApprovalTest","constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.XmlApprovalTest.XmlApprovalTest"]},{"name":"constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","description":"org.http4k.testing.YamlApprovalTest.YamlApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-yaml-approval-test/-yaml-approval-test.html","searchKeys":["YamlApprovalTest","constructor(testNamer: TestNamer = ClassAndMethod, approvalSource: ApprovalSource = FileSystemApprovalSource(File(\"src/test/resources\")))","org.http4k.testing.YamlApprovalTest.YamlApprovalTest"]},{"name":"fun <T : HttpMessage> Approver.hasApprovedContent(): Matcher<T>","description":"org.http4k.testing.hasApprovedContent","location":"http4k-testing-approval/org.http4k.testing/has-approved-content.html","searchKeys":["hasApprovedContent","fun <T : HttpMessage> Approver.hasApprovedContent(): Matcher<T>","org.http4k.testing.hasApprovedContent"]},{"name":"fun Approver.assertApproved(content: InputStream, contentType: ContentType? = null)","description":"org.http4k.testing.assertApproved","location":"http4k-testing-approval/org.http4k.testing/assert-approved.html","searchKeys":["assertApproved","fun Approver.assertApproved(content: InputStream, contentType: ContentType? = null)","org.http4k.testing.assertApproved"]},{"name":"fun Approver.assertApproved(content: String, contentType: ContentType? = null)","description":"org.http4k.testing.assertApproved","location":"http4k-testing-approval/org.http4k.testing/assert-approved.html","searchKeys":["assertApproved","fun Approver.assertApproved(content: String, contentType: ContentType? = null)","org.http4k.testing.assertApproved"]},{"name":"fun Approver.assertApproved(response: Response, expectedStatus: Status)","description":"org.http4k.testing.assertApproved","location":"http4k-testing-approval/org.http4k.testing/assert-approved.html","searchKeys":["assertApproved","fun Approver.assertApproved(response: Response, expectedStatus: Status)","org.http4k.testing.assertApproved"]},{"name":"fun EntireHttpMessage(): ApprovalContent","description":"org.http4k.testing.ApprovalContent.Companion.EntireHttpMessage","location":"http4k-testing-approval/org.http4k.testing/-approval-content/-companion/-entire-http-message.html","searchKeys":["EntireHttpMessage","fun EntireHttpMessage(): ApprovalContent","org.http4k.testing.ApprovalContent.Companion.EntireHttpMessage"]},{"name":"fun HttpBinaryBody(): ApprovalContent","description":"org.http4k.testing.ApprovalContent.Companion.HttpBinaryBody","location":"http4k-testing-approval/org.http4k.testing/-approval-content/-companion/-http-binary-body.html","searchKeys":["HttpBinaryBody","fun HttpBinaryBody(): ApprovalContent","org.http4k.testing.ApprovalContent.Companion.HttpBinaryBody"]},{"name":"fun HttpBodyOnly(formatter: (String) -> String = { it }): ApprovalContent","description":"org.http4k.testing.ApprovalContent.Companion.HttpBodyOnly","location":"http4k-testing-approval/org.http4k.testing/-approval-content/-companion/-http-body-only.html","searchKeys":["HttpBodyOnly","fun HttpBodyOnly(formatter: (String) -> String = { it }): ApprovalContent","org.http4k.testing.ApprovalContent.Companion.HttpBodyOnly"]},{"name":"fun HttpTextBody(formatter: (String) -> String = { it }): ApprovalContent","description":"org.http4k.testing.ApprovalContent.Companion.HttpTextBody","location":"http4k-testing-approval/org.http4k.testing/-approval-content/-companion/-http-text-body.html","searchKeys":["HttpTextBody","fun HttpTextBody(formatter: (String) -> String = { it }): ApprovalContent","org.http4k.testing.ApprovalContent.Companion.HttpTextBody"]},{"name":"fun StringWithNormalisedLineEndings(): ApprovalTransformer<String>","description":"org.http4k.testing.ApprovalTransformer.Companion.StringWithNormalisedLineEndings","location":"http4k-testing-approval/org.http4k.testing/-approval-transformer/-companion/-string-with-normalised-line-endings.html","searchKeys":["StringWithNormalisedLineEndings","fun StringWithNormalisedLineEndings(): ApprovalTransformer<String>","org.http4k.testing.ApprovalTransformer.Companion.StringWithNormalisedLineEndings"]},{"name":"fun interface ApprovalTransformer<T> : Function1<InputStream, T> ","description":"org.http4k.testing.ApprovalTransformer","location":"http4k-testing-approval/org.http4k.testing/-approval-transformer/index.html","searchKeys":["ApprovalTransformer","fun interface ApprovalTransformer<T> : Function1<InputStream, T> ","org.http4k.testing.ApprovalTransformer"]},{"name":"fun interface ReadResource","description":"org.http4k.testing.ReadResource","location":"http4k-testing-approval/org.http4k.testing/-read-resource/index.html","searchKeys":["ReadResource","fun interface ReadResource","org.http4k.testing.ReadResource"]},{"name":"fun interface TestNamer","description":"org.http4k.testing.TestNamer","location":"http4k-testing-approval/org.http4k.testing/-test-namer/index.html","searchKeys":["TestNamer","fun interface TestNamer","org.http4k.testing.TestNamer"]},{"name":"interface ApprovalContent","description":"org.http4k.testing.ApprovalContent","location":"http4k-testing-approval/org.http4k.testing/-approval-content/index.html","searchKeys":["ApprovalContent","interface ApprovalContent","org.http4k.testing.ApprovalContent"]},{"name":"interface ApprovalSource","description":"org.http4k.testing.ApprovalSource","location":"http4k-testing-approval/org.http4k.testing/-approval-source/index.html","searchKeys":["ApprovalSource","interface ApprovalSource","org.http4k.testing.ApprovalSource"]},{"name":"interface Approver","description":"org.http4k.testing.Approver","location":"http4k-testing-approval/org.http4k.testing/-approver/index.html","searchKeys":["Approver","interface Approver","org.http4k.testing.Approver"]},{"name":"interface BaseApprovalTest : BeforeTestExecutionCallback, ParameterResolver","description":"org.http4k.testing.BaseApprovalTest","location":"http4k-testing-approval/org.http4k.testing/-base-approval-test/index.html","searchKeys":["BaseApprovalTest","interface BaseApprovalTest : BeforeTestExecutionCallback, ParameterResolver","org.http4k.testing.BaseApprovalTest"]},{"name":"interface ReadWriteResource : ReadResource","description":"org.http4k.testing.ReadWriteResource","location":"http4k-testing-approval/org.http4k.testing/-read-write-resource/index.html","searchKeys":["ReadWriteResource","interface ReadWriteResource : ReadResource","org.http4k.testing.ReadWriteResource"]},{"name":"object Companion","description":"org.http4k.testing.ApprovalContent.Companion","location":"http4k-testing-approval/org.http4k.testing/-approval-content/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.testing.ApprovalContent.Companion"]},{"name":"object Companion","description":"org.http4k.testing.ApprovalTransformer.Companion","location":"http4k-testing-approval/org.http4k.testing/-approval-transformer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.testing.ApprovalTransformer.Companion"]},{"name":"object Companion","description":"org.http4k.testing.TestNamer.Companion","location":"http4k-testing-approval/org.http4k.testing/-test-namer/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.testing.TestNamer.Companion"]},{"name":"open override fun <T : HttpMessage> assertApproved(httpMessage: T)","description":"org.http4k.testing.NamedResourceApprover.assertApproved","location":"http4k-testing-approval/org.http4k.testing/-named-resource-approver/assert-approved.html","searchKeys":["assertApproved","open override fun <T : HttpMessage> assertApproved(httpMessage: T)","org.http4k.testing.NamedResourceApprover.assertApproved"]},{"name":"open override fun actualFor(testName: String): ReadWriteResource","description":"org.http4k.testing.FileSystemApprovalSource.actualFor","location":"http4k-testing-approval/org.http4k.testing/-file-system-approval-source/actual-for.html","searchKeys":["actualFor","open override fun actualFor(testName: String): ReadWriteResource","org.http4k.testing.FileSystemApprovalSource.actualFor"]},{"name":"open override fun approvedFor(testName: String): ReadResource","description":"org.http4k.testing.FileSystemApprovalSource.approvedFor","location":"http4k-testing-approval/org.http4k.testing/-file-system-approval-source/approved-for.html","searchKeys":["approvedFor","open override fun approvedFor(testName: String): ReadResource","org.http4k.testing.FileSystemApprovalSource.approvedFor"]},{"name":"open override fun approverFor(context: ExtensionContext): Approver","description":"org.http4k.testing.ApprovalTest.approverFor","location":"http4k-testing-approval/org.http4k.testing/-approval-test/approver-for.html","searchKeys":["approverFor","open override fun approverFor(context: ExtensionContext): Approver","org.http4k.testing.ApprovalTest.approverFor"]},{"name":"open override fun approverFor(context: ExtensionContext): Approver","description":"org.http4k.testing.ContentTypeAwareApprovalTest.approverFor","location":"http4k-testing-approval/org.http4k.testing/-content-type-aware-approval-test/approver-for.html","searchKeys":["approverFor","open override fun approverFor(context: ExtensionContext): Approver","org.http4k.testing.ContentTypeAwareApprovalTest.approverFor"]},{"name":"open override fun beforeTestExecution(context: ExtensionContext)","description":"org.http4k.testing.BaseApprovalTest.beforeTestExecution","location":"http4k-testing-approval/org.http4k.testing/-base-approval-test/before-test-execution.html","searchKeys":["beforeTestExecution","open override fun beforeTestExecution(context: ExtensionContext)","org.http4k.testing.BaseApprovalTest.beforeTestExecution"]},{"name":"open override fun format(input: String): String","description":"org.http4k.testing.CloudEventsJsonApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-cloud-events-json-approval-test/format.html","searchKeys":["format","open override fun format(input: String): String","org.http4k.testing.CloudEventsJsonApprovalTest.format"]},{"name":"open override fun format(input: String): String","description":"org.http4k.testing.HtmlApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-html-approval-test/format.html","searchKeys":["format","open override fun format(input: String): String","org.http4k.testing.HtmlApprovalTest.format"]},{"name":"open override fun format(input: String): String","description":"org.http4k.testing.JsonApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-json-approval-test/format.html","searchKeys":["format","open override fun format(input: String): String","org.http4k.testing.JsonApprovalTest.format"]},{"name":"open override fun format(input: String): String","description":"org.http4k.testing.XmlApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-xml-approval-test/format.html","searchKeys":["format","open override fun format(input: String): String","org.http4k.testing.XmlApprovalTest.format"]},{"name":"open override fun format(input: String): String","description":"org.http4k.testing.YamlApprovalTest.format","location":"http4k-testing-approval/org.http4k.testing/-yaml-approval-test/format.html","searchKeys":["format","open override fun format(input: String): String","org.http4k.testing.YamlApprovalTest.format"]},{"name":"open override fun resolveParameter(parameterContext: ParameterContext, context: ExtensionContext): Any?","description":"org.http4k.testing.BaseApprovalTest.resolveParameter","location":"http4k-testing-approval/org.http4k.testing/-base-approval-test/resolve-parameter.html","searchKeys":["resolveParameter","open override fun resolveParameter(parameterContext: ParameterContext, context: ExtensionContext): Any?","org.http4k.testing.BaseApprovalTest.resolveParameter"]},{"name":"open override fun supportsParameter(parameterContext: ParameterContext, context: ExtensionContext): Boolean","description":"org.http4k.testing.BaseApprovalTest.supportsParameter","location":"http4k-testing-approval/org.http4k.testing/-base-approval-test/supports-parameter.html","searchKeys":["supportsParameter","open override fun supportsParameter(parameterContext: ParameterContext, context: ExtensionContext): Boolean","org.http4k.testing.BaseApprovalTest.supportsParameter"]},{"name":"open override fun withNameSuffix(suffix: String): NamedResourceApprover","description":"org.http4k.testing.NamedResourceApprover.withNameSuffix","location":"http4k-testing-approval/org.http4k.testing/-named-resource-approver/with-name-suffix.html","searchKeys":["withNameSuffix","open override fun withNameSuffix(suffix: String): NamedResourceApprover","org.http4k.testing.NamedResourceApprover.withNameSuffix"]},{"name":"val ClassAndMethod: TestNamer","description":"org.http4k.testing.TestNamer.Companion.ClassAndMethod","location":"http4k-testing-approval/org.http4k.testing/-test-namer/-companion/-class-and-method.html","searchKeys":["ClassAndMethod","val ClassAndMethod: TestNamer","org.http4k.testing.TestNamer.Companion.ClassAndMethod"]},{"name":"val ClassDirAndMethod: TestNamer","description":"org.http4k.testing.TestNamer.Companion.ClassDirAndMethod","location":"http4k-testing-approval/org.http4k.testing/-test-namer/-companion/-class-dir-and-method.html","searchKeys":["ClassDirAndMethod","val ClassDirAndMethod: TestNamer","org.http4k.testing.TestNamer.Companion.ClassDirAndMethod"]},{"name":"val MethodOnly: TestNamer","description":"org.http4k.testing.TestNamer.Companion.MethodOnly","location":"http4k-testing-approval/org.http4k.testing/-test-namer/-companion/-method-only.html","searchKeys":["MethodOnly","val MethodOnly: TestNamer","org.http4k.testing.TestNamer.Companion.MethodOnly"]},{"name":"abstract operator fun invoke(id: WebhookId, timestamp: WebhookTimestamp, body: Body): WebhookSignature","description":"org.http4k.webhook.signing.WebhookSigner.invoke","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signer/invoke.html","searchKeys":["invoke","abstract operator fun invoke(id: WebhookId, timestamp: WebhookTimestamp, body: Body): WebhookSignature","org.http4k.webhook.signing.WebhookSigner.invoke"]},{"name":"abstract operator fun invoke(id: WebhookId, timestamp: WebhookTimestamp, signature: WebhookSignature, body: Body): Boolean","description":"org.http4k.webhook.signing.WebhookSignatureVerifier.invoke","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature-verifier/invoke.html","searchKeys":["invoke","abstract operator fun invoke(id: WebhookId, timestamp: WebhookTimestamp, signature: WebhookSignature, body: Body): Boolean","org.http4k.webhook.signing.WebhookSignatureVerifier.invoke"]},{"name":"class EventType : AbstractValue<String> ","description":"org.http4k.webhook.EventType","location":"http4k-webhook/org.http4k.webhook/-event-type/index.html","searchKeys":["EventType","class EventType : AbstractValue<String> ","org.http4k.webhook.EventType"]},{"name":"class HmacSha256SigningSecret : AbstractValue<String> ","description":"org.http4k.webhook.signing.HmacSha256SigningSecret","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256-signing-secret/index.html","searchKeys":["HmacSha256SigningSecret","class HmacSha256SigningSecret : AbstractValue<String> ","org.http4k.webhook.signing.HmacSha256SigningSecret"]},{"name":"class SignedPayload : AbstractValue<String> ","description":"org.http4k.webhook.signing.SignedPayload","location":"http4k-webhook/org.http4k.webhook.signing/-signed-payload/index.html","searchKeys":["SignedPayload","class SignedPayload : AbstractValue<String> ","org.http4k.webhook.signing.SignedPayload"]},{"name":"class WebhookId : AbstractValue<String> ","description":"org.http4k.webhook.WebhookId","location":"http4k-webhook/org.http4k.webhook/-webhook-id/index.html","searchKeys":["WebhookId","class WebhookId : AbstractValue<String> ","org.http4k.webhook.WebhookId"]},{"name":"class WebhookSignature : AbstractValue<String> ","description":"org.http4k.webhook.signing.WebhookSignature","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature/index.html","searchKeys":["WebhookSignature","class WebhookSignature : AbstractValue<String> ","org.http4k.webhook.signing.WebhookSignature"]},{"name":"class WebhookTimestamp : AbstractValue<Long> ","description":"org.http4k.webhook.WebhookTimestamp","location":"http4k-webhook/org.http4k.webhook/-webhook-timestamp/index.html","searchKeys":["WebhookTimestamp","class WebhookTimestamp : AbstractValue<Long> ","org.http4k.webhook.WebhookTimestamp"]},{"name":"constructor(type: EventType, timestamp: WebhookTimestamp, data: T)","description":"org.http4k.webhook.WebhookPayload.WebhookPayload","location":"http4k-webhook/org.http4k.webhook/-webhook-payload/-webhook-payload.html","searchKeys":["WebhookPayload","constructor(type: EventType, timestamp: WebhookTimestamp, data: T)","org.http4k.webhook.WebhookPayload.WebhookPayload"]},{"name":"data class WebhookPayload<T : Any>(val type: EventType, val timestamp: WebhookTimestamp, val data: T)","description":"org.http4k.webhook.WebhookPayload","location":"http4k-webhook/org.http4k.webhook/-webhook-payload/index.html","searchKeys":["WebhookPayload","data class WebhookPayload<T : Any>(val type: EventType, val timestamp: WebhookTimestamp, val data: T)","org.http4k.webhook.WebhookPayload"]},{"name":"enum SignatureIdentifier : Enum<SignatureIdentifier> ","description":"org.http4k.webhook.signing.SignatureIdentifier","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/index.html","searchKeys":["SignatureIdentifier","enum SignatureIdentifier : Enum<SignatureIdentifier> ","org.http4k.webhook.signing.SignatureIdentifier"]},{"name":"fun ClientFilters.SignWebhookPayload(signer: WebhookSigner, autoMarshalling: AutoMarshalling, idGenerator: (Request) -> WebhookId = { WebhookId.of(UUID.randomUUID().toString()) }): Filter","description":"org.http4k.filter.SignWebhookPayload","location":"http4k-webhook/org.http4k.filter/-sign-webhook-payload.html","searchKeys":["SignWebhookPayload","fun ClientFilters.SignWebhookPayload(signer: WebhookSigner, autoMarshalling: AutoMarshalling, idGenerator: (Request) -> WebhookId = { WebhookId.of(UUID.randomUUID().toString()) }): Filter","org.http4k.filter.SignWebhookPayload"]},{"name":"fun ServerFilters.VerifyWebhookSignature(verifier: WebhookSignatureVerifier, onFailure: HttpHandler = { Response(UNAUTHORIZED) }): Filter","description":"org.http4k.filter.VerifyWebhookSignature","location":"http4k-webhook/org.http4k.filter/-verify-webhook-signature.html","searchKeys":["VerifyWebhookSignature","fun ServerFilters.VerifyWebhookSignature(verifier: WebhookSignatureVerifier, onFailure: HttpHandler = { Response(UNAUTHORIZED) }): Filter","org.http4k.filter.VerifyWebhookSignature"]},{"name":"fun Signer(signingSecret: HmacSha256SigningSecret): WebhookSigner","description":"org.http4k.webhook.signing.HmacSha256.Signer","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256/-signer.html","searchKeys":["Signer","fun Signer(signingSecret: HmacSha256SigningSecret): WebhookSigner","org.http4k.webhook.signing.HmacSha256.Signer"]},{"name":"fun Verifier(signingSecret: HmacSha256SigningSecret): WebhookSignatureVerifier","description":"org.http4k.webhook.signing.HmacSha256.Verifier","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256/-verifier.html","searchKeys":["Verifier","fun Verifier(signingSecret: HmacSha256SigningSecret): WebhookSignatureVerifier","org.http4k.webhook.signing.HmacSha256.Verifier"]},{"name":"fun asInstant(): Instant","description":"org.http4k.webhook.WebhookTimestamp.asInstant","location":"http4k-webhook/org.http4k.webhook/-webhook-timestamp/as-instant.html","searchKeys":["asInstant","fun asInstant(): Instant","org.http4k.webhook.WebhookTimestamp.asInstant"]},{"name":"fun encode(unencoded: ByteArray): HmacSha256SigningSecret","description":"org.http4k.webhook.signing.HmacSha256SigningSecret.Companion.encode","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256-signing-secret/-companion/encode.html","searchKeys":["encode","fun encode(unencoded: ByteArray): HmacSha256SigningSecret","org.http4k.webhook.signing.HmacSha256SigningSecret.Companion.encode"]},{"name":"fun encode(unencoded: ByteArray): SignedPayload","description":"org.http4k.webhook.signing.SignedPayload.Companion.encode","location":"http4k-webhook/org.http4k.webhook.signing/-signed-payload/-companion/encode.html","searchKeys":["encode","fun encode(unencoded: ByteArray): SignedPayload","org.http4k.webhook.signing.SignedPayload.Companion.encode"]},{"name":"fun encode(unencoded: String): HmacSha256SigningSecret","description":"org.http4k.webhook.signing.HmacSha256SigningSecret.Companion.encode","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256-signing-secret/-companion/encode.html","searchKeys":["encode","fun encode(unencoded: String): HmacSha256SigningSecret","org.http4k.webhook.signing.HmacSha256SigningSecret.Companion.encode"]},{"name":"fun encode(unencoded: String): SignedPayload","description":"org.http4k.webhook.signing.SignedPayload.Companion.encode","location":"http4k-webhook/org.http4k.webhook.signing/-signed-payload/-companion/encode.html","searchKeys":["encode","fun encode(unencoded: String): SignedPayload","org.http4k.webhook.signing.SignedPayload.Companion.encode"]},{"name":"fun interface WebhookSignatureVerifier","description":"org.http4k.webhook.signing.WebhookSignatureVerifier","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature-verifier/index.html","searchKeys":["WebhookSignatureVerifier","fun interface WebhookSignatureVerifier","org.http4k.webhook.signing.WebhookSignatureVerifier"]},{"name":"fun interface WebhookSigner","description":"org.http4k.webhook.signing.WebhookSigner","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signer/index.html","searchKeys":["WebhookSigner","fun interface WebhookSigner","org.http4k.webhook.signing.WebhookSigner"]},{"name":"fun of(identifier: SignatureIdentifier, payload: SignedPayload): WebhookSignature","description":"org.http4k.webhook.signing.WebhookSignature.Companion.of","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature/-companion/of.html","searchKeys":["of","fun of(identifier: SignatureIdentifier, payload: SignedPayload): WebhookSignature","org.http4k.webhook.signing.WebhookSignature.Companion.of"]},{"name":"fun of(instant: Instant): WebhookTimestamp","description":"org.http4k.webhook.WebhookTimestamp.Companion.of","location":"http4k-webhook/org.http4k.webhook/-webhook-timestamp/-companion/of.html","searchKeys":["of","fun of(instant: Instant): WebhookTimestamp","org.http4k.webhook.WebhookTimestamp.Companion.of"]},{"name":"fun valueOf(value: String): SignatureIdentifier","description":"org.http4k.webhook.signing.SignatureIdentifier.valueOf","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): SignatureIdentifier","org.http4k.webhook.signing.SignatureIdentifier.valueOf"]},{"name":"fun values(): Array<SignatureIdentifier>","description":"org.http4k.webhook.signing.SignatureIdentifier.values","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/values.html","searchKeys":["values","fun values(): Array<SignatureIdentifier>","org.http4k.webhook.signing.SignatureIdentifier.values"]},{"name":"fun withNoPrefix(): String","description":"org.http4k.webhook.signing.HmacSha256SigningSecret.withNoPrefix","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256-signing-secret/with-no-prefix.html","searchKeys":["withNoPrefix","fun withNoPrefix(): String","org.http4k.webhook.signing.HmacSha256SigningSecret.withNoPrefix"]},{"name":"object Companion : LongValueFactory<WebhookTimestamp> ","description":"org.http4k.webhook.WebhookTimestamp.Companion","location":"http4k-webhook/org.http4k.webhook/-webhook-timestamp/-companion/index.html","searchKeys":["Companion","object Companion : LongValueFactory<WebhookTimestamp> ","org.http4k.webhook.WebhookTimestamp.Companion"]},{"name":"object Companion : NonBlankStringValueFactory<EventType> ","description":"org.http4k.webhook.EventType.Companion","location":"http4k-webhook/org.http4k.webhook/-event-type/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<EventType> ","org.http4k.webhook.EventType.Companion"]},{"name":"object Companion : NonBlankStringValueFactory<SignedPayload> ","description":"org.http4k.webhook.signing.SignedPayload.Companion","location":"http4k-webhook/org.http4k.webhook.signing/-signed-payload/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<SignedPayload> ","org.http4k.webhook.signing.SignedPayload.Companion"]},{"name":"object Companion : NonBlankStringValueFactory<WebhookId> ","description":"org.http4k.webhook.WebhookId.Companion","location":"http4k-webhook/org.http4k.webhook/-webhook-id/-companion/index.html","searchKeys":["Companion","object Companion : NonBlankStringValueFactory<WebhookId> ","org.http4k.webhook.WebhookId.Companion"]},{"name":"object Companion : StringValueFactory<HmacSha256SigningSecret> ","description":"org.http4k.webhook.signing.HmacSha256SigningSecret.Companion","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256-signing-secret/-companion/index.html","searchKeys":["Companion","object Companion : StringValueFactory<HmacSha256SigningSecret> ","org.http4k.webhook.signing.HmacSha256SigningSecret.Companion"]},{"name":"object Companion : StringValueFactory<WebhookSignature> ","description":"org.http4k.webhook.signing.WebhookSignature.Companion","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature/-companion/index.html","searchKeys":["Companion","object Companion : StringValueFactory<WebhookSignature> ","org.http4k.webhook.signing.WebhookSignature.Companion"]},{"name":"object HmacSha256","description":"org.http4k.webhook.signing.HmacSha256","location":"http4k-webhook/org.http4k.webhook.signing/-hmac-sha256/index.html","searchKeys":["HmacSha256","object HmacSha256","org.http4k.webhook.signing.HmacSha256"]},{"name":"v1","description":"org.http4k.webhook.signing.SignatureIdentifier.v1","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/v1/index.html","searchKeys":["v1","v1","org.http4k.webhook.signing.SignatureIdentifier.v1"]},{"name":"v1a","description":"org.http4k.webhook.signing.SignatureIdentifier.v1a","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/v1a/index.html","searchKeys":["v1a","v1a","org.http4k.webhook.signing.SignatureIdentifier.v1a"]},{"name":"val Header.WEBHOOK_ID: BiDiLens<HttpMessage, WebhookId>","description":"org.http4k.lens.WEBHOOK_ID","location":"http4k-webhook/org.http4k.lens/-w-e-b-h-o-o-k_-i-d.html","searchKeys":["WEBHOOK_ID","val Header.WEBHOOK_ID: BiDiLens<HttpMessage, WebhookId>","org.http4k.lens.WEBHOOK_ID"]},{"name":"val Header.WEBHOOK_SIGNATURE: BiDiLens<HttpMessage, WebhookSignature>","description":"org.http4k.lens.WEBHOOK_SIGNATURE","location":"http4k-webhook/org.http4k.lens/-w-e-b-h-o-o-k_-s-i-g-n-a-t-u-r-e.html","searchKeys":["WEBHOOK_SIGNATURE","val Header.WEBHOOK_SIGNATURE: BiDiLens<HttpMessage, WebhookSignature>","org.http4k.lens.WEBHOOK_SIGNATURE"]},{"name":"val Header.WEBHOOK_TIMESTAMP: BiDiLens<HttpMessage, WebhookTimestamp>","description":"org.http4k.lens.WEBHOOK_TIMESTAMP","location":"http4k-webhook/org.http4k.lens/-w-e-b-h-o-o-k_-t-i-m-e-s-t-a-m-p.html","searchKeys":["WEBHOOK_TIMESTAMP","val Header.WEBHOOK_TIMESTAMP: BiDiLens<HttpMessage, WebhookTimestamp>","org.http4k.lens.WEBHOOK_TIMESTAMP"]},{"name":"val data: T","description":"org.http4k.webhook.WebhookPayload.data","location":"http4k-webhook/org.http4k.webhook/-webhook-payload/data.html","searchKeys":["data","val data: T","org.http4k.webhook.WebhookPayload.data"]},{"name":"val entries: EnumEntries<SignatureIdentifier>","description":"org.http4k.webhook.signing.SignatureIdentifier.entries","location":"http4k-webhook/org.http4k.webhook.signing/-signature-identifier/entries.html","searchKeys":["entries","val entries: EnumEntries<SignatureIdentifier>","org.http4k.webhook.signing.SignatureIdentifier.entries"]},{"name":"val identifier: SignatureIdentifier","description":"org.http4k.webhook.signing.WebhookSignature.identifier","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature/identifier.html","searchKeys":["identifier","val identifier: SignatureIdentifier","org.http4k.webhook.signing.WebhookSignature.identifier"]},{"name":"val payload: SignedPayload","description":"org.http4k.webhook.signing.WebhookSignature.payload","location":"http4k-webhook/org.http4k.webhook.signing/-webhook-signature/payload.html","searchKeys":["payload","val payload: SignedPayload","org.http4k.webhook.signing.WebhookSignature.payload"]},{"name":"val timestamp: WebhookTimestamp","description":"org.http4k.webhook.WebhookPayload.timestamp","location":"http4k-webhook/org.http4k.webhook/-webhook-payload/timestamp.html","searchKeys":["timestamp","val timestamp: WebhookTimestamp","org.http4k.webhook.WebhookPayload.timestamp"]},{"name":"val type: EventType","description":"org.http4k.webhook.WebhookPayload.type","location":"http4k-webhook/org.http4k.webhook/-webhook-payload/type.html","searchKeys":["type","val type: EventType","org.http4k.webhook.WebhookPayload.type"]},{"name":"class Helidon(val port: Int = 8000) : ServerConfig","description":"org.http4k.server.Helidon","location":"http4k-server-helidon/org.http4k.server/-helidon/index.html","searchKeys":["Helidon","class Helidon(val port: Int = 8000) : ServerConfig","org.http4k.server.Helidon"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Helidon.Helidon","location":"http4k-server-helidon/org.http4k.server/-helidon/-helidon.html","searchKeys":["Helidon","constructor(port: Int = 8000)","org.http4k.server.Helidon.Helidon"]},{"name":"fun HelidonHandler(http: HttpHandler): Handler","description":"org.http4k.server.HelidonHandler","location":"http4k-server-helidon/org.http4k.server/-helidon-handler.html","searchKeys":["HelidonHandler","fun HelidonHandler(http: HttpHandler): Handler","org.http4k.server.HelidonHandler"]},{"name":"open override fun toServer(http: HttpHandler): Http4kServer","description":"org.http4k.server.Helidon.toServer","location":"http4k-server-helidon/org.http4k.server/-helidon/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler): Http4kServer","org.http4k.server.Helidon.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode.Immediate","description":"org.http4k.server.Helidon.stopMode","location":"http4k-server-helidon/org.http4k.server/-helidon/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode.Immediate","org.http4k.server.Helidon.stopMode"]},{"name":"val port: Int = 8000","description":"org.http4k.server.Helidon.port","location":"http4k-server-helidon/org.http4k.server/-helidon/port.html","searchKeys":["port","val port: Int = 8000","org.http4k.server.Helidon.port"]},{"name":"class Http4kJettyHttpHandler(handler: HttpHandler) : Handler.Abstract","description":"org.http4k.server.Http4kJettyHttpHandler","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-http-handler/index.html","searchKeys":["Http4kJettyHttpHandler","class Http4kJettyHttpHandler(handler: HttpHandler) : Handler.Abstract","org.http4k.server.Http4kJettyHttpHandler"]},{"name":"class Http4kJettyServerWebSocketEndpoint(consumer: WsConsumer, request: Request) : Session.Listener.AbstractAutoDemanding","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/index.html","searchKeys":["Http4kJettyServerWebSocketEndpoint","class Http4kJettyServerWebSocketEndpoint(consumer: WsConsumer, request: Request) : Session.Listener.AbstractAutoDemanding","org.http4k.server.Http4kJettyServerWebSocketEndpoint"]},{"name":"class Jetty(port: Int, val stopMode: ServerConfig.StopMode, server: Server) : PolyServerConfig","description":"org.http4k.server.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/index.html","searchKeys":["Jetty","class Jetty(port: Int, val stopMode: ServerConfig.StopMode, server: Server) : PolyServerConfig","org.http4k.server.Jetty"]},{"name":"class JettyEventStreamHandler(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15)) : Handler.Abstract.NonBlocking","description":"org.http4k.server.JettyEventStreamHandler","location":"http4k-server-jetty/org.http4k.server/-jetty-event-stream-handler/index.html","searchKeys":["JettyEventStreamHandler","class JettyEventStreamHandler(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15)) : Handler.Abstract.NonBlocking","org.http4k.server.JettyEventStreamHandler"]},{"name":"constructor(consumer: WsConsumer, request: Request)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.Http4kJettyServerWebSocketEndpoint","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/-http4k-jetty-server-web-socket-endpoint.html","searchKeys":["Http4kJettyServerWebSocketEndpoint","constructor(consumer: WsConsumer, request: Request)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.Http4kJettyServerWebSocketEndpoint"]},{"name":"constructor(handler: HttpHandler)","description":"org.http4k.server.Http4kJettyHttpHandler.Http4kJettyHttpHandler","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-http-handler/-http4k-jetty-http-handler.html","searchKeys":["Http4kJettyHttpHandler","constructor(handler: HttpHandler)","org.http4k.server.Http4kJettyHttpHandler.Http4kJettyHttpHandler"]},{"name":"constructor(port: Int = 8000)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int = 8000)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(port: Int = 8000, server: Server)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int = 8000, server: Server)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int = 8000, stopMode: ServerConfig.StopMode)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(port: Int, stopMode: ServerConfig.StopMode, server: Server)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int, stopMode: ServerConfig.StopMode, server: Server)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(port: Int, stopMode: ServerConfig.StopMode, vararg inConnectors: ConnectorBuilder)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int, stopMode: ServerConfig.StopMode, vararg inConnectors: ConnectorBuilder)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(port: Int, vararg inConnectors: ConnectorBuilder)","description":"org.http4k.server.Jetty.Jetty","location":"http4k-server-jetty/org.http4k.server/-jetty/-jetty.html","searchKeys":["Jetty","constructor(port: Int, vararg inConnectors: ConnectorBuilder)","org.http4k.server.Jetty.Jetty"]},{"name":"constructor(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15))","description":"org.http4k.server.JettyEventStreamHandler.JettyEventStreamHandler","location":"http4k-server-jetty/org.http4k.server/-jetty-event-stream-handler/-jetty-event-stream-handler.html","searchKeys":["JettyEventStreamHandler","constructor(sse: SseHandler, heartBeatDuration: Duration = Duration.ofSeconds(15))","org.http4k.server.JettyEventStreamHandler.JettyEventStreamHandler"]},{"name":"fun HttpHandler.toJettyHandler(withStatisticsHandler: Boolean = false): Handler.Wrapper","description":"org.http4k.server.toJettyHandler","location":"http4k-server-jetty/org.http4k.server/to-jetty-handler.html","searchKeys":["toJettyHandler","fun HttpHandler.toJettyHandler(withStatisticsHandler: Boolean = false): Handler.Wrapper","org.http4k.server.toJettyHandler"]},{"name":"fun JettyLoom(port: Int): Jetty","description":"org.http4k.server.JettyLoom","location":"http4k-server-jetty/org.http4k.server/-jetty-loom.html","searchKeys":["JettyLoom","fun JettyLoom(port: Int): Jetty","org.http4k.server.JettyLoom"]},{"name":"fun JettyLoom(port: Int, stopMode: ServerConfig.StopMode): Jetty","description":"org.http4k.server.JettyLoom","location":"http4k-server-jetty/org.http4k.server/-jetty-loom.html","searchKeys":["JettyLoom","fun JettyLoom(port: Int, stopMode: ServerConfig.StopMode): Jetty","org.http4k.server.JettyLoom"]},{"name":"fun SseHandler.toJettySseHandler(): Handler.Wrapper","description":"org.http4k.server.toJettySseHandler","location":"http4k-server-jetty/org.http4k.server/to-jetty-sse-handler.html","searchKeys":["toJettySseHandler","fun SseHandler.toJettySseHandler(): Handler.Wrapper","org.http4k.server.toJettySseHandler"]},{"name":"fun WsHandler.toJettyWsHandler(server: Server): Handler.Wrapper","description":"org.http4k.server.toJettyWsHandler","location":"http4k-server-jetty/org.http4k.server/to-jetty-ws-handler.html","searchKeys":["toJettyWsHandler","fun WsHandler.toJettyWsHandler(server: Server): Handler.Wrapper","org.http4k.server.toJettyWsHandler"]},{"name":"fun http(httpPort: Int): ConnectorBuilder","description":"org.http4k.server.http","location":"http4k-server-jetty/org.http4k.server/http.html","searchKeys":["http","fun http(httpPort: Int): ConnectorBuilder","org.http4k.server.http"]},{"name":"fun http2(http2Port: Int, keystorePath: String, keystorePassword: String): ConnectorBuilder","description":"org.http4k.server.http2","location":"http4k-server-jetty/org.http4k.server/http2.html","searchKeys":["http2","fun http2(http2Port: Int, keystorePath: String, keystorePassword: String): ConnectorBuilder","org.http4k.server.http2"]},{"name":"object Companion","description":"org.http4k.server.JettyEventStreamHandler.Companion","location":"http4k-server-jetty/org.http4k.server/-jetty-event-stream-handler/-companion/index.html","searchKeys":["Companion","object Companion","org.http4k.server.JettyEventStreamHandler.Companion"]},{"name":"open override fun handle(request: Request, response: Response, callback: Callback): Boolean","description":"org.http4k.server.Http4kJettyHttpHandler.handle","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-http-handler/handle.html","searchKeys":["handle","open override fun handle(request: Request, response: Response, callback: Callback): Boolean","org.http4k.server.Http4kJettyHttpHandler.handle"]},{"name":"open override fun handle(request: Request, response: Response, callback: Callback): Boolean","description":"org.http4k.server.JettyEventStreamHandler.handle","location":"http4k-server-jetty/org.http4k.server/-jetty-event-stream-handler/handle.html","searchKeys":["handle","open override fun handle(request: Request, response: Response, callback: Callback): Boolean","org.http4k.server.JettyEventStreamHandler.handle"]},{"name":"open override fun onWebSocketBinary(payload: ByteBuffer, callback: Callback)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketBinary","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/on-web-socket-binary.html","searchKeys":["onWebSocketBinary","open override fun onWebSocketBinary(payload: ByteBuffer, callback: Callback)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketBinary"]},{"name":"open override fun onWebSocketClose(statusCode: Int, reason: String?)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketClose","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/on-web-socket-close.html","searchKeys":["onWebSocketClose","open override fun onWebSocketClose(statusCode: Int, reason: String?)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketClose"]},{"name":"open override fun onWebSocketError(cause: Throwable)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketError","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/on-web-socket-error.html","searchKeys":["onWebSocketError","open override fun onWebSocketError(cause: Throwable)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketError"]},{"name":"open override fun onWebSocketOpen(session: Session)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketOpen","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/on-web-socket-open.html","searchKeys":["onWebSocketOpen","open override fun onWebSocketOpen(session: Session)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketOpen"]},{"name":"open override fun onWebSocketText(message: String)","description":"org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketText","location":"http4k-server-jetty/org.http4k.server/-http4k-jetty-server-web-socket-endpoint/on-web-socket-text.html","searchKeys":["onWebSocketText","open override fun onWebSocketText(message: String)","org.http4k.server.Http4kJettyServerWebSocketEndpoint.onWebSocketText"]},{"name":"open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","description":"org.http4k.server.Jetty.toServer","location":"http4k-server-jetty/org.http4k.server/-jetty/to-server.html","searchKeys":["toServer","open override fun toServer(http: HttpHandler?, ws: WsHandler?, sse: SseHandler?): Http4kServer","org.http4k.server.Jetty.toServer"]},{"name":"open override val stopMode: ServerConfig.StopMode","description":"org.http4k.server.Jetty.stopMode","location":"http4k-server-jetty/org.http4k.server/-jetty/stop-mode.html","searchKeys":["stopMode","open override val stopMode: ServerConfig.StopMode","org.http4k.server.Jetty.stopMode"]},{"name":"typealias ConnectorBuilder = (Server) -> ServerConnector","description":"org.http4k.server.ConnectorBuilder","location":"http4k-server-jetty/org.http4k.server/-connector-builder/index.html","searchKeys":["ConnectorBuilder","typealias ConnectorBuilder = (Server) -> ServerConnector","org.http4k.server.ConnectorBuilder"]}]